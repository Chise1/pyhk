# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_hk_struct_test')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_hk_struct_test')
    _hk_struct_test = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_hk_struct_test', [dirname(__file__)])
        except ImportError:
            import _hk_struct_test
            return _hk_struct_test
        try:
            _mod = imp.load_module('_hk_struct_test', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _hk_struct_test = swig_import_helper()
    del swig_import_helper
else:
    import _hk_struct_test
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        if _newclass:
            object.__setattr__(self, name, value)
        else:
            self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except __builtin__.Exception:
    class _object:
        pass
    _newclass = 0

class PLAYRECT(_object):
    """Proxy of C++ __PLAYRECT class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, PLAYRECT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, PLAYRECT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["x"] = _hk_struct_test.PLAYRECT_x_set
    __swig_getmethods__["x"] = _hk_struct_test.PLAYRECT_x_get
    if _newclass:
        x = _swig_property(_hk_struct_test.PLAYRECT_x_get, _hk_struct_test.PLAYRECT_x_set)
    __swig_setmethods__["y"] = _hk_struct_test.PLAYRECT_y_set
    __swig_getmethods__["y"] = _hk_struct_test.PLAYRECT_y_get
    if _newclass:
        y = _swig_property(_hk_struct_test.PLAYRECT_y_get, _hk_struct_test.PLAYRECT_y_set)
    __swig_setmethods__["uWidth"] = _hk_struct_test.PLAYRECT_uWidth_set
    __swig_getmethods__["uWidth"] = _hk_struct_test.PLAYRECT_uWidth_get
    if _newclass:
        uWidth = _swig_property(_hk_struct_test.PLAYRECT_uWidth_get, _hk_struct_test.PLAYRECT_uWidth_set)
    __swig_setmethods__["uHeight"] = _hk_struct_test.PLAYRECT_uHeight_set
    __swig_getmethods__["uHeight"] = _hk_struct_test.PLAYRECT_uHeight_get
    if _newclass:
        uHeight = _swig_property(_hk_struct_test.PLAYRECT_uHeight_get, _hk_struct_test.PLAYRECT_uHeight_set)

    def __init__(self):
        """__init__(__PLAYRECT self) -> PLAYRECT"""
        this = _hk_struct_test.new_PLAYRECT()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_PLAYRECT
    __del__ = lambda self: None
PLAYRECT_swigregister = _hk_struct_test.PLAYRECT_swigregister
PLAYRECT_swigregister(PLAYRECT)

MAX_NAMELEN = _hk_struct_test.MAX_NAMELEN
MAX_RIGHT = _hk_struct_test.MAX_RIGHT
NAME_LEN = _hk_struct_test.NAME_LEN
MIN_PASSWD_LEN = _hk_struct_test.MIN_PASSWD_LEN
PASSWD_LEN = _hk_struct_test.PASSWD_LEN
STREAM_PASSWD_LEN = _hk_struct_test.STREAM_PASSWD_LEN
MAX_PASSWD_LEN_EX = _hk_struct_test.MAX_PASSWD_LEN_EX
GUID_LEN = _hk_struct_test.GUID_LEN
DEV_TYPE_NAME_LEN = _hk_struct_test.DEV_TYPE_NAME_LEN
SERIALNO_LEN = _hk_struct_test.SERIALNO_LEN
MACADDR_LEN = _hk_struct_test.MACADDR_LEN
MAC_ADDRESS_NUM = _hk_struct_test.MAC_ADDRESS_NUM
MAX_SENCE_NUM = _hk_struct_test.MAX_SENCE_NUM
RULE_REGION_MAX = _hk_struct_test.RULE_REGION_MAX
MAX_ETHERNET = _hk_struct_test.MAX_ETHERNET
MAX_NETWORK_CARD = _hk_struct_test.MAX_NETWORK_CARD
MAX_NETWORK_CARD_EX = _hk_struct_test.MAX_NETWORK_CARD_EX
PATHNAME_LEN = _hk_struct_test.PATHNAME_LEN
MAX_PRESET_V13 = _hk_struct_test.MAX_PRESET_V13
MAX_TEST_COMMAND_NUM = _hk_struct_test.MAX_TEST_COMMAND_NUM
MAX_NUMBER_LEN = _hk_struct_test.MAX_NUMBER_LEN
MAX_NAME_LEN = _hk_struct_test.MAX_NAME_LEN
MAX_INDEX_LED = _hk_struct_test.MAX_INDEX_LED
MAX_CUSTOM_DIR = _hk_struct_test.MAX_CUSTOM_DIR
URL_LEN_V40 = _hk_struct_test.URL_LEN_V40
CLOUD_NAME_LEN = _hk_struct_test.CLOUD_NAME_LEN
CLOUD_PASSWD_LEN = _hk_struct_test.CLOUD_PASSWD_LEN
MAX_SENSORNAME_LEN = _hk_struct_test.MAX_SENSORNAME_LEN
MAX_SENSORCHAN_LEN = _hk_struct_test.MAX_SENSORCHAN_LEN
MAX_DESCRIPTION_LEN = _hk_struct_test.MAX_DESCRIPTION_LEN
MAX_DEVNAME_LEN_EX = _hk_struct_test.MAX_DEVNAME_LEN_EX
NET_SDK_MAX_FILE_PATH = _hk_struct_test.NET_SDK_MAX_FILE_PATH
MAX_TMEVOICE_LEN = _hk_struct_test.MAX_TMEVOICE_LEN
ISO_8601_LEN = _hk_struct_test.ISO_8601_LEN
MODULE_INFO_LEN = _hk_struct_test.MODULE_INFO_LEN
VERSION_INFO_LEN = _hk_struct_test.VERSION_INFO_LEN
MAX_NUM_INPUT_BOARD = _hk_struct_test.MAX_NUM_INPUT_BOARD
MAX_SHIPSDETE_REGION_NUM = _hk_struct_test.MAX_SHIPSDETE_REGION_NUM
MAX_RES_NUM_ONE_VS_INPUT_CHAN = _hk_struct_test.MAX_RES_NUM_ONE_VS_INPUT_CHAN
MAX_VS_INPUT_CHAN_NUM = _hk_struct_test.MAX_VS_INPUT_CHAN_NUM
NET_SDK_MAX_FDID_LEN = _hk_struct_test.NET_SDK_MAX_FDID_LEN
NET_SDK_MAX_PICID_LEN = _hk_struct_test.NET_SDK_MAX_PICID_LEN
NET_SDK_FDPIC_CUSTOM_INFO_LEN = _hk_struct_test.NET_SDK_FDPIC_CUSTOM_INFO_LEN
NET_DVR_MAX_FACE_ANALYSIS_NUM = _hk_struct_test.NET_DVR_MAX_FACE_ANALYSIS_NUM
NET_DVR_MAX_FACE_SEARCH_NUM = _hk_struct_test.NET_DVR_MAX_FACE_SEARCH_NUM
NET_SDK_SECRETKEY_LEN = _hk_struct_test.NET_SDK_SECRETKEY_LEN
NET_SDK_CUSTOM_LEN = _hk_struct_test.NET_SDK_CUSTOM_LEN
NET_SDK_CHECK_CODE_LEN = _hk_struct_test.NET_SDK_CHECK_CODE_LEN
RELATIVE_CHANNEL_LEN = _hk_struct_test.RELATIVE_CHANNEL_LEN
MAX_LEN_TEXT_CONTENT = _hk_struct_test.MAX_LEN_TEXT_CONTENT
MAX_NUM_INPUT_SOURCE_TEXT = _hk_struct_test.MAX_NUM_INPUT_SOURCE_TEXT
MAX_NUM_OUTPUT_CHANNEL = _hk_struct_test.MAX_NUM_OUTPUT_CHANNEL
MAX_LEN_OSD_CONTENT = _hk_struct_test.MAX_LEN_OSD_CONTENT
MAX_NUM_OSD_ONE_SUBWND = _hk_struct_test.MAX_NUM_OSD_ONE_SUBWND
MAX_NUM_SPLIT_WND = _hk_struct_test.MAX_NUM_SPLIT_WND
MAX_NUM_OSD = _hk_struct_test.MAX_NUM_OSD
MAX_DEVNAME_LEN = _hk_struct_test.MAX_DEVNAME_LEN
MAX_LED_INFO = _hk_struct_test.MAX_LED_INFO
MAX_TIME_LEN = _hk_struct_test.MAX_TIME_LEN
MAX_CARD_LEN = _hk_struct_test.MAX_CARD_LEN
MAX_OPERATORNAME_LEN = _hk_struct_test.MAX_OPERATORNAME_LEN
THERMOMETRY_ALARMRULE_NUM = _hk_struct_test.THERMOMETRY_ALARMRULE_NUM
MAX_THERMOMETRY_REGION_NUM = _hk_struct_test.MAX_THERMOMETRY_REGION_NUM
MAX_THERMOMETRY_DIFFCOMPARISON_NUM = _hk_struct_test.MAX_THERMOMETRY_DIFFCOMPARISON_NUM
MAX_SHIPS_NUM = _hk_struct_test.MAX_SHIPS_NUM
KEY_WORD_NUM = _hk_struct_test.KEY_WORD_NUM
KEY_WORD_LEN = _hk_struct_test.KEY_WORD_LEN
ASYN_LOGIN_SUCC = _hk_struct_test.ASYN_LOGIN_SUCC
ASYN_LOGIN_FAILED = _hk_struct_test.ASYN_LOGIN_FAILED
NET_SDK_MAX_VERIFICATION_CODE_LEN = _hk_struct_test.NET_SDK_MAX_VERIFICATION_CODE_LEN
NET_SDK_MAX_OPERATE_CODE_LEN = _hk_struct_test.NET_SDK_MAX_OPERATE_CODE_LEN
MAX_TIMESEGMENT_V30 = _hk_struct_test.MAX_TIMESEGMENT_V30
MAX_TIMESEGMENT = _hk_struct_test.MAX_TIMESEGMENT
MAX_ICR_NUM = _hk_struct_test.MAX_ICR_NUM
MAX_VEHICLEFLOW_INFO = _hk_struct_test.MAX_VEHICLEFLOW_INFO
MAX_SHELTERNUM = _hk_struct_test.MAX_SHELTERNUM
MAX_DAYS = _hk_struct_test.MAX_DAYS
PHONENUMBER_LEN = _hk_struct_test.PHONENUMBER_LEN
MAX_ACCESSORY_CARD = _hk_struct_test.MAX_ACCESSORY_CARD
MAX_DISKNUM_V30 = _hk_struct_test.MAX_DISKNUM_V30
NET_SDK_DISK_LOCATION_LEN = _hk_struct_test.NET_SDK_DISK_LOCATION_LEN
NET_SDK_SUPPLIER_NAME_LEN = _hk_struct_test.NET_SDK_SUPPLIER_NAME_LEN
NET_SDK_DISK_MODEL_LEN = _hk_struct_test.NET_SDK_DISK_MODEL_LEN
NET_SDK_MAX_DISK_VOLUME = _hk_struct_test.NET_SDK_MAX_DISK_VOLUME
NET_SDK_DISK_VOLUME_LEN = _hk_struct_test.NET_SDK_DISK_VOLUME_LEN
MAX_DISKNUM = _hk_struct_test.MAX_DISKNUM
MAX_DISKNUM_V10 = _hk_struct_test.MAX_DISKNUM_V10
CARD_READER_DESCRIPTION = _hk_struct_test.CARD_READER_DESCRIPTION
MAX_FACE_NUM = _hk_struct_test.MAX_FACE_NUM
MAX_WINDOW_V30 = _hk_struct_test.MAX_WINDOW_V30
MAX_WINDOW_V40 = _hk_struct_test.MAX_WINDOW_V40
MAX_WINDOW = _hk_struct_test.MAX_WINDOW
MAX_VGA_V30 = _hk_struct_test.MAX_VGA_V30
MAX_VGA = _hk_struct_test.MAX_VGA
MAX_USERNUM_V30 = _hk_struct_test.MAX_USERNUM_V30
MAX_USERNUM = _hk_struct_test.MAX_USERNUM
MAX_EXCEPTIONNUM_V30 = _hk_struct_test.MAX_EXCEPTIONNUM_V30
MAX_EXCEPTIONNUM = _hk_struct_test.MAX_EXCEPTIONNUM
MAX_LINK = _hk_struct_test.MAX_LINK
MAX_ITC_EXCEPTIONOUT = _hk_struct_test.MAX_ITC_EXCEPTIONOUT
MAX_SCREEN_DISPLAY_LEN = _hk_struct_test.MAX_SCREEN_DISPLAY_LEN
MAX_DECPOOLNUM = _hk_struct_test.MAX_DECPOOLNUM
MAX_DECNUM = _hk_struct_test.MAX_DECNUM
MAX_TRANSPARENTNUM = _hk_struct_test.MAX_TRANSPARENTNUM
MAX_CYCLE_CHAN = _hk_struct_test.MAX_CYCLE_CHAN
MAX_CYCLE_CHAN_V30 = _hk_struct_test.MAX_CYCLE_CHAN_V30
MAX_DIRNAME_LENGTH = _hk_struct_test.MAX_DIRNAME_LENGTH
MAX_WINDOWS = _hk_struct_test.MAX_WINDOWS
MAX_STRINGNUM_V30 = _hk_struct_test.MAX_STRINGNUM_V30
MAX_STRINGNUM = _hk_struct_test.MAX_STRINGNUM
MAX_STRINGNUM_EX = _hk_struct_test.MAX_STRINGNUM_EX
MAX_AUXOUT_V30 = _hk_struct_test.MAX_AUXOUT_V30
MAX_AUXOUT = _hk_struct_test.MAX_AUXOUT
MAX_HD_GROUP = _hk_struct_test.MAX_HD_GROUP
MAX_HD_GROUP_V40 = _hk_struct_test.MAX_HD_GROUP_V40
MAX_NFS_DISK = _hk_struct_test.MAX_NFS_DISK
NET_SDK_VERSION_LIST_LEN = _hk_struct_test.NET_SDK_VERSION_LIST_LEN
IW_ESSID_MAX_SIZE = _hk_struct_test.IW_ESSID_MAX_SIZE
IW_ENCODING_TOKEN_MAX = _hk_struct_test.IW_ENCODING_TOKEN_MAX
MAX_SERIAL_NUM = _hk_struct_test.MAX_SERIAL_NUM
MAX_DDNS_NUMS = _hk_struct_test.MAX_DDNS_NUMS
MAX_DOMAIN_NAME = _hk_struct_test.MAX_DOMAIN_NAME
MAX_EMAIL_ADDR_LEN = _hk_struct_test.MAX_EMAIL_ADDR_LEN
MAX_EMAIL_PWD_LEN = _hk_struct_test.MAX_EMAIL_PWD_LEN
MAX_SLAVECAMERA_NUM = _hk_struct_test.MAX_SLAVECAMERA_NUM
MAX_CALIB_NUM = _hk_struct_test.MAX_CALIB_NUM
MAX_CALIB_NUM_EX = _hk_struct_test.MAX_CALIB_NUM_EX
MAX_LEDDISPLAYINFO_LEN = _hk_struct_test.MAX_LEDDISPLAYINFO_LEN
MAX_PEOPLE_DETECTION_NUM = _hk_struct_test.MAX_PEOPLE_DETECTION_NUM
MAXPROGRESS = _hk_struct_test.MAXPROGRESS
MAX_SERIALNUM = _hk_struct_test.MAX_SERIALNUM
CARDNUM_LEN = _hk_struct_test.CARDNUM_LEN
PATIENTID_LEN = _hk_struct_test.PATIENTID_LEN
CARDNUM_LEN_OUT = _hk_struct_test.CARDNUM_LEN_OUT
MAX_VIDEOOUT_V30 = _hk_struct_test.MAX_VIDEOOUT_V30
MAX_VIDEOOUT = _hk_struct_test.MAX_VIDEOOUT
MAX_PRESET_V30 = _hk_struct_test.MAX_PRESET_V30
MAX_TRACK_V30 = _hk_struct_test.MAX_TRACK_V30
MAX_CRUISE_V30 = _hk_struct_test.MAX_CRUISE_V30
MAX_PRESET = _hk_struct_test.MAX_PRESET
MAX_TRACK = _hk_struct_test.MAX_TRACK
MAX_CRUISE = _hk_struct_test.MAX_CRUISE
MAX_PRESET_V40 = _hk_struct_test.MAX_PRESET_V40
MAX_CRUISE_POINT_NUM = _hk_struct_test.MAX_CRUISE_POINT_NUM
MAX_CRUISEPOINT_NUM_V50 = _hk_struct_test.MAX_CRUISEPOINT_NUM_V50
CRUISE_MAX_PRESET_NUMS = _hk_struct_test.CRUISE_MAX_PRESET_NUMS
MAX_FACE_PIC_NUM = _hk_struct_test.MAX_FACE_PIC_NUM
LOCKGATE_TIME_NUM = _hk_struct_test.LOCKGATE_TIME_NUM
MAX_SERIAL_PORT = _hk_struct_test.MAX_SERIAL_PORT
MAX_PREVIEW_MODE = _hk_struct_test.MAX_PREVIEW_MODE
MAX_MATRIXOUT = _hk_struct_test.MAX_MATRIXOUT
LOG_INFO_LEN = _hk_struct_test.LOG_INFO_LEN
DESC_LEN = _hk_struct_test.DESC_LEN
PTZ_PROTOCOL_NUM = _hk_struct_test.PTZ_PROTOCOL_NUM
IPC_PROTOCOL_NUM = _hk_struct_test.IPC_PROTOCOL_NUM
MAX_AUDIO = _hk_struct_test.MAX_AUDIO
MAX_AUDIO_V30 = _hk_struct_test.MAX_AUDIO_V30
MAX_CHANNUM = _hk_struct_test.MAX_CHANNUM
MAX_ALARMIN = _hk_struct_test.MAX_ALARMIN
MAX_ALARMOUT = _hk_struct_test.MAX_ALARMOUT
MAX_ANALOG_CHANNUM = _hk_struct_test.MAX_ANALOG_CHANNUM
MAX_ANALOG_ALARMOUT = _hk_struct_test.MAX_ANALOG_ALARMOUT
MAX_ANALOG_ALARMIN = _hk_struct_test.MAX_ANALOG_ALARMIN
MAX_IP_DEVICE = _hk_struct_test.MAX_IP_DEVICE
MAX_IP_DEVICE_V40 = _hk_struct_test.MAX_IP_DEVICE_V40
MAX_IP_CHANNEL = _hk_struct_test.MAX_IP_CHANNEL
MAX_IP_ALARMIN = _hk_struct_test.MAX_IP_ALARMIN
MAX_IP_ALARMOUT = _hk_struct_test.MAX_IP_ALARMOUT
MAX_IP_ALARMIN_V40 = _hk_struct_test.MAX_IP_ALARMIN_V40
MAX_IP_ALARMOUT_V40 = _hk_struct_test.MAX_IP_ALARMOUT_V40
MAX_RECORD_FILE_NUM = _hk_struct_test.MAX_RECORD_FILE_NUM
MAX_ACTION_TYPE = _hk_struct_test.MAX_ACTION_TYPE
MAX_ATM_PROTOCOL_NUM = _hk_struct_test.MAX_ATM_PROTOCOL_NUM
ATM_CUSTOM_PROTO = _hk_struct_test.ATM_CUSTOM_PROTO
ATM_PROTOCOL_SORT = _hk_struct_test.ATM_PROTOCOL_SORT
ATM_DESC_LEN = _hk_struct_test.ATM_DESC_LEN
MAX_IPV6_LEN = _hk_struct_test.MAX_IPV6_LEN
MAX_EVENTID_LEN = _hk_struct_test.MAX_EVENTID_LEN
INVALID_VALUE_UINT32 = _hk_struct_test.INVALID_VALUE_UINT32
MAX_CHANNUM_V40 = _hk_struct_test.MAX_CHANNUM_V40
MAX_MULTI_AREA_NUM = _hk_struct_test.MAX_MULTI_AREA_NUM
COURSE_NAME_LEN = _hk_struct_test.COURSE_NAME_LEN
INSTRUCTOR_NAME_LEN = _hk_struct_test.INSTRUCTOR_NAME_LEN
COURSE_DESCRIPTION_LEN = _hk_struct_test.COURSE_DESCRIPTION_LEN
MAX_TIMESEGMENT_V40 = _hk_struct_test.MAX_TIMESEGMENT_V40
MAX_MIX_CHAN_NUM = _hk_struct_test.MAX_MIX_CHAN_NUM
MAX_LINE_IN_CHAN_NUM = _hk_struct_test.MAX_LINE_IN_CHAN_NUM
MAX_MIC_CHAN_NUM = _hk_struct_test.MAX_MIC_CHAN_NUM
INQUEST_CASE_NO_LEN = _hk_struct_test.INQUEST_CASE_NO_LEN
INQUEST_CASE_NAME_LEN = _hk_struct_test.INQUEST_CASE_NAME_LEN
CUSTOM_INFO_LEN = _hk_struct_test.CUSTOM_INFO_LEN
INQUEST_CASE_LEN = _hk_struct_test.INQUEST_CASE_LEN
MAX_FILE_ID_LEN = _hk_struct_test.MAX_FILE_ID_LEN
MAX_PIC_NAME_LEN = _hk_struct_test.MAX_PIC_NAME_LEN
MAX_CHANNUM_V30 = _hk_struct_test.MAX_CHANNUM_V30
MAX_ALARMOUT_V40 = _hk_struct_test.MAX_ALARMOUT_V40
MAX_ALARMOUT_V30 = _hk_struct_test.MAX_ALARMOUT_V30
MAX_ALARMIN_V30 = _hk_struct_test.MAX_ALARMIN_V30
MAX_ALARMIN_V40 = _hk_struct_test.MAX_ALARMIN_V40
MAX_ANALOG_ALARM_WITH_VOLT_LIMIT = _hk_struct_test.MAX_ANALOG_ALARM_WITH_VOLT_LIMIT
MAX_ROIDETECT_NUM = _hk_struct_test.MAX_ROIDETECT_NUM
MAX_LANERECT_NUM = _hk_struct_test.MAX_LANERECT_NUM
MAX_FORTIFY_NUM = _hk_struct_test.MAX_FORTIFY_NUM
MAX_INTERVAL_NUM = _hk_struct_test.MAX_INTERVAL_NUM
MAX_CHJC_NUM = _hk_struct_test.MAX_CHJC_NUM
MAX_VL_NUM = _hk_struct_test.MAX_VL_NUM
MAX_DRIVECHAN_NUM = _hk_struct_test.MAX_DRIVECHAN_NUM
MAX_COIL_NUM = _hk_struct_test.MAX_COIL_NUM
MAX_SIGNALLIGHT_NUM = _hk_struct_test.MAX_SIGNALLIGHT_NUM
LEN_16 = _hk_struct_test.LEN_16
LEN_32 = _hk_struct_test.LEN_32
LEN_64 = _hk_struct_test.LEN_64
LEN_31 = _hk_struct_test.LEN_31
MAX_LINKAGE_CHAN_NUM = _hk_struct_test.MAX_LINKAGE_CHAN_NUM
MAX_CABINET_COUNT = _hk_struct_test.MAX_CABINET_COUNT
MAX_ID_LEN = _hk_struct_test.MAX_ID_LEN
MAX_PARKNO_LEN = _hk_struct_test.MAX_PARKNO_LEN
MAX_ALARMREASON_LEN = _hk_struct_test.MAX_ALARMREASON_LEN
MAX_UPGRADE_INFO_LEN = _hk_struct_test.MAX_UPGRADE_INFO_LEN
MAX_CUSTOMDIR_LEN = _hk_struct_test.MAX_CUSTOMDIR_LEN
MAX_LED_INFO_LEN = _hk_struct_test.MAX_LED_INFO_LEN
MAX_VOICE_INFO_LEN = _hk_struct_test.MAX_VOICE_INFO_LEN
MAX_LITLE_INFO_LEN = _hk_struct_test.MAX_LITLE_INFO_LEN
MAX_CUSTOM_INFO_LEN = _hk_struct_test.MAX_CUSTOM_INFO_LEN
MAX_PHONE_NUM_LEN = _hk_struct_test.MAX_PHONE_NUM_LEN
MAX_APP_SERIALNUM_LEN = _hk_struct_test.MAX_APP_SERIALNUM_LEN
AUDIOTALKTYPE_G722 = _hk_struct_test.AUDIOTALKTYPE_G722
AUDIOTALKTYPE_G711_MU = _hk_struct_test.AUDIOTALKTYPE_G711_MU
AUDIOTALKTYPE_G711_A = _hk_struct_test.AUDIOTALKTYPE_G711_A
AUDIOTALKTYPE_MP2L2 = _hk_struct_test.AUDIOTALKTYPE_MP2L2
AUDIOTALKTYPE_G726 = _hk_struct_test.AUDIOTALKTYPE_G726
AUDIOTALKTYPE_AAC = _hk_struct_test.AUDIOTALKTYPE_AAC
AUDIOTALKTYPE_PCM = _hk_struct_test.AUDIOTALKTYPE_PCM
AUDIOTALKTYPE_G722C = _hk_struct_test.AUDIOTALKTYPE_G722C
AUDIOTALKTYPE_MP3 = _hk_struct_test.AUDIOTALKTYPE_MP3
FILE_HEAD = _hk_struct_test.FILE_HEAD
VIDEO_I_FRAME = _hk_struct_test.VIDEO_I_FRAME
VIDEO_B_FRAME = _hk_struct_test.VIDEO_B_FRAME
VIDEO_P_FRAME = _hk_struct_test.VIDEO_P_FRAME
AUDIO_PACKET = _hk_struct_test.AUDIO_PACKET
PRIVT_PACKET = _hk_struct_test.PRIVT_PACKET
HIK_H264_E_FRAME = _hk_struct_test.HIK_H264_E_FRAME
MAX_TRANSPARENT_CHAN_NUM = _hk_struct_test.MAX_TRANSPARENT_CHAN_NUM
MAX_TRANSPARENT_ACCESS_NUM = _hk_struct_test.MAX_TRANSPARENT_ACCESS_NUM
MAX_PARKING_STATUS = _hk_struct_test.MAX_PARKING_STATUS
MAX_PARKING_NUM = _hk_struct_test.MAX_PARKING_NUM
MAX_ITS_SCENE_NUM = _hk_struct_test.MAX_ITS_SCENE_NUM
MAX_SCENE_TIMESEG_NUM = _hk_struct_test.MAX_SCENE_TIMESEG_NUM
MAX_IVMS_IP_CHANNEL = _hk_struct_test.MAX_IVMS_IP_CHANNEL
DEVICE_ID_LEN = _hk_struct_test.DEVICE_ID_LEN
MONITORSITE_ID_LEN = _hk_struct_test.MONITORSITE_ID_LEN
MAX_AUXAREA_NUM = _hk_struct_test.MAX_AUXAREA_NUM
MAX_SLAVE_CHANNEL_NUM = _hk_struct_test.MAX_SLAVE_CHANNEL_NUM
MAX_DEVDESC_LEN = _hk_struct_test.MAX_DEVDESC_LEN
ILLEGAL_LEN = _hk_struct_test.ILLEGAL_LEN
MAX_TRUCK_AXLE_NUM = _hk_struct_test.MAX_TRUCK_AXLE_NUM
MAX_CATEGORY_LEN = _hk_struct_test.MAX_CATEGORY_LEN
SERIAL_NO_LEN = _hk_struct_test.SERIAL_NO_LEN
MAX_SECRETKEY_LEN = _hk_struct_test.MAX_SECRETKEY_LEN
MAX_INDEX_CODE_LEN = _hk_struct_test.MAX_INDEX_CODE_LEN
MAX_ILLEGAL_LEN = _hk_struct_test.MAX_ILLEGAL_LEN
CODE_LEN = _hk_struct_test.CODE_LEN
ALIAS_LEN = _hk_struct_test.ALIAS_LEN
MAX_SCH_TASKS_NUM = _hk_struct_test.MAX_SCH_TASKS_NUM
MAX_SERVERID_LEN = _hk_struct_test.MAX_SERVERID_LEN
MAX_SERVERDOMAIN_LEN = _hk_struct_test.MAX_SERVERDOMAIN_LEN
MAX_AUTHENTICATEID_LEN = _hk_struct_test.MAX_AUTHENTICATEID_LEN
MAX_AUTHENTICATEPASSWD_LEN = _hk_struct_test.MAX_AUTHENTICATEPASSWD_LEN
MAX_SERVERNAME_LEN = _hk_struct_test.MAX_SERVERNAME_LEN
MAX_COMPRESSIONID_LEN = _hk_struct_test.MAX_COMPRESSIONID_LEN
MAX_SIPSERVER_ADDRESS_LEN = _hk_struct_test.MAX_SIPSERVER_ADDRESS_LEN
MAX_PlATE_NO_LEN = _hk_struct_test.MAX_PlATE_NO_LEN
UPNP_PORT_NUM = _hk_struct_test.UPNP_PORT_NUM
MAX_NOTICE_NUMBER_LEN = _hk_struct_test.MAX_NOTICE_NUMBER_LEN
MAX_NOTICE_THEME_LEN = _hk_struct_test.MAX_NOTICE_THEME_LEN
MAX_NOTICE_DETAIL_LEN = _hk_struct_test.MAX_NOTICE_DETAIL_LEN
MAX_NOTICE_PIC_NUM = _hk_struct_test.MAX_NOTICE_PIC_NUM
MAX_DEV_NUMBER_LEN = _hk_struct_test.MAX_DEV_NUMBER_LEN
LOCK_NAME_LEN = _hk_struct_test.LOCK_NAME_LEN
HOLIDAY_GROUP_NAME_LEN = _hk_struct_test.HOLIDAY_GROUP_NAME_LEN
MAX_HOLIDAY_PLAN_NUM = _hk_struct_test.MAX_HOLIDAY_PLAN_NUM
TEMPLATE_NAME_LEN = _hk_struct_test.TEMPLATE_NAME_LEN
MAX_HOLIDAY_GROUP_NUM = _hk_struct_test.MAX_HOLIDAY_GROUP_NUM
DOOR_NAME_LEN = _hk_struct_test.DOOR_NAME_LEN
STRESS_PASSWORD_LEN = _hk_struct_test.STRESS_PASSWORD_LEN
SUPER_PASSWORD_LEN = _hk_struct_test.SUPER_PASSWORD_LEN
GROUP_NAME_LEN = _hk_struct_test.GROUP_NAME_LEN
GROUP_COMBINATION_NUM = _hk_struct_test.GROUP_COMBINATION_NUM
MULTI_CARD_GROUP_NUM = _hk_struct_test.MULTI_CARD_GROUP_NUM
ACS_CARD_NO_LEN = _hk_struct_test.ACS_CARD_NO_LEN
NET_SDK_EMPLOYEE_NO_LEN = _hk_struct_test.NET_SDK_EMPLOYEE_NO_LEN
NET_SDK_UUID_LEN = _hk_struct_test.NET_SDK_UUID_LEN
NET_SDK_EHOME_KEY_LEN = _hk_struct_test.NET_SDK_EHOME_KEY_LEN
CARD_PASSWORD_LEN = _hk_struct_test.CARD_PASSWORD_LEN
MAX_DOOR_NUM = _hk_struct_test.MAX_DOOR_NUM
MAX_CARD_RIGHT_PLAN_NUM = _hk_struct_test.MAX_CARD_RIGHT_PLAN_NUM
MAX_GROUP_NUM_128 = _hk_struct_test.MAX_GROUP_NUM_128
MAX_CARD_READER_NUM = _hk_struct_test.MAX_CARD_READER_NUM
MAX_SNEAK_PATH_NODE = _hk_struct_test.MAX_SNEAK_PATH_NODE
MAX_MULTI_DOOR_INTERLOCK_GROUP = _hk_struct_test.MAX_MULTI_DOOR_INTERLOCK_GROUP
MAX_INTER_LOCK_DOOR_NUM = _hk_struct_test.MAX_INTER_LOCK_DOOR_NUM
MAX_CASE_SENSOR_NUM = _hk_struct_test.MAX_CASE_SENSOR_NUM
MAX_DOOR_NUM_256 = _hk_struct_test.MAX_DOOR_NUM_256
MAX_READER_ROUTE_NUM = _hk_struct_test.MAX_READER_ROUTE_NUM
MAX_FINGER_PRINT_NUM = _hk_struct_test.MAX_FINGER_PRINT_NUM
MAX_CARD_READER_NUM_512 = _hk_struct_test.MAX_CARD_READER_NUM_512
NET_SDK_MULTI_CARD_GROUP_NUM_20 = _hk_struct_test.NET_SDK_MULTI_CARD_GROUP_NUM_20
ERROR_MSG_LEN = _hk_struct_test.ERROR_MSG_LEN
MAX_DOOR_CODE_LEN = _hk_struct_test.MAX_DOOR_CODE_LEN
MAX_LOCK_CODE_LEN = _hk_struct_test.MAX_LOCK_CODE_LEN
PER_RING_PORT_NUM = _hk_struct_test.PER_RING_PORT_NUM
SENSORNAME_LEN = _hk_struct_test.SENSORNAME_LEN
MAX_SENSORDESCR_LEN = _hk_struct_test.MAX_SENSORDESCR_LEN
MAX_DNS_SERVER_NUM = _hk_struct_test.MAX_DNS_SERVER_NUM
SENSORUNIT_LEN = _hk_struct_test.SENSORUNIT_LEN
WEP_KEY_MAX_SIZE = _hk_struct_test.WEP_KEY_MAX_SIZE
WEP_KEY_MAX_NUM = _hk_struct_test.WEP_KEY_MAX_NUM
WPA_KEY_MAX_SIZE = _hk_struct_test.WPA_KEY_MAX_SIZE
MAX_SINGLE_FTPPICNAME_LEN = _hk_struct_test.MAX_SINGLE_FTPPICNAME_LEN
MAX_CAMNAME_LEN = _hk_struct_test.MAX_CAMNAME_LEN
MAX_FTPNAME_NUM = _hk_struct_test.MAX_FTPNAME_NUM
MAX_IDCODE_LEN = _hk_struct_test.MAX_IDCODE_LEN
MAX_VERSIIN_LEN = _hk_struct_test.MAX_VERSIIN_LEN
MAX_IDCODE_NUM = _hk_struct_test.MAX_IDCODE_NUM
SDK_LEN_2048 = _hk_struct_test.SDK_LEN_2048
SDK_MAX_IP_LEN = _hk_struct_test.SDK_MAX_IP_LEN
RECT_POINT_NUM = _hk_struct_test.RECT_POINT_NUM
MAX_PUBLIC_KEY_LEN = _hk_struct_test.MAX_PUBLIC_KEY_LEN
CHIP_SERIALNO_LEN = _hk_struct_test.CHIP_SERIALNO_LEN
ENCRYPT_DEV_ID_LEN = _hk_struct_test.ENCRYPT_DEV_ID_LEN
MAX_SEARCH_ID_LEN = _hk_struct_test.MAX_SEARCH_ID_LEN
TERMINAL_NAME_LEN = _hk_struct_test.TERMINAL_NAME_LEN
MAX_URL_LEN = _hk_struct_test.MAX_URL_LEN
REGISTER_NAME_LEN = _hk_struct_test.REGISTER_NAME_LEN
MAX_PORT_NUM = _hk_struct_test.MAX_PORT_NUM
MAX_SINGLE_CARD_PORT_NO = _hk_struct_test.MAX_SINGLE_CARD_PORT_NO
MAX_FUNC_CARD_NUM = _hk_struct_test.MAX_FUNC_CARD_NUM
MAX_FC_CARD_NUM = _hk_struct_test.MAX_FC_CARD_NUM
MAX_REMARKS_LEN = _hk_struct_test.MAX_REMARKS_LEN
MAX_OUTPUT_PORT_NUM = _hk_struct_test.MAX_OUTPUT_PORT_NUM
MAX_SINGLE_PORT_RECVCARD_NUM = _hk_struct_test.MAX_SINGLE_PORT_RECVCARD_NUM
MAX_GAMMA_X_VALUE = _hk_struct_test.MAX_GAMMA_X_VALUE
NET_DEV_NAME_LEN = _hk_struct_test.NET_DEV_NAME_LEN
NET_DEV_TYPE_NAME_LEN = _hk_struct_test.NET_DEV_TYPE_NAME_LEN
ABNORMAL_INFO_NUM = _hk_struct_test.ABNORMAL_INFO_NUM
PLAYLIST_NAME_LEN = _hk_struct_test.PLAYLIST_NAME_LEN
PLAYLIST_ITEM_NUM = _hk_struct_test.PLAYLIST_ITEM_NUM
NET_SDK_MAX_LOGIN_PASSWORD_LEN = _hk_struct_test.NET_SDK_MAX_LOGIN_PASSWORD_LEN
NET_SDK_MAX_ANSWER_LEN = _hk_struct_test.NET_SDK_MAX_ANSWER_LEN
NET_SDK_MAX_QUESTION_LIST_LEN = _hk_struct_test.NET_SDK_MAX_QUESTION_LIST_LEN
MAX_SCREEN_AREA_NUM = _hk_struct_test.MAX_SCREEN_AREA_NUM
NET_SDK_MAX_THERMOMETRYALGNAME = _hk_struct_test.NET_SDK_MAX_THERMOMETRYALGNAME
NET_SDK_MAX_SHIPSALGNAME = _hk_struct_test.NET_SDK_MAX_SHIPSALGNAME
NET_SDK_MAX_FIRESALGNAME = _hk_struct_test.NET_SDK_MAX_FIRESALGNAME
MAX_PASSPORT_NUM_LEN = _hk_struct_test.MAX_PASSPORT_NUM_LEN
MAX_PASSPORT_INFO_LEN = _hk_struct_test.MAX_PASSPORT_INFO_LEN
MAX_PASSPORT_NAME_LEN = _hk_struct_test.MAX_PASSPORT_NAME_LEN
MAX_PASSPORT_MONITOR_LEN = _hk_struct_test.MAX_PASSPORT_MONITOR_LEN
MAX_NATIONALITY_LEN = _hk_struct_test.MAX_NATIONALITY_LEN
MAX_PASSPORT_TYPE_LEN = _hk_struct_test.MAX_PASSPORT_TYPE_LEN
NET_DVR_NOERROR = _hk_struct_test.NET_DVR_NOERROR
NET_DVR_PASSWORD_ERROR = _hk_struct_test.NET_DVR_PASSWORD_ERROR
NET_DVR_NOENOUGHPRI = _hk_struct_test.NET_DVR_NOENOUGHPRI
NET_DVR_NOINIT = _hk_struct_test.NET_DVR_NOINIT
NET_DVR_CHANNEL_ERROR = _hk_struct_test.NET_DVR_CHANNEL_ERROR
NET_DVR_OVER_MAXLINK = _hk_struct_test.NET_DVR_OVER_MAXLINK
NET_DVR_VERSIONNOMATCH = _hk_struct_test.NET_DVR_VERSIONNOMATCH
NET_DVR_NETWORK_FAIL_CONNECT = _hk_struct_test.NET_DVR_NETWORK_FAIL_CONNECT
NET_DVR_NETWORK_SEND_ERROR = _hk_struct_test.NET_DVR_NETWORK_SEND_ERROR
NET_DVR_NETWORK_RECV_ERROR = _hk_struct_test.NET_DVR_NETWORK_RECV_ERROR
NET_DVR_NETWORK_RECV_TIMEOUT = _hk_struct_test.NET_DVR_NETWORK_RECV_TIMEOUT
NET_DVR_NETWORK_ERRORDATA = _hk_struct_test.NET_DVR_NETWORK_ERRORDATA
NET_DVR_ORDER_ERROR = _hk_struct_test.NET_DVR_ORDER_ERROR
NET_DVR_OPERNOPERMIT = _hk_struct_test.NET_DVR_OPERNOPERMIT
NET_DVR_COMMANDTIMEOUT = _hk_struct_test.NET_DVR_COMMANDTIMEOUT
NET_DVR_ERRORSERIALPORT = _hk_struct_test.NET_DVR_ERRORSERIALPORT
NET_DVR_ERRORALARMPORT = _hk_struct_test.NET_DVR_ERRORALARMPORT
NET_DVR_PARAMETER_ERROR = _hk_struct_test.NET_DVR_PARAMETER_ERROR
NET_DVR_CHAN_EXCEPTION = _hk_struct_test.NET_DVR_CHAN_EXCEPTION
NET_DVR_NODISK = _hk_struct_test.NET_DVR_NODISK
NET_DVR_ERRORDISKNUM = _hk_struct_test.NET_DVR_ERRORDISKNUM
NET_DVR_DISK_FULL = _hk_struct_test.NET_DVR_DISK_FULL
NET_DVR_DISK_ERROR = _hk_struct_test.NET_DVR_DISK_ERROR
NET_DVR_NOSUPPORT = _hk_struct_test.NET_DVR_NOSUPPORT
NET_DVR_BUSY = _hk_struct_test.NET_DVR_BUSY
NET_DVR_MODIFY_FAIL = _hk_struct_test.NET_DVR_MODIFY_FAIL
NET_DVR_PASSWORD_FORMAT_ERROR = _hk_struct_test.NET_DVR_PASSWORD_FORMAT_ERROR
NET_DVR_DISK_FORMATING = _hk_struct_test.NET_DVR_DISK_FORMATING
NET_DVR_DVRNORESOURCE = _hk_struct_test.NET_DVR_DVRNORESOURCE
NET_DVR_DVROPRATEFAILED = _hk_struct_test.NET_DVR_DVROPRATEFAILED
NET_DVR_OPENHOSTSOUND_FAIL = _hk_struct_test.NET_DVR_OPENHOSTSOUND_FAIL
NET_DVR_DVRVOICEOPENED = _hk_struct_test.NET_DVR_DVRVOICEOPENED
NET_DVR_TIMEINPUTERROR = _hk_struct_test.NET_DVR_TIMEINPUTERROR
NET_DVR_NOSPECFILE = _hk_struct_test.NET_DVR_NOSPECFILE
NET_DVR_CREATEFILE_ERROR = _hk_struct_test.NET_DVR_CREATEFILE_ERROR
NET_DVR_FILEOPENFAIL = _hk_struct_test.NET_DVR_FILEOPENFAIL
NET_DVR_OPERNOTFINISH = _hk_struct_test.NET_DVR_OPERNOTFINISH
NET_DVR_GETPLAYTIMEFAIL = _hk_struct_test.NET_DVR_GETPLAYTIMEFAIL
NET_DVR_PLAYFAIL = _hk_struct_test.NET_DVR_PLAYFAIL
NET_DVR_FILEFORMAT_ERROR = _hk_struct_test.NET_DVR_FILEFORMAT_ERROR
NET_DVR_DIR_ERROR = _hk_struct_test.NET_DVR_DIR_ERROR
NET_DVR_ALLOC_RESOURCE_ERROR = _hk_struct_test.NET_DVR_ALLOC_RESOURCE_ERROR
NET_DVR_AUDIO_MODE_ERROR = _hk_struct_test.NET_DVR_AUDIO_MODE_ERROR
NET_DVR_NOENOUGH_BUF = _hk_struct_test.NET_DVR_NOENOUGH_BUF
NET_DVR_CREATESOCKET_ERROR = _hk_struct_test.NET_DVR_CREATESOCKET_ERROR
NET_DVR_SETSOCKET_ERROR = _hk_struct_test.NET_DVR_SETSOCKET_ERROR
NET_DVR_MAX_NUM = _hk_struct_test.NET_DVR_MAX_NUM
NET_DVR_USERNOTEXIST = _hk_struct_test.NET_DVR_USERNOTEXIST
NET_DVR_WRITEFLASHERROR = _hk_struct_test.NET_DVR_WRITEFLASHERROR
NET_DVR_UPGRADEFAIL = _hk_struct_test.NET_DVR_UPGRADEFAIL
NET_DVR_CARDHAVEINIT = _hk_struct_test.NET_DVR_CARDHAVEINIT
NET_DVR_PLAYERFAILED = _hk_struct_test.NET_DVR_PLAYERFAILED
NET_DVR_MAX_USERNUM = _hk_struct_test.NET_DVR_MAX_USERNUM
NET_DVR_GETLOCALIPANDMACFAIL = _hk_struct_test.NET_DVR_GETLOCALIPANDMACFAIL
NET_DVR_NOENCODEING = _hk_struct_test.NET_DVR_NOENCODEING
NET_DVR_IPMISMATCH = _hk_struct_test.NET_DVR_IPMISMATCH
NET_DVR_MACMISMATCH = _hk_struct_test.NET_DVR_MACMISMATCH
NET_DVR_UPGRADELANGMISMATCH = _hk_struct_test.NET_DVR_UPGRADELANGMISMATCH
NET_DVR_MAX_PLAYERPORT = _hk_struct_test.NET_DVR_MAX_PLAYERPORT
NET_DVR_NOSPACEBACKUP = _hk_struct_test.NET_DVR_NOSPACEBACKUP
NET_DVR_NODEVICEBACKUP = _hk_struct_test.NET_DVR_NODEVICEBACKUP
NET_DVR_PICTURE_BITS_ERROR = _hk_struct_test.NET_DVR_PICTURE_BITS_ERROR
NET_DVR_PICTURE_DIMENSION_ERROR = _hk_struct_test.NET_DVR_PICTURE_DIMENSION_ERROR
NET_DVR_PICTURE_SIZ_ERROR = _hk_struct_test.NET_DVR_PICTURE_SIZ_ERROR
NET_DVR_LOADPLAYERSDKFAILED = _hk_struct_test.NET_DVR_LOADPLAYERSDKFAILED
NET_DVR_LOADPLAYERSDKPROC_ERROR = _hk_struct_test.NET_DVR_LOADPLAYERSDKPROC_ERROR
NET_DVR_LOADDSSDKFAILED = _hk_struct_test.NET_DVR_LOADDSSDKFAILED
NET_DVR_LOADDSSDKPROC_ERROR = _hk_struct_test.NET_DVR_LOADDSSDKPROC_ERROR
NET_DVR_DSSDK_ERROR = _hk_struct_test.NET_DVR_DSSDK_ERROR
NET_DVR_VOICEMONOPOLIZE = _hk_struct_test.NET_DVR_VOICEMONOPOLIZE
NET_DVR_JOINMULTICASTFAILED = _hk_struct_test.NET_DVR_JOINMULTICASTFAILED
NET_DVR_CREATEDIR_ERROR = _hk_struct_test.NET_DVR_CREATEDIR_ERROR
NET_DVR_BINDSOCKET_ERROR = _hk_struct_test.NET_DVR_BINDSOCKET_ERROR
NET_DVR_SOCKETCLOSE_ERROR = _hk_struct_test.NET_DVR_SOCKETCLOSE_ERROR
NET_DVR_USERID_ISUSING = _hk_struct_test.NET_DVR_USERID_ISUSING
NET_DVR_SOCKETLISTEN_ERROR = _hk_struct_test.NET_DVR_SOCKETLISTEN_ERROR
NET_DVR_PROGRAM_EXCEPTION = _hk_struct_test.NET_DVR_PROGRAM_EXCEPTION
NET_DVR_WRITEFILE_FAILED = _hk_struct_test.NET_DVR_WRITEFILE_FAILED
NET_DVR_FORMAT_READONLY = _hk_struct_test.NET_DVR_FORMAT_READONLY
NET_DVR_WITHSAMEUSERNAME = _hk_struct_test.NET_DVR_WITHSAMEUSERNAME
NET_DVR_DEVICETYPE_ERROR = _hk_struct_test.NET_DVR_DEVICETYPE_ERROR
NET_DVR_LANGUAGE_ERROR = _hk_struct_test.NET_DVR_LANGUAGE_ERROR
NET_DVR_PARAVERSION_ERROR = _hk_struct_test.NET_DVR_PARAVERSION_ERROR
NET_DVR_IPCHAN_NOTALIVE = _hk_struct_test.NET_DVR_IPCHAN_NOTALIVE
NET_DVR_RTSP_SDK_ERROR = _hk_struct_test.NET_DVR_RTSP_SDK_ERROR
NET_DVR_CONVERT_SDK_ERROR = _hk_struct_test.NET_DVR_CONVERT_SDK_ERROR
NET_DVR_IPC_COUNT_OVERFLOW = _hk_struct_test.NET_DVR_IPC_COUNT_OVERFLOW
NET_DVR_MAX_ADD_NUM = _hk_struct_test.NET_DVR_MAX_ADD_NUM
NET_DVR_PARAMMODE_ERROR = _hk_struct_test.NET_DVR_PARAMMODE_ERROR
NET_DVR_CODESPITTER_OFFLINE = _hk_struct_test.NET_DVR_CODESPITTER_OFFLINE
NET_DVR_BACKUP_COPYING = _hk_struct_test.NET_DVR_BACKUP_COPYING
NET_DVR_CHAN_NOTSUPPORT = _hk_struct_test.NET_DVR_CHAN_NOTSUPPORT
NET_DVR_CALLINEINVALID = _hk_struct_test.NET_DVR_CALLINEINVALID
NET_DVR_CALCANCELCONFLICT = _hk_struct_test.NET_DVR_CALCANCELCONFLICT
NET_DVR_CALPOINTOUTRANGE = _hk_struct_test.NET_DVR_CALPOINTOUTRANGE
NET_DVR_FILTERRECTINVALID = _hk_struct_test.NET_DVR_FILTERRECTINVALID
NET_DVR_DDNS_DEVOFFLINE = _hk_struct_test.NET_DVR_DDNS_DEVOFFLINE
NET_DVR_DDNS_INTER_ERROR = _hk_struct_test.NET_DVR_DDNS_INTER_ERROR
NET_DVR_FUNCTION_NOT_SUPPORT_OS = _hk_struct_test.NET_DVR_FUNCTION_NOT_SUPPORT_OS
NET_DVR_DEC_CHAN_REBIND = _hk_struct_test.NET_DVR_DEC_CHAN_REBIND
NET_DVR_INTERCOM_SDK_ERROR = _hk_struct_test.NET_DVR_INTERCOM_SDK_ERROR
NET_DVR_NO_CURRENT_UPDATEFILE = _hk_struct_test.NET_DVR_NO_CURRENT_UPDATEFILE
NET_DVR_USER_NOT_SUCC_LOGIN = _hk_struct_test.NET_DVR_USER_NOT_SUCC_LOGIN
NET_DVR_USE_LOG_SWITCH_FILE = _hk_struct_test.NET_DVR_USE_LOG_SWITCH_FILE
NET_DVR_POOL_PORT_EXHAUST = _hk_struct_test.NET_DVR_POOL_PORT_EXHAUST
NET_DVR_PACKET_TYPE_NOT_SUPPORT = _hk_struct_test.NET_DVR_PACKET_TYPE_NOT_SUPPORT
NET_DVR_IPPARA_IPID_ERROR = _hk_struct_test.NET_DVR_IPPARA_IPID_ERROR
NET_DVR_LOAD_HCPREVIEW_SDK_ERROR = _hk_struct_test.NET_DVR_LOAD_HCPREVIEW_SDK_ERROR
NET_DVR_LOAD_HCVOICETALK_SDK_ERROR = _hk_struct_test.NET_DVR_LOAD_HCVOICETALK_SDK_ERROR
NET_DVR_LOAD_HCALARM_SDK_ERROR = _hk_struct_test.NET_DVR_LOAD_HCALARM_SDK_ERROR
NET_DVR_LOAD_HCPLAYBACK_SDK_ERROR = _hk_struct_test.NET_DVR_LOAD_HCPLAYBACK_SDK_ERROR
NET_DVR_LOAD_HCDISPLAY_SDK_ERROR = _hk_struct_test.NET_DVR_LOAD_HCDISPLAY_SDK_ERROR
NET_DVR_LOAD_HCINDUSTRY_SDK_ERROR = _hk_struct_test.NET_DVR_LOAD_HCINDUSTRY_SDK_ERROR
NET_DVR_LOAD_HCGENERALCFGMGR_SDK_ERROR = _hk_struct_test.NET_DVR_LOAD_HCGENERALCFGMGR_SDK_ERROR
NET_DVR_LOAD_HCCOREDEVCFG_SDK_ERROR = _hk_struct_test.NET_DVR_LOAD_HCCOREDEVCFG_SDK_ERROR
NET_DVR_LOAD_HCNETUTILS_SDK_ERROR = _hk_struct_test.NET_DVR_LOAD_HCNETUTILS_SDK_ERROR
NET_DVR_CORE_VER_MISMATCH = _hk_struct_test.NET_DVR_CORE_VER_MISMATCH
NET_DVR_CORE_VER_MISMATCH_HCPREVIEW = _hk_struct_test.NET_DVR_CORE_VER_MISMATCH_HCPREVIEW
NET_DVR_CORE_VER_MISMATCH_HCVOICETALK = _hk_struct_test.NET_DVR_CORE_VER_MISMATCH_HCVOICETALK
NET_DVR_CORE_VER_MISMATCH_HCALARM = _hk_struct_test.NET_DVR_CORE_VER_MISMATCH_HCALARM
NET_DVR_CORE_VER_MISMATCH_HCPLAYBACK = _hk_struct_test.NET_DVR_CORE_VER_MISMATCH_HCPLAYBACK
NET_DVR_CORE_VER_MISMATCH_HCDISPLAY = _hk_struct_test.NET_DVR_CORE_VER_MISMATCH_HCDISPLAY
NET_DVR_CORE_VER_MISMATCH_HCINDUSTRY = _hk_struct_test.NET_DVR_CORE_VER_MISMATCH_HCINDUSTRY
NET_DVR_CORE_VER_MISMATCH_HCGENERALCFGMGR = _hk_struct_test.NET_DVR_CORE_VER_MISMATCH_HCGENERALCFGMGR
NET_DVR_COM_VER_MISMATCH_HCPREVIEW = _hk_struct_test.NET_DVR_COM_VER_MISMATCH_HCPREVIEW
NET_DVR_COM_VER_MISMATCH_HCVOICETALK = _hk_struct_test.NET_DVR_COM_VER_MISMATCH_HCVOICETALK
NET_DVR_COM_VER_MISMATCH_HCALARM = _hk_struct_test.NET_DVR_COM_VER_MISMATCH_HCALARM
NET_DVR_COM_VER_MISMATCH_HCPLAYBACK = _hk_struct_test.NET_DVR_COM_VER_MISMATCH_HCPLAYBACK
NET_DVR_COM_VER_MISMATCH_HCDISPLAY = _hk_struct_test.NET_DVR_COM_VER_MISMATCH_HCDISPLAY
NET_DVR_COM_VER_MISMATCH_HCINDUSTRY = _hk_struct_test.NET_DVR_COM_VER_MISMATCH_HCINDUSTRY
NET_DVR_COM_VER_MISMATCH_HCGENERALCFGMGR = _hk_struct_test.NET_DVR_COM_VER_MISMATCH_HCGENERALCFGMGR
NET_ERR_CONFIG_FILE_IMPORT_FAILED = _hk_struct_test.NET_ERR_CONFIG_FILE_IMPORT_FAILED
NET_ERR_CONFIG_FILE_EXPORT_FAILED = _hk_struct_test.NET_ERR_CONFIG_FILE_EXPORT_FAILED
NET_DVR_CERTIFICATE_FILE_ERROR = _hk_struct_test.NET_DVR_CERTIFICATE_FILE_ERROR
NET_DVR_LOAD_SSL_LIB_ERROR = _hk_struct_test.NET_DVR_LOAD_SSL_LIB_ERROR
NET_DVR_SSL_VERSION_NOT_MATCH = _hk_struct_test.NET_DVR_SSL_VERSION_NOT_MATCH
NET_DVR_ALIAS_DUPLICATE = _hk_struct_test.NET_DVR_ALIAS_DUPLICATE
NET_DVR_INVALID_COMMUNICATION = _hk_struct_test.NET_DVR_INVALID_COMMUNICATION
NET_DVR_USERNAME_NOT_EXIST = _hk_struct_test.NET_DVR_USERNAME_NOT_EXIST
NET_DVR_USER_LOCKED = _hk_struct_test.NET_DVR_USER_LOCKED
NET_DVR_INVALID_USERID = _hk_struct_test.NET_DVR_INVALID_USERID
NET_DVR_LOW_LOGIN_VERSION = _hk_struct_test.NET_DVR_LOW_LOGIN_VERSION
NET_DVR_LOAD_LIBEAY32_DLL_ERROR = _hk_struct_test.NET_DVR_LOAD_LIBEAY32_DLL_ERROR
NET_DVR_LOAD_SSLEAY32_DLL_ERROR = _hk_struct_test.NET_DVR_LOAD_SSLEAY32_DLL_ERROR
NET_ERR_LOAD_LIBICONV = _hk_struct_test.NET_ERR_LOAD_LIBICONV
NET_ERR_SSL_CONNECT_FAILED = _hk_struct_test.NET_ERR_SSL_CONNECT_FAILED
NET_ERR_MCAST_ADDRESS_ERROR = _hk_struct_test.NET_ERR_MCAST_ADDRESS_ERROR
NET_ERR_LOAD_ZLIB = _hk_struct_test.NET_ERR_LOAD_ZLIB
NET_ERR_OPENSSL_NO_INIT = _hk_struct_test.NET_ERR_OPENSSL_NO_INIT
NET_DVR_SERVER_NOT_EXIST = _hk_struct_test.NET_DVR_SERVER_NOT_EXIST
NET_DVR_TEST_SERVER_FAIL_CONNECT = _hk_struct_test.NET_DVR_TEST_SERVER_FAIL_CONNECT
NET_DVR_NAS_SERVER_INVALID_DIR = _hk_struct_test.NET_DVR_NAS_SERVER_INVALID_DIR
NET_DVR_NAS_SERVER_NOENOUGH_PRI = _hk_struct_test.NET_DVR_NAS_SERVER_NOENOUGH_PRI
NET_DVR_EMAIL_SERVER_NOT_CONFIG_DNS = _hk_struct_test.NET_DVR_EMAIL_SERVER_NOT_CONFIG_DNS
NET_DVR_EMAIL_SERVER_NOT_CONFIG_GATEWAY = _hk_struct_test.NET_DVR_EMAIL_SERVER_NOT_CONFIG_GATEWAY
NET_DVR_TEST_SERVER_PASSWORD_ERROR = _hk_struct_test.NET_DVR_TEST_SERVER_PASSWORD_ERROR
NET_DVR_EMAIL_SERVER_CONNECT_EXCEPTION_WITH_SMTP = _hk_struct_test.NET_DVR_EMAIL_SERVER_CONNECT_EXCEPTION_WITH_SMTP
NET_DVR_FTP_SERVER_FAIL_CREATE_DIR = _hk_struct_test.NET_DVR_FTP_SERVER_FAIL_CREATE_DIR
NET_DVR_FTP_SERVER_NO_WRITE_PIR = _hk_struct_test.NET_DVR_FTP_SERVER_NO_WRITE_PIR
NET_DVR_IP_CONFLICT = _hk_struct_test.NET_DVR_IP_CONFLICT
NET_DVR_INSUFFICIENT_STORAGEPOOL_SPACE = _hk_struct_test.NET_DVR_INSUFFICIENT_STORAGEPOOL_SPACE
NET_DVR_STORAGEPOOL_INVALID = _hk_struct_test.NET_DVR_STORAGEPOOL_INVALID
NET_DVR_EFFECTIVENESS_REBOOT = _hk_struct_test.NET_DVR_EFFECTIVENESS_REBOOT
NET_ERR_ANR_ARMING_EXIST = _hk_struct_test.NET_ERR_ANR_ARMING_EXIST
NET_ERR_UPLOADLINK_EXIST = _hk_struct_test.NET_ERR_UPLOADLINK_EXIST
NET_ERR_INCORRECT_FILE_FORMAT = _hk_struct_test.NET_ERR_INCORRECT_FILE_FORMAT
NET_ERR_INCORRECT_FILE_CONTENT = _hk_struct_test.NET_ERR_INCORRECT_FILE_CONTENT
NET_ERR_MAX_HRUDP_LINK = _hk_struct_test.NET_ERR_MAX_HRUDP_LINK
NET_SDK_ERR_MAX_PORT_MULTIPLEX = _hk_struct_test.NET_SDK_ERR_MAX_PORT_MULTIPLEX
NET_SDK_ERR_CREATE_PORT_MULTIPLEX = _hk_struct_test.NET_SDK_ERR_CREATE_PORT_MULTIPLEX
NET_DVR_NONBLOCKING_CAPTURE_NOTSUPPORT = _hk_struct_test.NET_DVR_NONBLOCKING_CAPTURE_NOTSUPPORT
NET_SDK_ERR_FUNCTION_INVALID = _hk_struct_test.NET_SDK_ERR_FUNCTION_INVALID
RAID_ERROR_INDEX = _hk_struct_test.RAID_ERROR_INDEX
NET_DVR_NAME_NOT_ONLY = _hk_struct_test.NET_DVR_NAME_NOT_ONLY
NET_DVR_OVER_MAX_ARRAY = _hk_struct_test.NET_DVR_OVER_MAX_ARRAY
NET_DVR_OVER_MAX_VD = _hk_struct_test.NET_DVR_OVER_MAX_VD
NET_DVR_VD_SLOT_EXCEED = _hk_struct_test.NET_DVR_VD_SLOT_EXCEED
NET_DVR_PD_STATUS_INVALID = _hk_struct_test.NET_DVR_PD_STATUS_INVALID
NET_DVR_PD_BE_DEDICATE_SPARE = _hk_struct_test.NET_DVR_PD_BE_DEDICATE_SPARE
NET_DVR_PD_NOT_FREE = _hk_struct_test.NET_DVR_PD_NOT_FREE
NET_DVR_CANNOT_MIG2NEWMODE = _hk_struct_test.NET_DVR_CANNOT_MIG2NEWMODE
NET_DVR_MIG_PAUSE = _hk_struct_test.NET_DVR_MIG_PAUSE
NET_DVR_MIG_CANCEL = _hk_struct_test.NET_DVR_MIG_CANCEL
NET_DVR_EXIST_VD = _hk_struct_test.NET_DVR_EXIST_VD
NET_DVR_TARGET_IN_LD_FUNCTIONAL = _hk_struct_test.NET_DVR_TARGET_IN_LD_FUNCTIONAL
NET_DVR_HD_IS_ASSIGNED_ALREADY = _hk_struct_test.NET_DVR_HD_IS_ASSIGNED_ALREADY
NET_DVR_INVALID_HD_COUNT = _hk_struct_test.NET_DVR_INVALID_HD_COUNT
NET_DVR_LD_IS_FUNCTIONAL = _hk_struct_test.NET_DVR_LD_IS_FUNCTIONAL
NET_DVR_BGA_RUNNING = _hk_struct_test.NET_DVR_BGA_RUNNING
NET_DVR_LD_NO_ATAPI = _hk_struct_test.NET_DVR_LD_NO_ATAPI
NET_DVR_MIGRATION_NOT_NEED = _hk_struct_test.NET_DVR_MIGRATION_NOT_NEED
NET_DVR_HD_TYPE_MISMATCH = _hk_struct_test.NET_DVR_HD_TYPE_MISMATCH
NET_DVR_NO_LD_IN_DG = _hk_struct_test.NET_DVR_NO_LD_IN_DG
NET_DVR_NO_ROOM_FOR_SPARE = _hk_struct_test.NET_DVR_NO_ROOM_FOR_SPARE
NET_DVR_SPARE_IS_IN_MULTI_DG = _hk_struct_test.NET_DVR_SPARE_IS_IN_MULTI_DG
NET_DVR_DG_HAS_MISSING_PD = _hk_struct_test.NET_DVR_DG_HAS_MISSING_PD
NET_DVR_NAME_EMPTY = _hk_struct_test.NET_DVR_NAME_EMPTY
NET_DVR_INPUT_PARAM = _hk_struct_test.NET_DVR_INPUT_PARAM
NET_DVR_PD_NOT_AVAILABLE = _hk_struct_test.NET_DVR_PD_NOT_AVAILABLE
NET_DVR_ARRAY_NOT_AVAILABLE = _hk_struct_test.NET_DVR_ARRAY_NOT_AVAILABLE
NET_DVR_PD_COUNT = _hk_struct_test.NET_DVR_PD_COUNT
NET_DVR_VD_SMALL = _hk_struct_test.NET_DVR_VD_SMALL
NET_DVR_NO_EXIST = _hk_struct_test.NET_DVR_NO_EXIST
NET_DVR_NOT_SUPPORT = _hk_struct_test.NET_DVR_NOT_SUPPORT
NET_DVR_NOT_FUNCTIONAL = _hk_struct_test.NET_DVR_NOT_FUNCTIONAL
NET_DVR_DEV_NODE_NOT_FOUND = _hk_struct_test.NET_DVR_DEV_NODE_NOT_FOUND
NET_DVR_SLOT_EXCEED = _hk_struct_test.NET_DVR_SLOT_EXCEED
NET_DVR_NO_VD_IN_ARRAY = _hk_struct_test.NET_DVR_NO_VD_IN_ARRAY
NET_DVR_VD_SLOT_INVALID = _hk_struct_test.NET_DVR_VD_SLOT_INVALID
NET_DVR_PD_NO_ENOUGH_SPACE = _hk_struct_test.NET_DVR_PD_NO_ENOUGH_SPACE
NET_DVR_ARRAY_NONFUNCTION = _hk_struct_test.NET_DVR_ARRAY_NONFUNCTION
NET_DVR_ARRAY_NO_ENOUGH_SPACE = _hk_struct_test.NET_DVR_ARRAY_NO_ENOUGH_SPACE
NET_DVR_STOPPING_SCANNING_ARRAY = _hk_struct_test.NET_DVR_STOPPING_SCANNING_ARRAY
NET_DVR_NOT_SUPPORT_16T = _hk_struct_test.NET_DVR_NOT_SUPPORT_16T
NET_DVR_ARRAY_FORMATING = _hk_struct_test.NET_DVR_ARRAY_FORMATING
NET_DVR_QUICK_SETUP_PD_COUNT = _hk_struct_test.NET_DVR_QUICK_SETUP_PD_COUNT
NET_DVR_ERROR_DEVICE_NOT_ACTIVATED = _hk_struct_test.NET_DVR_ERROR_DEVICE_NOT_ACTIVATED
NET_DVR_ERROR_RISK_PASSWORD = _hk_struct_test.NET_DVR_ERROR_RISK_PASSWORD
NET_DVR_ERROR_DEVICE_HAS_ACTIVATED = _hk_struct_test.NET_DVR_ERROR_DEVICE_HAS_ACTIVATED
VCA_ERROR_INDEX = _hk_struct_test.VCA_ERROR_INDEX
NET_DVR_ID_ERROR = _hk_struct_test.NET_DVR_ID_ERROR
NET_DVR_POLYGON_ERROR = _hk_struct_test.NET_DVR_POLYGON_ERROR
NET_DVR_RULE_PARAM_ERROR = _hk_struct_test.NET_DVR_RULE_PARAM_ERROR
NET_DVR_RULE_CFG_CONFLICT = _hk_struct_test.NET_DVR_RULE_CFG_CONFLICT
NET_DVR_CALIBRATE_NOT_READY = _hk_struct_test.NET_DVR_CALIBRATE_NOT_READY
NET_DVR_CAMERA_DATA_ERROR = _hk_struct_test.NET_DVR_CAMERA_DATA_ERROR
NET_DVR_CALIBRATE_DATA_UNFIT = _hk_struct_test.NET_DVR_CALIBRATE_DATA_UNFIT
NET_DVR_CALIBRATE_DATA_CONFLICT = _hk_struct_test.NET_DVR_CALIBRATE_DATA_CONFLICT
NET_DVR_CALIBRATE_CALC_FAIL = _hk_struct_test.NET_DVR_CALIBRATE_CALC_FAIL
NET_DVR_CALIBRATE_LINE_OUT_RECT = _hk_struct_test.NET_DVR_CALIBRATE_LINE_OUT_RECT
NET_DVR_ENTER_RULE_NOT_READY = _hk_struct_test.NET_DVR_ENTER_RULE_NOT_READY
NET_DVR_AID_RULE_NO_INCLUDE_LANE = _hk_struct_test.NET_DVR_AID_RULE_NO_INCLUDE_LANE
NET_DVR_LANE_NOT_READY = _hk_struct_test.NET_DVR_LANE_NOT_READY
NET_DVR_RULE_INCLUDE_TWO_WAY = _hk_struct_test.NET_DVR_RULE_INCLUDE_TWO_WAY
NET_DVR_LANE_TPS_RULE_CONFLICT = _hk_struct_test.NET_DVR_LANE_TPS_RULE_CONFLICT
NET_DVR_NOT_SUPPORT_EVENT_TYPE = _hk_struct_test.NET_DVR_NOT_SUPPORT_EVENT_TYPE
NET_DVR_LANE_NO_WAY = _hk_struct_test.NET_DVR_LANE_NO_WAY
NET_DVR_SIZE_FILTER_ERROR = _hk_struct_test.NET_DVR_SIZE_FILTER_ERROR
NET_DVR_LIB_FFL_NO_FACE = _hk_struct_test.NET_DVR_LIB_FFL_NO_FACE
NET_DVR_LIB_FFL_IMG_TOO_SMALL = _hk_struct_test.NET_DVR_LIB_FFL_IMG_TOO_SMALL
NET_DVR_LIB_FD_IMG_NO_FACE = _hk_struct_test.NET_DVR_LIB_FD_IMG_NO_FACE
NET_DVR_LIB_FACE_TOO_SMALL = _hk_struct_test.NET_DVR_LIB_FACE_TOO_SMALL
NET_DVR_LIB_FACE_QUALITY_TOO_BAD = _hk_struct_test.NET_DVR_LIB_FACE_QUALITY_TOO_BAD
NET_DVR_KEY_PARAM_ERR = _hk_struct_test.NET_DVR_KEY_PARAM_ERR
NET_DVR_CALIBRATE_DATA_ERR = _hk_struct_test.NET_DVR_CALIBRATE_DATA_ERR
NET_DVR_CALIBRATE_DISABLE_FAIL = _hk_struct_test.NET_DVR_CALIBRATE_DISABLE_FAIL
NET_DVR_VCA_LIB_FD_SCALE_OUTRANGE = _hk_struct_test.NET_DVR_VCA_LIB_FD_SCALE_OUTRANGE
NET_DVR_LIB_FD_REGION_TOO_LARGE = _hk_struct_test.NET_DVR_LIB_FD_REGION_TOO_LARGE
NET_DVR_TRIAL_OVERDUE = _hk_struct_test.NET_DVR_TRIAL_OVERDUE
NET_DVR_CONFIG_FILE_CONFLICT = _hk_struct_test.NET_DVR_CONFIG_FILE_CONFLICT
NET_DVR_FR_FPL_FAIL = _hk_struct_test.NET_DVR_FR_FPL_FAIL
NET_DVR_FR_IQA_FAIL = _hk_struct_test.NET_DVR_FR_IQA_FAIL
NET_DVR_FR_FEM_FAIL = _hk_struct_test.NET_DVR_FR_FEM_FAIL
NET_DVR_FPL_DT_CONF_TOO_LOW = _hk_struct_test.NET_DVR_FPL_DT_CONF_TOO_LOW
NET_DVR_FPL_CONF_TOO_LOW = _hk_struct_test.NET_DVR_FPL_CONF_TOO_LOW
NET_DVR_E_DATA_SIZE = _hk_struct_test.NET_DVR_E_DATA_SIZE
NET_DVR_FR_MODEL_VERSION_ERR = _hk_struct_test.NET_DVR_FR_MODEL_VERSION_ERR
NET_DVR_FR_FD_FAIL = _hk_struct_test.NET_DVR_FR_FD_FAIL
NET_DVR_FA_NORMALIZE_ERR = _hk_struct_test.NET_DVR_FA_NORMALIZE_ERR
NET_DVR_DOG_PUSTREAM_NOT_MATCH = _hk_struct_test.NET_DVR_DOG_PUSTREAM_NOT_MATCH
NET_DVR_DEV_PUSTREAM_NOT_MATCH = _hk_struct_test.NET_DVR_DEV_PUSTREAM_NOT_MATCH
NET_DVR_PUSTREAM_ALREADY_EXISTS = _hk_struct_test.NET_DVR_PUSTREAM_ALREADY_EXISTS
NET_DVR_SEARCH_CONNECT_FAILED = _hk_struct_test.NET_DVR_SEARCH_CONNECT_FAILED
NET_DVR_INSUFFICIENT_DISK_SPACE = _hk_struct_test.NET_DVR_INSUFFICIENT_DISK_SPACE
NET_DVR_DATABASE_CONNECTION_FAILED = _hk_struct_test.NET_DVR_DATABASE_CONNECTION_FAILED
NET_DVR_DATABASE_ADM_PW_ERROR = _hk_struct_test.NET_DVR_DATABASE_ADM_PW_ERROR
NET_DVR_DECODE_YUV = _hk_struct_test.NET_DVR_DECODE_YUV
NET_DVR_IMAGE_RESOLUTION_ERROR = _hk_struct_test.NET_DVR_IMAGE_RESOLUTION_ERROR
NET_DVR_CHAN_WORKMODE_ERROR = _hk_struct_test.NET_DVR_CHAN_WORKMODE_ERROR
NET_DVR_RTSP_ERROR_NOENOUGHPRI = _hk_struct_test.NET_DVR_RTSP_ERROR_NOENOUGHPRI
NET_DVR_RTSP_ERROR_ALLOC_RESOURCE = _hk_struct_test.NET_DVR_RTSP_ERROR_ALLOC_RESOURCE
NET_DVR_RTSP_ERROR_PARAMETER = _hk_struct_test.NET_DVR_RTSP_ERROR_PARAMETER
NET_DVR_RTSP_ERROR_NO_URL = _hk_struct_test.NET_DVR_RTSP_ERROR_NO_URL
NET_DVR_RTSP_ERROR_FORCE_STOP = _hk_struct_test.NET_DVR_RTSP_ERROR_FORCE_STOP
NET_DVR_RTSP_GETPORTFAILED = _hk_struct_test.NET_DVR_RTSP_GETPORTFAILED
NET_DVR_RTSP_DESCRIBERROR = _hk_struct_test.NET_DVR_RTSP_DESCRIBERROR
NET_DVR_RTSP_DESCRIBESENDTIMEOUT = _hk_struct_test.NET_DVR_RTSP_DESCRIBESENDTIMEOUT
NET_DVR_RTSP_DESCRIBESENDERROR = _hk_struct_test.NET_DVR_RTSP_DESCRIBESENDERROR
NET_DVR_RTSP_DESCRIBERECVTIMEOUT = _hk_struct_test.NET_DVR_RTSP_DESCRIBERECVTIMEOUT
NET_DVR_RTSP_DESCRIBERECVDATALOST = _hk_struct_test.NET_DVR_RTSP_DESCRIBERECVDATALOST
NET_DVR_RTSP_DESCRIBERECVERROR = _hk_struct_test.NET_DVR_RTSP_DESCRIBERECVERROR
NET_DVR_RTSP_DESCRIBESERVERERR = _hk_struct_test.NET_DVR_RTSP_DESCRIBESERVERERR
NET_DVR_RTSP_SETUPERROR = _hk_struct_test.NET_DVR_RTSP_SETUPERROR
NET_DVR_RTSP_SETUPSENDTIMEOUT = _hk_struct_test.NET_DVR_RTSP_SETUPSENDTIMEOUT
NET_DVR_RTSP_SETUPSENDERROR = _hk_struct_test.NET_DVR_RTSP_SETUPSENDERROR
NET_DVR_RTSP_SETUPRECVTIMEOUT = _hk_struct_test.NET_DVR_RTSP_SETUPRECVTIMEOUT
NET_DVR_RTSP_SETUPRECVDATALOST = _hk_struct_test.NET_DVR_RTSP_SETUPRECVDATALOST
NET_DVR_RTSP_SETUPRECVERROR = _hk_struct_test.NET_DVR_RTSP_SETUPRECVERROR
NET_DVR_RTSP_OVER_MAX_CHAN = _hk_struct_test.NET_DVR_RTSP_OVER_MAX_CHAN
NET_DVR_RTSP_SETUPSERVERERR = _hk_struct_test.NET_DVR_RTSP_SETUPSERVERERR
NET_DVR_RTSP_PLAYERROR = _hk_struct_test.NET_DVR_RTSP_PLAYERROR
NET_DVR_RTSP_PLAYSENDTIMEOUT = _hk_struct_test.NET_DVR_RTSP_PLAYSENDTIMEOUT
NET_DVR_RTSP_PLAYSENDERROR = _hk_struct_test.NET_DVR_RTSP_PLAYSENDERROR
NET_DVR_RTSP_PLAYRECVTIMEOUT = _hk_struct_test.NET_DVR_RTSP_PLAYRECVTIMEOUT
NET_DVR_RTSP_PLAYRECVDATALOST = _hk_struct_test.NET_DVR_RTSP_PLAYRECVDATALOST
NET_DVR_RTSP_PLAYRECVERROR = _hk_struct_test.NET_DVR_RTSP_PLAYRECVERROR
NET_DVR_RTSP_PLAYSERVERERR = _hk_struct_test.NET_DVR_RTSP_PLAYSERVERERR
NET_DVR_RTSP_TEARDOWNERROR = _hk_struct_test.NET_DVR_RTSP_TEARDOWNERROR
NET_DVR_RTSP_TEARDOWNSENDTIMEOUT = _hk_struct_test.NET_DVR_RTSP_TEARDOWNSENDTIMEOUT
NET_DVR_RTSP_TEARDOWNSENDERROR = _hk_struct_test.NET_DVR_RTSP_TEARDOWNSENDERROR
NET_DVR_RTSP_TEARDOWNRECVTIMEOUT = _hk_struct_test.NET_DVR_RTSP_TEARDOWNRECVTIMEOUT
NET_DVR_RTSP_TEARDOWNRECVDATALOST = _hk_struct_test.NET_DVR_RTSP_TEARDOWNRECVDATALOST
NET_DVR_RTSP_TEARDOWNRECVERROR = _hk_struct_test.NET_DVR_RTSP_TEARDOWNRECVERROR
NET_DVR_RTSP_TEARDOWNSERVERERR = _hk_struct_test.NET_DVR_RTSP_TEARDOWNSERVERERR
NET_PLAYM4_NOERROR = _hk_struct_test.NET_PLAYM4_NOERROR
NET_PLAYM4_PARA_OVER = _hk_struct_test.NET_PLAYM4_PARA_OVER
NET_PLAYM4_ORDER_ERROR = _hk_struct_test.NET_PLAYM4_ORDER_ERROR
NET_PLAYM4_TIMER_ERROR = _hk_struct_test.NET_PLAYM4_TIMER_ERROR
NET_PLAYM4_DEC_VIDEO_ERROR = _hk_struct_test.NET_PLAYM4_DEC_VIDEO_ERROR
NET_PLAYM4_DEC_AUDIO_ERROR = _hk_struct_test.NET_PLAYM4_DEC_AUDIO_ERROR
NET_PLAYM4_ALLOC_MEMORY_ERROR = _hk_struct_test.NET_PLAYM4_ALLOC_MEMORY_ERROR
NET_PLAYM4_OPEN_FILE_ERROR = _hk_struct_test.NET_PLAYM4_OPEN_FILE_ERROR
NET_PLAYM4_CREATE_OBJ_ERROR = _hk_struct_test.NET_PLAYM4_CREATE_OBJ_ERROR
NET_PLAYM4_CREATE_DDRAW_ERROR = _hk_struct_test.NET_PLAYM4_CREATE_DDRAW_ERROR
NET_PLAYM4_CREATE_OFFSCREEN_ERROR = _hk_struct_test.NET_PLAYM4_CREATE_OFFSCREEN_ERROR
NET_PLAYM4_BUF_OVER = _hk_struct_test.NET_PLAYM4_BUF_OVER
NET_PLAYM4_CREATE_SOUND_ERROR = _hk_struct_test.NET_PLAYM4_CREATE_SOUND_ERROR
NET_PLAYM4_SET_VOLUME_ERROR = _hk_struct_test.NET_PLAYM4_SET_VOLUME_ERROR
NET_PLAYM4_SUPPORT_FILE_ONLY = _hk_struct_test.NET_PLAYM4_SUPPORT_FILE_ONLY
NET_PLAYM4_SUPPORT_STREAM_ONLY = _hk_struct_test.NET_PLAYM4_SUPPORT_STREAM_ONLY
NET_PLAYM4_SYS_NOT_SUPPORT = _hk_struct_test.NET_PLAYM4_SYS_NOT_SUPPORT
NET_PLAYM4_FILEHEADER_UNKNOWN = _hk_struct_test.NET_PLAYM4_FILEHEADER_UNKNOWN
NET_PLAYM4_VERSION_INCORRECT = _hk_struct_test.NET_PLAYM4_VERSION_INCORRECT
NET_PALYM4_INIT_DECODER_ERROR = _hk_struct_test.NET_PALYM4_INIT_DECODER_ERROR
NET_PLAYM4_CHECK_FILE_ERROR = _hk_struct_test.NET_PLAYM4_CHECK_FILE_ERROR
NET_PLAYM4_INIT_TIMER_ERROR = _hk_struct_test.NET_PLAYM4_INIT_TIMER_ERROR
NET_PLAYM4_BLT_ERROR = _hk_struct_test.NET_PLAYM4_BLT_ERROR
NET_PLAYM4_UPDATE_ERROR = _hk_struct_test.NET_PLAYM4_UPDATE_ERROR
NET_PLAYM4_OPEN_FILE_ERROR_MULTI = _hk_struct_test.NET_PLAYM4_OPEN_FILE_ERROR_MULTI
NET_PLAYM4_OPEN_FILE_ERROR_VIDEO = _hk_struct_test.NET_PLAYM4_OPEN_FILE_ERROR_VIDEO
NET_PLAYM4_JPEG_COMPRESS_ERROR = _hk_struct_test.NET_PLAYM4_JPEG_COMPRESS_ERROR
NET_PLAYM4_EXTRACT_NOT_SUPPORT = _hk_struct_test.NET_PLAYM4_EXTRACT_NOT_SUPPORT
NET_PLAYM4_EXTRACT_DATA_ERROR = _hk_struct_test.NET_PLAYM4_EXTRACT_DATA_ERROR
NET_CONVERT_ERROR_NOT_SUPPORT = _hk_struct_test.NET_CONVERT_ERROR_NOT_SUPPORT
NET_AUDIOINTERCOM_OK = _hk_struct_test.NET_AUDIOINTERCOM_OK
NET_AUDIOINTECOM_ERR_NOTSUPORT = _hk_struct_test.NET_AUDIOINTECOM_ERR_NOTSUPORT
NET_AUDIOINTECOM_ERR_ALLOC_MEMERY = _hk_struct_test.NET_AUDIOINTECOM_ERR_ALLOC_MEMERY
NET_AUDIOINTECOM_ERR_PARAMETER = _hk_struct_test.NET_AUDIOINTECOM_ERR_PARAMETER
NET_AUDIOINTECOM_ERR_CALL_ORDER = _hk_struct_test.NET_AUDIOINTECOM_ERR_CALL_ORDER
NET_AUDIOINTECOM_ERR_FIND_DEVICE = _hk_struct_test.NET_AUDIOINTECOM_ERR_FIND_DEVICE
NET_AUDIOINTECOM_ERR_OPEN_DEVICE = _hk_struct_test.NET_AUDIOINTECOM_ERR_OPEN_DEVICE
NET_AUDIOINTECOM_ERR_NO_CONTEXT = _hk_struct_test.NET_AUDIOINTECOM_ERR_NO_CONTEXT
NET_AUDIOINTECOM_ERR_NO_WAVFILE = _hk_struct_test.NET_AUDIOINTECOM_ERR_NO_WAVFILE
NET_AUDIOINTECOM_ERR_INVALID_TYPE = _hk_struct_test.NET_AUDIOINTECOM_ERR_INVALID_TYPE
NET_AUDIOINTECOM_ERR_ENCODE_FAIL = _hk_struct_test.NET_AUDIOINTECOM_ERR_ENCODE_FAIL
NET_AUDIOINTECOM_ERR_DECODE_FAIL = _hk_struct_test.NET_AUDIOINTECOM_ERR_DECODE_FAIL
NET_AUDIOINTECOM_ERR_NO_PLAYBACK = _hk_struct_test.NET_AUDIOINTECOM_ERR_NO_PLAYBACK
NET_AUDIOINTECOM_ERR_DENOISE_FAIL = _hk_struct_test.NET_AUDIOINTECOM_ERR_DENOISE_FAIL
NET_AUDIOINTECOM_ERR_UNKOWN = _hk_struct_test.NET_AUDIOINTECOM_ERR_UNKOWN
NET_QOS_OK = _hk_struct_test.NET_QOS_OK
NET_QOS_ERROR = _hk_struct_test.NET_QOS_ERROR
NET_QOS_ERR_INVALID_ARGUMENTS = _hk_struct_test.NET_QOS_ERR_INVALID_ARGUMENTS
NET_QOS_ERR_SESSION_NOT_FOUND = _hk_struct_test.NET_QOS_ERR_SESSION_NOT_FOUND
NET_QOS_ERR_LIB_NOT_INITIALIZED = _hk_struct_test.NET_QOS_ERR_LIB_NOT_INITIALIZED
NET_QOS_ERR_OUTOFMEM = _hk_struct_test.NET_QOS_ERR_OUTOFMEM
NET_QOS_ERR_PACKET_UNKNOW = _hk_struct_test.NET_QOS_ERR_PACKET_UNKNOW
NET_QOS_ERR_PACKET_VERSION = _hk_struct_test.NET_QOS_ERR_PACKET_VERSION
NET_QOS_ERR_PACKET_LENGTH = _hk_struct_test.NET_QOS_ERR_PACKET_LENGTH
NET_QOS_ERR_PACKET_TOO_BIG = _hk_struct_test.NET_QOS_ERR_PACKET_TOO_BIG
NET_QOS_ERR_SCHEDPARAMS_INVALID_BANDWIDTH = _hk_struct_test.NET_QOS_ERR_SCHEDPARAMS_INVALID_BANDWIDTH
NET_QOS_ERR_SCHEDPARAMS_BAD_FRACTION = _hk_struct_test.NET_QOS_ERR_SCHEDPARAMS_BAD_FRACTION
NET_QOS_ERR_SCHEDPARAMS_BAD_MINIMUM_INTERVAL = _hk_struct_test.NET_QOS_ERR_SCHEDPARAMS_BAD_MINIMUM_INTERVAL
NET_ERROR_TRUNK_LINE = _hk_struct_test.NET_ERROR_TRUNK_LINE
NET_ERROR_MIXED_JOINT = _hk_struct_test.NET_ERROR_MIXED_JOINT
NET_ERROR_DISPLAY_SWITCH = _hk_struct_test.NET_ERROR_DISPLAY_SWITCH
NET_ERROR_USED_BY_BIG_SCREEN = _hk_struct_test.NET_ERROR_USED_BY_BIG_SCREEN
NET_ERROR_USE_OTHER_DEC_RESOURCE = _hk_struct_test.NET_ERROR_USE_OTHER_DEC_RESOURCE
NET_ERROR_DISP_MODE_SWITCH = _hk_struct_test.NET_ERROR_DISP_MODE_SWITCH
NET_ERROR_SCENE_USING = _hk_struct_test.NET_ERROR_SCENE_USING
NET_ERR_NO_ENOUGH_DEC_RESOURCE = _hk_struct_test.NET_ERR_NO_ENOUGH_DEC_RESOURCE
NET_ERR_NO_ENOUGH_FREE_SHOW_RESOURCE = _hk_struct_test.NET_ERR_NO_ENOUGH_FREE_SHOW_RESOURCE
NET_ERR_NO_ENOUGH_VIDEO_MEMORY = _hk_struct_test.NET_ERR_NO_ENOUGH_VIDEO_MEMORY
NET_ERR_MAX_VIDEO_NUM = _hk_struct_test.NET_ERR_MAX_VIDEO_NUM
NET_ERR_WIN_COVER_FREE_SHOW_AND_NORMAL = _hk_struct_test.NET_ERR_WIN_COVER_FREE_SHOW_AND_NORMAL
NET_ERR_FREE_SHOW_WIN_SPLIT = _hk_struct_test.NET_ERR_FREE_SHOW_WIN_SPLIT
NET_ERR_INAPPROPRIATE_WIN_FREE_SHOW = _hk_struct_test.NET_ERR_INAPPROPRIATE_WIN_FREE_SHOW
NET_DVR_TRANSPARENT_WIN_NOT_SUPPORT_SPLIT = _hk_struct_test.NET_DVR_TRANSPARENT_WIN_NOT_SUPPORT_SPLIT
NET_DVR_SPLIT_WIN_NOT_SUPPORT_TRANSPARENT = _hk_struct_test.NET_DVR_SPLIT_WIN_NOT_SUPPORT_TRANSPARENT
NET_ERR_MAX_LOGO_NUM = _hk_struct_test.NET_ERR_MAX_LOGO_NUM
NET_ERR_MAX_WIN_LOOP_NUM = _hk_struct_test.NET_ERR_MAX_WIN_LOOP_NUM
NET_ERR_VIRTUAL_LED_VERTICAL_CROSS = _hk_struct_test.NET_ERR_VIRTUAL_LED_VERTICAL_CROSS
NET_ERR_MAX_VIRTUAL_LED_HEIGHT = _hk_struct_test.NET_ERR_MAX_VIRTUAL_LED_HEIGHT
NET_ERR_VIRTUAL_LED_ILLEGAL_CHARACTER = _hk_struct_test.NET_ERR_VIRTUAL_LED_ILLEGAL_CHARACTER
NET_ERR_BASEMAP_NOT_EXIST = _hk_struct_test.NET_ERR_BASEMAP_NOT_EXIST
NET_ERR_LED_NOT_SUPPORT_VIRTUAL_LED = _hk_struct_test.NET_ERR_LED_NOT_SUPPORT_VIRTUAL_LED
NET_ERR_LED_RESOLUTION_NOT_SUPPORT = _hk_struct_test.NET_ERR_LED_RESOLUTION_NOT_SUPPORT
NET_ERR_PLAN_OVERDUE = _hk_struct_test.NET_ERR_PLAN_OVERDUE
NET_ERR_PROCESSER_MAX_SCREEN_BLK = _hk_struct_test.NET_ERR_PROCESSER_MAX_SCREEN_BLK
NET_ERR_WND_SIZE_TOO_SMALL = _hk_struct_test.NET_ERR_WND_SIZE_TOO_SMALL
NET_ERR_WND_SPLIT_NOT_SUPPORT_ROAM = _hk_struct_test.NET_ERR_WND_SPLIT_NOT_SUPPORT_ROAM
NET_ERR_OUTPUT_ONE_BOARD_ONE_WALL = _hk_struct_test.NET_ERR_OUTPUT_ONE_BOARD_ONE_WALL
NET_ERR_WND_CANNOT_LCD_AND_LED_OUTPUT = _hk_struct_test.NET_ERR_WND_CANNOT_LCD_AND_LED_OUTPUT
NET_ERR_MAX_OSD_NUM = _hk_struct_test.NET_ERR_MAX_OSD_NUM
NET_SDK_CANCEL_WND_TOPKEEP_ATTR_FIRST = _hk_struct_test.NET_SDK_CANCEL_WND_TOPKEEP_ATTR_FIRST
NET_SDK_ERR_LED_SCREEN_CHECKING = _hk_struct_test.NET_SDK_ERR_LED_SCREEN_CHECKING
NET_SDK_ERR_NOT_SUPPORT_SINGLE_RESOLUTION = _hk_struct_test.NET_SDK_ERR_NOT_SUPPORT_SINGLE_RESOLUTION
NET_SDK_ERR_LED_RESOLUTION_MISMATCHED = _hk_struct_test.NET_SDK_ERR_LED_RESOLUTION_MISMATCHED
NET_SDK_ERR_MAX_VIRTUAL_LED_WIDTH = _hk_struct_test.NET_SDK_ERR_MAX_VIRTUAL_LED_WIDTH
NET_SDK_ERR_MAX_VIRTUAL_LED_IN_SCREEN = _hk_struct_test.NET_SDK_ERR_MAX_VIRTUAL_LED_IN_SCREEN
NET_SDK_ERR_MAX_VIRTUAL_LED_IN_WALL = _hk_struct_test.NET_SDK_ERR_MAX_VIRTUAL_LED_IN_WALL
NET_SDK_ERR_VIRTUAL_LED_OVERLAP = _hk_struct_test.NET_SDK_ERR_VIRTUAL_LED_OVERLAP
NET_SDK_ERR_VIRTUAL_LED_TYPE = _hk_struct_test.NET_SDK_ERR_VIRTUAL_LED_TYPE
NET_SDK_ERR_VIRTUAL_LED_COLOUR = _hk_struct_test.NET_SDK_ERR_VIRTUAL_LED_COLOUR
NET_SDK_ERR_VIRTUAL_LED_MOVE_DIRECTION = _hk_struct_test.NET_SDK_ERR_VIRTUAL_LED_MOVE_DIRECTION
NET_SDK_ERR_VIRTUAL_LED_MOVE_MODE = _hk_struct_test.NET_SDK_ERR_VIRTUAL_LED_MOVE_MODE
NET_SDK_ERR_VIRTUAL_LED_MOVE_SPEED = _hk_struct_test.NET_SDK_ERR_VIRTUAL_LED_MOVE_SPEED
NET_SDK_ERR_VIRTUAL_LED_DISP_MODE = _hk_struct_test.NET_SDK_ERR_VIRTUAL_LED_DISP_MODE
NET_SDK_ERR_VIRTUAL_LED_NO = _hk_struct_test.NET_SDK_ERR_VIRTUAL_LED_NO
NET_SDK_ERR_VIRTUAL_LED_PARA = _hk_struct_test.NET_SDK_ERR_VIRTUAL_LED_PARA
NET_SDK_ERR_BASEMAP_POSITION = _hk_struct_test.NET_SDK_ERR_BASEMAP_POSITION
NET_SDK_ERR_BASEMAP_PICTURE_LEN = _hk_struct_test.NET_SDK_ERR_BASEMAP_PICTURE_LEN
NET_SDK_ERR_BASEMAP_PICTURE_RESOLUTION = _hk_struct_test.NET_SDK_ERR_BASEMAP_PICTURE_RESOLUTION
NET_SDK_ERR_BASEMAP_PICTURE_FORMAT = _hk_struct_test.NET_SDK_ERR_BASEMAP_PICTURE_FORMAT
NET_SDK_ERR_MAX_VIRTUAL_LED_NUM = _hk_struct_test.NET_SDK_ERR_MAX_VIRTUAL_LED_NUM
NET_SDK_ERR_MAX_TIME_VIRTUAL_LED_IN_WALL = _hk_struct_test.NET_SDK_ERR_MAX_TIME_VIRTUAL_LED_IN_WALL
NET_ERR_TERMINAL_BUSY = _hk_struct_test.NET_ERR_TERMINAL_BUSY
NET_ERR_DATA_RETURNED_ILLEGAL = _hk_struct_test.NET_ERR_DATA_RETURNED_ILLEGAL
NET_DVR_FUNCTION_RESOURCE_USAGE_ERROR = _hk_struct_test.NET_DVR_FUNCTION_RESOURCE_USAGE_ERROR
NET_DVR_ERR_IMPORT_EMPTY_FILE = _hk_struct_test.NET_DVR_ERR_IMPORT_EMPTY_FILE
NET_DVR_ERR_IMPORT_TOO_LARGE_FILE = _hk_struct_test.NET_DVR_ERR_IMPORT_TOO_LARGE_FILE
NET_DVR_ERR_BAD_IPV4_ADDRESS = _hk_struct_test.NET_DVR_ERR_BAD_IPV4_ADDRESS
NET_DVR_ERR_BAD_NET_MASK = _hk_struct_test.NET_DVR_ERR_BAD_NET_MASK
NET_DVR_ERR_INVALID_NET_GATE_ADDRESS = _hk_struct_test.NET_DVR_ERR_INVALID_NET_GATE_ADDRESS
NET_DVR_ERR_BAD_DNS = _hk_struct_test.NET_DVR_ERR_BAD_DNS
NET_DVR_ERR_ILLEGAL_PASSWORD = _hk_struct_test.NET_DVR_ERR_ILLEGAL_PASSWORD
NET_DVR_DEV_NET_OVERFLOW = _hk_struct_test.NET_DVR_DEV_NET_OVERFLOW
NET_DVR_STATUS_RECORDFILE_WRITING_NOT_LOCK = _hk_struct_test.NET_DVR_STATUS_RECORDFILE_WRITING_NOT_LOCK
NET_DVR_STATUS_CANT_FORMAT_LITTLE_DISK = _hk_struct_test.NET_DVR_STATUS_CANT_FORMAT_LITTLE_DISK
NET_SDK_ERR_REMOTE_DISCONNECT = _hk_struct_test.NET_SDK_ERR_REMOTE_DISCONNECT
NET_SDK_ERR_RD_ADD_RD = _hk_struct_test.NET_SDK_ERR_RD_ADD_RD
NET_SDK_ERR_BACKUP_DISK_EXCEPT = _hk_struct_test.NET_SDK_ERR_BACKUP_DISK_EXCEPT
NET_SDK_ERR_RD_LIMIT = _hk_struct_test.NET_SDK_ERR_RD_LIMIT
NET_SDK_ERR_ADDED_RD_IS_WD = _hk_struct_test.NET_SDK_ERR_ADDED_RD_IS_WD
NET_SDK_ERR_ADD_ORDER_WRONG = _hk_struct_test.NET_SDK_ERR_ADD_ORDER_WRONG
NET_SDK_ERR_WD_ADD_WD = _hk_struct_test.NET_SDK_ERR_WD_ADD_WD
NET_SDK_ERR_WD_SERVICE_EXCETP = _hk_struct_test.NET_SDK_ERR_WD_SERVICE_EXCETP
NET_SDK_ERR_RD_SERVICE_EXCETP = _hk_struct_test.NET_SDK_ERR_RD_SERVICE_EXCETP
NET_SDK_ERR_ADDED_WD_IS_RD = _hk_struct_test.NET_SDK_ERR_ADDED_WD_IS_RD
NET_SDK_ERR_PERFORMANCE_LIMIT = _hk_struct_test.NET_SDK_ERR_PERFORMANCE_LIMIT
NET_SDK_ERR_ADDED_DEVICE_EXIST = _hk_struct_test.NET_SDK_ERR_ADDED_DEVICE_EXIST
NET_SDK_ERR_INQUEST_RESUMING = _hk_struct_test.NET_SDK_ERR_INQUEST_RESUMING
NET_SDK_ERR_RECORD_BACKUPING = _hk_struct_test.NET_SDK_ERR_RECORD_BACKUPING
NET_SDK_ERR_DISK_PLAYING = _hk_struct_test.NET_SDK_ERR_DISK_PLAYING
NET_SDK_ERR_INQUEST_STARTED = _hk_struct_test.NET_SDK_ERR_INQUEST_STARTED
NET_SDK_ERR_LOCAL_OPERATING = _hk_struct_test.NET_SDK_ERR_LOCAL_OPERATING
NET_SDK_ERR_INQUEST_NOT_START = _hk_struct_test.NET_SDK_ERR_INQUEST_NOT_START
NET_SDK_ERR_CHAN_AUDIO_BIND = _hk_struct_test.NET_SDK_ERR_CHAN_AUDIO_BIND
NET_DVR_N_PLUS_ONE_MODE = _hk_struct_test.NET_DVR_N_PLUS_ONE_MODE
NET_DVR_CLOUD_STORAGE_OPENED = _hk_struct_test.NET_DVR_CLOUD_STORAGE_OPENED
NET_DVR_ERR_OPER_NOT_ALLOWED = _hk_struct_test.NET_DVR_ERR_OPER_NOT_ALLOWED
NET_DVR_ERR_NEED_RELOCATE = _hk_struct_test.NET_DVR_ERR_NEED_RELOCATE
NET_SDK_ERR_IR_PORT_ERROR = _hk_struct_test.NET_SDK_ERR_IR_PORT_ERROR
NET_SDK_ERR_IR_CMD_ERROR = _hk_struct_test.NET_SDK_ERR_IR_CMD_ERROR
NET_SDK_ERR_NOT_INQUESTING = _hk_struct_test.NET_SDK_ERR_NOT_INQUESTING
NET_SDK_ERR_INQUEST_NOT_PAUSED = _hk_struct_test.NET_SDK_ERR_INQUEST_NOT_PAUSED
NET_DVR_CHECK_PASSWORD_MISTAKE_ERROR = _hk_struct_test.NET_DVR_CHECK_PASSWORD_MISTAKE_ERROR
NET_DVR_CHECK_PASSWORD_NULL_ERROR = _hk_struct_test.NET_DVR_CHECK_PASSWORD_NULL_ERROR
NET_DVR_UNABLE_CALIB_ERROR = _hk_struct_test.NET_DVR_UNABLE_CALIB_ERROR
NET_DVR_PLEASE_CALIB_ERROR = _hk_struct_test.NET_DVR_PLEASE_CALIB_ERROR
NET_DVR_ERR_PANORAMIC_CAL_EMPTY = _hk_struct_test.NET_DVR_ERR_PANORAMIC_CAL_EMPTY
NET_DVR_ERR_CALIB_FAIL_PLEASEAGAIN = _hk_struct_test.NET_DVR_ERR_CALIB_FAIL_PLEASEAGAIN
NET_DVR_ERR_DETECTION_LINE = _hk_struct_test.NET_DVR_ERR_DETECTION_LINE
NET_DVR_ERR_TURN_OFF_IMAGE_PARA = _hk_struct_test.NET_DVR_ERR_TURN_OFF_IMAGE_PARA
NET_DVR_EXCEED_FACE_IMAGES_ERROR = _hk_struct_test.NET_DVR_EXCEED_FACE_IMAGES_ERROR
NET_DVR_ANALYSIS_FACE_IMAGES_ERROR = _hk_struct_test.NET_DVR_ANALYSIS_FACE_IMAGES_ERROR
NET_ERR_ALARM_INPUT_OCCUPIED = _hk_struct_test.NET_ERR_ALARM_INPUT_OCCUPIED
NET_DVR_FACELIB_DATABASE_ERROR = _hk_struct_test.NET_DVR_FACELIB_DATABASE_ERROR
NET_DVR_FACELIB_DATA_ERROR = _hk_struct_test.NET_DVR_FACELIB_DATA_ERROR
NET_DVR_FACE_DATA_ID_ERROR = _hk_struct_test.NET_DVR_FACE_DATA_ID_ERROR
NET_DVR_FACELIB_ID_ERROR = _hk_struct_test.NET_DVR_FACELIB_ID_ERROR
NET_DVR_EXCEED_FACE_LIBARY_ERROR = _hk_struct_test.NET_DVR_EXCEED_FACE_LIBARY_ERROR
NET_DVR_PIC_ANALYSIS_NO_TARGET_ERROR = _hk_struct_test.NET_DVR_PIC_ANALYSIS_NO_TARGET_ERROR
NET_DVR_SUBPIC_ANALYSIS_MODELING_ERROR = _hk_struct_test.NET_DVR_SUBPIC_ANALYSIS_MODELING_ERROR
NET_DVR_PIC_ANALYSIS_NO_RESOURCE_ERROR = _hk_struct_test.NET_DVR_PIC_ANALYSIS_NO_RESOURCE_ERROR
NET_DVR_ANALYSIS_ENGINES_NO_RESOURCE_ERROR = _hk_struct_test.NET_DVR_ANALYSIS_ENGINES_NO_RESOURCE_ERROR
NET_DVR_ANALYSIS_ENGINES_USAGE_EXCEED_ERROR = _hk_struct_test.NET_DVR_ANALYSIS_ENGINES_USAGE_EXCEED_ERROR
NET_DVR_EXCEED_HUMANMISINFO_FILTER_ENABLED_ERROR = _hk_struct_test.NET_DVR_EXCEED_HUMANMISINFO_FILTER_ENABLED_ERROR
NET_DVR_NAME_ERROR = _hk_struct_test.NET_DVR_NAME_ERROR
NET_DVR_NAME_EXIST_ERROR = _hk_struct_test.NET_DVR_NAME_EXIST_ERROR
NET_DVR_FACELIB_PIC_IMPORTING_ERROR = _hk_struct_test.NET_DVR_FACELIB_PIC_IMPORTING_ERROR
NET_DVR_ERR_CALIB_POSITION = _hk_struct_test.NET_DVR_ERR_CALIB_POSITION
NET_DVR_ERR_DELETE = _hk_struct_test.NET_DVR_ERR_DELETE
NET_DVR_ERR_SCENE_ID = _hk_struct_test.NET_DVR_ERR_SCENE_ID
NET_DVR_ERR_CALIBING = _hk_struct_test.NET_DVR_ERR_CALIBING
NET_DVR_PIC_FORMAT_ERROR = _hk_struct_test.NET_DVR_PIC_FORMAT_ERROR
NET_DVR_PIC_RESOLUTION_INVALID_ERROR = _hk_struct_test.NET_DVR_PIC_RESOLUTION_INVALID_ERROR
NET_DVR_PIC_SIZE_EXCEED_ERROR = _hk_struct_test.NET_DVR_PIC_SIZE_EXCEED_ERROR
NET_DVR_PIC_ANALYSIS_TARGRT_NUM_EXCEED_ERROR = _hk_struct_test.NET_DVR_PIC_ANALYSIS_TARGRT_NUM_EXCEED_ERROR
NET_DVR_ANALYSIS_ENGINES_LOADING_ERROR = _hk_struct_test.NET_DVR_ANALYSIS_ENGINES_LOADING_ERROR
NET_DVR_ANALYSIS_ENGINES_ABNORMA_ERROR = _hk_struct_test.NET_DVR_ANALYSIS_ENGINES_ABNORMA_ERROR
NET_DVR_ANALYSIS_ENGINES_FACELIB_IMPORTING = _hk_struct_test.NET_DVR_ANALYSIS_ENGINES_FACELIB_IMPORTING
NET_DVR_NO_DATA_FOR_MODELING_ERROR = _hk_struct_test.NET_DVR_NO_DATA_FOR_MODELING_ERROR
NET_DVR_FACE_DATA_MODELING_ERROR = _hk_struct_test.NET_DVR_FACE_DATA_MODELING_ERROR
NET_ERR_FACELIBDATA_OVERLIMIT = _hk_struct_test.NET_ERR_FACELIBDATA_OVERLIMIT
NET_DVR_ANALYSIS_ENGINES_ASSOCIATED_CHANNEL = _hk_struct_test.NET_DVR_ANALYSIS_ENGINES_ASSOCIATED_CHANNEL
NET_DVR_ERR_CUSTOMID_LEN = _hk_struct_test.NET_DVR_ERR_CUSTOMID_LEN
NET_DVR_ERR_CUSTOMFACELIBID_REPEAT = _hk_struct_test.NET_DVR_ERR_CUSTOMFACELIBID_REPEAT
NET_DVR_ERR_CUSTOMHUMANID_REPEAT = _hk_struct_test.NET_DVR_ERR_CUSTOMHUMANID_REPEAT
NET_DVR_ERR_URL_DOWNLOAD_FAIL = _hk_struct_test.NET_DVR_ERR_URL_DOWNLOAD_FAIL
NET_DVR_ERR_URL_DOWNLOAD_NOTSTART = _hk_struct_test.NET_DVR_ERR_URL_DOWNLOAD_NOTSTART
NET_DVR_CFG_FILE_SECRETKEY_ERROR = _hk_struct_test.NET_DVR_CFG_FILE_SECRETKEY_ERROR
NET_DVR_WDR_NOTDISABLE_ERROR = _hk_struct_test.NET_DVR_WDR_NOTDISABLE_ERROR
NET_DVR_HLC_NOTDISABLE_ERROR = _hk_struct_test.NET_DVR_HLC_NOTDISABLE_ERROR
NET_DVR_THERMOMETRY_REGION_OVERSTEP_ERROR = _hk_struct_test.NET_DVR_THERMOMETRY_REGION_OVERSTEP_ERROR
NET_DVR_ERR_MODELING_DEVICEINTERNAL = _hk_struct_test.NET_DVR_ERR_MODELING_DEVICEINTERNAL
NET_DVR_ERR_MODELING_FACE = _hk_struct_test.NET_DVR_ERR_MODELING_FACE
NET_DVR_ERR_MODELING_FACEGRADING = _hk_struct_test.NET_DVR_ERR_MODELING_FACEGRADING
NET_DVR_ERR_MODELING_FACEGFEATURE = _hk_struct_test.NET_DVR_ERR_MODELING_FACEGFEATURE
NET_DVR_ERR_MODELING_FACEGANALYZING = _hk_struct_test.NET_DVR_ERR_MODELING_FACEGANALYZING
NET_DVR_ERR_STREAM_LIMIT = _hk_struct_test.NET_DVR_ERR_STREAM_LIMIT
NET_DVR_ERR_STREAM_DESCRIPTION = _hk_struct_test.NET_DVR_ERR_STREAM_DESCRIPTION
NET_DVR_ERR_STREAM_DELETE = _hk_struct_test.NET_DVR_ERR_STREAM_DELETE
NET_DVR_ERR_CUSTOMSTREAM_NAME = _hk_struct_test.NET_DVR_ERR_CUSTOMSTREAM_NAME
NET_DVR_ERR_CUSTOMSTREAM_NOTEXISTED = _hk_struct_test.NET_DVR_ERR_CUSTOMSTREAM_NOTEXISTED
NET_DVR_ERR_TOO_SHORT_CALIBRATING_TIME = _hk_struct_test.NET_DVR_ERR_TOO_SHORT_CALIBRATING_TIME
NET_DVR_ERR_AUTO_CALIBRATE_FAILED = _hk_struct_test.NET_DVR_ERR_AUTO_CALIBRATE_FAILED
NET_DVR_ERR_VERIFICATION_FAILED = _hk_struct_test.NET_DVR_ERR_VERIFICATION_FAILED
NET_DVR_NO_TEMP_SENSOR_ERROR = _hk_struct_test.NET_DVR_NO_TEMP_SENSOR_ERROR
NET_DVR_PUPIL_DISTANCE_OVERSIZE_ERROR = _hk_struct_test.NET_DVR_PUPIL_DISTANCE_OVERSIZE_ERROR
NET_DVR_ERR_UNOPENED_FACE_SNAP = _hk_struct_test.NET_DVR_ERR_UNOPENED_FACE_SNAP
NET_ERR_CUT_INPUTSTREAM_OVERLIMIT = _hk_struct_test.NET_ERR_CUT_INPUTSTREAM_OVERLIMIT
NET_ERR_WINCHAN_IDX = _hk_struct_test.NET_ERR_WINCHAN_IDX
NET_ERR_WIN_LAYER = _hk_struct_test.NET_ERR_WIN_LAYER
NET_ERR_WIN_BLK_NUM = _hk_struct_test.NET_ERR_WIN_BLK_NUM
NET_ERR_OUTPUT_RESOLUTION = _hk_struct_test.NET_ERR_OUTPUT_RESOLUTION
NET_ERR_LAYOUT = _hk_struct_test.NET_ERR_LAYOUT
NET_ERR_INPUT_RESOLUTION = _hk_struct_test.NET_ERR_INPUT_RESOLUTION
NET_ERR_SUBDEVICE_OFFLINE = _hk_struct_test.NET_ERR_SUBDEVICE_OFFLINE
NET_ERR_NO_DECODE_CHAN = _hk_struct_test.NET_ERR_NO_DECODE_CHAN
NET_ERR_MAX_WINDOW_ABILITY = _hk_struct_test.NET_ERR_MAX_WINDOW_ABILITY
NET_ERR_ORDER_ERROR = _hk_struct_test.NET_ERR_ORDER_ERROR
NET_ERR_PLAYING_PLAN = _hk_struct_test.NET_ERR_PLAYING_PLAN
NET_ERR_DECODER_USED = _hk_struct_test.NET_ERR_DECODER_USED
NET_ERR_OUTPUT_BOARD_DATA_OVERFLOW = _hk_struct_test.NET_ERR_OUTPUT_BOARD_DATA_OVERFLOW
NET_ERR_SAME_USER_NAME = _hk_struct_test.NET_ERR_SAME_USER_NAME
NET_ERR_INVALID_USER_NAME = _hk_struct_test.NET_ERR_INVALID_USER_NAME
NET_ERR_MATRIX_USING = _hk_struct_test.NET_ERR_MATRIX_USING
NET_ERR_DIFFERENT_CHAN_TYPE = _hk_struct_test.NET_ERR_DIFFERENT_CHAN_TYPE
NET_ERR_INPUT_CHAN_BINDED = _hk_struct_test.NET_ERR_INPUT_CHAN_BINDED
NET_ERR_BINDED_OUTPUT_CHAN_OVERFLOW = _hk_struct_test.NET_ERR_BINDED_OUTPUT_CHAN_OVERFLOW
NET_ERR_MAX_SIGNAL_NUM = _hk_struct_test.NET_ERR_MAX_SIGNAL_NUM
NET_ERR_INPUT_CHAN_USING = _hk_struct_test.NET_ERR_INPUT_CHAN_USING
NET_ERR_MANAGER_LOGON = _hk_struct_test.NET_ERR_MANAGER_LOGON
NET_ERR_USERALREADY_LOGON = _hk_struct_test.NET_ERR_USERALREADY_LOGON
NET_ERR_LAYOUT_INIT = _hk_struct_test.NET_ERR_LAYOUT_INIT
NET_ERR_BASEMAP_SIZE_NOT_MATCH = _hk_struct_test.NET_ERR_BASEMAP_SIZE_NOT_MATCH
NET_ERR_WINDOW_OPERATING = _hk_struct_test.NET_ERR_WINDOW_OPERATING
NET_ERR_SIGNAL_UPLIMIT = _hk_struct_test.NET_ERR_SIGNAL_UPLIMIT
NET_ERR_SIGNAL_MAX_ENLARGE_TIMES = _hk_struct_test.NET_ERR_SIGNAL_MAX_ENLARGE_TIMES
NET_ERR_ONE_SIGNAL_MULTI_CROSS = _hk_struct_test.NET_ERR_ONE_SIGNAL_MULTI_CROSS
NET_ERR_ULTRA_HD_SIGNAL_MULTI_WIN = _hk_struct_test.NET_ERR_ULTRA_HD_SIGNAL_MULTI_WIN
NET_ERR_MAX_VIRTUAL_LED_WIDTH = _hk_struct_test.NET_ERR_MAX_VIRTUAL_LED_WIDTH
NET_ERR_MAX_VIRTUAL_LED_WORD_LEN = _hk_struct_test.NET_ERR_MAX_VIRTUAL_LED_WORD_LEN
NET_ERR_SINGLE_OUTPUTPARAM_CONFIG = _hk_struct_test.NET_ERR_SINGLE_OUTPUTPARAM_CONFIG
NET_ERR_MULTI_WIN_BE_COVER = _hk_struct_test.NET_ERR_MULTI_WIN_BE_COVER
NET_ERR_WIN_NOT_EXIST = _hk_struct_test.NET_ERR_WIN_NOT_EXIST
NET_ERR_WIN_MAX_SIGNALSOURCE = _hk_struct_test.NET_ERR_WIN_MAX_SIGNALSOURCE
NET_ERR_MULTI_WIN_MOVE = _hk_struct_test.NET_ERR_MULTI_WIN_MOVE
NET_ERR_MULTI_WIN_YPBPR_SDI = _hk_struct_test.NET_ERR_MULTI_WIN_YPBPR_SDI
NET_ERR_DIFF_TYPE_OUTPUT_MIXUSE = _hk_struct_test.NET_ERR_DIFF_TYPE_OUTPUT_MIXUSE
NET_ERR_SPLIT_WIN_CROSS = _hk_struct_test.NET_ERR_SPLIT_WIN_CROSS
NET_ERR_SPLIT_WIN_NOT_FULL_SCREEN = _hk_struct_test.NET_ERR_SPLIT_WIN_NOT_FULL_SCREEN
NET_ERR_SPLIT_WIN_MANY_WIN = _hk_struct_test.NET_ERR_SPLIT_WIN_MANY_WIN
NET_ERR_WINDOW_SIZE_OVERLIMIT = _hk_struct_test.NET_ERR_WINDOW_SIZE_OVERLIMIT
NET_ERR_INPUTSTREAM_ALREADY_JOINT = _hk_struct_test.NET_ERR_INPUTSTREAM_ALREADY_JOINT
NET_ERR_JOINT_INPUTSTREAM_OVERLIMIT = _hk_struct_test.NET_ERR_JOINT_INPUTSTREAM_OVERLIMIT
NET_ERR_LED_RESOLUTION = _hk_struct_test.NET_ERR_LED_RESOLUTION
NET_ERR_JOINT_SCALE_OVERLIMIT = _hk_struct_test.NET_ERR_JOINT_SCALE_OVERLIMIT
NET_ERR_INPUTSTREAM_ALREADY_DECODE = _hk_struct_test.NET_ERR_INPUTSTREAM_ALREADY_DECODE
NET_ERR_INPUTSTREAM_NOTSUPPORT_CAPTURE = _hk_struct_test.NET_ERR_INPUTSTREAM_NOTSUPPORT_CAPTURE
NET_ERR_JOINT_NOTSUPPORT_SPLITWIN = _hk_struct_test.NET_ERR_JOINT_NOTSUPPORT_SPLITWIN
NET_ERR_MAX_WIN_OVERLAP = _hk_struct_test.NET_ERR_MAX_WIN_OVERLAP
NET_ERR_STREAMID_CHAN_BOTH_VALID = _hk_struct_test.NET_ERR_STREAMID_CHAN_BOTH_VALID
NET_ERR_NO_ZERO_CHAN = _hk_struct_test.NET_ERR_NO_ZERO_CHAN
NEED_RECONNECT = _hk_struct_test.NEED_RECONNECT
NET_ERR_NO_STREAM_ID = _hk_struct_test.NET_ERR_NO_STREAM_ID
NET_DVR_TRANS_NOT_START = _hk_struct_test.NET_DVR_TRANS_NOT_START
NET_ERR_MAXNUM_STREAM_ID = _hk_struct_test.NET_ERR_MAXNUM_STREAM_ID
NET_ERR_WORKMODE_MISMATCH = _hk_struct_test.NET_ERR_WORKMODE_MISMATCH
NET_ERR_MODE_IS_USING = _hk_struct_test.NET_ERR_MODE_IS_USING
NET_ERR_DEV_PROGRESSING = _hk_struct_test.NET_ERR_DEV_PROGRESSING
NET_ERR_PASSIVE_TRANSCODING = _hk_struct_test.NET_ERR_PASSIVE_TRANSCODING
NET_ERR_RING_NOT_CONFIGURE = _hk_struct_test.NET_ERR_RING_NOT_CONFIGURE
NET_ERR_CLOSE_WINDOW_FIRST = _hk_struct_test.NET_ERR_CLOSE_WINDOW_FIRST
NET_ERR_SPLIT_WINDOW_NUM_NOT_SUPPORT = _hk_struct_test.NET_ERR_SPLIT_WINDOW_NUM_NOT_SUPPORT
NET_ERR_REACH_ONE_SIGNAL_PREVIEW_MAX_LINK = _hk_struct_test.NET_ERR_REACH_ONE_SIGNAL_PREVIEW_MAX_LINK
NET_ERR_ONLY_SPLITWND_SUPPORT_AMPLIFICATION = _hk_struct_test.NET_ERR_ONLY_SPLITWND_SUPPORT_AMPLIFICATION
NET_DVR_ERR_WINDOW_SIZE_PLACE = _hk_struct_test.NET_DVR_ERR_WINDOW_SIZE_PLACE
NET_DVR_ERR_RGIONAL_RESTRICTIONS = _hk_struct_test.NET_DVR_ERR_RGIONAL_RESTRICTIONS
NET_ERR_WNDZOOM_NOT_SUPPORT = _hk_struct_test.NET_ERR_WNDZOOM_NOT_SUPPORT
NET_ERR_LED_SCREEN_SIZE = _hk_struct_test.NET_ERR_LED_SCREEN_SIZE
NET_ERR_OPEN_WIN_IN_ERROR_AREA = _hk_struct_test.NET_ERR_OPEN_WIN_IN_ERROR_AREA
NET_ERR_TITLE_WIN_NOT_SUPPORT_MOVE = _hk_struct_test.NET_ERR_TITLE_WIN_NOT_SUPPORT_MOVE
NET_ERR_TITLE_WIN_NOT_SUPPORT_COVER = _hk_struct_test.NET_ERR_TITLE_WIN_NOT_SUPPORT_COVER
NET_ERR_TITLE_WIN_NOT_SUPPORT_SPLIT = _hk_struct_test.NET_ERR_TITLE_WIN_NOT_SUPPORT_SPLIT
NET_DVR_LED_WINDOWS_ALREADY_CLOSED = _hk_struct_test.NET_DVR_LED_WINDOWS_ALREADY_CLOSED
NET_DVR_ERR_CLOSE_WINDOWS = _hk_struct_test.NET_DVR_ERR_CLOSE_WINDOWS
NET_DVR_ERR_MATRIX_LOOP_ABILITY = _hk_struct_test.NET_DVR_ERR_MATRIX_LOOP_ABILITY
NET_DVR_ERR_MATRIX_LOOP_TIME = _hk_struct_test.NET_DVR_ERR_MATRIX_LOOP_TIME
NET_DVR_ERR_LINKED_OUT_ABILITY = _hk_struct_test.NET_DVR_ERR_LINKED_OUT_ABILITY
NET_ERR_REACH_SCENE_MAX_NUM = _hk_struct_test.NET_ERR_REACH_SCENE_MAX_NUM
NET_ERR_SCENE_MEM_NOT_ENOUGH = _hk_struct_test.NET_ERR_SCENE_MEM_NOT_ENOUGH
NET_ERR_RESOLUTION_NOT_SUPPORT_ODD_VOUT = _hk_struct_test.NET_ERR_RESOLUTION_NOT_SUPPORT_ODD_VOUT
NET_ERR_RESOLUTION_NOT_SUPPORT_EVEN_VOUT = _hk_struct_test.NET_ERR_RESOLUTION_NOT_SUPPORT_EVEN_VOUT
NET_DVR_CANCEL_WND_OPENKEEP_ATTR_FIRST = _hk_struct_test.NET_DVR_CANCEL_WND_OPENKEEP_ATTR_FIRST
NET_SDK_LED_MODE_NOT_SUPPORT_SPLIT = _hk_struct_test.NET_SDK_LED_MODE_NOT_SUPPORT_SPLIT
NET_ERR_VOICETALK_ONLY_SUPPORT_ONE_TALK = _hk_struct_test.NET_ERR_VOICETALK_ONLY_SUPPORT_ONE_TALK
NET_ERR_WND_POSITION_ADJUSTED = _hk_struct_test.NET_ERR_WND_POSITION_ADJUSTED
NET_SDK_ERR_STARTTIME_CANNOT_LESSTHAN_CURTIME = _hk_struct_test.NET_SDK_ERR_STARTTIME_CANNOT_LESSTHAN_CURTIME
NET_SDK_ERR_NEED_ADJUST_PLAN = _hk_struct_test.NET_SDK_ERR_NEED_ADJUST_PLAN
NET_ERR_UnitConfig_Failed = _hk_struct_test.NET_ERR_UnitConfig_Failed
XML_ABILITY_NOTSUPPORT = _hk_struct_test.XML_ABILITY_NOTSUPPORT
XML_ANALYZE_NOENOUGH_BUF = _hk_struct_test.XML_ANALYZE_NOENOUGH_BUF
XML_ANALYZE_FIND_LOCALXML_ERROR = _hk_struct_test.XML_ANALYZE_FIND_LOCALXML_ERROR
XML_ANALYZE_LOAD_LOCALXML_ERROR = _hk_struct_test.XML_ANALYZE_LOAD_LOCALXML_ERROR
XML_NANLYZE_DVR_DATA_FORMAT_ERROR = _hk_struct_test.XML_NANLYZE_DVR_DATA_FORMAT_ERROR
XML_ANALYZE_TYPE_ERROR = _hk_struct_test.XML_ANALYZE_TYPE_ERROR
XML_ANALYZE_XML_NODE_ERROR = _hk_struct_test.XML_ANALYZE_XML_NODE_ERROR
XML_INPUT_PARAM_ERROR = _hk_struct_test.XML_INPUT_PARAM_ERROR
NET_DVR_ERR_RETURNED_XML_DATA = _hk_struct_test.NET_DVR_ERR_RETURNED_XML_DATA
NET_ERR_LEDAREA_EXIST_WINDOW = _hk_struct_test.NET_ERR_LEDAREA_EXIST_WINDOW
NET_ERR_AUDIO_EXIST = _hk_struct_test.NET_ERR_AUDIO_EXIST
NET_ERR_MATERIAL_NAME_EXIST = _hk_struct_test.NET_ERR_MATERIAL_NAME_EXIST
NET_ERR_MATERIAL_APPROVE_STATE = _hk_struct_test.NET_ERR_MATERIAL_APPROVE_STATE
NET_ERR_DATAHD_SIGNAL_FORMAT = _hk_struct_test.NET_ERR_DATAHD_SIGNAL_FORMAT
NET_ERR_SCENE_SWITCHING = _hk_struct_test.NET_ERR_SCENE_SWITCHING
NER_ERR_DATA_TRANSFER = _hk_struct_test.NER_ERR_DATA_TRANSFER
NET_ERR_DATA_RESTORE = _hk_struct_test.NET_ERR_DATA_RESTORE
NET_ERR_CHECK_NOT_ENABLE = _hk_struct_test.NET_ERR_CHECK_NOT_ENABLE
NET_ERR_AREA_OFFLINE = _hk_struct_test.NET_ERR_AREA_OFFLINE
NET_ERR_SCREEN_TYPE = _hk_struct_test.NET_ERR_SCREEN_TYPE
NET_ERR_MIN_OPERATE_UNIT = _hk_struct_test.NET_ERR_MIN_OPERATE_UNIT
NET_ERR_MAINHD_NOT_BACKUP = _hk_struct_test.NET_ERR_MAINHD_NOT_BACKUP
NET_ERR_ONE_BACKUP_HD = _hk_struct_test.NET_ERR_ONE_BACKUP_HD
NET_ERR_CONNECT_SUB_SYSTEM_ABNORMAL = _hk_struct_test.NET_ERR_CONNECT_SUB_SYSTEM_ABNORMAL
NET_ERR_SERIAL_PORT_VEST = _hk_struct_test.NET_ERR_SERIAL_PORT_VEST
NET_ERR_WHITE_LIST_FULL = _hk_struct_test.NET_ERR_WHITE_LIST_FULL
NET_ERR_NOT_MATCH_SOURCE = _hk_struct_test.NET_ERR_NOT_MATCH_SOURCE
NET_ERR_CLOCK_VIRTUAL_LED_FULL = _hk_struct_test.NET_ERR_CLOCK_VIRTUAL_LED_FULL
NET_ERR_MAX_WIN_SIGNAL_LOOP_NUM = _hk_struct_test.NET_ERR_MAX_WIN_SIGNAL_LOOP_NUM
NET_ERR_RESOLUTION_NO_MATCH_FRAME = _hk_struct_test.NET_ERR_RESOLUTION_NO_MATCH_FRAME
NET_ERR_NOT_UPDATE_LOW_VERSION = _hk_struct_test.NET_ERR_NOT_UPDATE_LOW_VERSION
NET_ERR_NO_CUSTOM_TO_UPDATE = _hk_struct_test.NET_ERR_NO_CUSTOM_TO_UPDATE
NET_ERR_CHAN_RESOLUTION_NOT_SUPPORT_SPLIT = _hk_struct_test.NET_ERR_CHAN_RESOLUTION_NOT_SUPPORT_SPLIT
NET_ERR_HIGH_DEFINITION_NOT_SUPPORT_SPLIT = _hk_struct_test.NET_ERR_HIGH_DEFINITION_NOT_SUPPORT_SPLIT
NET_ERR_MIRROR_IMAGE_BY_VIDEO_WALL = _hk_struct_test.NET_ERR_MIRROR_IMAGE_BY_VIDEO_WALL
NET_ERR_MAX_OSD_FONT_SIZE = _hk_struct_test.NET_ERR_MAX_OSD_FONT_SIZE
NET_ERR_HIGH_DEFINITION_NOT_SUPPORT_VIDEO_SET = _hk_struct_test.NET_ERR_HIGH_DEFINITION_NOT_SUPPORT_VIDEO_SET
NET_ERR_TILE_MODE_NOT_SUPPORT_JOINT = _hk_struct_test.NET_ERR_TILE_MODE_NOT_SUPPORT_JOINT
NET_ERR_ADD_AUDIO_MATRIX_FAILED = _hk_struct_test.NET_ERR_ADD_AUDIO_MATRIX_FAILED
NET_ERR_ONE_VIRTUAL_LED_AREA_BIND_ONE_AUDIO_AREA = _hk_struct_test.NET_ERR_ONE_VIRTUAL_LED_AREA_BIND_ONE_AUDIO_AREA
NET_ERR_NAT_NOT_MODIFY_SERVER_NETWORK_PARAM = _hk_struct_test.NET_ERR_NAT_NOT_MODIFY_SERVER_NETWORK_PARAM
NET_ERR_ORIGINAL_CHECH_DATA_ERROR = _hk_struct_test.NET_ERR_ORIGINAL_CHECH_DATA_ERROR
NET_ERR_INPUT_BOARD_SPLICED_IN_DIFFERENT_NETWORKAREAS = _hk_struct_test.NET_ERR_INPUT_BOARD_SPLICED_IN_DIFFERENT_NETWORKAREAS
NET_ERR_SPLICINGSOURCE_ONWALL_IN_DIFFERENT_NETWORKAREAS = _hk_struct_test.NET_ERR_SPLICINGSOURCE_ONWALL_IN_DIFFERENT_NETWORKAREAS
NET_ERR_ONWALL_OUTPUTBOARD_MODIFY_NETWORKAREAS = _hk_struct_test.NET_ERR_ONWALL_OUTPUTBOARD_MODIFY_NETWORKAREAS
NET_ERR_LAN_AND_WAN_CANNOT_SAME_NET_SEGMENT = _hk_struct_test.NET_ERR_LAN_AND_WAN_CANNOT_SAME_NET_SEGMENT
NET_ERR_USERNAME_REPETITIVE = _hk_struct_test.NET_ERR_USERNAME_REPETITIVE
NET_ERR_ASSOCIATED_SAMEWALL_IN_DIFFERENT_NETWORKAREAS = _hk_struct_test.NET_ERR_ASSOCIATED_SAMEWALL_IN_DIFFERENT_NETWORKAREAS
NET_ERR_BASEMAP_ROAM_IN_LED_AREA = _hk_struct_test.NET_ERR_BASEMAP_ROAM_IN_LED_AREA
NET_ERR_VIRTUAL_LED_NOT_SUPPORT_4K_OUTPUT = _hk_struct_test.NET_ERR_VIRTUAL_LED_NOT_SUPPORT_4K_OUTPUT
NET_ERR_BASEMAP_NOT_SUPPORT_4K_OUTPUT = _hk_struct_test.NET_ERR_BASEMAP_NOT_SUPPORT_4K_OUTPUT
NET_ERR_MIN_BLOCK_IN_VIRTUAL_LED_AND_OUTPUT = _hk_struct_test.NET_ERR_MIN_BLOCK_IN_VIRTUAL_LED_AND_OUTPUT
NET_ERR_485FIlE_VERSION_INVALID = _hk_struct_test.NET_ERR_485FIlE_VERSION_INVALID
NET_ERR_485FIlE_CHECK_ERROR = _hk_struct_test.NET_ERR_485FIlE_CHECK_ERROR
NET_ERR_485FIlE_ABNORMAL_SIZE = _hk_struct_test.NET_ERR_485FIlE_ABNORMAL_SIZE
NET_ERR_MODIFY_SUBBOARD_NETCFG_IN_NAT = _hk_struct_test.NET_ERR_MODIFY_SUBBOARD_NETCFG_IN_NAT
NET_ERR_OSD_CONTENT_WITH_ILLEGAL_CHARACTERS = _hk_struct_test.NET_ERR_OSD_CONTENT_WITH_ILLEGAL_CHARACTERS
NET_ERR_NON_SLAVE_DEVICE_INSERT_SYNC_LINE = _hk_struct_test.NET_ERR_NON_SLAVE_DEVICE_INSERT_SYNC_LINE
NET_ERR_PLT_USERID = _hk_struct_test.NET_ERR_PLT_USERID
NET_ERR_TRANS_CHAN_START = _hk_struct_test.NET_ERR_TRANS_CHAN_START
NET_ERR_DEV_UPGRADING = _hk_struct_test.NET_ERR_DEV_UPGRADING
NET_ERR_MISMATCH_UPGRADE_PACK_TYPE = _hk_struct_test.NET_ERR_MISMATCH_UPGRADE_PACK_TYPE
NET_ERR_DEV_FORMATTING = _hk_struct_test.NET_ERR_DEV_FORMATTING
NET_ERR_MISMATCH_UPGRADE_PACK_VERSION = _hk_struct_test.NET_ERR_MISMATCH_UPGRADE_PACK_VERSION
NET_ERR_PT_LOCKED = _hk_struct_test.NET_ERR_PT_LOCKED
NET_DVR_LOGO_OVERLAY_WITHOUT_UPLOAD_PIC = _hk_struct_test.NET_DVR_LOGO_OVERLAY_WITHOUT_UPLOAD_PIC
NET_DVR_ERR_ILLEGAL_VERIFICATION_CODE = _hk_struct_test.NET_DVR_ERR_ILLEGAL_VERIFICATION_CODE
NET_DVR_ERR_LACK_VERIFICATION_CODE = _hk_struct_test.NET_DVR_ERR_LACK_VERIFICATION_CODE
NET_DVR_ERR_FORBIDDEN_IP = _hk_struct_test.NET_DVR_ERR_FORBIDDEN_IP
NET_DVR_ERR_UNLOCKPTZ = _hk_struct_test.NET_DVR_ERR_UNLOCKPTZ
NET_DVR_ERR_COUNTAREA_LARGE = _hk_struct_test.NET_DVR_ERR_COUNTAREA_LARGE
NET_DVR_ERR_LABEL_ID_EXCEED = _hk_struct_test.NET_DVR_ERR_LABEL_ID_EXCEED
NET_DVR_ERR_LABEL_TYPE = _hk_struct_test.NET_DVR_ERR_LABEL_TYPE
NET_DVR_ERR_LABEL_FULL = _hk_struct_test.NET_DVR_ERR_LABEL_FULL
NET_DVR_ERR_LABEL_DISABLED = _hk_struct_test.NET_DVR_ERR_LABEL_DISABLED
NET_DVR_ERR_DOME_PT_TRANS_TO_DOME_XY = _hk_struct_test.NET_DVR_ERR_DOME_PT_TRANS_TO_DOME_XY
NET_DVR_ERR_DOME_PT_TRANS_TO_PANORAMA_XY = _hk_struct_test.NET_DVR_ERR_DOME_PT_TRANS_TO_PANORAMA_XY
NET_DVR_ERR_PANORAMA_XY_TRANS_TO_DOME_PT = _hk_struct_test.NET_DVR_ERR_PANORAMA_XY_TRANS_TO_DOME_PT
NET_DVR_ERR_SCENE_DUR_TIME_LESS_THAN_INTERV_TIME = _hk_struct_test.NET_DVR_ERR_SCENE_DUR_TIME_LESS_THAN_INTERV_TIME
NET_DVR_ERR_HTTP_BKN_EXCEED_ONE = _hk_struct_test.NET_DVR_ERR_HTTP_BKN_EXCEED_ONE
NET_DVR_ERR_DELETING_FAILED_TURN_OFF_HTTPS_ESDK_WEBSOCKETS_FIRST = _hk_struct_test.NET_DVR_ERR_DELETING_FAILED_TURN_OFF_HTTPS_ESDK_WEBSOCKETS_FIRST
NET_DVR_ERR_DELETING_FAILED_TURN_OFF_HTTPS_ESDK_FIRST = _hk_struct_test.NET_DVR_ERR_DELETING_FAILED_TURN_OFF_HTTPS_ESDK_FIRST
NET_DVR_ERR_PTZ_OCCUPIED_PRIORITY = _hk_struct_test.NET_DVR_ERR_PTZ_OCCUPIED_PRIORITY
NET_DVR_ERR_INCORRECT_VIDEOAUDIO_ID = _hk_struct_test.NET_DVR_ERR_INCORRECT_VIDEOAUDIO_ID
NET_DVR_ERR_REPETITIONTIME_OVER_MAXIMUM = _hk_struct_test.NET_DVR_ERR_REPETITIONTIME_OVER_MAXIMUM
NET_DVR_ERR_FORMATTING_FAILED = _hk_struct_test.NET_DVR_ERR_FORMATTING_FAILED
NET_DVR_ERR_ENCRYPTED_FORMATTING_FAILED = _hk_struct_test.NET_DVR_ERR_ENCRYPTED_FORMATTING_FAILED
NET_DVR_ERR_WRONG_PASSWORD = _hk_struct_test.NET_DVR_ERR_WRONG_PASSWORD
NET_DVR_ERR_EXPOSURE_SYNC = _hk_struct_test.NET_DVR_ERR_EXPOSURE_SYNC
NET_ERR_SEARCHING_MODULE = _hk_struct_test.NET_ERR_SEARCHING_MODULE
NET_ERR_REGISTERING_MODULE = _hk_struct_test.NET_ERR_REGISTERING_MODULE
NET_ERR_GETTING_ZONES = _hk_struct_test.NET_ERR_GETTING_ZONES
NET_ERR_GETTING_TRIGGERS = _hk_struct_test.NET_ERR_GETTING_TRIGGERS
NET_ERR_ARMED_STATUS = _hk_struct_test.NET_ERR_ARMED_STATUS
NET_ERR_PROGRAM_MODE_STATUS = _hk_struct_test.NET_ERR_PROGRAM_MODE_STATUS
NET_ERR_WALK_TEST_MODE_STATUS = _hk_struct_test.NET_ERR_WALK_TEST_MODE_STATUS
NET_ERR_BYPASS_STATUS = _hk_struct_test.NET_ERR_BYPASS_STATUS
NET_ERR_DISABLED_MODULE_STATUS = _hk_struct_test.NET_ERR_DISABLED_MODULE_STATUS
NET_ERR_NOT_SUPPORT_OPERATE_ZONE = _hk_struct_test.NET_ERR_NOT_SUPPORT_OPERATE_ZONE
NET_ERR_NOT_SUPPORT_MOD_MODULE_ADDR = _hk_struct_test.NET_ERR_NOT_SUPPORT_MOD_MODULE_ADDR
NET_ERR_UNREGISTERED_MODULE = _hk_struct_test.NET_ERR_UNREGISTERED_MODULE
NET_ERR_PUBLIC_SUBSYSTEM_ASSOCIATE_SELF = _hk_struct_test.NET_ERR_PUBLIC_SUBSYSTEM_ASSOCIATE_SELF
NET_ERR_EXCEEDS_ASSOCIATE_SUBSYSTEM_NUM = _hk_struct_test.NET_ERR_EXCEEDS_ASSOCIATE_SUBSYSTEM_NUM
NET_ERR_BE_ASSOCIATED_BY_PUBLIC_SUBSYSTEM = _hk_struct_test.NET_ERR_BE_ASSOCIATED_BY_PUBLIC_SUBSYSTEM
NET_ERR_ZONE_FAULT_STATUS = _hk_struct_test.NET_ERR_ZONE_FAULT_STATUS
NET_ERR_SAME_EVENT_TYPE = _hk_struct_test.NET_ERR_SAME_EVENT_TYPE
NET_ERR_ZONE_ALARM_STATUS = _hk_struct_test.NET_ERR_ZONE_ALARM_STATUS
NET_ERR_EXPANSION_BUS_SHORT_CIRCUIT = _hk_struct_test.NET_ERR_EXPANSION_BUS_SHORT_CIRCUIT
NET_ERR_PWD_CONFLICT = _hk_struct_test.NET_ERR_PWD_CONFLICT
NET_ERR_DETECTOR_GISTERED_BY_OTHER_ZONE = _hk_struct_test.NET_ERR_DETECTOR_GISTERED_BY_OTHER_ZONE
NET_ERR_DETECTOR_GISTERED_BY_OTHER_PU = _hk_struct_test.NET_ERR_DETECTOR_GISTERED_BY_OTHER_PU
NET_ERR_DETECTOR_DISCONNECT = _hk_struct_test.NET_ERR_DETECTOR_DISCONNECT
NET_ERR_CALL_BUSY = _hk_struct_test.NET_ERR_CALL_BUSY
NET_DVR_ERR_ZONE_TAMPER_STAUS = _hk_struct_test.NET_DVR_ERR_ZONE_TAMPER_STAUS
NET_DVR_ERR_WIRELESS_DEV_REGISTER = _hk_struct_test.NET_DVR_ERR_WIRELESS_DEV_REGISTER
NET_DVR_ERR_WIRELESS_DEV_ADDED = _hk_struct_test.NET_DVR_ERR_WIRELESS_DEV_ADDED
NET_DVR_ERR_WIRELESS_DEV_OFFLINE = _hk_struct_test.NET_DVR_ERR_WIRELESS_DEV_OFFLINE
NET_DVR_ERR_WIRELESS_DEV_TAMPER_STATUS = _hk_struct_test.NET_DVR_ERR_WIRELESS_DEV_TAMPER_STATUS
NET_DVR_ERR_GPRS_PHONE_CONFLICT = _hk_struct_test.NET_DVR_ERR_GPRS_PHONE_CONFLICT
NET_ERR_GET_ALL_RETURN_OVER = _hk_struct_test.NET_ERR_GET_ALL_RETURN_OVER
NET_ERR_RESOURCE_USING = _hk_struct_test.NET_ERR_RESOURCE_USING
NET_ERR_FILE_SIZE_OVERLIMIT = _hk_struct_test.NET_ERR_FILE_SIZE_OVERLIMIT
NET_ERR_MATERIAL_NAME = _hk_struct_test.NET_ERR_MATERIAL_NAME
NET_ERR_MATERIAL_NAME_LEN = _hk_struct_test.NET_ERR_MATERIAL_NAME_LEN
NET_ERR_MATERIAL_REMARK = _hk_struct_test.NET_ERR_MATERIAL_REMARK
NET_ERR_MATERIAL_REMARK_LEN = _hk_struct_test.NET_ERR_MATERIAL_REMARK_LEN
NET_ERR_MATERIAL_SHARE_PROPERTY = _hk_struct_test.NET_ERR_MATERIAL_SHARE_PROPERTY
NET_ERR_UNSUPPORT_MATERIAL_TYPE = _hk_struct_test.NET_ERR_UNSUPPORT_MATERIAL_TYPE
NET_ERR_MATERIAL_NOT_EXIST = _hk_struct_test.NET_ERR_MATERIAL_NOT_EXIST
NET_ERR_READ_FROM_DISK = _hk_struct_test.NET_ERR_READ_FROM_DISK
NET_ERR_WRITE_TO_DISK = _hk_struct_test.NET_ERR_WRITE_TO_DISK
NET_ERR_WRITE_DATA_BASE = _hk_struct_test.NET_ERR_WRITE_DATA_BASE
NET_ERR_NO_APPROVED_NOT_EXPORT = _hk_struct_test.NET_ERR_NO_APPROVED_NOT_EXPORT
NET_ERR_MATERIAL_EXCEPTION = _hk_struct_test.NET_ERR_MATERIAL_EXCEPTION
NET_ERR_NO_MISINFO = _hk_struct_test.NET_ERR_NO_MISINFO
NET_ERR_MAX_SCREEN_CTRL_NUM = _hk_struct_test.NET_ERR_MAX_SCREEN_CTRL_NUM
NET_ERR_FILE_NOT_EXIST = _hk_struct_test.NET_ERR_FILE_NOT_EXIST
NET_ERR_THUMBNAIL_NOT_EXIST = _hk_struct_test.NET_ERR_THUMBNAIL_NOT_EXIST
NET_ERR_DEV_OPEN_FILE_FAIL = _hk_struct_test.NET_ERR_DEV_OPEN_FILE_FAIL
NET_ERR_SERVER_READ_FILE_FAIL = _hk_struct_test.NET_ERR_SERVER_READ_FILE_FAIL
NET_ERR_FILE_SIZE = _hk_struct_test.NET_ERR_FILE_SIZE
NET_ERR_FILE_NAME = _hk_struct_test.NET_ERR_FILE_NAME
NET_ERR_BROADCAST_BUSY = _hk_struct_test.NET_ERR_BROADCAST_BUSY
NET_DVR_ERR_LANENUM_EXCEED = _hk_struct_test.NET_DVR_ERR_LANENUM_EXCEED
NET_DVR_ERR_PRAREA_EXCEED = _hk_struct_test.NET_DVR_ERR_PRAREA_EXCEED
NET_DVR_ERR_LIGHT_PARAM = _hk_struct_test.NET_DVR_ERR_LIGHT_PARAM
NET_DVR_ERR_LANE_LINE_INVALID = _hk_struct_test.NET_DVR_ERR_LANE_LINE_INVALID
NET_DVR_ERR_STOP_LINE_INVALID = _hk_struct_test.NET_DVR_ERR_STOP_LINE_INVALID
NET_DVR_ERR_LEFTORRIGHT_LINE_INVALID = _hk_struct_test.NET_DVR_ERR_LEFTORRIGHT_LINE_INVALID
NET_DVR_ERR_LANE_NO_REPEAT = _hk_struct_test.NET_DVR_ERR_LANE_NO_REPEAT
NET_DVR_ERR_PRAREA_INVALID = _hk_struct_test.NET_DVR_ERR_PRAREA_INVALID
NET_DVR_ERR_LIGHT_NUM_EXCEED = _hk_struct_test.NET_DVR_ERR_LIGHT_NUM_EXCEED
NET_DVR_ERR_SUBLIGHT_NUM_INVALID = _hk_struct_test.NET_DVR_ERR_SUBLIGHT_NUM_INVALID
NET_DVR_ERR_LIGHT_AREASIZE_INVALID = _hk_struct_test.NET_DVR_ERR_LIGHT_AREASIZE_INVALID
NET_DVR_ERR_LIGHT_COLOR_INVALID = _hk_struct_test.NET_DVR_ERR_LIGHT_COLOR_INVALID
NET_DVR_ERR_LIGHT_DIRECTION_INVALID = _hk_struct_test.NET_DVR_ERR_LIGHT_DIRECTION_INVALID
NET_DVR_ERR_LACK_IOABLITY = _hk_struct_test.NET_DVR_ERR_LACK_IOABLITY
NET_DVR_ERR_FTP_PORT = _hk_struct_test.NET_DVR_ERR_FTP_PORT
NET_DVR_ERR_FTP_CATALOGUE = _hk_struct_test.NET_DVR_ERR_FTP_CATALOGUE
NET_DVR_ERR_FTP_UPLOAD_TYPE = _hk_struct_test.NET_DVR_ERR_FTP_UPLOAD_TYPE
NET_DVR_ERR_FLASH_PARAM_WRITE = _hk_struct_test.NET_DVR_ERR_FLASH_PARAM_WRITE
NET_DVR_ERR_FLASH_PARAM_READ = _hk_struct_test.NET_DVR_ERR_FLASH_PARAM_READ
NET_DVR_ERR_PICNAME_DELIMITER = _hk_struct_test.NET_DVR_ERR_PICNAME_DELIMITER
NET_DVR_ERR_PICNAME_ITEM = _hk_struct_test.NET_DVR_ERR_PICNAME_ITEM
NET_DVR_ERR_PLATE_RECOGNIZE_TYPE = _hk_struct_test.NET_DVR_ERR_PLATE_RECOGNIZE_TYPE
NET_DVR_ERR_CAPTURE_TIMES = _hk_struct_test.NET_DVR_ERR_CAPTURE_TIMES
NET_DVR_ERR_LOOP_DISTANCE = _hk_struct_test.NET_DVR_ERR_LOOP_DISTANCE
NET_DVR_ERR_LOOP_INPUT_STATUS = _hk_struct_test.NET_DVR_ERR_LOOP_INPUT_STATUS
NET_DVR_ERR_RELATE_IO_CONFLICT = _hk_struct_test.NET_DVR_ERR_RELATE_IO_CONFLICT
NET_DVR_ERR_INTERVAL_TIME = _hk_struct_test.NET_DVR_ERR_INTERVAL_TIME
NET_DVR_ERR_SIGN_SPEED = _hk_struct_test.NET_DVR_ERR_SIGN_SPEED
NET_DVR_ERR_PIC_FLIP = _hk_struct_test.NET_DVR_ERR_PIC_FLIP
NET_DVR_ERR_RELATE_LANE_NUMBER = _hk_struct_test.NET_DVR_ERR_RELATE_LANE_NUMBER
NET_DVR_ERR_TRIGGER_MODE = _hk_struct_test.NET_DVR_ERR_TRIGGER_MODE
NET_DVR_ERR_DELAY_TIME = _hk_struct_test.NET_DVR_ERR_DELAY_TIME
NET_DVR_ERR_EXCEED_RS485_COUNT = _hk_struct_test.NET_DVR_ERR_EXCEED_RS485_COUNT
NET_DVR_ERR_RADAR_TYPE = _hk_struct_test.NET_DVR_ERR_RADAR_TYPE
NET_DVR_ERR_RADAR_ANGLE = _hk_struct_test.NET_DVR_ERR_RADAR_ANGLE
NET_DVR_ERR_RADAR_SPEED_VALID_TIME = _hk_struct_test.NET_DVR_ERR_RADAR_SPEED_VALID_TIME
NET_DVR_ERR_RADAR_LINE_CORRECT = _hk_struct_test.NET_DVR_ERR_RADAR_LINE_CORRECT
NET_DVR_ERR_RADAR_CONST_CORRECT = _hk_struct_test.NET_DVR_ERR_RADAR_CONST_CORRECT
NET_DVR_ERR_RECORD_PARAM = _hk_struct_test.NET_DVR_ERR_RECORD_PARAM
NET_DVR_ERR_LIGHT_WITHOUT_COLOR_AND_DIRECTION = _hk_struct_test.NET_DVR_ERR_LIGHT_WITHOUT_COLOR_AND_DIRECTION
NET_DVR_ERR_LIGHT_WITHOUT_DETECTION_REGION = _hk_struct_test.NET_DVR_ERR_LIGHT_WITHOUT_DETECTION_REGION
NET_DVR_ERR_RECOGNIZE_PROVINCE_PARAM = _hk_struct_test.NET_DVR_ERR_RECOGNIZE_PROVINCE_PARAM
NET_DVR_ERR_SPEED_TIMEOUT = _hk_struct_test.NET_DVR_ERR_SPEED_TIMEOUT
NET_DVR_ERR_NTP_TIMEZONE = _hk_struct_test.NET_DVR_ERR_NTP_TIMEZONE
NET_DVR_ERR_NTP_INTERVAL_TIME = _hk_struct_test.NET_DVR_ERR_NTP_INTERVAL_TIME
NET_DVR_ERR_NETWORK_CARD_NUM = _hk_struct_test.NET_DVR_ERR_NETWORK_CARD_NUM
NET_DVR_ERR_DEFAULT_ROUTE = _hk_struct_test.NET_DVR_ERR_DEFAULT_ROUTE
NET_DVR_ERR_BONDING_WORK_MODE = _hk_struct_test.NET_DVR_ERR_BONDING_WORK_MODE
NET_DVR_ERR_SLAVE_CARD = _hk_struct_test.NET_DVR_ERR_SLAVE_CARD
NET_DVR_ERR_PRIMARY_CARD = _hk_struct_test.NET_DVR_ERR_PRIMARY_CARD
NET_DVR_ERR_DHCP_PPOE_WORK = _hk_struct_test.NET_DVR_ERR_DHCP_PPOE_WORK
NET_DVR_ERR_NET_INTERFACE = _hk_struct_test.NET_DVR_ERR_NET_INTERFACE
NET_DVR_ERR_MTU = _hk_struct_test.NET_DVR_ERR_MTU
NET_DVR_ERR_NETMASK = _hk_struct_test.NET_DVR_ERR_NETMASK
NET_DVR_ERR_IP_INVALID = _hk_struct_test.NET_DVR_ERR_IP_INVALID
NET_DVR_ERR_MULTICAST_IP_INVALID = _hk_struct_test.NET_DVR_ERR_MULTICAST_IP_INVALID
NET_DVR_ERR_GATEWAY_INVALID = _hk_struct_test.NET_DVR_ERR_GATEWAY_INVALID
NET_DVR_ERR_DNS_INVALID = _hk_struct_test.NET_DVR_ERR_DNS_INVALID
NET_DVR_ERR_ALARMHOST_IP_INVALID = _hk_struct_test.NET_DVR_ERR_ALARMHOST_IP_INVALID
NET_DVR_ERR_IP_CONFLICT = _hk_struct_test.NET_DVR_ERR_IP_CONFLICT
NET_DVR_ERR_NETWORK_SEGMENT = _hk_struct_test.NET_DVR_ERR_NETWORK_SEGMENT
NET_DVR_ERR_NETPORT = _hk_struct_test.NET_DVR_ERR_NETPORT
NET_DVR_ERR_PPPOE_NOSUPPORT = _hk_struct_test.NET_DVR_ERR_PPPOE_NOSUPPORT
NET_DVR_ERR_DOMAINNAME_NOSUPPORT = _hk_struct_test.NET_DVR_ERR_DOMAINNAME_NOSUPPORT
NET_DVR_ERR_NO_SPEED = _hk_struct_test.NET_DVR_ERR_NO_SPEED
NET_DVR_ERR_IOSTATUS_INVALID = _hk_struct_test.NET_DVR_ERR_IOSTATUS_INVALID
NET_DVR_ERR_BURST_INTERVAL_INVALID = _hk_struct_test.NET_DVR_ERR_BURST_INTERVAL_INVALID
NET_DVR_ERR_RESERVE_MODE = _hk_struct_test.NET_DVR_ERR_RESERVE_MODE
NET_DVR_ERR_LANE_NO = _hk_struct_test.NET_DVR_ERR_LANE_NO
NET_DVR_ERR_COIL_AREA_TYPE = _hk_struct_test.NET_DVR_ERR_COIL_AREA_TYPE
NET_DVR_ERR_TRIGGER_AREA_PARAM = _hk_struct_test.NET_DVR_ERR_TRIGGER_AREA_PARAM
NET_DVR_ERR_SPEED_LIMIT_PARAM = _hk_struct_test.NET_DVR_ERR_SPEED_LIMIT_PARAM
NET_DVR_ERR_LANE_PROTOCOL_TYPE = _hk_struct_test.NET_DVR_ERR_LANE_PROTOCOL_TYPE
NET_DVR_ERR_INTERVAL_TYPE = _hk_struct_test.NET_DVR_ERR_INTERVAL_TYPE
NET_DVR_ERR_INTERVAL_DISTANCE = _hk_struct_test.NET_DVR_ERR_INTERVAL_DISTANCE
NET_DVR_ERR_RS485_ASSOCIATE_DEVTYPE = _hk_struct_test.NET_DVR_ERR_RS485_ASSOCIATE_DEVTYPE
NET_DVR_ERR_RS485_ASSOCIATE_LANENO = _hk_struct_test.NET_DVR_ERR_RS485_ASSOCIATE_LANENO
NET_DVR_ERR_LANENO_ASSOCIATE_MULTIRS485 = _hk_struct_test.NET_DVR_ERR_LANENO_ASSOCIATE_MULTIRS485
NET_DVR_ERR_LIGHT_DETECTION_REGION = _hk_struct_test.NET_DVR_ERR_LIGHT_DETECTION_REGION
NET_DVR_ERR_DN2D_NOSUPPORT = _hk_struct_test.NET_DVR_ERR_DN2D_NOSUPPORT
NET_DVR_ERR_IRISMODE_NOSUPPORT = _hk_struct_test.NET_DVR_ERR_IRISMODE_NOSUPPORT
NET_DVR_ERR_WB_NOSUPPORT = _hk_struct_test.NET_DVR_ERR_WB_NOSUPPORT
NET_DVR_ERR_IO_EFFECTIVENESS = _hk_struct_test.NET_DVR_ERR_IO_EFFECTIVENESS
NET_DVR_ERR_LIGHTNO_MAX = _hk_struct_test.NET_DVR_ERR_LIGHTNO_MAX
NET_DVR_ERR_LIGHTNO_CONFLICT = _hk_struct_test.NET_DVR_ERR_LIGHTNO_CONFLICT
NET_DVR_ERR_CANCEL_LINE = _hk_struct_test.NET_DVR_ERR_CANCEL_LINE
NET_DVR_ERR_STOP_LINE = _hk_struct_test.NET_DVR_ERR_STOP_LINE
NET_DVR_ERR_RUSH_REDLIGHT_LINE = _hk_struct_test.NET_DVR_ERR_RUSH_REDLIGHT_LINE
NET_DVR_ERR_IOOUTNO_MAX = _hk_struct_test.NET_DVR_ERR_IOOUTNO_MAX
NET_DVR_ERR_IOOUTNO_AHEADTIME_MAX = _hk_struct_test.NET_DVR_ERR_IOOUTNO_AHEADTIME_MAX
NET_DVR_ERR_IOOUTNO_IOWORKTIME = _hk_struct_test.NET_DVR_ERR_IOOUTNO_IOWORKTIME
NET_DVR_ERR_IOOUTNO_FREQMULTI = _hk_struct_test.NET_DVR_ERR_IOOUTNO_FREQMULTI
NET_DVR_ERR_IOOUTNO_DUTYRATE = _hk_struct_test.NET_DVR_ERR_IOOUTNO_DUTYRATE
NET_DVR_ERR_VIDEO_WITH_EXPOSURE = _hk_struct_test.NET_DVR_ERR_VIDEO_WITH_EXPOSURE
NET_DVR_ERR_PLATE_BRIGHTNESS_WITHOUT_FLASHDET = _hk_struct_test.NET_DVR_ERR_PLATE_BRIGHTNESS_WITHOUT_FLASHDET
NET_DVR_ERR_RECOGNIZE_TYPE_PARAM = _hk_struct_test.NET_DVR_ERR_RECOGNIZE_TYPE_PARAM
NET_DVR_ERR_PALTE_RECOGNIZE_AREA_PARAM = _hk_struct_test.NET_DVR_ERR_PALTE_RECOGNIZE_AREA_PARAM
NET_DVR_ERR_PORT_CONFLICT = _hk_struct_test.NET_DVR_ERR_PORT_CONFLICT
NET_DVR_ERR_LOOP_IP = _hk_struct_test.NET_DVR_ERR_LOOP_IP
NET_DVR_ERR_DRIVELINE_SENSITIVE = _hk_struct_test.NET_DVR_ERR_DRIVELINE_SENSITIVE
NET_ERR_VQD_TIME_CONFLICT = _hk_struct_test.NET_ERR_VQD_TIME_CONFLICT
NET_ERR_VQD_PLAN_NO_EXIST = _hk_struct_test.NET_ERR_VQD_PLAN_NO_EXIST
NET_ERR_VQD_CHAN_NO_EXIST = _hk_struct_test.NET_ERR_VQD_CHAN_NO_EXIST
NET_ERR_VQD_CHAN_MAX = _hk_struct_test.NET_ERR_VQD_CHAN_MAX
NET_ERR_VQD_TASK_MAX = _hk_struct_test.NET_ERR_VQD_TASK_MAX
NET_SDK_GET_INPUTSTREAMCFG = _hk_struct_test.NET_SDK_GET_INPUTSTREAMCFG
NET_SDK_AUDIO_SWITCH_CONTROL = _hk_struct_test.NET_SDK_AUDIO_SWITCH_CONTROL
NET_SDK_GET_VIDEOWALLDISPLAYNO = _hk_struct_test.NET_SDK_GET_VIDEOWALLDISPLAYNO
NET_SDK_GET_ALLSUBSYSTEM_BASIC_INFO = _hk_struct_test.NET_SDK_GET_ALLSUBSYSTEM_BASIC_INFO
NET_SDK_SET_ALLSUBSYSTEM_BASIC_INFO = _hk_struct_test.NET_SDK_SET_ALLSUBSYSTEM_BASIC_INFO
NET_SDK_GET_AUDIO_INFO = _hk_struct_test.NET_SDK_GET_AUDIO_INFO
NET_SDK_GET_MATRIX_STATUS_V50 = _hk_struct_test.NET_SDK_GET_MATRIX_STATUS_V50
NET_SDK_DELETE_MONITOR_INFO = _hk_struct_test.NET_SDK_DELETE_MONITOR_INFO
NET_SDK_DELETE_CAMERA_INFO = _hk_struct_test.NET_SDK_DELETE_CAMERA_INFO
NET_DVR_ERR_EXCEED_MAX_CAPTURE_TIMES = _hk_struct_test.NET_DVR_ERR_EXCEED_MAX_CAPTURE_TIMES
NET_DVR_ERR_REDAR_TYPE_CONFLICT = _hk_struct_test.NET_DVR_ERR_REDAR_TYPE_CONFLICT
NET_DVR_ERR_LICENSE_PLATE_NULL = _hk_struct_test.NET_DVR_ERR_LICENSE_PLATE_NULL
NET_DVR_ERR_WRITE_DATABASE = _hk_struct_test.NET_DVR_ERR_WRITE_DATABASE
NET_DVR_ERR_LICENSE_EFFECTIVE_TIME = _hk_struct_test.NET_DVR_ERR_LICENSE_EFFECTIVE_TIME
NET_DVR_ERR_PRERECORDED_STARTTIME_LONG = _hk_struct_test.NET_DVR_ERR_PRERECORDED_STARTTIME_LONG
NET_DVR_ERR_TRIGGER_RULE_LINE = _hk_struct_test.NET_DVR_ERR_TRIGGER_RULE_LINE
NET_DVR_ERR_LEFTRIGHT_TRIGGERLINE_NOTVERTICAL = _hk_struct_test.NET_DVR_ERR_LEFTRIGHT_TRIGGERLINE_NOTVERTICAL
NET_DVR_ERR_FLASH_LAMP_MODE = _hk_struct_test.NET_DVR_ERR_FLASH_LAMP_MODE
NET_DVR_ERR_ILLEGAL_SNAPSHOT_NUM = _hk_struct_test.NET_DVR_ERR_ILLEGAL_SNAPSHOT_NUM
NET_DVR_ERR_ILLEGAL_DETECTION_TYPE = _hk_struct_test.NET_DVR_ERR_ILLEGAL_DETECTION_TYPE
NET_DVR_ERR_POSITIVEBACK_TRIGGERLINE_HIGH = _hk_struct_test.NET_DVR_ERR_POSITIVEBACK_TRIGGERLINE_HIGH
NET_DVR_ERR_MIXEDMODE_CAPTYPE_ALLTARGETS = _hk_struct_test.NET_DVR_ERR_MIXEDMODE_CAPTYPE_ALLTARGETS
NET_DVR_ERR_CARSIGNSPEED_GREATERTHAN_LIMITSPEED = _hk_struct_test.NET_DVR_ERR_CARSIGNSPEED_GREATERTHAN_LIMITSPEED
NET_DVR_ERR_BIGCARSIGNSPEED_GREATERTHAN_LIMITSPEED = _hk_struct_test.NET_DVR_ERR_BIGCARSIGNSPEED_GREATERTHAN_LIMITSPEED
NET_DVR_ERR_BIGCARSIGNSPEED_GREATERTHAN_CARSIGNSPEED = _hk_struct_test.NET_DVR_ERR_BIGCARSIGNSPEED_GREATERTHAN_CARSIGNSPEED
NET_DVR_ERR_BIGCARLIMITSPEED_GREATERTHAN_CARLIMITSPEED = _hk_struct_test.NET_DVR_ERR_BIGCARLIMITSPEED_GREATERTHAN_CARLIMITSPEED
NET_DVR_ERR_BIGCARLOWSPEEDLIMIT_GREATERTHAN_CARLOWSPEEDLIMIT = _hk_struct_test.NET_DVR_ERR_BIGCARLOWSPEEDLIMIT_GREATERTHAN_CARLOWSPEEDLIMIT
NET_DVR_ERR_CARLIMITSPEED_GREATERTHAN_EXCEPHIGHSPEED = _hk_struct_test.NET_DVR_ERR_CARLIMITSPEED_GREATERTHAN_EXCEPHIGHSPEED
NET_DVR_ERR_BIGCARLIMITSPEED_GREATERTHAN_EXCEPHIGHSPEED = _hk_struct_test.NET_DVR_ERR_BIGCARLIMITSPEED_GREATERTHAN_EXCEPHIGHSPEED
NET_DVR_ERR_STOPLINE_MORETHAN_TRIGGERLINE = _hk_struct_test.NET_DVR_ERR_STOPLINE_MORETHAN_TRIGGERLINE
NET_DVR_ERR_YELLOWLIGHTTIME_INVALID = _hk_struct_test.NET_DVR_ERR_YELLOWLIGHTTIME_INVALID
NET_DVR_ERR_TRIGGERLINE1_FOR_NOT_YIELD_TO_PEDESTRIAN_CANNOT_EXCEED_TRIGGERLINE2 = _hk_struct_test.NET_DVR_ERR_TRIGGERLINE1_FOR_NOT_YIELD_TO_PEDESTRIAN_CANNOT_EXCEED_TRIGGERLINE2
NET_DVR_ERR_TRIGGERLINE2_FOR_NOT_YIELD_TO_PEDESTRIAN_CANNOT_EXCEED_TRIGGERLINE1 = _hk_struct_test.NET_DVR_ERR_TRIGGERLINE2_FOR_NOT_YIELD_TO_PEDESTRIAN_CANNOT_EXCEED_TRIGGERLINE1
NET_ERR_TIME_OVERLAP = _hk_struct_test.NET_ERR_TIME_OVERLAP
NET_ERR_HOLIDAY_PLAN_OVERLAP = _hk_struct_test.NET_ERR_HOLIDAY_PLAN_OVERLAP
NET_ERR_CARDNO_NOT_SORT = _hk_struct_test.NET_ERR_CARDNO_NOT_SORT
NET_ERR_CARDNO_NOT_EXIST = _hk_struct_test.NET_ERR_CARDNO_NOT_EXIST
NET_ERR_ILLEGAL_CARDNO = _hk_struct_test.NET_ERR_ILLEGAL_CARDNO
NET_ERR_ZONE_ALARM = _hk_struct_test.NET_ERR_ZONE_ALARM
NET_ERR_ZONE_OPERATION_NOT_SUPPORT = _hk_struct_test.NET_ERR_ZONE_OPERATION_NOT_SUPPORT
NET_ERR_INTERLOCK_ANTI_CONFLICT = _hk_struct_test.NET_ERR_INTERLOCK_ANTI_CONFLICT
NET_ERR_DEVICE_CARD_FULL = _hk_struct_test.NET_ERR_DEVICE_CARD_FULL
NET_ERR_HOLIDAY_GROUP_DOWNLOAD = _hk_struct_test.NET_ERR_HOLIDAY_GROUP_DOWNLOAD
NET_ERR_LOCAL_CONTROL_OFF = _hk_struct_test.NET_ERR_LOCAL_CONTROL_OFF
NET_ERR_LOCAL_CONTROL_DISADD = _hk_struct_test.NET_ERR_LOCAL_CONTROL_DISADD
NET_ERR_LOCAL_CONTROL_HASADD = _hk_struct_test.NET_ERR_LOCAL_CONTROL_HASADD
NET_ERR_LOCAL_CONTROL_DOORNO_CONFLICT = _hk_struct_test.NET_ERR_LOCAL_CONTROL_DOORNO_CONFLICT
NET_ERR_LOCAL_CONTROL_COMMUNICATION_FAIL = _hk_struct_test.NET_ERR_LOCAL_CONTROL_COMMUNICATION_FAIL
NET_ERR_OPERAND_INEXISTENCE = _hk_struct_test.NET_ERR_OPERAND_INEXISTENCE
NET_ERR_LOCAL_CONTROL_OVER_LIMIT = _hk_struct_test.NET_ERR_LOCAL_CONTROL_OVER_LIMIT
NET_ERR_DOOR_OVER_LIMIT = _hk_struct_test.NET_ERR_DOOR_OVER_LIMIT
NET_ERR_ALARM_OVER_LIMIT = _hk_struct_test.NET_ERR_ALARM_OVER_LIMIT
NET_ERR_LOCAL_CONTROL_ADDRESS_INCONFORMITY_TYPE = _hk_struct_test.NET_ERR_LOCAL_CONTROL_ADDRESS_INCONFORMITY_TYPE
NET_ERR_NOT_SUPPORT_ONE_MORE_CARD = _hk_struct_test.NET_ERR_NOT_SUPPORT_ONE_MORE_CARD
NET_ERR_DELETE_NO_EXISTENCE_FACE = _hk_struct_test.NET_ERR_DELETE_NO_EXISTENCE_FACE
NET_ERR_DOOR_SPECIAL_PASSWORD_REPEAT = _hk_struct_test.NET_ERR_DOOR_SPECIAL_PASSWORD_REPEAT
NET_ERR_AUTH_CODE_REPEAT = _hk_struct_test.NET_ERR_AUTH_CODE_REPEAT
NET_ERR_DEPLOY_EXCEED_MAX = _hk_struct_test.NET_ERR_DEPLOY_EXCEED_MAX
NET_ERR_NOT_SUPPORT_DEL_FP_BY_ID = _hk_struct_test.NET_ERR_NOT_SUPPORT_DEL_FP_BY_ID
NET_ERR_TIME_RANGE = _hk_struct_test.NET_ERR_TIME_RANGE
NET_ERR_CAPTURE_TIMEOUT = _hk_struct_test.NET_ERR_CAPTURE_TIMEOUT
NET_ERR_LOW_SCORE = _hk_struct_test.NET_ERR_LOW_SCORE
NET_ERR_OFFLINE_CAPTURING = _hk_struct_test.NET_ERR_OFFLINE_CAPTURING
NET_DVR_ERR_OUTDOOR_COMMUNICATION = _hk_struct_test.NET_DVR_ERR_OUTDOOR_COMMUNICATION
NET_DVR_ERR_ROOMNO_UNDEFINED = _hk_struct_test.NET_DVR_ERR_ROOMNO_UNDEFINED
NET_DVR_ERR_NO_CALLING = _hk_struct_test.NET_DVR_ERR_NO_CALLING
NET_DVR_ERR_RINGING = _hk_struct_test.NET_DVR_ERR_RINGING
NET_DVR_ERR_IS_CALLING_NOW = _hk_struct_test.NET_DVR_ERR_IS_CALLING_NOW
NET_DVR_ERR_LOCK_PASSWORD_WRONG = _hk_struct_test.NET_DVR_ERR_LOCK_PASSWORD_WRONG
NET_DVR_ERR_CONTROL_LOCK_FAILURE = _hk_struct_test.NET_DVR_ERR_CONTROL_LOCK_FAILURE
NET_DVR_ERR_CONTROL_LOCK_OVERTIME = _hk_struct_test.NET_DVR_ERR_CONTROL_LOCK_OVERTIME
NET_DVR_ERR_LOCK_DEVICE_BUSY = _hk_struct_test.NET_DVR_ERR_LOCK_DEVICE_BUSY
NET_DVR_ERR_UNOPEN_REMOTE_LOCK_FUNCTION = _hk_struct_test.NET_DVR_ERR_UNOPEN_REMOTE_LOCK_FUNCTION
NET_DVR_ERR_FILE_NOT_COMPLETE = _hk_struct_test.NET_DVR_ERR_FILE_NOT_COMPLETE
NET_DVR_ERR_IPC_EXIST = _hk_struct_test.NET_DVR_ERR_IPC_EXIST
NET_DVR_ERR_ADD_IPC = _hk_struct_test.NET_DVR_ERR_ADD_IPC
NET_DVR_ERR_OUT_OF_RES = _hk_struct_test.NET_DVR_ERR_OUT_OF_RES
NET_DVR_ERR_CONFLICT_TO_LOCALIP = _hk_struct_test.NET_DVR_ERR_CONFLICT_TO_LOCALIP
NET_DVR_ERR_IP_SET = _hk_struct_test.NET_DVR_ERR_IP_SET
NET_DVR_ERR_PORT_SET = _hk_struct_test.NET_DVR_ERR_PORT_SET
NET_ERR_WAN_NOTSUPPORT = _hk_struct_test.NET_ERR_WAN_NOTSUPPORT
NET_ERR_MUTEX_FUNCTION = _hk_struct_test.NET_ERR_MUTEX_FUNCTION
NET_ERR_QUESTION_CONFIGNUM = _hk_struct_test.NET_ERR_QUESTION_CONFIGNUM
NET_ERR_FACECHAN_NORESOURCE = _hk_struct_test.NET_ERR_FACECHAN_NORESOURCE
NET_ERR_DATA_CALLBACK = _hk_struct_test.NET_ERR_DATA_CALLBACK
NET_ERR_ATM_VCA_CHAN_IS_RELATED = _hk_struct_test.NET_ERR_ATM_VCA_CHAN_IS_RELATED
NET_ERR_ATM_VCA_CHAN_IS_OVERLAPED = _hk_struct_test.NET_ERR_ATM_VCA_CHAN_IS_OVERLAPED
NET_ERR_FACE_CHAN_UNOVERLAP_EACH_OTHER = _hk_struct_test.NET_ERR_FACE_CHAN_UNOVERLAP_EACH_OTHER
NET_ERR_ACHIEVE_MAX_CHANNLE_LIMIT = _hk_struct_test.NET_ERR_ACHIEVE_MAX_CHANNLE_LIMIT
NET_DVR_SMD_ENCODING_NORESOURSE = _hk_struct_test.NET_DVR_SMD_ENCODING_NORESOURSE
NET_DVR_SMD_DECODING_NORESOURSE = _hk_struct_test.NET_DVR_SMD_DECODING_NORESOURSE
NET_DVR_FACELIB_DATA_PROCESSING = _hk_struct_test.NET_DVR_FACELIB_DATA_PROCESSING
NET_DVR_ERR_LARGE_TIME_DIFFRENCE = _hk_struct_test.NET_DVR_ERR_LARGE_TIME_DIFFRENCE
NET_DVR_NO_SUPPORT_WITH_PLAYBACK = _hk_struct_test.NET_DVR_NO_SUPPORT_WITH_PLAYBACK
NET_DVR_CHANNEL_NO_SUPPORT_WITH_SMD = _hk_struct_test.NET_DVR_CHANNEL_NO_SUPPORT_WITH_SMD
NET_DVR_CHANNEL_NO_SUPPORT_WITH_FD = _hk_struct_test.NET_DVR_CHANNEL_NO_SUPPORT_WITH_FD
NET_DVR_ILLEGAL_PHONE_NUMBER = _hk_struct_test.NET_DVR_ILLEGAL_PHONE_NUMBER
NET_DVR_ILLEGAL_CERITIFICATE_NUMBER = _hk_struct_test.NET_DVR_ILLEGAL_CERITIFICATE_NUMBER
NET_DVR_ERR_CHANNEL_RESOLUTION_NO_SUPPORT = _hk_struct_test.NET_DVR_ERR_CHANNEL_RESOLUTION_NO_SUPPORT
NET_DVR_ERR_CHANNEL_COMPRESSION_NO_SUPPORT = _hk_struct_test.NET_DVR_ERR_CHANNEL_COMPRESSION_NO_SUPPORT
NET_DVR_ERR_CLUSTER_DEVICE_TOO_LESS = _hk_struct_test.NET_DVR_ERR_CLUSTER_DEVICE_TOO_LESS
NET_DVR_ERR_CLUSTER_DEL_DEVICE_CM_PLAYLOAD = _hk_struct_test.NET_DVR_ERR_CLUSTER_DEL_DEVICE_CM_PLAYLOAD
NET_DVR_ERR_CLUSTER_DEVNUM_OVER_UPPER_LIMIT = _hk_struct_test.NET_DVR_ERR_CLUSTER_DEVNUM_OVER_UPPER_LIMIT
NET_DVR_ERR_CLUSTER_DEVICE_TYPE_INCONFORMITY = _hk_struct_test.NET_DVR_ERR_CLUSTER_DEVICE_TYPE_INCONFORMITY
NET_DVR_ERR_CLUSTER_DEVICE_VERSION_INCONFORMITY = _hk_struct_test.NET_DVR_ERR_CLUSTER_DEVICE_VERSION_INCONFORMITY
NET_DVR_ERR_CLUSTER_IP_CONFLICT = _hk_struct_test.NET_DVR_ERR_CLUSTER_IP_CONFLICT
NET_DVR_ERR_CLUSTER_IP_INVALID = _hk_struct_test.NET_DVR_ERR_CLUSTER_IP_INVALID
NET_DVR_ERR_CLUSTER_PORT_CONFLICT = _hk_struct_test.NET_DVR_ERR_CLUSTER_PORT_CONFLICT
NET_DVR_ERR_CLUSTER_PORT_INVALID = _hk_struct_test.NET_DVR_ERR_CLUSTER_PORT_INVALID
NET_DVR_ERR_CLUSTER_USERNAEM_OR_PASSWORD_INVALID = _hk_struct_test.NET_DVR_ERR_CLUSTER_USERNAEM_OR_PASSWORD_INVALID
NET_DVR_ERR_CLUSTER_DEVICE_ALREADY_EXIST = _hk_struct_test.NET_DVR_ERR_CLUSTER_DEVICE_ALREADY_EXIST
NET_DVR_ERR_CLUSTER_DEVICE_NOT_EXIST = _hk_struct_test.NET_DVR_ERR_CLUSTER_DEVICE_NOT_EXIST
NET_DVR_ERR_CLUSTER_NON_CLUSTER_MODE = _hk_struct_test.NET_DVR_ERR_CLUSTER_NON_CLUSTER_MODE
NET_DVR_ERR_CLUSTER_IP_NOT_SAME_LAN = _hk_struct_test.NET_DVR_ERR_CLUSTER_IP_NOT_SAME_LAN
NET_DVR_ERR_CAPTURE_PACKAGE_FAILED = _hk_struct_test.NET_DVR_ERR_CAPTURE_PACKAGE_FAILED
NET_DVR_ERR_CAPTURE_PACKAGE_PROCESSING = _hk_struct_test.NET_DVR_ERR_CAPTURE_PACKAGE_PROCESSING
NET_DVR_ERR_SAFETY_HELMET_NO_RESOURCE = _hk_struct_test.NET_DVR_ERR_SAFETY_HELMET_NO_RESOURCE
NET_DVR_NO_SUPPORT_WITH_ABSTRACT = _hk_struct_test.NET_DVR_NO_SUPPORT_WITH_ABSTRACT
NET_DVR_ERR_TAPE_LIB_NEED_STOP_ARCHIVE = _hk_struct_test.NET_DVR_ERR_TAPE_LIB_NEED_STOP_ARCHIVE
NET_DVR_INSUFFICIENT_DEEP_LEARNING_RESOURCES = _hk_struct_test.NET_DVR_INSUFFICIENT_DEEP_LEARNING_RESOURCES
NET_DVR_ERR_IDENTITY_KEY = _hk_struct_test.NET_DVR_ERR_IDENTITY_KEY
NET_DVR_MISSING_IDENTITY_KEY = _hk_struct_test.NET_DVR_MISSING_IDENTITY_KEY
NET_DVR_NO_SUPPORT_WITH_PERSON_DENSITY_DETECT = _hk_struct_test.NET_DVR_NO_SUPPORT_WITH_PERSON_DENSITY_DETECT
NET_DVR_IPC_RESOLUTION_OVERFLOW = _hk_struct_test.NET_DVR_IPC_RESOLUTION_OVERFLOW
NET_DVR_IPC_BITRATE_OVERFLOW = _hk_struct_test.NET_DVR_IPC_BITRATE_OVERFLOW
NET_DVR_ERR_INVALID_TASKID = _hk_struct_test.NET_DVR_ERR_INVALID_TASKID
NET_DVR_PANEL_MODE_NOT_CONFIG = _hk_struct_test.NET_DVR_PANEL_MODE_NOT_CONFIG
NET_DVR_NO_HUMAN_ENGINES_RESOURCE = _hk_struct_test.NET_DVR_NO_HUMAN_ENGINES_RESOURCE
NET_DVR_ERR_TASK_NUMBER_OVERFLOW = _hk_struct_test.NET_DVR_ERR_TASK_NUMBER_OVERFLOW
NET_DVR_ERR_COLLISION_TIME_OVERFLOW = _hk_struct_test.NET_DVR_ERR_COLLISION_TIME_OVERFLOW
NET_DVR_ERR_CAPTURE_PACKAGE_NO_USB = _hk_struct_test.NET_DVR_ERR_CAPTURE_PACKAGE_NO_USB
NET_DVR_ERR_NO_SET_SECURITY_EMAIL = _hk_struct_test.NET_DVR_ERR_NO_SET_SECURITY_EMAIL
NET_DVR_ERR_EVENT_NOTSUPPORT = _hk_struct_test.NET_DVR_ERR_EVENT_NOTSUPPORT
NET_DVR_ERR_PASSWORD_FORMAT = _hk_struct_test.NET_DVR_ERR_PASSWORD_FORMAT
NET_DVR_ACCESS_FRONT_DEVICE_PARAM_FAILURE = _hk_struct_test.NET_DVR_ACCESS_FRONT_DEVICE_PARAM_FAILURE
NET_DVR_ACCESS_FRONT_DEVICE_STREAM_FAILURE = _hk_struct_test.NET_DVR_ACCESS_FRONT_DEVICE_STREAM_FAILURE
NET_DVR_ERR_USERNAME_FORMAT = _hk_struct_test.NET_DVR_ERR_USERNAME_FORMAT
NET_DVR_ERR_UNOPENED_HIGH_RESOLUTION_MODE = _hk_struct_test.NET_DVR_ERR_UNOPENED_HIGH_RESOLUTION_MODE
NET_DVR_ERR_TOO_SMALL_QUATO = _hk_struct_test.NET_DVR_ERR_TOO_SMALL_QUATO
NET_DVR_ERR_EMAIL_FORMAT = _hk_struct_test.NET_DVR_ERR_EMAIL_FORMAT
NET_DVR_ERR_SECURITY_CODE_FORMAT = _hk_struct_test.NET_DVR_ERR_SECURITY_CODE_FORMAT
NET_DVR_PD_SPACE_TOO_SMALL = _hk_struct_test.NET_DVR_PD_SPACE_TOO_SMALL
NET_DVR_PD_NUM_TOO_BIG = _hk_struct_test.NET_DVR_PD_NUM_TOO_BIG
NET_DVR_ERR_USB_IS_FULL = _hk_struct_test.NET_DVR_ERR_USB_IS_FULL
NET_DVR_EXCEED_MAX_SMD_TYPE = _hk_struct_test.NET_DVR_EXCEED_MAX_SMD_TYPE
NET_DVR_CHANNEL_NO_SUPPORT_WITH_BEHAVIOR = _hk_struct_test.NET_DVR_CHANNEL_NO_SUPPORT_WITH_BEHAVIOR
NET_DVR_NO_BEHAVIOR_ENGINES_RESOURCE = _hk_struct_test.NET_DVR_NO_BEHAVIOR_ENGINES_RESOURCE
NET_DVR_NO_RETENTION_ENGINES_RESOURCE = _hk_struct_test.NET_DVR_NO_RETENTION_ENGINES_RESOURCE
NET_DVR_NO_LEAVE_POSITION_ENGINES_RESOURCE = _hk_struct_test.NET_DVR_NO_LEAVE_POSITION_ENGINES_RESOURCE
NET_DVR_NO_PEOPLE_NUM_CHANGE_ENGINES_RESOURCE = _hk_struct_test.NET_DVR_NO_PEOPLE_NUM_CHANGE_ENGINES_RESOURCE
NET_DVR_PANEL_MODE_NUM_OVER_LIMIT = _hk_struct_test.NET_DVR_PANEL_MODE_NUM_OVER_LIMIT
NET_DVR_SURROUND_MODE_NUM_OVER_LIMIT = _hk_struct_test.NET_DVR_SURROUND_MODE_NUM_OVER_LIMIT
NET_DVR_FACE_MODE_NUM_OVER_LIMIT = _hk_struct_test.NET_DVR_FACE_MODE_NUM_OVER_LIMIT
NET_DVR_SAFETYCABIN_MODE_NUM_OVER_LIMIT = _hk_struct_test.NET_DVR_SAFETYCABIN_MODE_NUM_OVER_LIMIT
NET_DVR_DETECT_REGION_RANGE_INVALID = _hk_struct_test.NET_DVR_DETECT_REGION_RANGE_INVALID
NET_DVR_CHANNEL_CAPTURE_PICTURE_FAILURE = _hk_struct_test.NET_DVR_CHANNEL_CAPTURE_PICTURE_FAILURE
NET_DVR_VCACHAN_IS_NORESOURCE = _hk_struct_test.NET_DVR_VCACHAN_IS_NORESOURCE
NET_DVR_IPC_NUM_REACHES_LIMIT = _hk_struct_test.NET_DVR_IPC_NUM_REACHES_LIMIT
NET_DVR_IOT_NUM_REACHES_LIMIT = _hk_struct_test.NET_DVR_IOT_NUM_REACHES_LIMIT
NET_DVR_IOT_CHANNEL_DEVICE_EXIST = _hk_struct_test.NET_DVR_IOT_CHANNEL_DEVICE_EXIST
NET_DVR_IOT_CHANNEL_DEVICE_NOT_EXIST = _hk_struct_test.NET_DVR_IOT_CHANNEL_DEVICE_NOT_EXIST
NET_DVR_INVALID_IOT_PROTOCOL_TYPE = _hk_struct_test.NET_DVR_INVALID_IOT_PROTOCOL_TYPE
NET_DVR_INVALID_EZVIZ_SECRET_KEY = _hk_struct_test.NET_DVR_INVALID_EZVIZ_SECRET_KEY
NET_DVR_DUPLICATE_IOT_DEVICE = _hk_struct_test.NET_DVR_DUPLICATE_IOT_DEVICE
NET_DVR_SADP_MODIFY_FALIURE = _hk_struct_test.NET_DVR_SADP_MODIFY_FALIURE
NET_DVR_IPC_NETWORK_ABNORMAL = _hk_struct_test.NET_DVR_IPC_NETWORK_ABNORMAL
NET_DVR_IPC_PASSWORD_ERROR = _hk_struct_test.NET_DVR_IPC_PASSWORD_ERROR
NET_DVR_ERROR_IPC_TYPE = _hk_struct_test.NET_DVR_ERROR_IPC_TYPE
NET_DVR_ERROR_IPC_LIST_NOT_EMPTY = _hk_struct_test.NET_DVR_ERROR_IPC_LIST_NOT_EMPTY
NET_DVR_ERROR_IPC_LIST_NOT_MATCH_PAIRING = _hk_struct_test.NET_DVR_ERROR_IPC_LIST_NOT_MATCH_PAIRING
NET_DVR_ERROR_IPC_BAD_LANGUAGE = _hk_struct_test.NET_DVR_ERROR_IPC_BAD_LANGUAGE
NET_DVR_ERROR_IPC_IS_LOCKING = _hk_struct_test.NET_DVR_ERROR_IPC_IS_LOCKING
NET_DVR_ERROR_IPC_NOT_ACTIVATED = _hk_struct_test.NET_DVR_ERROR_IPC_NOT_ACTIVATED
NET_DVR_FIELD_CODING_NOT_SUPPORT = _hk_struct_test.NET_DVR_FIELD_CODING_NOT_SUPPORT
NET_DVR_ERROR_H323_NOT_SUPPORT_H265 = _hk_struct_test.NET_DVR_ERROR_H323_NOT_SUPPORT_H265
NET_DVR_ERROR_EXPOSURE_TIME_TOO_BIG_IN_MODE_P = _hk_struct_test.NET_DVR_ERROR_EXPOSURE_TIME_TOO_BIG_IN_MODE_P
NET_DVR_ERROR_EXPOSURE_TIME_TOO_BIG_IN_MODE_N = _hk_struct_test.NET_DVR_ERROR_EXPOSURE_TIME_TOO_BIG_IN_MODE_N
NET_DVR_ERROR_PING_PROCESSING = _hk_struct_test.NET_DVR_ERROR_PING_PROCESSING
NET_DVR_ERROR_PING_NOT_START = _hk_struct_test.NET_DVR_ERROR_PING_NOT_START
NET_DVR_ERROR_NEED_DOUBLE_VERIFICATION = _hk_struct_test.NET_DVR_ERROR_NEED_DOUBLE_VERIFICATION
NET_DVR_NO_DOUBLE_VERIFICATION_USER = _hk_struct_test.NET_DVR_NO_DOUBLE_VERIFICATION_USER
NET_DVR_CHANNEL_OFFLINE = _hk_struct_test.NET_DVR_CHANNEL_OFFLINE
NET_DVR_TIMESPAN_NUM_OVER_LIMIT = _hk_struct_test.NET_DVR_TIMESPAN_NUM_OVER_LIMIT
NET_DVR_CHANNEL_NUM_OVER_LIMIT = _hk_struct_test.NET_DVR_CHANNEL_NUM_OVER_LIMIT
NET_DVR_NO_SEARCH_ID_RESOURCE = _hk_struct_test.NET_DVR_NO_SEARCH_ID_RESOURCE
NET_DVR_ERROR_ONEKEY_EXPORT = _hk_struct_test.NET_DVR_ERROR_ONEKEY_EXPORT
NET_DVR_NO_CITY_MANAGEMENT_ENGINES_RESOURCE = _hk_struct_test.NET_DVR_NO_CITY_MANAGEMENT_ENGINES_RESOURCE
NET_DVR_NO_SITUATION_ANALYSIS_ENGINES_RESOURCE = _hk_struct_test.NET_DVR_NO_SITUATION_ANALYSIS_ENGINES_RESOURCE
NET_DVR_INTELLIGENT_ANALYSIS_IPC_CANNT_DELETE = _hk_struct_test.NET_DVR_INTELLIGENT_ANALYSIS_IPC_CANNT_DELETE
NET_DVR_NOSUPPORT_RESET_PASSWORD = _hk_struct_test.NET_DVR_NOSUPPORT_RESET_PASSWORD
NET_DVR_ERROR_IPC_NEED_ON_LAN = _hk_struct_test.NET_DVR_ERROR_IPC_NEED_ON_LAN
NET_DVR_CHANNEL_NO_SUPPORT_WITH_SAFETY_HELMET = _hk_struct_test.NET_DVR_CHANNEL_NO_SUPPORT_WITH_SAFETY_HELMET
NET_DVR_ERROR_GET_RESETPASSWORDTYPE_IS_ABNORMAL = _hk_struct_test.NET_DVR_ERROR_GET_RESETPASSWORDTYPE_IS_ABNORMAL
NET_DVR_ERROR_IPC_NOSUPPORT_RESET_PASSWORD = _hk_struct_test.NET_DVR_ERROR_IPC_NOSUPPORT_RESET_PASSWORD
NET_DVR_ERROR_IP_IS_NOT_ONLY_ONE = _hk_struct_test.NET_DVR_ERROR_IP_IS_NOT_ONLY_ONE
NET_DVR_NO_SUPPORT_WITH_SMD_OR_SCD = _hk_struct_test.NET_DVR_NO_SUPPORT_WITH_SMD_OR_SCD
NET_DVR_NO_SUPPORT_WITH_FD = _hk_struct_test.NET_DVR_NO_SUPPORT_WITH_FD
NET_DVR_NO_FD_ENGINES_RESOURCE = _hk_struct_test.NET_DVR_NO_FD_ENGINES_RESOURCE
NET_DVR_ERROR_ONEKEY_REMOVE = _hk_struct_test.NET_DVR_ERROR_ONEKEY_REMOVE
NET_DVR_FACE_PIP_BACKGROUND_CHANNEL_OVERFLOW = _hk_struct_test.NET_DVR_FACE_PIP_BACKGROUND_CHANNEL_OVERFLOW
NET_DVR_MICIN_CHANNEL_OCCUPIED = _hk_struct_test.NET_DVR_MICIN_CHANNEL_OCCUPIED
NET_DVR_IPC_CHANNEL_IS_IN_PIP = _hk_struct_test.NET_DVR_IPC_CHANNEL_IS_IN_PIP
NET_DVR_CHANNEL_NO_SUPPORT_WITH_FACE_CONTRAST = _hk_struct_test.NET_DVR_CHANNEL_NO_SUPPORT_WITH_FACE_CONTRAST
NET_DVR_INVALID_RECHARGE_CARD = _hk_struct_test.NET_DVR_INVALID_RECHARGE_CARD
NET_DVR_CLOUD_PLATFORM_SERVER_EXCEPTION = _hk_struct_test.NET_DVR_CLOUD_PLATFORM_SERVER_EXCEPTION
NET_DVR_OPERATION_FAILURE_WITHOUT_LOGIN = _hk_struct_test.NET_DVR_OPERATION_FAILURE_WITHOUT_LOGIN
NET_DVR_INVALID_ASSOCIATED_SERIAL_NUMBER = _hk_struct_test.NET_DVR_INVALID_ASSOCIATED_SERIAL_NUMBER
NET_DVR_CLOUD_PLATFORM_ACCOUNT_NOT_EXIST = _hk_struct_test.NET_DVR_CLOUD_PLATFORM_ACCOUNT_NOT_EXIST
NET_DVR_DEVICE_SERIAL_NUMBER_REGISTERED = _hk_struct_test.NET_DVR_DEVICE_SERIAL_NUMBER_REGISTERED
NET_DVR_CONFERENCE_ROOM_NOT_EXIST = _hk_struct_test.NET_DVR_CONFERENCE_ROOM_NOT_EXIST
NET_DVR_NEED_DISABLED_ANALOG_CHANNEL = _hk_struct_test.NET_DVR_NEED_DISABLED_ANALOG_CHANNEL
NET_DVR_STUDENT_ROLL_CALL_FAILURE = _hk_struct_test.NET_DVR_STUDENT_ROLL_CALL_FAILURE
NET_DVR_SUB_DEVICE_NOT_ENABLE_INDIVIDUAL_BEHAVIOR = _hk_struct_test.NET_DVR_SUB_DEVICE_NOT_ENABLE_INDIVIDUAL_BEHAVIOR
NET_DVR_SUB_DEVICE_CHANNEL_CONTROL_FAILED = _hk_struct_test.NET_DVR_SUB_DEVICE_CHANNEL_CONTROL_FAILED
NET_DVR_DEVICE_NOT_IN_CONFERENCE = _hk_struct_test.NET_DVR_DEVICE_NOT_IN_CONFERENCE
NET_DVR_ALREADY_EXIST_CONFERENCE = _hk_struct_test.NET_DVR_ALREADY_EXIST_CONFERENCE
NET_DVR_NO_SUPPORT_WITH_VIDEO_CONFERENCE = _hk_struct_test.NET_DVR_NO_SUPPORT_WITH_VIDEO_CONFERENCE
NET_DVR_START_INTERACTION_FAILURE = _hk_struct_test.NET_DVR_START_INTERACTION_FAILURE
NET_DVR_ASK_QUESTION_STARTED = _hk_struct_test.NET_DVR_ASK_QUESTION_STARTED
NET_DVR_ASK_QUESTION_CLOSED = _hk_struct_test.NET_DVR_ASK_QUESTION_CLOSED
NET_DVR_UNABLE_OPERATE_BY_HOST = _hk_struct_test.NET_DVR_UNABLE_OPERATE_BY_HOST
NET_DVR_REPEATED_ASK_QUESTION = _hk_struct_test.NET_DVR_REPEATED_ASK_QUESTION
NET_DVR_SWITCH_TIMEDIFF_LESS_LIMIT = _hk_struct_test.NET_DVR_SWITCH_TIMEDIFF_LESS_LIMIT
NET_DVR_CHANNEL_DEVICE_EXIST = _hk_struct_test.NET_DVR_CHANNEL_DEVICE_EXIST
NET_DVR_CHANNEL_DEVICE_NOT_EXIST = _hk_struct_test.NET_DVR_CHANNEL_DEVICE_NOT_EXIST
NET_DVR_ERROR_ADJUSTING_RESOLUTION = _hk_struct_test.NET_DVR_ERROR_ADJUSTING_RESOLUTION
NET_DVR_SSD_FILE_SYSTEM_IS_UPGRADING = _hk_struct_test.NET_DVR_SSD_FILE_SYSTEM_IS_UPGRADING
NET_DVR_SSD_FILE_SYSTEM_IS_FORMAT = _hk_struct_test.NET_DVR_SSD_FILE_SYSTEM_IS_FORMAT
NET_DVR_CHANNEL_IS_CONNECTING = _hk_struct_test.NET_DVR_CHANNEL_IS_CONNECTING
NET_DVR_CHANNEL_STREAM_TYPE_NOT_SUPPORT = _hk_struct_test.NET_DVR_CHANNEL_STREAM_TYPE_NOT_SUPPORT
NET_DVR_CHANNEL_USERNAME_NOT_EXIST = _hk_struct_test.NET_DVR_CHANNEL_USERNAME_NOT_EXIST
NET_DVR_CHANNEL_ACCESS_PARAM_FAILURE = _hk_struct_test.NET_DVR_CHANNEL_ACCESS_PARAM_FAILURE
NET_DVR_CHANNEL_GET_STREAM_FAILURE = _hk_struct_test.NET_DVR_CHANNEL_GET_STREAM_FAILURE
NET_DVR_CHANNEL_RISK_PASSWORD = _hk_struct_test.NET_DVR_CHANNEL_RISK_PASSWORD
NET_DVR_NO_SUPPORT_DELETE_STRANGER_LIB = _hk_struct_test.NET_DVR_NO_SUPPORT_DELETE_STRANGER_LIB
NET_DVR_NO_SUPPORT_CREATE_STRANGER_LIB = _hk_struct_test.NET_DVR_NO_SUPPORT_CREATE_STRANGER_LIB
NET_DVR_NETWORK_PORT_CONFLICT = _hk_struct_test.NET_DVR_NETWORK_PORT_CONFLICT
NET_DVR_TRANSCODE_NO_RESOURCES = _hk_struct_test.NET_DVR_TRANSCODE_NO_RESOURCES
NET_DVR_SSD_FILE_SYSTEM_ERROR = _hk_struct_test.NET_DVR_SSD_FILE_SYSTEM_ERROR
NET_DVR_INSUFFICIENT_SSD__FOR_FPD = _hk_struct_test.NET_DVR_INSUFFICIENT_SSD__FOR_FPD
NET_DVR_ASSOCIATED_FACELIB_OVER_LIMIT = _hk_struct_test.NET_DVR_ASSOCIATED_FACELIB_OVER_LIMIT
NET_DVR_ERR_NOTSUPPORT_DEICING = _hk_struct_test.NET_DVR_ERR_NOTSUPPORT_DEICING
NET_DVR_ERR_THERMENABLE_CLOSE = _hk_struct_test.NET_DVR_ERR_THERMENABLE_CLOSE
NET_DVR_ERR_NOTMEET_DEICING = _hk_struct_test.NET_DVR_ERR_NOTMEET_DEICING
NET_DVR_ERR_PANORAMIC_LIMIT_OPERATED = _hk_struct_test.NET_DVR_ERR_PANORAMIC_LIMIT_OPERATED
NET_DVR_ERR_SMARTH264_ROI_OPERATED = _hk_struct_test.NET_DVR_ERR_SMARTH264_ROI_OPERATED
NET_DVR_ERR_RULENUM_LIMIT = _hk_struct_test.NET_DVR_ERR_RULENUM_LIMIT
NET_DVR_ERR_LASER_DEICING_OPERATED = _hk_struct_test.NET_DVR_ERR_LASER_DEICING_OPERATED
NET_DVR_ERR_OFFDIGITALZOOM_OR_MINZOOMLIMIT = _hk_struct_test.NET_DVR_ERR_OFFDIGITALZOOM_OR_MINZOOMLIMIT
NET_DVR_ERR_FIREWAITING = _hk_struct_test.NET_DVR_ERR_FIREWAITING
NET_DVR_SYNCHRONIZEFOV_ERROR = _hk_struct_test.NET_DVR_SYNCHRONIZEFOV_ERROR
NET_DVR_CERTIFICATE_VALIDATION_ERROR = _hk_struct_test.NET_DVR_CERTIFICATE_VALIDATION_ERROR
NET_DVR_CERTIFICATES_NUM_EXCEED_ERROR = _hk_struct_test.NET_DVR_CERTIFICATES_NUM_EXCEED_ERROR
NET_DVR_ERR_NO_SAFETY_HELMET_REGION = _hk_struct_test.NET_DVR_ERR_NO_SAFETY_HELMET_REGION
NET_DVR_ERR_UNCLOSED_SAFETY_HELMET = _hk_struct_test.NET_DVR_ERR_UNCLOSED_SAFETY_HELMET
NET_ERR_NPQ_BASE_INDEX = _hk_struct_test.NET_ERR_NPQ_BASE_INDEX
NET_ERR_NPQ_PARAM = _hk_struct_test.NET_ERR_NPQ_PARAM
NET_ERR_NPQ_SYSTEM = _hk_struct_test.NET_ERR_NPQ_SYSTEM
NET_ERR_NPQ_GENRAL = _hk_struct_test.NET_ERR_NPQ_GENRAL
NET_ERR_NPQ_PRECONDITION = _hk_struct_test.NET_ERR_NPQ_PRECONDITION
NET_ERR_NPQ_NOTSUPPORT = _hk_struct_test.NET_ERR_NPQ_NOTSUPPORT
NET_ERR_NPQ_NOTCALLBACK = _hk_struct_test.NET_ERR_NPQ_NOTCALLBACK
NET_ERR_NPQ_LOADLIB = _hk_struct_test.NET_ERR_NPQ_LOADLIB
NET_ERR_NPQ_STEAM_CLOSE = _hk_struct_test.NET_ERR_NPQ_STEAM_CLOSE
NET_ERR_NPQ_MAX_LINK = _hk_struct_test.NET_ERR_NPQ_MAX_LINK
NET_ERR_NPQ_STREAM_CFG = _hk_struct_test.NET_ERR_NPQ_STREAM_CFG
NET_DVR_SUPPORT_DDRAW = _hk_struct_test.NET_DVR_SUPPORT_DDRAW
NET_DVR_SUPPORT_BLT = _hk_struct_test.NET_DVR_SUPPORT_BLT
NET_DVR_SUPPORT_BLTFOURCC = _hk_struct_test.NET_DVR_SUPPORT_BLTFOURCC
NET_DVR_SUPPORT_BLTSHRINKX = _hk_struct_test.NET_DVR_SUPPORT_BLTSHRINKX
NET_DVR_SUPPORT_BLTSHRINKY = _hk_struct_test.NET_DVR_SUPPORT_BLTSHRINKY
NET_DVR_SUPPORT_BLTSTRETCHX = _hk_struct_test.NET_DVR_SUPPORT_BLTSTRETCHX
NET_DVR_SUPPORT_BLTSTRETCHY = _hk_struct_test.NET_DVR_SUPPORT_BLTSTRETCHY
NET_DVR_SUPPORT_SSE = _hk_struct_test.NET_DVR_SUPPORT_SSE
NET_DVR_SUPPORT_MMX = _hk_struct_test.NET_DVR_SUPPORT_MMX
LIGHT_PWRON = _hk_struct_test.LIGHT_PWRON
WIPER_PWRON = _hk_struct_test.WIPER_PWRON
FAN_PWRON = _hk_struct_test.FAN_PWRON
HEATER_PWRON = _hk_struct_test.HEATER_PWRON
AUX_PWRON1 = _hk_struct_test.AUX_PWRON1
AUX_PWRON2 = _hk_struct_test.AUX_PWRON2
SET_PRESET = _hk_struct_test.SET_PRESET
CLE_PRESET = _hk_struct_test.CLE_PRESET
ZOOM_IN = _hk_struct_test.ZOOM_IN
ZOOM_OUT = _hk_struct_test.ZOOM_OUT
FOCUS_NEAR = _hk_struct_test.FOCUS_NEAR
FOCUS_FAR = _hk_struct_test.FOCUS_FAR
IRIS_OPEN = _hk_struct_test.IRIS_OPEN
IRIS_CLOSE = _hk_struct_test.IRIS_CLOSE
TILT_UP = _hk_struct_test.TILT_UP
TILT_DOWN = _hk_struct_test.TILT_DOWN
PAN_LEFT = _hk_struct_test.PAN_LEFT
PAN_RIGHT = _hk_struct_test.PAN_RIGHT
UP_LEFT = _hk_struct_test.UP_LEFT
UP_RIGHT = _hk_struct_test.UP_RIGHT
DOWN_LEFT = _hk_struct_test.DOWN_LEFT
DOWN_RIGHT = _hk_struct_test.DOWN_RIGHT
PAN_AUTO = _hk_struct_test.PAN_AUTO
FILL_PRE_SEQ = _hk_struct_test.FILL_PRE_SEQ
SET_SEQ_DWELL = _hk_struct_test.SET_SEQ_DWELL
SET_SEQ_SPEED = _hk_struct_test.SET_SEQ_SPEED
CLE_PRE_SEQ = _hk_struct_test.CLE_PRE_SEQ
STA_MEM_CRUISE = _hk_struct_test.STA_MEM_CRUISE
STO_MEM_CRUISE = _hk_struct_test.STO_MEM_CRUISE
RUN_CRUISE = _hk_struct_test.RUN_CRUISE
RUN_SEQ = _hk_struct_test.RUN_SEQ
STOP_SEQ = _hk_struct_test.STOP_SEQ
GOTO_PRESET = _hk_struct_test.GOTO_PRESET
DEL_SEQ = _hk_struct_test.DEL_SEQ
STOP_CRUISE = _hk_struct_test.STOP_CRUISE
DELETE_CRUISE = _hk_struct_test.DELETE_CRUISE
DELETE_ALL_CRUISE = _hk_struct_test.DELETE_ALL_CRUISE
PAN_CIRCLE = _hk_struct_test.PAN_CIRCLE
DRAG_PTZ = _hk_struct_test.DRAG_PTZ
LINEAR_SCAN = _hk_struct_test.LINEAR_SCAN
CLE_ALL_SEQ = _hk_struct_test.CLE_ALL_SEQ
CLE_ALL_CRUISE = _hk_struct_test.CLE_ALL_CRUISE
POPUP_MENU = _hk_struct_test.POPUP_MENU
TILT_DOWN_ZOOM_IN = _hk_struct_test.TILT_DOWN_ZOOM_IN
TILT_DOWN_ZOOM_OUT = _hk_struct_test.TILT_DOWN_ZOOM_OUT
PAN_LEFT_ZOOM_IN = _hk_struct_test.PAN_LEFT_ZOOM_IN
PAN_LEFT_ZOOM_OUT = _hk_struct_test.PAN_LEFT_ZOOM_OUT
PAN_RIGHT_ZOOM_IN = _hk_struct_test.PAN_RIGHT_ZOOM_IN
PAN_RIGHT_ZOOM_OUT = _hk_struct_test.PAN_RIGHT_ZOOM_OUT
UP_LEFT_ZOOM_IN = _hk_struct_test.UP_LEFT_ZOOM_IN
UP_LEFT_ZOOM_OUT = _hk_struct_test.UP_LEFT_ZOOM_OUT
UP_RIGHT_ZOOM_IN = _hk_struct_test.UP_RIGHT_ZOOM_IN
UP_RIGHT_ZOOM_OUT = _hk_struct_test.UP_RIGHT_ZOOM_OUT
DOWN_LEFT_ZOOM_IN = _hk_struct_test.DOWN_LEFT_ZOOM_IN
DOWN_LEFT_ZOOM_OUT = _hk_struct_test.DOWN_LEFT_ZOOM_OUT
DOWN_RIGHT_ZOOM_IN = _hk_struct_test.DOWN_RIGHT_ZOOM_IN
DOWN_RIGHT_ZOOM_OUT = _hk_struct_test.DOWN_RIGHT_ZOOM_OUT
TILT_UP_ZOOM_IN = _hk_struct_test.TILT_UP_ZOOM_IN
TILT_UP_ZOOM_OUT = _hk_struct_test.TILT_UP_ZOOM_OUT
DVR_VEHICLE_CONTROL_LIST = _hk_struct_test.DVR_VEHICLE_CONTROL_LIST
NET_DVR_PLAYSTART = _hk_struct_test.NET_DVR_PLAYSTART
NET_DVR_PLAYSTOP = _hk_struct_test.NET_DVR_PLAYSTOP
NET_DVR_PLAYPAUSE = _hk_struct_test.NET_DVR_PLAYPAUSE
NET_DVR_PLAYRESTART = _hk_struct_test.NET_DVR_PLAYRESTART
NET_DVR_PLAYFAST = _hk_struct_test.NET_DVR_PLAYFAST
NET_DVR_PLAYSLOW = _hk_struct_test.NET_DVR_PLAYSLOW
NET_DVR_PLAYNORMAL = _hk_struct_test.NET_DVR_PLAYNORMAL
NET_DVR_PLAYFRAME = _hk_struct_test.NET_DVR_PLAYFRAME
NET_DVR_PLAYSTARTAUDIO = _hk_struct_test.NET_DVR_PLAYSTARTAUDIO
NET_DVR_PLAYSTOPAUDIO = _hk_struct_test.NET_DVR_PLAYSTOPAUDIO
NET_DVR_PLAYAUDIOVOLUME = _hk_struct_test.NET_DVR_PLAYAUDIOVOLUME
NET_DVR_PLAYSETPOS = _hk_struct_test.NET_DVR_PLAYSETPOS
NET_DVR_PLAYGETPOS = _hk_struct_test.NET_DVR_PLAYGETPOS
NET_DVR_PLAYGETTIME = _hk_struct_test.NET_DVR_PLAYGETTIME
NET_DVR_PLAYGETFRAME = _hk_struct_test.NET_DVR_PLAYGETFRAME
NET_DVR_GETTOTALFRAMES = _hk_struct_test.NET_DVR_GETTOTALFRAMES
NET_DVR_GETTOTALTIME = _hk_struct_test.NET_DVR_GETTOTALTIME
NET_DVR_THROWBFRAME = _hk_struct_test.NET_DVR_THROWBFRAME
NET_DVR_SETSPEED = _hk_struct_test.NET_DVR_SETSPEED
NET_DVR_KEEPALIVE = _hk_struct_test.NET_DVR_KEEPALIVE
NET_DVR_PLAYSETTIME = _hk_struct_test.NET_DVR_PLAYSETTIME
NET_DVR_PLAYGETTOTALLEN = _hk_struct_test.NET_DVR_PLAYGETTOTALLEN
NET_DVR_PLAYSETTIME_V50 = _hk_struct_test.NET_DVR_PLAYSETTIME_V50
NET_DVR_PLAY_FORWARD = _hk_struct_test.NET_DVR_PLAY_FORWARD
NET_DVR_PLAY_REVERSE = _hk_struct_test.NET_DVR_PLAY_REVERSE
NET_DVR_SET_DECODEFFRAMETYPE = _hk_struct_test.NET_DVR_SET_DECODEFFRAMETYPE
NET_DVR_SET_TRANS_TYPE = _hk_struct_test.NET_DVR_SET_TRANS_TYPE
NET_DVR_PLAY_CONVERT = _hk_struct_test.NET_DVR_PLAY_CONVERT
NET_DVR_START_DRAWFRAME = _hk_struct_test.NET_DVR_START_DRAWFRAME
NET_DVR_STOP_DRAWFRAME = _hk_struct_test.NET_DVR_STOP_DRAWFRAME
NET_DVR_CHANGEWNDRESOLUTION = _hk_struct_test.NET_DVR_CHANGEWNDRESOLUTION
NET_DVR_RESETBUFFER = _hk_struct_test.NET_DVR_RESETBUFFER
NET_DVR_VOD_DRAG_ING = _hk_struct_test.NET_DVR_VOD_DRAG_ING
NET_DVR_VOD_DRAG_END = _hk_struct_test.NET_DVR_VOD_DRAG_END
NET_DVR_VOD_RESET_PLAYTIME = _hk_struct_test.NET_DVR_VOD_RESET_PLAYTIME
PLAYM4_DECODE_NORMAIL = _hk_struct_test.PLAYM4_DECODE_NORMAIL
PLAYM4_DECODE_KEY_FRAME = _hk_struct_test.PLAYM4_DECODE_KEY_FRAME
PLAYM4_DECODE_NONE = _hk_struct_test.PLAYM4_DECODE_NONE
PLAYM4_DECODE_TEMPORAL_LAYER_0 = _hk_struct_test.PLAYM4_DECODE_TEMPORAL_LAYER_0
PLAYM4_DECODE_TEMPORAL_LAYER_1 = _hk_struct_test.PLAYM4_DECODE_TEMPORAL_LAYER_1
KEY_CODE_1 = _hk_struct_test.KEY_CODE_1
KEY_CODE_2 = _hk_struct_test.KEY_CODE_2
KEY_CODE_3 = _hk_struct_test.KEY_CODE_3
KEY_CODE_4 = _hk_struct_test.KEY_CODE_4
KEY_CODE_5 = _hk_struct_test.KEY_CODE_5
KEY_CODE_6 = _hk_struct_test.KEY_CODE_6
KEY_CODE_7 = _hk_struct_test.KEY_CODE_7
KEY_CODE_8 = _hk_struct_test.KEY_CODE_8
KEY_CODE_9 = _hk_struct_test.KEY_CODE_9
KEY_CODE_0 = _hk_struct_test.KEY_CODE_0
KEY_CODE_POWER = _hk_struct_test.KEY_CODE_POWER
KEY_CODE_MENU = _hk_struct_test.KEY_CODE_MENU
KEY_CODE_ENTER = _hk_struct_test.KEY_CODE_ENTER
KEY_CODE_CANCEL = _hk_struct_test.KEY_CODE_CANCEL
KEY_CODE_UP = _hk_struct_test.KEY_CODE_UP
KEY_CODE_DOWN = _hk_struct_test.KEY_CODE_DOWN
KEY_CODE_LEFT = _hk_struct_test.KEY_CODE_LEFT
KEY_CODE_RIGHT = _hk_struct_test.KEY_CODE_RIGHT
KEY_CODE_EDIT = _hk_struct_test.KEY_CODE_EDIT
KEY_CODE_ADD = _hk_struct_test.KEY_CODE_ADD
KEY_CODE_MINUS = _hk_struct_test.KEY_CODE_MINUS
KEY_CODE_PLAY = _hk_struct_test.KEY_CODE_PLAY
KEY_CODE_REC = _hk_struct_test.KEY_CODE_REC
KEY_CODE_PAN = _hk_struct_test.KEY_CODE_PAN
KEY_CODE_M = _hk_struct_test.KEY_CODE_M
KEY_CODE_A = _hk_struct_test.KEY_CODE_A
KEY_CODE_F1 = _hk_struct_test.KEY_CODE_F1
KEY_CODE_F2 = _hk_struct_test.KEY_CODE_F2
KEY_PTZ_UP_START = _hk_struct_test.KEY_PTZ_UP_START
KEY_PTZ_UP_STOP = _hk_struct_test.KEY_PTZ_UP_STOP
KEY_PTZ_DOWN_START = _hk_struct_test.KEY_PTZ_DOWN_START
KEY_PTZ_DOWN_STOP = _hk_struct_test.KEY_PTZ_DOWN_STOP
KEY_PTZ_LEFT_START = _hk_struct_test.KEY_PTZ_LEFT_START
KEY_PTZ_LEFT_STOP = _hk_struct_test.KEY_PTZ_LEFT_STOP
KEY_PTZ_RIGHT_START = _hk_struct_test.KEY_PTZ_RIGHT_START
KEY_PTZ_RIGHT_STOP = _hk_struct_test.KEY_PTZ_RIGHT_STOP
KEY_PTZ_AP1_START = _hk_struct_test.KEY_PTZ_AP1_START
KEY_PTZ_AP1_STOP = _hk_struct_test.KEY_PTZ_AP1_STOP
KEY_PTZ_AP2_START = _hk_struct_test.KEY_PTZ_AP2_START
KEY_PTZ_AP2_STOP = _hk_struct_test.KEY_PTZ_AP2_STOP
KEY_PTZ_FOCUS1_START = _hk_struct_test.KEY_PTZ_FOCUS1_START
KEY_PTZ_FOCUS1_STOP = _hk_struct_test.KEY_PTZ_FOCUS1_STOP
KEY_PTZ_FOCUS2_START = _hk_struct_test.KEY_PTZ_FOCUS2_START
KEY_PTZ_FOCUS2_STOP = _hk_struct_test.KEY_PTZ_FOCUS2_STOP
KEY_PTZ_B1_START = _hk_struct_test.KEY_PTZ_B1_START
KEY_PTZ_B1_STOP = _hk_struct_test.KEY_PTZ_B1_STOP
KEY_PTZ_B2_START = _hk_struct_test.KEY_PTZ_B2_START
KEY_PTZ_B2_STOP = _hk_struct_test.KEY_PTZ_B2_STOP
KEY_CODE_11 = _hk_struct_test.KEY_CODE_11
KEY_CODE_12 = _hk_struct_test.KEY_CODE_12
KEY_CODE_13 = _hk_struct_test.KEY_CODE_13
KEY_CODE_14 = _hk_struct_test.KEY_CODE_14
KEY_CODE_15 = _hk_struct_test.KEY_CODE_15
KEY_CODE_16 = _hk_struct_test.KEY_CODE_16
NET_DVR_GET_DEVICECFG = _hk_struct_test.NET_DVR_GET_DEVICECFG
NET_DVR_SET_DEVICECFG = _hk_struct_test.NET_DVR_SET_DEVICECFG
NET_DVR_GET_NETCFG = _hk_struct_test.NET_DVR_GET_NETCFG
NET_DVR_SET_NETCFG = _hk_struct_test.NET_DVR_SET_NETCFG
NET_DVR_GET_PICCFG = _hk_struct_test.NET_DVR_GET_PICCFG
NET_DVR_SET_PICCFG = _hk_struct_test.NET_DVR_SET_PICCFG
NET_DVR_GET_COMPRESSCFG = _hk_struct_test.NET_DVR_GET_COMPRESSCFG
NET_DVR_SET_COMPRESSCFG = _hk_struct_test.NET_DVR_SET_COMPRESSCFG
NET_DVR_GET_RECORDCFG = _hk_struct_test.NET_DVR_GET_RECORDCFG
NET_DVR_SET_RECORDCFG = _hk_struct_test.NET_DVR_SET_RECORDCFG
NET_DVR_GET_DECODERCFG = _hk_struct_test.NET_DVR_GET_DECODERCFG
NET_DVR_SET_DECODERCFG = _hk_struct_test.NET_DVR_SET_DECODERCFG
NET_DVR_GET_RS232CFG = _hk_struct_test.NET_DVR_GET_RS232CFG
NET_DVR_SET_RS232CFG = _hk_struct_test.NET_DVR_SET_RS232CFG
NET_DVR_GET_ALARMINCFG = _hk_struct_test.NET_DVR_GET_ALARMINCFG
NET_DVR_SET_ALARMINCFG = _hk_struct_test.NET_DVR_SET_ALARMINCFG
NET_DVR_GET_ALARMOUTCFG = _hk_struct_test.NET_DVR_GET_ALARMOUTCFG
NET_DVR_SET_ALARMOUTCFG = _hk_struct_test.NET_DVR_SET_ALARMOUTCFG
NET_DVR_GET_TIMECFG = _hk_struct_test.NET_DVR_GET_TIMECFG
NET_DVR_SET_TIMECFG = _hk_struct_test.NET_DVR_SET_TIMECFG
NET_DVR_GET_PREVIEWCFG = _hk_struct_test.NET_DVR_GET_PREVIEWCFG
NET_DVR_SET_PREVIEWCFG = _hk_struct_test.NET_DVR_SET_PREVIEWCFG
NET_DVR_GET_VIDEOOUTCFG = _hk_struct_test.NET_DVR_GET_VIDEOOUTCFG
NET_DVR_SET_VIDEOOUTCFG = _hk_struct_test.NET_DVR_SET_VIDEOOUTCFG
NET_DVR_GET_USERCFG = _hk_struct_test.NET_DVR_GET_USERCFG
NET_DVR_SET_USERCFG = _hk_struct_test.NET_DVR_SET_USERCFG
NET_DVR_GET_EXCEPTIONCFG = _hk_struct_test.NET_DVR_GET_EXCEPTIONCFG
NET_DVR_SET_EXCEPTIONCFG = _hk_struct_test.NET_DVR_SET_EXCEPTIONCFG
NET_DVR_GET_ZONEANDDST = _hk_struct_test.NET_DVR_GET_ZONEANDDST
NET_DVR_SET_ZONEANDDST = _hk_struct_test.NET_DVR_SET_ZONEANDDST
NET_DVR_GET_SHOWSTRING = _hk_struct_test.NET_DVR_GET_SHOWSTRING
NET_DVR_SET_SHOWSTRING = _hk_struct_test.NET_DVR_SET_SHOWSTRING
NET_DVR_GET_EVENTCOMPCFG = _hk_struct_test.NET_DVR_GET_EVENTCOMPCFG
NET_DVR_SET_EVENTCOMPCFG = _hk_struct_test.NET_DVR_SET_EVENTCOMPCFG
NET_DVR_GET_FTPCFG = _hk_struct_test.NET_DVR_GET_FTPCFG
NET_DVR_SET_FTPCFG = _hk_struct_test.NET_DVR_SET_FTPCFG
NET_DVR_GET_AUXOUTCFG = _hk_struct_test.NET_DVR_GET_AUXOUTCFG
NET_DVR_SET_AUXOUTCFG = _hk_struct_test.NET_DVR_SET_AUXOUTCFG
NET_DVR_GET_PREVIEWCFG_AUX = _hk_struct_test.NET_DVR_GET_PREVIEWCFG_AUX
NET_DVR_SET_PREVIEWCFG_AUX = _hk_struct_test.NET_DVR_SET_PREVIEWCFG_AUX
NET_DVR_GET_PASSWORD_MANAGE_CFG = _hk_struct_test.NET_DVR_GET_PASSWORD_MANAGE_CFG
NET_DVR_SET_PASSWORD_MANAGE_CFG = _hk_struct_test.NET_DVR_SET_PASSWORD_MANAGE_CFG
NET_DVR_UNLOCK_USER = _hk_struct_test.NET_DVR_UNLOCK_USER
NET_DVR_GET_SECURITY_CFG = _hk_struct_test.NET_DVR_GET_SECURITY_CFG
NET_DVR_SET_SECURITY_CFG = _hk_struct_test.NET_DVR_SET_SECURITY_CFG
NET_DVR_GET_LOCKED_INFO_LIST = _hk_struct_test.NET_DVR_GET_LOCKED_INFO_LIST
NET_DVR_SET_RULECFG = _hk_struct_test.NET_DVR_SET_RULECFG
NET_DVR_GET_RULECFG = _hk_struct_test.NET_DVR_GET_RULECFG
NET_DVR_SET_TRACK_CFG = _hk_struct_test.NET_DVR_SET_TRACK_CFG
NET_DVR_GET_TRACK_CFG = _hk_struct_test.NET_DVR_GET_TRACK_CFG
NET_DVR_SET_IVMS_STREAMCFG = _hk_struct_test.NET_DVR_SET_IVMS_STREAMCFG
NET_DVR_GET_IVMS_STREAMCFG = _hk_struct_test.NET_DVR_GET_IVMS_STREAMCFG
NET_DVR_SET_VCA_CTRLCFG = _hk_struct_test.NET_DVR_SET_VCA_CTRLCFG
NET_DVR_GET_VCA_CTRLCFG = _hk_struct_test.NET_DVR_GET_VCA_CTRLCFG
NET_DVR_SET_VCA_MASK_REGION = _hk_struct_test.NET_DVR_SET_VCA_MASK_REGION
NET_DVR_GET_VCA_MASK_REGION = _hk_struct_test.NET_DVR_GET_VCA_MASK_REGION
NET_DVR_SET_VCA_ENTER_REGION = _hk_struct_test.NET_DVR_SET_VCA_ENTER_REGION
NET_DVR_GET_VCA_ENTER_REGION = _hk_struct_test.NET_DVR_GET_VCA_ENTER_REGION
NET_DVR_SET_VCA_LINE_SEGMENT = _hk_struct_test.NET_DVR_SET_VCA_LINE_SEGMENT
NET_DVR_GET_VCA_LINE_SEGMENT = _hk_struct_test.NET_DVR_GET_VCA_LINE_SEGMENT
NET_DVR_SET_IVMS_MASK_REGION = _hk_struct_test.NET_DVR_SET_IVMS_MASK_REGION
NET_DVR_GET_IVMS_MASK_REGION = _hk_struct_test.NET_DVR_GET_IVMS_MASK_REGION
NET_DVR_SET_IVMS_ENTER_REGION = _hk_struct_test.NET_DVR_SET_IVMS_ENTER_REGION
NET_DVR_GET_IVMS_ENTER_REGION = _hk_struct_test.NET_DVR_GET_IVMS_ENTER_REGION
NET_DVR_SET_IVMS_BEHAVIORCFG = _hk_struct_test.NET_DVR_SET_IVMS_BEHAVIORCFG
NET_DVR_GET_IVMS_BEHAVIORCFG = _hk_struct_test.NET_DVR_GET_IVMS_BEHAVIORCFG
NET_DVR_IVMS_SET_SEARCHCFG = _hk_struct_test.NET_DVR_IVMS_SET_SEARCHCFG
NET_DVR_IVMS_GET_SEARCHCFG = _hk_struct_test.NET_DVR_IVMS_GET_SEARCHCFG
NET_DVR_SET_POSITION_TRACK = _hk_struct_test.NET_DVR_SET_POSITION_TRACK
NET_DVR_GET_POSITION_TRACK = _hk_struct_test.NET_DVR_GET_POSITION_TRACK
NET_DVR_SET_CALIBRATION = _hk_struct_test.NET_DVR_SET_CALIBRATION
NET_DVR_GET_CALIBRATION = _hk_struct_test.NET_DVR_GET_CALIBRATION
NET_DVR_SET_PDC_RULECFG = _hk_struct_test.NET_DVR_SET_PDC_RULECFG
NET_DVR_GET_PDC_RULECFG = _hk_struct_test.NET_DVR_GET_PDC_RULECFG
NET_DVR_SET_PU_STREAMCFG = _hk_struct_test.NET_DVR_SET_PU_STREAMCFG
NET_DVR_GET_PU_STREAMCFG = _hk_struct_test.NET_DVR_GET_PU_STREAMCFG
NET_VCA_SET_IVMS_BEHAVIOR_CFG = _hk_struct_test.NET_VCA_SET_IVMS_BEHAVIOR_CFG
NET_VCA_GET_IVMS_BEHAVIOR_CFG = _hk_struct_test.NET_VCA_GET_IVMS_BEHAVIOR_CFG
NET_VCA_SET_SIZE_FILTER = _hk_struct_test.NET_VCA_SET_SIZE_FILTER
NET_VCA_GET_SIZE_FILTER = _hk_struct_test.NET_VCA_GET_SIZE_FILTER
NET_DVR_SET_TRACK_PARAMCFG = _hk_struct_test.NET_DVR_SET_TRACK_PARAMCFG
NET_DVR_GET_TRACK_PARAMCFG = _hk_struct_test.NET_DVR_GET_TRACK_PARAMCFG
NET_DVR_SET_DOME_MOVEMENT_PARAM = _hk_struct_test.NET_DVR_SET_DOME_MOVEMENT_PARAM
NET_DVR_GET_DOME_MOVEMENT_PARAM = _hk_struct_test.NET_DVR_GET_DOME_MOVEMENT_PARAM
NET_DVR_GET_PICCFG_EX = _hk_struct_test.NET_DVR_GET_PICCFG_EX
NET_DVR_SET_PICCFG_EX = _hk_struct_test.NET_DVR_SET_PICCFG_EX
NET_DVR_GET_USERCFG_EX = _hk_struct_test.NET_DVR_GET_USERCFG_EX
NET_DVR_SET_USERCFG_EX = _hk_struct_test.NET_DVR_SET_USERCFG_EX
NET_DVR_GET_COMPRESSCFG_EX = _hk_struct_test.NET_DVR_GET_COMPRESSCFG_EX
NET_DVR_SET_COMPRESSCFG_EX = _hk_struct_test.NET_DVR_SET_COMPRESSCFG_EX
NET_DVR_GET_NETAPPCFG = _hk_struct_test.NET_DVR_GET_NETAPPCFG
NET_DVR_SET_NETAPPCFG = _hk_struct_test.NET_DVR_SET_NETAPPCFG
NET_DVR_GET_NTPCFG = _hk_struct_test.NET_DVR_GET_NTPCFG
NET_DVR_SET_NTPCFG = _hk_struct_test.NET_DVR_SET_NTPCFG
NET_DVR_GET_DDNSCFG = _hk_struct_test.NET_DVR_GET_DDNSCFG
NET_DVR_SET_DDNSCFG = _hk_struct_test.NET_DVR_SET_DDNSCFG
NET_DVR_GET_EMAILCFG = _hk_struct_test.NET_DVR_GET_EMAILCFG
NET_DVR_SET_EMAILCFG = _hk_struct_test.NET_DVR_SET_EMAILCFG
NET_DVR_GET_NFSCFG = _hk_struct_test.NET_DVR_GET_NFSCFG
NET_DVR_SET_NFSCFG = _hk_struct_test.NET_DVR_SET_NFSCFG
NET_DVR_GET_SHOWSTRING_EX = _hk_struct_test.NET_DVR_GET_SHOWSTRING_EX
NET_DVR_SET_SHOWSTRING_EX = _hk_struct_test.NET_DVR_SET_SHOWSTRING_EX
NET_DVR_GET_NETCFG_OTHER = _hk_struct_test.NET_DVR_GET_NETCFG_OTHER
NET_DVR_SET_NETCFG_OTHER = _hk_struct_test.NET_DVR_SET_NETCFG_OTHER
NET_DVR_GET_EMAILPARACFG = _hk_struct_test.NET_DVR_GET_EMAILPARACFG
NET_DVR_SET_EMAILPARACFG = _hk_struct_test.NET_DVR_SET_EMAILPARACFG
NET_DVR_GET_DDNSCFG_EX = _hk_struct_test.NET_DVR_GET_DDNSCFG_EX
NET_DVR_SET_DDNSCFG_EX = _hk_struct_test.NET_DVR_SET_DDNSCFG_EX
NET_DVR_SET_PTZPOS = _hk_struct_test.NET_DVR_SET_PTZPOS
NET_DVR_GET_PTZPOS = _hk_struct_test.NET_DVR_GET_PTZPOS
NET_DVR_GET_PTZSCOPE = _hk_struct_test.NET_DVR_GET_PTZSCOPE
NET_DVR_GET_AP_INFO_LIST = _hk_struct_test.NET_DVR_GET_AP_INFO_LIST
NET_DVR_SET_WIFI_CFG = _hk_struct_test.NET_DVR_SET_WIFI_CFG
NET_DVR_GET_WIFI_CFG = _hk_struct_test.NET_DVR_GET_WIFI_CFG
NET_DVR_SET_WIFI_WORKMODE = _hk_struct_test.NET_DVR_SET_WIFI_WORKMODE
NET_DVR_GET_WIFI_WORKMODE = _hk_struct_test.NET_DVR_GET_WIFI_WORKMODE
NET_DVR_GET_WIFI_STATUS = _hk_struct_test.NET_DVR_GET_WIFI_STATUS
NET_DVR_GET_REFERENCE_REGION = _hk_struct_test.NET_DVR_GET_REFERENCE_REGION
NET_DVR_SET_REFERENCE_REGION = _hk_struct_test.NET_DVR_SET_REFERENCE_REGION
NET_DVR_GET_TRAFFIC_MASK_REGION = _hk_struct_test.NET_DVR_GET_TRAFFIC_MASK_REGION
NET_DVR_SET_TRAFFIC_MASK_REGION = _hk_struct_test.NET_DVR_SET_TRAFFIC_MASK_REGION
NET_DVR_SET_AID_RULECFG = _hk_struct_test.NET_DVR_SET_AID_RULECFG
NET_DVR_GET_AID_RULECFG = _hk_struct_test.NET_DVR_GET_AID_RULECFG
NET_DVR_SET_TPS_RULECFG = _hk_struct_test.NET_DVR_SET_TPS_RULECFG
NET_DVR_GET_TPS_RULECFG = _hk_struct_test.NET_DVR_GET_TPS_RULECFG
NET_DVR_SET_LANECFG = _hk_struct_test.NET_DVR_SET_LANECFG
NET_DVR_GET_LANECFG = _hk_struct_test.NET_DVR_GET_LANECFG
NET_DVR_GET_VCA_RULE_COLOR_CFG = _hk_struct_test.NET_DVR_GET_VCA_RULE_COLOR_CFG
NET_DVR_SET_VCA_RULE_COLOR_CFG = _hk_struct_test.NET_DVR_SET_VCA_RULE_COLOR_CFG
NET_DVR_GET_SWITCH_LAMP_CFG = _hk_struct_test.NET_DVR_GET_SWITCH_LAMP_CFG
NET_DVR_SET_SWITCH_LAMP_CFG = _hk_struct_test.NET_DVR_SET_SWITCH_LAMP_CFG
NET_DVR_SET_FACEDETECT_RULECFG = _hk_struct_test.NET_DVR_SET_FACEDETECT_RULECFG
NET_DVR_GET_FACEDETECT_RULECFG = _hk_struct_test.NET_DVR_GET_FACEDETECT_RULECFG
NET_DVR_SET_VEHICLE_RECOG_TASK = _hk_struct_test.NET_DVR_SET_VEHICLE_RECOG_TASK
NET_DVR_GET_VEHICLE_RECOG_TASK = _hk_struct_test.NET_DVR_GET_VEHICLE_RECOG_TASK
NET_DVR_SET_TIMECORRECT = _hk_struct_test.NET_DVR_SET_TIMECORRECT
NET_DVR_GET_CONNECT_LIST = _hk_struct_test.NET_DVR_GET_CONNECT_LIST
NET_DVR_GET_NETCFG_V30 = _hk_struct_test.NET_DVR_GET_NETCFG_V30
NET_DVR_SET_NETCFG_V30 = _hk_struct_test.NET_DVR_SET_NETCFG_V30
NET_DVR_GET_PICCFG_V30 = _hk_struct_test.NET_DVR_GET_PICCFG_V30
NET_DVR_SET_PICCFG_V30 = _hk_struct_test.NET_DVR_SET_PICCFG_V30
NET_DVR_GET_RECORDCFG_V30 = _hk_struct_test.NET_DVR_GET_RECORDCFG_V30
NET_DVR_SET_RECORDCFG_V30 = _hk_struct_test.NET_DVR_SET_RECORDCFG_V30
NET_DVR_GET_USERCFG_V30 = _hk_struct_test.NET_DVR_GET_USERCFG_V30
NET_DVR_SET_USERCFG_V30 = _hk_struct_test.NET_DVR_SET_USERCFG_V30
NET_DVR_GET_RECORDCFG_V40 = _hk_struct_test.NET_DVR_GET_RECORDCFG_V40
NET_DVR_SET_RECORDCFG_V40 = _hk_struct_test.NET_DVR_SET_RECORDCFG_V40
NET_DVR_GET_DDNSCFG_V30 = _hk_struct_test.NET_DVR_GET_DDNSCFG_V30
NET_DVR_SET_DDNSCFG_V30 = _hk_struct_test.NET_DVR_SET_DDNSCFG_V30
NET_DVR_GET_EMAILCFG_V30 = _hk_struct_test.NET_DVR_GET_EMAILCFG_V30
NET_DVR_SET_EMAILCFG_V30 = _hk_struct_test.NET_DVR_SET_EMAILCFG_V30
NET_DVR_GET_NETCFG_V50 = _hk_struct_test.NET_DVR_GET_NETCFG_V50
NET_DVR_SET_NETCFG_V50 = _hk_struct_test.NET_DVR_SET_NETCFG_V50
NET_GET_CRUISEPOINT_V40 = _hk_struct_test.NET_GET_CRUISEPOINT_V40
NET_DVR_GET_CRUISE = _hk_struct_test.NET_DVR_GET_CRUISE
NET_DVR_SET_CRUISE = _hk_struct_test.NET_DVR_SET_CRUISE
NET_DVR_GET_ALARMINCFG_V30 = _hk_struct_test.NET_DVR_GET_ALARMINCFG_V30
NET_DVR_SET_ALARMINCFG_V30 = _hk_struct_test.NET_DVR_SET_ALARMINCFG_V30
NET_DVR_GET_ALARMOUTCFG_V30 = _hk_struct_test.NET_DVR_GET_ALARMOUTCFG_V30
NET_DVR_SET_ALARMOUTCFG_V30 = _hk_struct_test.NET_DVR_SET_ALARMOUTCFG_V30
NET_DVR_GET_VIDEOOUTCFG_V30 = _hk_struct_test.NET_DVR_GET_VIDEOOUTCFG_V30
NET_DVR_SET_VIDEOOUTCFG_V30 = _hk_struct_test.NET_DVR_SET_VIDEOOUTCFG_V30
NET_DVR_GET_SHOWSTRING_V30 = _hk_struct_test.NET_DVR_GET_SHOWSTRING_V30
NET_DVR_SET_SHOWSTRING_V30 = _hk_struct_test.NET_DVR_SET_SHOWSTRING_V30
NET_DVR_GET_EXCEPTIONCFG_V30 = _hk_struct_test.NET_DVR_GET_EXCEPTIONCFG_V30
NET_DVR_SET_EXCEPTIONCFG_V30 = _hk_struct_test.NET_DVR_SET_EXCEPTIONCFG_V30
NET_DVR_GET_RS232CFG_V30 = _hk_struct_test.NET_DVR_GET_RS232CFG_V30
NET_DVR_SET_RS232CFG_V30 = _hk_struct_test.NET_DVR_SET_RS232CFG_V30
NET_DVR_GET_NET_DISKCFG = _hk_struct_test.NET_DVR_GET_NET_DISKCFG
NET_DVR_SET_NET_DISKCFG = _hk_struct_test.NET_DVR_SET_NET_DISKCFG
NET_DVR_GET_COMPRESSCFG_V30 = _hk_struct_test.NET_DVR_GET_COMPRESSCFG_V30
NET_DVR_SET_COMPRESSCFG_V30 = _hk_struct_test.NET_DVR_SET_COMPRESSCFG_V30
NET_DVR_GET_DECODERCFG_V30 = _hk_struct_test.NET_DVR_GET_DECODERCFG_V30
NET_DVR_SET_DECODERCFG_V30 = _hk_struct_test.NET_DVR_SET_DECODERCFG_V30
NET_DVR_GET_PREVIEWCFG_V30 = _hk_struct_test.NET_DVR_GET_PREVIEWCFG_V30
NET_DVR_SET_PREVIEWCFG_V30 = _hk_struct_test.NET_DVR_SET_PREVIEWCFG_V30
NET_DVR_GET_PREVIEWCFG_AUX_V30 = _hk_struct_test.NET_DVR_GET_PREVIEWCFG_AUX_V30
NET_DVR_SET_PREVIEWCFG_AUX_V30 = _hk_struct_test.NET_DVR_SET_PREVIEWCFG_AUX_V30
NET_DVR_GET_IPPARACFG = _hk_struct_test.NET_DVR_GET_IPPARACFG
NET_DVR_SET_IPPARACFG = _hk_struct_test.NET_DVR_SET_IPPARACFG
NET_DVR_GET_IPALARMINCFG = _hk_struct_test.NET_DVR_GET_IPALARMINCFG
NET_DVR_SET_IPALARMINCFG = _hk_struct_test.NET_DVR_SET_IPALARMINCFG
NET_DVR_GET_IPALARMOUTCFG = _hk_struct_test.NET_DVR_GET_IPALARMOUTCFG
NET_DVR_SET_IPALARMOUTCFG = _hk_struct_test.NET_DVR_SET_IPALARMOUTCFG
NET_DVR_GET_HDCFG = _hk_struct_test.NET_DVR_GET_HDCFG
NET_DVR_SET_HDCFG = _hk_struct_test.NET_DVR_SET_HDCFG
NET_DVR_GET_HDGROUP_CFG = _hk_struct_test.NET_DVR_GET_HDGROUP_CFG
NET_DVR_SET_HDGROUP_CFG = _hk_struct_test.NET_DVR_SET_HDGROUP_CFG
NET_DVR_GET_COMPRESSCFG_AUD = _hk_struct_test.NET_DVR_GET_COMPRESSCFG_AUD
NET_DVR_SET_COMPRESSCFG_AUD = _hk_struct_test.NET_DVR_SET_COMPRESSCFG_AUD
NET_DVR_GET_IPPARACFG_V31 = _hk_struct_test.NET_DVR_GET_IPPARACFG_V31
NET_DVR_SET_IPPARACFG_V31 = _hk_struct_test.NET_DVR_SET_IPPARACFG_V31
NET_DVR_GET_IPPARACFG_V40 = _hk_struct_test.NET_DVR_GET_IPPARACFG_V40
NET_DVR_SET_IPPARACFG_V40 = _hk_struct_test.NET_DVR_SET_IPPARACFG_V40
NET_DVR_GET_CCDPARAMCFG = _hk_struct_test.NET_DVR_GET_CCDPARAMCFG
NET_DVR_SET_CCDPARAMCFG = _hk_struct_test.NET_DVR_SET_CCDPARAMCFG
NET_DVR_GET_IOINCFG = _hk_struct_test.NET_DVR_GET_IOINCFG
NET_DVR_SET_IOINCFG = _hk_struct_test.NET_DVR_SET_IOINCFG
NET_DVR_GET_IOOUTCFG = _hk_struct_test.NET_DVR_GET_IOOUTCFG
NET_DVR_SET_IOOUTCFG = _hk_struct_test.NET_DVR_SET_IOOUTCFG
NET_DVR_GET_FLASHCFG = _hk_struct_test.NET_DVR_GET_FLASHCFG
NET_DVR_SET_FLASHCFG = _hk_struct_test.NET_DVR_SET_FLASHCFG
NET_DVR_GET_LIGHTSNAPCFG = _hk_struct_test.NET_DVR_GET_LIGHTSNAPCFG
NET_DVR_SET_LIGHTSNAPCFG = _hk_struct_test.NET_DVR_SET_LIGHTSNAPCFG
NET_DVR_GET_MEASURESPEEDCFG = _hk_struct_test.NET_DVR_GET_MEASURESPEEDCFG
NET_DVR_SET_MEASURESPEEDCFG = _hk_struct_test.NET_DVR_SET_MEASURESPEEDCFG
NET_DVR_GET_IMAGEOVERLAYCFG = _hk_struct_test.NET_DVR_GET_IMAGEOVERLAYCFG
NET_DVR_SET_IMAGEOVERLAYCFG = _hk_struct_test.NET_DVR_SET_IMAGEOVERLAYCFG
NET_DVR_GET_SNAPCFG = _hk_struct_test.NET_DVR_GET_SNAPCFG
NET_DVR_SET_SNAPCFG = _hk_struct_test.NET_DVR_SET_SNAPCFG
NET_DVR_GET_VTPPARAM = _hk_struct_test.NET_DVR_GET_VTPPARAM
NET_DVR_SET_VTPPARAM = _hk_struct_test.NET_DVR_SET_VTPPARAM
NET_DVR_GET_SNAPENABLECFG = _hk_struct_test.NET_DVR_GET_SNAPENABLECFG
NET_DVR_SET_SNAPENABLECFG = _hk_struct_test.NET_DVR_SET_SNAPENABLECFG
NET_DVR_GET_POSTEPOLICECFG = _hk_struct_test.NET_DVR_GET_POSTEPOLICECFG
NET_DVR_SET_POSTEPOLICECFG = _hk_struct_test.NET_DVR_SET_POSTEPOLICECFG
NET_DVR_GET_JPEGCFG_V30 = _hk_struct_test.NET_DVR_GET_JPEGCFG_V30
NET_DVR_SET_JPEGCFG_V30 = _hk_struct_test.NET_DVR_SET_JPEGCFG_V30
NET_DVR_GET_SPRCFG = _hk_struct_test.NET_DVR_GET_SPRCFG
NET_DVR_SET_SPRCFG = _hk_struct_test.NET_DVR_SET_SPRCFG
NET_DVR_GET_PLCCFG = _hk_struct_test.NET_DVR_GET_PLCCFG
NET_DVR_SET_PLCCFG = _hk_struct_test.NET_DVR_SET_PLCCFG
NET_DVR_GET_DEVICESTATECFG = _hk_struct_test.NET_DVR_GET_DEVICESTATECFG
NET_DVR_SET_CALIBRATE_TIME = _hk_struct_test.NET_DVR_SET_CALIBRATE_TIME
NET_DVR_GET_CALIBRATE_TIME = _hk_struct_test.NET_DVR_GET_CALIBRATE_TIME
NET_DVR_GET_DEVICECFG_V40 = _hk_struct_test.NET_DVR_GET_DEVICECFG_V40
NET_DVR_SET_DEVICECFG_V40 = _hk_struct_test.NET_DVR_SET_DEVICECFG_V40
NET_DVR_GET_ZEROCHANCFG = _hk_struct_test.NET_DVR_GET_ZEROCHANCFG
NET_DVR_SET_ZEROCHANCFG = _hk_struct_test.NET_DVR_SET_ZEROCHANCFG
NET_DVR_GET_ZERO_PREVIEWCFG_V30 = _hk_struct_test.NET_DVR_GET_ZERO_PREVIEWCFG_V30
NET_DVR_SET_ZERO_PREVIEWCFG_V30 = _hk_struct_test.NET_DVR_SET_ZERO_PREVIEWCFG_V30
NET_DVR_SET_ZERO_ZOOM = _hk_struct_test.NET_DVR_SET_ZERO_ZOOM
NET_DVR_GET_ZERO_ZOOM = _hk_struct_test.NET_DVR_GET_ZERO_ZOOM
NET_DVR_NATASSOCIATECFG_GET = _hk_struct_test.NET_DVR_NATASSOCIATECFG_GET
NET_DVR_NATASSOCIATECFG_SET = _hk_struct_test.NET_DVR_NATASSOCIATECFG_SET
NET_DVR_GET_SNMPCFG = _hk_struct_test.NET_DVR_GET_SNMPCFG
NET_DVR_SET_SNMPCFG = _hk_struct_test.NET_DVR_SET_SNMPCFG
NET_DVR_GET_SNMPCFG_V30 = _hk_struct_test.NET_DVR_GET_SNMPCFG_V30
NET_DVR_SET_SNMPCFG_V30 = _hk_struct_test.NET_DVR_SET_SNMPCFG_V30
NET_DVR_VIDEOPLATFORMALARMCFG_GET = _hk_struct_test.NET_DVR_VIDEOPLATFORMALARMCFG_GET
NET_DVR_VIDEOPLATFORMALARMCFG_SET = _hk_struct_test.NET_DVR_VIDEOPLATFORMALARMCFG_SET
NET_DVR_GET_RAID_ADAPTER_INFO = _hk_struct_test.NET_DVR_GET_RAID_ADAPTER_INFO
NET_DVR_SET_RAID_ADAPTER_INFO = _hk_struct_test.NET_DVR_SET_RAID_ADAPTER_INFO
NET_DVR_MATRIX_BIGSCREENCFG_GET = _hk_struct_test.NET_DVR_MATRIX_BIGSCREENCFG_GET
NET_DVR_MATRIX_BIGSCREENCFG_SET = _hk_struct_test.NET_DVR_MATRIX_BIGSCREENCFG_SET
NET_DVR_GET_MB_PLATFORMPARA = _hk_struct_test.NET_DVR_GET_MB_PLATFORMPARA
NET_DVR_SET_MB_PLATFORMPARA = _hk_struct_test.NET_DVR_SET_MB_PLATFORMPARA
NET_DVR_GET_MB_DEVSTATUS = _hk_struct_test.NET_DVR_GET_MB_DEVSTATUS
NET_DVR_GET_DECODER_JOINT_CHAN = _hk_struct_test.NET_DVR_GET_DECODER_JOINT_CHAN
NET_DVR_SET_DECODER_JOINT_CHAN = _hk_struct_test.NET_DVR_SET_DECODER_JOINT_CHAN
NET_DVR_GET_NETCFG_MULTI = _hk_struct_test.NET_DVR_GET_NETCFG_MULTI
NET_DVR_SET_NETCFG_MULTI = _hk_struct_test.NET_DVR_SET_NETCFG_MULTI
NET_DVR_GET_NETCFG_MULTI_V50 = _hk_struct_test.NET_DVR_GET_NETCFG_MULTI_V50
NET_DVR_SET_NETCFG_MULTI_V50 = _hk_struct_test.NET_DVR_SET_NETCFG_MULTI_V50
NET_DVR_GET_CMSPARA = _hk_struct_test.NET_DVR_GET_CMSPARA
NET_DVR_SET_CMSPARA = _hk_struct_test.NET_DVR_SET_CMSPARA
NET_DVR_GET_DIALSTATUS = _hk_struct_test.NET_DVR_GET_DIALSTATUS
NET_DVR_GET_SMSRELATIVEPARA = _hk_struct_test.NET_DVR_GET_SMSRELATIVEPARA
NET_DVR_SET_SMSRELATIVEPARA = _hk_struct_test.NET_DVR_SET_SMSRELATIVEPARA
NET_DVR_GET_PINSTATUS = _hk_struct_test.NET_DVR_GET_PINSTATUS
NET_DVR_SET_PINCMD = _hk_struct_test.NET_DVR_SET_PINCMD
NET_DVR_SET_SENSOR_CFG = _hk_struct_test.NET_DVR_SET_SENSOR_CFG
NET_DVR_GET_SENSOR_CFG = _hk_struct_test.NET_DVR_GET_SENSOR_CFG
NET_DVR_SET_ALARMIN_PARAM = _hk_struct_test.NET_DVR_SET_ALARMIN_PARAM
NET_DVR_GET_ALARMIN_PARAM = _hk_struct_test.NET_DVR_GET_ALARMIN_PARAM
NET_DVR_SET_ALARMOUT_PARAM = _hk_struct_test.NET_DVR_SET_ALARMOUT_PARAM
NET_DVR_GET_ALARMOUT_PARAM = _hk_struct_test.NET_DVR_GET_ALARMOUT_PARAM
NET_DVR_SET_SIREN_PARAM = _hk_struct_test.NET_DVR_SET_SIREN_PARAM
NET_DVR_GET_SIREN_PARAM = _hk_struct_test.NET_DVR_GET_SIREN_PARAM
NET_DVR_SET_ALARM_RS485CFG = _hk_struct_test.NET_DVR_SET_ALARM_RS485CFG
NET_DVR_GET_ALARM_RS485CFG = _hk_struct_test.NET_DVR_GET_ALARM_RS485CFG
NET_DVR_GET_ALARMHOST_MAIN_STATUS = _hk_struct_test.NET_DVR_GET_ALARMHOST_MAIN_STATUS
NET_DVR_GET_ALARMHOST_OTHER_STATUS = _hk_struct_test.NET_DVR_GET_ALARMHOST_OTHER_STATUS
NET_DVR_SET_ALARMHOST_ENABLECFG = _hk_struct_test.NET_DVR_SET_ALARMHOST_ENABLECFG
NET_DVR_GET_ALARMHOST_ENABLECFG = _hk_struct_test.NET_DVR_GET_ALARMHOST_ENABLECFG
NET_DVR_SET_ALARM_CAMCFG = _hk_struct_test.NET_DVR_SET_ALARM_CAMCFG
NET_DVR_GET_ALARM_CAMCFG = _hk_struct_test.NET_DVR_GET_ALARM_CAMCFG
NET_DVR_GET_GATEWAY_CFG = _hk_struct_test.NET_DVR_GET_GATEWAY_CFG
NET_DVR_SET_GATEWAY_CFG = _hk_struct_test.NET_DVR_SET_GATEWAY_CFG
NET_DVR_GET_ALARMDIALMODECFG = _hk_struct_test.NET_DVR_GET_ALARMDIALMODECFG
NET_DVR_SET_ALARMDIALMODECFG = _hk_struct_test.NET_DVR_SET_ALARMDIALMODECFG
NET_DVR_SET_ALARMIN_PARAM_V50 = _hk_struct_test.NET_DVR_SET_ALARMIN_PARAM_V50
NET_DVR_GET_ALARMIN_PARAM_V50 = _hk_struct_test.NET_DVR_GET_ALARMIN_PARAM_V50
NET_DVR_SET_WINCFG = _hk_struct_test.NET_DVR_SET_WINCFG
NET_DVR_GET_ALARMHOSTDIALSETUPMODE = _hk_struct_test.NET_DVR_GET_ALARMHOSTDIALSETUPMODE
NET_DVR_SET_ALARMHOSTDIALSETUPMODE = _hk_struct_test.NET_DVR_SET_ALARMHOSTDIALSETUPMODE
NET_DVR_SET_SUBSYSTEM_ALARM = _hk_struct_test.NET_DVR_SET_SUBSYSTEM_ALARM
NET_DVR_GET_SUBSYSTEM_ALARM = _hk_struct_test.NET_DVR_GET_SUBSYSTEM_ALARM
NET_DVR_GET_WHITELIST_ALARM = _hk_struct_test.NET_DVR_GET_WHITELIST_ALARM
NET_DVR_SET_WHITELIST_ALARM = _hk_struct_test.NET_DVR_SET_WHITELIST_ALARM
NET_DVR_GET_ALARMHOST_MODULE_LIST = _hk_struct_test.NET_DVR_GET_ALARMHOST_MODULE_LIST
NET_DVR_SET_PRIOR_ALARM = _hk_struct_test.NET_DVR_SET_PRIOR_ALARM
NET_DVR_GET_PRIOR_ALARM = _hk_struct_test.NET_DVR_GET_PRIOR_ALARM
NET_DVR_SET_TAMPER_ALARMIN_PARAM = _hk_struct_test.NET_DVR_SET_TAMPER_ALARMIN_PARAM
NET_DVR_GET_TAMPER_ALARMIN_PARAM = _hk_struct_test.NET_DVR_GET_TAMPER_ALARMIN_PARAM
NET_DVR_GET_HOLIDAY_PARAM_CFG = _hk_struct_test.NET_DVR_GET_HOLIDAY_PARAM_CFG
NET_DVR_SET_HOLIDAY_PARAM_CFG = _hk_struct_test.NET_DVR_SET_HOLIDAY_PARAM_CFG
NET_DVR_GET_MOTION_HOLIDAY_HANDLE = _hk_struct_test.NET_DVR_GET_MOTION_HOLIDAY_HANDLE
NET_DVR_SET_MOTION_HOLIDAY_HANDLE = _hk_struct_test.NET_DVR_SET_MOTION_HOLIDAY_HANDLE
NET_DVR_GET_VILOST_HOLIDAY_HANDLE = _hk_struct_test.NET_DVR_GET_VILOST_HOLIDAY_HANDLE
NET_DVR_SET_VILOST_HOLIDAY_HANDLE = _hk_struct_test.NET_DVR_SET_VILOST_HOLIDAY_HANDLE
NET_DVR_GET_HIDE_HOLIDAY_HANDLE = _hk_struct_test.NET_DVR_GET_HIDE_HOLIDAY_HANDLE
NET_DVR_SET_HIDE_HOLIDAY_HANDLE = _hk_struct_test.NET_DVR_SET_HIDE_HOLIDAY_HANDLE
NET_DVR_GET_ALARMIN_HOLIDAY_HANDLE = _hk_struct_test.NET_DVR_GET_ALARMIN_HOLIDAY_HANDLE
NET_DVR_SET_ALARMIN_HOLIDAY_HANDLE = _hk_struct_test.NET_DVR_SET_ALARMIN_HOLIDAY_HANDLE
NET_DVR_GET_ALARMOUT_HOLIDAY_HANDLE = _hk_struct_test.NET_DVR_GET_ALARMOUT_HOLIDAY_HANDLE
NET_DVR_SET_ALARMOUT_HOLIDAY_HANDLE = _hk_struct_test.NET_DVR_SET_ALARMOUT_HOLIDAY_HANDLE
NET_DVR_GET_HOLIDAY_RECORD = _hk_struct_test.NET_DVR_GET_HOLIDAY_RECORD
NET_DVR_SET_HOLIDAY_RECORD = _hk_struct_test.NET_DVR_SET_HOLIDAY_RECORD
NET_DVR_GET_NETWORK_BONDING = _hk_struct_test.NET_DVR_GET_NETWORK_BONDING
NET_DVR_SET_NETWORK_BONDING = _hk_struct_test.NET_DVR_SET_NETWORK_BONDING
NET_DVR_GET_LINK_STATUS = _hk_struct_test.NET_DVR_GET_LINK_STATUS
NET_DVR_GET_DISK_QUOTA_CFG = _hk_struct_test.NET_DVR_GET_DISK_QUOTA_CFG
NET_DVR_SET_DISK_QUOTA_CFG = _hk_struct_test.NET_DVR_SET_DISK_QUOTA_CFG
NET_DVR_GET_JPEG_CAPTURE_CFG = _hk_struct_test.NET_DVR_GET_JPEG_CAPTURE_CFG
NET_DVR_SET_JPEG_CAPTURE_CFG = _hk_struct_test.NET_DVR_SET_JPEG_CAPTURE_CFG
NET_DVR_GET_SCHED_CAPTURECFG = _hk_struct_test.NET_DVR_GET_SCHED_CAPTURECFG
NET_DVR_SET_SCHED_CAPTURECFG = _hk_struct_test.NET_DVR_SET_SCHED_CAPTURECFG
NET_DVR_GET_VGA_PREVIEWCFG = _hk_struct_test.NET_DVR_GET_VGA_PREVIEWCFG
NET_DVR_SET_VGA_PREVIEWCFG = _hk_struct_test.NET_DVR_SET_VGA_PREVIEWCFG
NET_DVR_GET_VIDEO_INPUT_EFFECT = _hk_struct_test.NET_DVR_GET_VIDEO_INPUT_EFFECT
NET_DVR_SET_VIDEO_INPUT_EFFECT = _hk_struct_test.NET_DVR_SET_VIDEO_INPUT_EFFECT
NET_DVR_GET_STORAGE_SERVER_SWITCH = _hk_struct_test.NET_DVR_GET_STORAGE_SERVER_SWITCH
NET_DVR_SET_STORAGE_SERVER_SWITCH = _hk_struct_test.NET_DVR_SET_STORAGE_SERVER_SWITCH
NET_DVR_GET_DISK_QUOTA_CFG_V60 = _hk_struct_test.NET_DVR_GET_DISK_QUOTA_CFG_V60
NET_DVR_SET_DISK_QUOTA_CFG_V60 = _hk_struct_test.NET_DVR_SET_DISK_QUOTA_CFG_V60
NET_DVR_GET_OPTICAL_CHANNEL = _hk_struct_test.NET_DVR_GET_OPTICAL_CHANNEL
NET_DVR_SET_OPTICAL_CHANNEL = _hk_struct_test.NET_DVR_SET_OPTICAL_CHANNEL
NET_DVR_GET_FIBER_CASCADE = _hk_struct_test.NET_DVR_GET_FIBER_CASCADE
NET_DVR_SET_FIBER_CASCADE = _hk_struct_test.NET_DVR_SET_FIBER_CASCADE
NET_DVR_GET_SPARTAN_STATUS = _hk_struct_test.NET_DVR_GET_SPARTAN_STATUS
NET_DVR_SET_SPARTAN_STATUS = _hk_struct_test.NET_DVR_SET_SPARTAN_STATUS
NET_DVR_GET_ETHERNET_CHANNEL = _hk_struct_test.NET_DVR_GET_ETHERNET_CHANNEL
NET_DVR_SET_ETHERMET_CHANNEL = _hk_struct_test.NET_DVR_SET_ETHERMET_CHANNEL
NET_DVR_OPTICAL_REBOOT = _hk_struct_test.NET_DVR_OPTICAL_REBOOT
NET_DVR_SET_AUDIOCHAN_CFG = _hk_struct_test.NET_DVR_SET_AUDIOCHAN_CFG
NET_DVR_GET_AUDIOCHAN_CFG = _hk_struct_test.NET_DVR_GET_AUDIOCHAN_CFG
NET_DVR_SET_MATRIX_BASE_CFG = _hk_struct_test.NET_DVR_SET_MATRIX_BASE_CFG
NET_DVR_GET_MATRIX_BASE_CFG = _hk_struct_test.NET_DVR_GET_MATRIX_BASE_CFG
NET_DVR_SWITCH_MATRIX_IO = _hk_struct_test.NET_DVR_SWITCH_MATRIX_IO
NET_DVR_GET_MATRIX_IO_RELATION = _hk_struct_test.NET_DVR_GET_MATRIX_IO_RELATION
NET_DVR_V6PSUBSYSTEMARAM_GET = _hk_struct_test.NET_DVR_V6PSUBSYSTEMARAM_GET
NET_DVR_V6PSUBSYSTEMARAM_SET = _hk_struct_test.NET_DVR_V6PSUBSYSTEMARAM_SET
NET_DVR_GET_ALLWINCFG = _hk_struct_test.NET_DVR_GET_ALLWINCFG
NET_DVR_BIGSCREENASSOCIATECFG_GET = _hk_struct_test.NET_DVR_BIGSCREENASSOCIATECFG_GET
NET_DVR_BIGSCREENASSOCIATECFG_SET = _hk_struct_test.NET_DVR_BIGSCREENASSOCIATECFG_SET
NET_DVR_GETSCREENINFO = _hk_struct_test.NET_DVR_GETSCREENINFO
NET_DVR_SETSCREENINFO = _hk_struct_test.NET_DVR_SETSCREENINFO
NET_DVR_GET_SCREEN_WINCFG = _hk_struct_test.NET_DVR_GET_SCREEN_WINCFG
NET_DVR_LAYOUTLIST_GET = _hk_struct_test.NET_DVR_LAYOUTLIST_GET
NET_DVR_SET_LAYOUTCFG = _hk_struct_test.NET_DVR_SET_LAYOUTCFG
NET_DVR_LAYOUTCTRL = _hk_struct_test.NET_DVR_LAYOUTCTRL
NET_DVR_INPUTLIST_GET = _hk_struct_test.NET_DVR_INPUTLIST_GET
NET_DVR_SET_INPUTSTREAMCFG = _hk_struct_test.NET_DVR_SET_INPUTSTREAMCFG
NET_DVR_OUTPUT_SET = _hk_struct_test.NET_DVR_OUTPUT_SET
NET_DVR_OUTPUT_GET = _hk_struct_test.NET_DVR_OUTPUT_GET
NET_DVR_SET_OSDCFG = _hk_struct_test.NET_DVR_SET_OSDCFG
NET_DVR_GET_OSDCFG = _hk_struct_test.NET_DVR_GET_OSDCFG
NET_DVR_BIGSCREEN_GETSERIAL = _hk_struct_test.NET_DVR_BIGSCREEN_GETSERIAL
NET_DVR_GET_PLANLIST = _hk_struct_test.NET_DVR_GET_PLANLIST
NET_DVR_SET_PLAN = _hk_struct_test.NET_DVR_SET_PLAN
NET_DVR_CTRL_PLAN = _hk_struct_test.NET_DVR_CTRL_PLAN
NET_DVR_GET_DEVICE_RUN_STATUS = _hk_struct_test.NET_DVR_GET_DEVICE_RUN_STATUS
NET_DVR_GET_EXTERNAL_MATRIX_CFG = _hk_struct_test.NET_DVR_GET_EXTERNAL_MATRIX_CFG
NET_DVR_SET_EXTERNAL_MATRIX_CFG = _hk_struct_test.NET_DVR_SET_EXTERNAL_MATRIX_CFG
NET_DVR_GET_OUTPUT_SCREEN_RELATION = _hk_struct_test.NET_DVR_GET_OUTPUT_SCREEN_RELATION
NET_DVR_SET_OUTPUT_SCREEN_RELATION = _hk_struct_test.NET_DVR_SET_OUTPUT_SCREEN_RELATION
NET_DVR_GET_VCS_USER_CFG = _hk_struct_test.NET_DVR_GET_VCS_USER_CFG
NET_DVR_SET_VCS_USER_CFG = _hk_struct_test.NET_DVR_SET_VCS_USER_CFG
NET_DVR_CONTROL_SCREEN = _hk_struct_test.NET_DVR_CONTROL_SCREEN
NET_DVR_GET_EXTERNAL_MATRIX_CFG_V50 = _hk_struct_test.NET_DVR_GET_EXTERNAL_MATRIX_CFG_V50
NET_DVR_SET_EXTERNAL_MATRIX_CFG_V50 = _hk_struct_test.NET_DVR_SET_EXTERNAL_MATRIX_CFG_V50
NET_DVR_GET_DEV_BASEINFO = _hk_struct_test.NET_DVR_GET_DEV_BASEINFO
NET_DVR_SET_DEV_BASEINFO = _hk_struct_test.NET_DVR_SET_DEV_BASEINFO
NET_DVR_GET_DEV_NETINFO = _hk_struct_test.NET_DVR_GET_DEV_NETINFO
NET_DVR_SET_DEV_NETINFO = _hk_struct_test.NET_DVR_SET_DEV_NETINFO
NET_DVR_GET_SIGNAL_SOURCE_INFO = _hk_struct_test.NET_DVR_GET_SIGNAL_SOURCE_INFO
NET_DVR_SET_SIGNAL_SOURCE_INFO = _hk_struct_test.NET_DVR_SET_SIGNAL_SOURCE_INFO
NET_DVR_ADJUST_PIC_V40 = _hk_struct_test.NET_DVR_ADJUST_PIC_V40
NET_DVR_RESTORE_V40 = _hk_struct_test.NET_DVR_RESTORE_V40
NET_DVR_SET_NET_SIGNAL = _hk_struct_test.NET_DVR_SET_NET_SIGNAL
NET_DVR_REBOOT_V40 = _hk_struct_test.NET_DVR_REBOOT_V40
NET_DVR_CONTROL_PICTURE_V41 = _hk_struct_test.NET_DVR_CONTROL_PICTURE_V41
NET_DVR_GET_AUTO_REBOOT_CFG = _hk_struct_test.NET_DVR_GET_AUTO_REBOOT_CFG
NET_DVR_SET_AUTO_REBOOT_CFG = _hk_struct_test.NET_DVR_SET_AUTO_REBOOT_CFG
NET_DVR_GET_TRUNK_USE_STATE = _hk_struct_test.NET_DVR_GET_TRUNK_USE_STATE
NET_DVR_SET_PTZ_CTRL_INFO = _hk_struct_test.NET_DVR_SET_PTZ_CTRL_INFO
NET_DVR_GET_PTZ_CTRL_INFO = _hk_struct_test.NET_DVR_GET_PTZ_CTRL_INFO
NET_DVR_GET_PTZ_STATUS = _hk_struct_test.NET_DVR_GET_PTZ_STATUS
NET_DVR_GET_DISP_ROUTE_LIST = _hk_struct_test.NET_DVR_GET_DISP_ROUTE_LIST
NET_DVR_GET_DEC_RESOURCE_LIST = _hk_struct_test.NET_DVR_GET_DEC_RESOURCE_LIST
NET_DVR_SET_DEC_RESOURCE_LIST = _hk_struct_test.NET_DVR_SET_DEC_RESOURCE_LIST
NET_DVR_GET_DEC_YUV = _hk_struct_test.NET_DVR_GET_DEC_YUV
NET_DVR_SET_DEC_YUV = _hk_struct_test.NET_DVR_SET_DEC_YUV
NET_DVR_GET_DEC_RESOUCE = _hk_struct_test.NET_DVR_GET_DEC_RESOUCE
NET_DVR_FREE_DEC_RESOURCE = _hk_struct_test.NET_DVR_FREE_DEC_RESOURCE
NET_DVR_SET_VIDEOWALLDISPLAYMODE = _hk_struct_test.NET_DVR_SET_VIDEOWALLDISPLAYMODE
NET_DVR_GET_VIDEOWALLDISPLAYMODE = _hk_struct_test.NET_DVR_GET_VIDEOWALLDISPLAYMODE
NET_DVR_GET_VIDEOWALLDISPLAYNO = _hk_struct_test.NET_DVR_GET_VIDEOWALLDISPLAYNO
NET_DVR_SET_VIDEOWALLDISPLAYPOSITION = _hk_struct_test.NET_DVR_SET_VIDEOWALLDISPLAYPOSITION
NET_DVR_GET_VIDEOWALLDISPLAYPOSITION = _hk_struct_test.NET_DVR_GET_VIDEOWALLDISPLAYPOSITION
NET_DVR_GET_VIDEOWALLWINDOWPOSITION = _hk_struct_test.NET_DVR_GET_VIDEOWALLWINDOWPOSITION
NET_DVR_SET_VIDEOWALLWINDOWPOSITION = _hk_struct_test.NET_DVR_SET_VIDEOWALLWINDOWPOSITION
NET_DVR_VIDEOWALLWINDOW_CLOSEALL = _hk_struct_test.NET_DVR_VIDEOWALLWINDOW_CLOSEALL
NET_DVR_SET_VIRTUALLED = _hk_struct_test.NET_DVR_SET_VIRTUALLED
NET_DVR_GET_VIRTUALLED = _hk_struct_test.NET_DVR_GET_VIRTUALLED
NET_DVR_GET_IMAGE_CUT_MODE = _hk_struct_test.NET_DVR_GET_IMAGE_CUT_MODE
NET_DVR_SET_IMAGE_CUT_MODE = _hk_struct_test.NET_DVR_SET_IMAGE_CUT_MODE
NET_DVR_GET_USING_SERIALPORT = _hk_struct_test.NET_DVR_GET_USING_SERIALPORT
NET_DVR_SET_USING_SERIALPORT = _hk_struct_test.NET_DVR_SET_USING_SERIALPORT
NET_DVR_SCENE_CONTROL = _hk_struct_test.NET_DVR_SCENE_CONTROL
NET_DVR_GET_CURRENT_SCENE = _hk_struct_test.NET_DVR_GET_CURRENT_SCENE
NET_DVR_GET_VW_SCENE_PARAM = _hk_struct_test.NET_DVR_GET_VW_SCENE_PARAM
NET_DVR_SET_VW_SCENE_PARAM = _hk_struct_test.NET_DVR_SET_VW_SCENE_PARAM
NET_DVR_DISPLAY_CHANNO_CONTROL = _hk_struct_test.NET_DVR_DISPLAY_CHANNO_CONTROL
NET_DVR_GET_WIN_DEC_INFO = _hk_struct_test.NET_DVR_GET_WIN_DEC_INFO
NET_DVR_RESET_VIDEOWALLDISPLAYPOSITION = _hk_struct_test.NET_DVR_RESET_VIDEOWALLDISPLAYPOSITION
NET_DVR_SET_VW_AUDIO_CFG = _hk_struct_test.NET_DVR_SET_VW_AUDIO_CFG
NET_DVR_GET_VW_AUDIO_CFG = _hk_struct_test.NET_DVR_GET_VW_AUDIO_CFG
NET_DVR_GET_GBT28181_DECCHANINFO_CFG = _hk_struct_test.NET_DVR_GET_GBT28181_DECCHANINFO_CFG
NET_DVR_SET_GBT28181_DECCHANINFO_CFG = _hk_struct_test.NET_DVR_SET_GBT28181_DECCHANINFO_CFG
NET_DVR_SET_MAINBOARD_SERIAL = _hk_struct_test.NET_DVR_SET_MAINBOARD_SERIAL
NET_DVR_GET_MAINBOARD_SERIAL = _hk_struct_test.NET_DVR_GET_MAINBOARD_SERIAL
NET_DVR_GET_SUBBOARD_INFO = _hk_struct_test.NET_DVR_GET_SUBBOARD_INFO
NET_DVR_GET_SUBBOARD_EXCEPTION = _hk_struct_test.NET_DVR_GET_SUBBOARD_EXCEPTION
NET_DVR_GET_CAMERACHAN_SERIALCFG = _hk_struct_test.NET_DVR_GET_CAMERACHAN_SERIALCFG
NET_DVR_SET_CAMERACHAN_SERIALCFG = _hk_struct_test.NET_DVR_SET_CAMERACHAN_SERIALCFG
NET_DVR_GET_MATRIX_STATUS = _hk_struct_test.NET_DVR_GET_MATRIX_STATUS
NET_SET_MULTIFUNCTION_SERIALCFG = _hk_struct_test.NET_SET_MULTIFUNCTION_SERIALCFG
NET_GET_MULTIFUNCTION_SERIALCFG = _hk_struct_test.NET_GET_MULTIFUNCTION_SERIALCFG
NET_DVR_PTZ_3D_SPEED = _hk_struct_test.NET_DVR_PTZ_3D_SPEED
NET_DVR_GET_SIGNAL_JOINT = _hk_struct_test.NET_DVR_GET_SIGNAL_JOINT
NET_DVR_SET_SIGNAL_JOINT = _hk_struct_test.NET_DVR_SET_SIGNAL_JOINT
NET_DVR_SIGNAL_CUT = _hk_struct_test.NET_DVR_SIGNAL_CUT
NET_DVR_DYNAMIC_DECODE_BATCH = _hk_struct_test.NET_DVR_DYNAMIC_DECODE_BATCH
NET_DVR_DECSWITCH_SET_BATCH = _hk_struct_test.NET_DVR_DECSWITCH_SET_BATCH
NET_DVR_DECSWITCH_GET_BATCH = _hk_struct_test.NET_DVR_DECSWITCH_GET_BATCH
NET_DVR_GET_ALL_SIGNAL_JOINT = _hk_struct_test.NET_DVR_GET_ALL_SIGNAL_JOINT
NET_DVR_GET_PLAYING_PLAN = _hk_struct_test.NET_DVR_GET_PLAYING_PLAN
NET_DVR_WALL_RELATION_GET = _hk_struct_test.NET_DVR_WALL_RELATION_GET
NET_DVR_WALL_RELATION_SET = _hk_struct_test.NET_DVR_WALL_RELATION_SET
NET_DVR_SET_INPUTSTREAMCFG_V40 = _hk_struct_test.NET_DVR_SET_INPUTSTREAMCFG_V40
NET_DVR_PTZCFG_INPUTSTREAM_GET = _hk_struct_test.NET_DVR_PTZCFG_INPUTSTREAM_GET
NET_DVR_PTZCFG_INPUTSTREAM_SET = _hk_struct_test.NET_DVR_PTZCFG_INPUTSTREAM_SET
NET_DVR_SIGNAL_CUTPARAM_GET = _hk_struct_test.NET_DVR_SIGNAL_CUTPARAM_GET
NET_DVR_GET_SUBSYSTEM_NETCFG = _hk_struct_test.NET_DVR_GET_SUBSYSTEM_NETCFG
NET_DVR_SET_SUBSYSTEM_NETCFG = _hk_struct_test.NET_DVR_SET_SUBSYSTEM_NETCFG
NET_DVR_DEL_SIGNAL_JOINT = _hk_struct_test.NET_DVR_DEL_SIGNAL_JOINT
NET_DVR_GET_PICTURE_INFO = _hk_struct_test.NET_DVR_GET_PICTURE_INFO
NET_DVR_SET_PICTURE_INFO = _hk_struct_test.NET_DVR_SET_PICTURE_INFO
NET_DVR_GET_VIDEO_INFO = _hk_struct_test.NET_DVR_GET_VIDEO_INFO
NET_DVR_SET_VIDEO_INFO = _hk_struct_test.NET_DVR_SET_VIDEO_INFO
NET_DVR_SET_PLAYLIST = _hk_struct_test.NET_DVR_SET_PLAYLIST
NET_DVR_GET_PLAYLIST = _hk_struct_test.NET_DVR_GET_PLAYLIST
NET_DVR_GET_ALL_PLAYLIST = _hk_struct_test.NET_DVR_GET_ALL_PLAYLIST
NET_DVR_PLAYITEM_CONTROL = _hk_struct_test.NET_DVR_PLAYITEM_CONTROL
NET_DVR_SET_PLAYPLAN_TEMPLATE = _hk_struct_test.NET_DVR_SET_PLAYPLAN_TEMPLATE
NET_DVR_GET_PLAYPLAN_TEMPLATE = _hk_struct_test.NET_DVR_GET_PLAYPLAN_TEMPLATE
NET_DVR_GET_ALL_PLAYPLAN_TEMPLATE = _hk_struct_test.NET_DVR_GET_ALL_PLAYPLAN_TEMPLATE
NET_DVR_SET_WINDOW_PLAYPLAN = _hk_struct_test.NET_DVR_SET_WINDOW_PLAYPLAN
NET_DVR_GET_WINDOW_PLAYPLAN = _hk_struct_test.NET_DVR_GET_WINDOW_PLAYPLAN
NET_DVR_TOPLAY_ITEM = _hk_struct_test.NET_DVR_TOPLAY_ITEM
NET_DVR_DEVICE_PLAY_CONTROL = _hk_struct_test.NET_DVR_DEVICE_PLAY_CONTROL
NET_DVR_GET_PLAY_INFO = _hk_struct_test.NET_DVR_GET_PLAY_INFO
NET_DVR_GET_ALL_PICTURE_INFO = _hk_struct_test.NET_DVR_GET_ALL_PICTURE_INFO
NET_DVR_GET_ALL_VIDEO_INFO = _hk_struct_test.NET_DVR_GET_ALL_VIDEO_INFO
NET_DVR_DELETE_VIDEO_FILE = _hk_struct_test.NET_DVR_DELETE_VIDEO_FILE
NET_DVR_GET_ALARMHOSTSUBSYSTEM_CFG = _hk_struct_test.NET_DVR_GET_ALARMHOSTSUBSYSTEM_CFG
NET_DVR_SET_ALARMHOSTSUBSYSTEM_CFG = _hk_struct_test.NET_DVR_SET_ALARMHOSTSUBSYSTEM_CFG
NET_DVR_GETEXTENDALARMININFO = _hk_struct_test.NET_DVR_GETEXTENDALARMININFO
NET_DVR_MODIFYALARMINNO = _hk_struct_test.NET_DVR_MODIFYALARMINNO
NET_DVR_GET_ALARMHOST_WIRELESS_NETWORK_CFG = _hk_struct_test.NET_DVR_GET_ALARMHOST_WIRELESS_NETWORK_CFG
NET_DVR_SET_ALARMHOST_WIRELESS_NETWORK_CFG = _hk_struct_test.NET_DVR_SET_ALARMHOST_WIRELESS_NETWORK_CFG
NET_DVR_GET_ALARMHOST_NETCFG = _hk_struct_test.NET_DVR_GET_ALARMHOST_NETCFG
NET_DVR_SET_ALARMHOST_NETCFG = _hk_struct_test.NET_DVR_SET_ALARMHOST_NETCFG
NET_DVR_GET_LED_SCREEN_CFG = _hk_struct_test.NET_DVR_GET_LED_SCREEN_CFG
NET_DVR_SET_LED_SCREEN_CFG = _hk_struct_test.NET_DVR_SET_LED_SCREEN_CFG
NET_DVR_GET_LED_CONTENT_CFG = _hk_struct_test.NET_DVR_GET_LED_CONTENT_CFG
NET_DVR_SET_LED_CONTENT_CFG = _hk_struct_test.NET_DVR_SET_LED_CONTENT_CFG
NET_DVR_TURNON_LED = _hk_struct_test.NET_DVR_TURNON_LED
NET_DVR_TURNOFF_LED = _hk_struct_test.NET_DVR_TURNOFF_LED
NET_DVR_GET_LED_TIMER_SWITCH = _hk_struct_test.NET_DVR_GET_LED_TIMER_SWITCH
NET_DVR_SET_LED_TIMER_SWITCH = _hk_struct_test.NET_DVR_SET_LED_TIMER_SWITCH
NET_DVR_SET_LED_BRIGHTNESS = _hk_struct_test.NET_DVR_SET_LED_BRIGHTNESS
NET_DVR_GET_LED_TIMER_BRIGHTNESS = _hk_struct_test.NET_DVR_GET_LED_TIMER_BRIGHTNESS
NET_DVR_SET_LED_TIMER_BRIGHTNESS = _hk_struct_test.NET_DVR_SET_LED_TIMER_BRIGHTNESS
NET_DVR_LED_CHECKTIME = _hk_struct_test.NET_DVR_LED_CHECKTIME
NET_DVR_GET_ALARMHOST_AUDIO_ASSOCIATE_ALARM = _hk_struct_test.NET_DVR_GET_ALARMHOST_AUDIO_ASSOCIATE_ALARM
NET_DVR_SET_ALARMHOST_AUDIO_ASSOCIATE_ALARM = _hk_struct_test.NET_DVR_SET_ALARMHOST_AUDIO_ASSOCIATE_ALARM
NET_DVR_GET_LED_STATUS = _hk_struct_test.NET_DVR_GET_LED_STATUS
NET_DVR_CLOSE_SUBSYSTEM_FAULT_ALARM = _hk_struct_test.NET_DVR_CLOSE_SUBSYSTEM_FAULT_ALARM
NET_DVR_SET_SUBSYSTEM_BYPASS = _hk_struct_test.NET_DVR_SET_SUBSYSTEM_BYPASS
NET_DVR_CANCEL_SUBSYSTEM_BYPASS = _hk_struct_test.NET_DVR_CANCEL_SUBSYSTEM_BYPASS
NET_DVR_GET_ALARMHOST_SUBSYSTEM_CFG_EX = _hk_struct_test.NET_DVR_GET_ALARMHOST_SUBSYSTEM_CFG_EX
NET_DVR_SET_ALARMHOST_SUBSYSTEM_CFG_EX = _hk_struct_test.NET_DVR_SET_ALARMHOST_SUBSYSTEM_CFG_EX
NET_DVR_GET_ALARMHOST_PRINTER_CFG = _hk_struct_test.NET_DVR_GET_ALARMHOST_PRINTER_CFG
NET_DVR_SET_ALARMHOST_PRINTER_CFG = _hk_struct_test.NET_DVR_SET_ALARMHOST_PRINTER_CFG
NET_DVR_GET_ALARMHOST_ZONE_LIST_IN_SUBSYSTEM = _hk_struct_test.NET_DVR_GET_ALARMHOST_ZONE_LIST_IN_SUBSYSTEM
NET_DVR_GET_ALARMHOST_TRIGGER_LIST = _hk_struct_test.NET_DVR_GET_ALARMHOST_TRIGGER_LIST
NET_DVR_ARM_ALARMHOST_SUBSYSTEM = _hk_struct_test.NET_DVR_ARM_ALARMHOST_SUBSYSTEM
NET_DVR_GET_ALARMHOST_EVENT_TRIG_ALARMOUT_CFG = _hk_struct_test.NET_DVR_GET_ALARMHOST_EVENT_TRIG_ALARMOUT_CFG
NET_DVR_SET_ALARMHOST_EVENT_TRIG_ALARMOUT_CFG = _hk_struct_test.NET_DVR_SET_ALARMHOST_EVENT_TRIG_ALARMOUT_CFG
NET_DVR_GET_ALARMHOST_FAULT_CFG = _hk_struct_test.NET_DVR_GET_ALARMHOST_FAULT_CFG
NET_DVR_SET_ALARMHOST_FAULT_CFG = _hk_struct_test.NET_DVR_SET_ALARMHOST_FAULT_CFG
NET_DVR_SEARCH_ARMHOST_EXTERNAL_MODULE = _hk_struct_test.NET_DVR_SEARCH_ARMHOST_EXTERNAL_MODULE
NET_DVR_REGISTER_ALARMHOST_EXTERNAL_MODULE = _hk_struct_test.NET_DVR_REGISTER_ALARMHOST_EXTERNAL_MODULE
NET_DVR_CLOSE_ALARMHOST_OVERALL_FAULT_ALARM = _hk_struct_test.NET_DVR_CLOSE_ALARMHOST_OVERALL_FAULT_ALARM
NET_DVR_GET_SAFETYCABIN_WORK_MODE = _hk_struct_test.NET_DVR_GET_SAFETYCABIN_WORK_MODE
NET_DVR_SET_SAFETYCABIN_WORK_MODE = _hk_struct_test.NET_DVR_SET_SAFETYCABIN_WORK_MODE
NET_DVR_GET_SAFETYCABIN_PERSON_SIGNAL_CFG = _hk_struct_test.NET_DVR_GET_SAFETYCABIN_PERSON_SIGNAL_CFG
NET_DVR_SET_SAFETYCABIN_PERSON_SIGNAL_CFG = _hk_struct_test.NET_DVR_SET_SAFETYCABIN_PERSON_SIGNAL_CFG
NET_DVR_GET_ALARMHOST_MODULE_CFG = _hk_struct_test.NET_DVR_GET_ALARMHOST_MODULE_CFG
NET_DVR_GET_ALARMHOST_EXTERNAL_DEVICE_STATE = _hk_struct_test.NET_DVR_GET_ALARMHOST_EXTERNAL_DEVICE_STATE
NET_DVR_SET_ALARMHOST_EXTERNAL_DEVICE_LIMIT_VALUE = _hk_struct_test.NET_DVR_SET_ALARMHOST_EXTERNAL_DEVICE_LIMIT_VALUE
NET_DVR_GET_ALARMHOST_EXTERNAL_DEVICE_LIMIT_VALUE = _hk_struct_test.NET_DVR_GET_ALARMHOST_EXTERNAL_DEVICE_LIMIT_VALUE
NET_DVR_GET_ALARMHOST_SENSOR_JOINT_CFG = _hk_struct_test.NET_DVR_GET_ALARMHOST_SENSOR_JOINT_CFG
NET_DVR_SET_ALARMHOST_SENSOR_JOINT_CFG = _hk_struct_test.NET_DVR_SET_ALARMHOST_SENSOR_JOINT_CFG
NET_DVR_SET_ALARMHOST_RS485_SLOT_CFG = _hk_struct_test.NET_DVR_SET_ALARMHOST_RS485_SLOT_CFG
NET_DVR_GET_ALARMHOST_RS485_SLOT_CFG = _hk_struct_test.NET_DVR_GET_ALARMHOST_RS485_SLOT_CFG
NET_DVR_GET_ALL_VARIABLE_INFO = _hk_struct_test.NET_DVR_GET_ALL_VARIABLE_INFO
NET_DVR_GET_ALARM_POINT_CFG = _hk_struct_test.NET_DVR_GET_ALARM_POINT_CFG
NET_DVR_SET_ALARM_POINT_CFG = _hk_struct_test.NET_DVR_SET_ALARM_POINT_CFG
NET_DVR_GET_HISTORY_VALUE = _hk_struct_test.NET_DVR_GET_HISTORY_VALUE
NET_DVR_GET_ALARMHOST_ALARM_MODE = _hk_struct_test.NET_DVR_GET_ALARMHOST_ALARM_MODE
NET_DVR_SET_ALARMHOST_ALARM_MODE = _hk_struct_test.NET_DVR_SET_ALARMHOST_ALARM_MODE
NET_DVR_GET_ALARMHOST_SENSOR_VALUE = _hk_struct_test.NET_DVR_GET_ALARMHOST_SENSOR_VALUE
NET_DVR_GET_ALARMHOST_REPORT_CENTER_V40 = _hk_struct_test.NET_DVR_GET_ALARMHOST_REPORT_CENTER_V40
NET_DVR_SET_ALARMHOST_REPORT_CENTER_V40 = _hk_struct_test.NET_DVR_SET_ALARMHOST_REPORT_CENTER_V40
NET_DVR_GET_OUTPUT_SCHEDULE_RULECFG = _hk_struct_test.NET_DVR_GET_OUTPUT_SCHEDULE_RULECFG
NET_DVR_SET_OUTPUT_SCHEDULE_RULECFG = _hk_struct_test.NET_DVR_SET_OUTPUT_SCHEDULE_RULECFG
NET_DVR_GET_CMS_CFG = _hk_struct_test.NET_DVR_GET_CMS_CFG
NET_DVR_SET_CMS_CFG = _hk_struct_test.NET_DVR_SET_CMS_CFG
NET_DVR_GET_PASSTHROUGH_CAP = _hk_struct_test.NET_DVR_GET_PASSTHROUGH_CAP
NET_DVR_GET_ALARMHOST_MAIN_STATUS_V40 = _hk_struct_test.NET_DVR_GET_ALARMHOST_MAIN_STATUS_V40
NET_DVR_GET_ALARMHOST_MAIN_STATUS_V51 = _hk_struct_test.NET_DVR_GET_ALARMHOST_MAIN_STATUS_V51
NET_DVR_GET_ALARM_CAPTRUE_CFG = _hk_struct_test.NET_DVR_GET_ALARM_CAPTRUE_CFG
NET_DVR_SET_ALARM_CAPTRUE_CFG = _hk_struct_test.NET_DVR_SET_ALARM_CAPTRUE_CFG
NET_DVR_GET_ONE_OUTPUT_SCH_RULECFG_V40 = _hk_struct_test.NET_DVR_GET_ONE_OUTPUT_SCH_RULECFG_V40
NET_DVR_SET_ONE_OUTPUT_SCH_RULECFG_V40 = _hk_struct_test.NET_DVR_SET_ONE_OUTPUT_SCH_RULECFG_V40
NET_DVR_GET_OUTPUT_SCHEDULE_RULECFG_V40 = _hk_struct_test.NET_DVR_GET_OUTPUT_SCHEDULE_RULECFG_V40
NET_DVR_SET_OUTPUT_SCHEDULE_RULECFG_V40 = _hk_struct_test.NET_DVR_SET_OUTPUT_SCHEDULE_RULECFG_V40
NET_DVR_ALARMHOST_CLOSE_SUBSYSTEM = _hk_struct_test.NET_DVR_ALARMHOST_CLOSE_SUBSYSTEM
NET_DVR_GET_WEEK_PLAN_CFG = _hk_struct_test.NET_DVR_GET_WEEK_PLAN_CFG
NET_DVR_SET_WEEK_PLAN_CFG = _hk_struct_test.NET_DVR_SET_WEEK_PLAN_CFG
NET_DVR_GET_DOOR_STATUS_HOLIDAY_PLAN = _hk_struct_test.NET_DVR_GET_DOOR_STATUS_HOLIDAY_PLAN
NET_DVR_SET_DOOR_STATUS_HOLIDAY_PLAN = _hk_struct_test.NET_DVR_SET_DOOR_STATUS_HOLIDAY_PLAN
NET_DVR_GET_DOOR_STATUS_HOLIDAY_GROUP = _hk_struct_test.NET_DVR_GET_DOOR_STATUS_HOLIDAY_GROUP
NET_DVR_SET_DOOR_STATUS_HOLIDAY_GROUP = _hk_struct_test.NET_DVR_SET_DOOR_STATUS_HOLIDAY_GROUP
NET_DVR_GET_DOOR_STATUS_PLAN_TEMPLATE = _hk_struct_test.NET_DVR_GET_DOOR_STATUS_PLAN_TEMPLATE
NET_DVR_SET_DOOR_STATUS_PLAN_TEMPLATE = _hk_struct_test.NET_DVR_SET_DOOR_STATUS_PLAN_TEMPLATE
NET_DVR_GET_DOOR_CFG = _hk_struct_test.NET_DVR_GET_DOOR_CFG
NET_DVR_SET_DOOR_CFG = _hk_struct_test.NET_DVR_SET_DOOR_CFG
NET_DVR_GET_DOOR_STATUS_PLAN = _hk_struct_test.NET_DVR_GET_DOOR_STATUS_PLAN
NET_DVR_SET_DOOR_STATUS_PLAN = _hk_struct_test.NET_DVR_SET_DOOR_STATUS_PLAN
NET_DVR_GET_GROUP_CFG = _hk_struct_test.NET_DVR_GET_GROUP_CFG
NET_DVR_SET_GROUP_CFG = _hk_struct_test.NET_DVR_SET_GROUP_CFG
NET_DVR_GET_MULTI_CARD_CFG = _hk_struct_test.NET_DVR_GET_MULTI_CARD_CFG
NET_DVR_SET_MULTI_CARD_CFG = _hk_struct_test.NET_DVR_SET_MULTI_CARD_CFG
NET_DVR_GET_CARD_CFG = _hk_struct_test.NET_DVR_GET_CARD_CFG
NET_DVR_SET_CARD_CFG = _hk_struct_test.NET_DVR_SET_CARD_CFG
NET_DVR_CLEAR_ACS_PARAM = _hk_struct_test.NET_DVR_CLEAR_ACS_PARAM
NET_DVR_GET_SNEAK_CFG = _hk_struct_test.NET_DVR_GET_SNEAK_CFG
NET_DVR_SET_SNEAK_CFG = _hk_struct_test.NET_DVR_SET_SNEAK_CFG
NET_DVR_GET_MULTI_DOOR_INTERLOCK_CFG = _hk_struct_test.NET_DVR_GET_MULTI_DOOR_INTERLOCK_CFG
NET_DVR_SET_MULTI_DOOR_INTERLOCK_CFG = _hk_struct_test.NET_DVR_SET_MULTI_DOOR_INTERLOCK_CFG
NET_DVR_GET_ACS_WORK_STATUS = _hk_struct_test.NET_DVR_GET_ACS_WORK_STATUS
NET_DVR_GET_VERIFY_WEEK_PLAN = _hk_struct_test.NET_DVR_GET_VERIFY_WEEK_PLAN
NET_DVR_SET_VERIFY_WEEK_PLAN = _hk_struct_test.NET_DVR_SET_VERIFY_WEEK_PLAN
NET_DVR_GET_CARD_RIGHT_WEEK_PLAN = _hk_struct_test.NET_DVR_GET_CARD_RIGHT_WEEK_PLAN
NET_DVR_SET_CARD_RIGHT_WEEK_PLAN = _hk_struct_test.NET_DVR_SET_CARD_RIGHT_WEEK_PLAN
NET_DVR_GET_VERIFY_HOLIDAY_PLAN = _hk_struct_test.NET_DVR_GET_VERIFY_HOLIDAY_PLAN
NET_DVR_SET_VERIFY_HOLIDAY_PLAN = _hk_struct_test.NET_DVR_SET_VERIFY_HOLIDAY_PLAN
NET_DVR_GET_CARD_RIGHT_HOLIDAY_PLAN = _hk_struct_test.NET_DVR_GET_CARD_RIGHT_HOLIDAY_PLAN
NET_DVR_SET_CARD_RIGHT_HOLIDAY_PLAN = _hk_struct_test.NET_DVR_SET_CARD_RIGHT_HOLIDAY_PLAN
NET_DVR_GET_VERIFY_HOLIDAY_GROUP = _hk_struct_test.NET_DVR_GET_VERIFY_HOLIDAY_GROUP
NET_DVR_SET_VERIFY_HOLIDAY_GROUP = _hk_struct_test.NET_DVR_SET_VERIFY_HOLIDAY_GROUP
NET_DVR_GET_CARD_RIGHT_HOLIDAY_GROUP = _hk_struct_test.NET_DVR_GET_CARD_RIGHT_HOLIDAY_GROUP
NET_DVR_SET_CARD_RIGHT_HOLIDAY_GROUP = _hk_struct_test.NET_DVR_SET_CARD_RIGHT_HOLIDAY_GROUP
NET_DVR_GET_VERIFY_PLAN_TEMPLATE = _hk_struct_test.NET_DVR_GET_VERIFY_PLAN_TEMPLATE
NET_DVR_SET_VERIFY_PLAN_TEMPLATE = _hk_struct_test.NET_DVR_SET_VERIFY_PLAN_TEMPLATE
NET_DVR_GET_CARD_RIGHT_PLAN_TEMPLATE = _hk_struct_test.NET_DVR_GET_CARD_RIGHT_PLAN_TEMPLATE
NET_DVR_SET_CARD_RIGHT_PLAN_TEMPLATE = _hk_struct_test.NET_DVR_SET_CARD_RIGHT_PLAN_TEMPLATE
NET_DVR_GET_CARD_READER_CFG = _hk_struct_test.NET_DVR_GET_CARD_READER_CFG
NET_DVR_SET_CARD_READER_CFG = _hk_struct_test.NET_DVR_SET_CARD_READER_CFG
NET_DVR_GET_CARD_READER_PLAN = _hk_struct_test.NET_DVR_GET_CARD_READER_PLAN
NET_DVR_SET_CARD_READER_PLAN = _hk_struct_test.NET_DVR_SET_CARD_READER_PLAN
NET_DVR_GET_CASE_SENSOR_CFG = _hk_struct_test.NET_DVR_GET_CASE_SENSOR_CFG
NET_DVR_SET_CASE_SENSOR_CFG = _hk_struct_test.NET_DVR_SET_CASE_SENSOR_CFG
NET_DVR_GET_CARD_READER_ANTI_SNEAK_CFG = _hk_struct_test.NET_DVR_GET_CARD_READER_ANTI_SNEAK_CFG
NET_DVR_SET_CARD_READER_ANTI_SNEAK_CFG = _hk_struct_test.NET_DVR_SET_CARD_READER_ANTI_SNEAK_CFG
NET_DVR_GET_PHONE_DOOR_RIGHT_CFG = _hk_struct_test.NET_DVR_GET_PHONE_DOOR_RIGHT_CFG
NET_DVR_SET_PHONE_DOOR_RIGHT_CFG = _hk_struct_test.NET_DVR_SET_PHONE_DOOR_RIGHT_CFG
NET_DVR_GET_FINGERPRINT_CFG = _hk_struct_test.NET_DVR_GET_FINGERPRINT_CFG
NET_DVR_SET_FINGERPRINT_CFG = _hk_struct_test.NET_DVR_SET_FINGERPRINT_CFG
NET_DVR_DEL_FINGERPRINT_CFG = _hk_struct_test.NET_DVR_DEL_FINGERPRINT_CFG
NET_DVR_GET_EVENT_CARD_LINKAGE_CFG = _hk_struct_test.NET_DVR_GET_EVENT_CARD_LINKAGE_CFG
NET_DVR_SET_EVENT_CARD_LINKAGE_CFG = _hk_struct_test.NET_DVR_SET_EVENT_CARD_LINKAGE_CFG
NET_DVR_GET_ANTI_SNEAK_HOST_CFG = _hk_struct_test.NET_DVR_GET_ANTI_SNEAK_HOST_CFG
NET_DVR_SET_ANTI_SNEAK_HOST_CFG = _hk_struct_test.NET_DVR_SET_ANTI_SNEAK_HOST_CFG
NET_DVR_GET_READER_ANTI_SNEAK_HOST_CFG = _hk_struct_test.NET_DVR_GET_READER_ANTI_SNEAK_HOST_CFG
NET_DVR_SET_READER_ANTI_SNEAK_HOST_CFG = _hk_struct_test.NET_DVR_SET_READER_ANTI_SNEAK_HOST_CFG
NET_DVR_GET_ACS_CFG = _hk_struct_test.NET_DVR_GET_ACS_CFG
NET_DVR_SET_ACS_CFG = _hk_struct_test.NET_DVR_SET_ACS_CFG
NET_DVR_GET_CARD_PASSWD_CFG = _hk_struct_test.NET_DVR_GET_CARD_PASSWD_CFG
NET_DVR_SET_CARD_PASSWD_CFG = _hk_struct_test.NET_DVR_SET_CARD_PASSWD_CFG
NET_DVR_GET_CARD_USERINFO_CFG = _hk_struct_test.NET_DVR_GET_CARD_USERINFO_CFG
NET_DVR_SET_CARD_USERINFO_CFG = _hk_struct_test.NET_DVR_SET_CARD_USERINFO_CFG
NET_DVR_GET_ACS_EXTERNAL_DEV_CFG = _hk_struct_test.NET_DVR_GET_ACS_EXTERNAL_DEV_CFG
NET_DVR_SET_ACS_EXTERNAL_DEV_CFG = _hk_struct_test.NET_DVR_SET_ACS_EXTERNAL_DEV_CFG
NET_DVR_GET_PERSONNEL_CHANNEL_CFG = _hk_struct_test.NET_DVR_GET_PERSONNEL_CHANNEL_CFG
NET_DVR_SET_PERSONNEL_CHANNEL_CFG = _hk_struct_test.NET_DVR_SET_PERSONNEL_CHANNEL_CFG
NET_DVR_SET_PLATFORM_VERIFY_CFG = _hk_struct_test.NET_DVR_SET_PLATFORM_VERIFY_CFG
NET_DVR_GET_PERSON_STATISTICS_CFG = _hk_struct_test.NET_DVR_GET_PERSON_STATISTICS_CFG
NET_DVR_SET_PERSON_STATISTICS_CFG = _hk_struct_test.NET_DVR_SET_PERSON_STATISTICS_CFG
NET_DVR_GET_ACS_SCREEN_DISPLAY_CFG = _hk_struct_test.NET_DVR_GET_ACS_SCREEN_DISPLAY_CFG
NET_DVR_SET_ACS_SCREEN_DISPLAY_CFG = _hk_struct_test.NET_DVR_SET_ACS_SCREEN_DISPLAY_CFG
NET_DVR_GET_GATE_TIME_CFG = _hk_struct_test.NET_DVR_GET_GATE_TIME_CFG
NET_DVR_SET_GATE_TIME_CFG = _hk_struct_test.NET_DVR_SET_GATE_TIME_CFG
NET_DVR_GET_LOCAL_CONTROLLER_STATUS = _hk_struct_test.NET_DVR_GET_LOCAL_CONTROLLER_STATUS
NET_DVR_GET_ONLINE_LOCAL_CONTROLLER = _hk_struct_test.NET_DVR_GET_ONLINE_LOCAL_CONTROLLER
NET_DVR_GET_CARD_CFG_V50 = _hk_struct_test.NET_DVR_GET_CARD_CFG_V50
NET_DVR_SET_CARD_CFG_V50 = _hk_struct_test.NET_DVR_SET_CARD_CFG_V50
NET_DVR_GET_ACS_WORK_STATUS_V50 = _hk_struct_test.NET_DVR_GET_ACS_WORK_STATUS_V50
NET_DVR_GET_EVENT_CARD_LINKAGE_CFG_V50 = _hk_struct_test.NET_DVR_GET_EVENT_CARD_LINKAGE_CFG_V50
NET_DVR_SET_EVENT_CARD_LINKAGE_CFG_V50 = _hk_struct_test.NET_DVR_SET_EVENT_CARD_LINKAGE_CFG_V50
NET_DVR_GET_FINGERPRINT_CFG_V50 = _hk_struct_test.NET_DVR_GET_FINGERPRINT_CFG_V50
NET_DVR_SET_FINGERPRINT_CFG_V50 = _hk_struct_test.NET_DVR_SET_FINGERPRINT_CFG_V50
NET_DVR_GET_SAFETYCABIN_STATE = _hk_struct_test.NET_DVR_GET_SAFETYCABIN_STATE
NET_DVR_GET_RS485_CASCADE_CFG = _hk_struct_test.NET_DVR_GET_RS485_CASCADE_CFG
NET_DVR_SET_RS485_CASCADE_CFG = _hk_struct_test.NET_DVR_SET_RS485_CASCADE_CFG
NET_DVR_GET_REMOTECONTROLLER_PERMISION_CFG = _hk_struct_test.NET_DVR_GET_REMOTECONTROLLER_PERMISION_CFG
NET_DVR_SET_REMOTECONTROLLER_PERMISION_CFG = _hk_struct_test.NET_DVR_SET_REMOTECONTROLLER_PERMISION_CFG
NET_DVR_GET_KEYBOARD_CFG = _hk_struct_test.NET_DVR_GET_KEYBOARD_CFG
NET_DVR_SET_KEYBOARD_CFG = _hk_struct_test.NET_DVR_SET_KEYBOARD_CFG
NET_DVR_GET_ALARMHOST_WIRELESS_BUSINNESS_INFO = _hk_struct_test.NET_DVR_GET_ALARMHOST_WIRELESS_BUSINNESS_INFO
NET_DVR_GET_ALL_REMOTECONTROLLER_LIST = _hk_struct_test.NET_DVR_GET_ALL_REMOTECONTROLLER_LIST
NET_DVR_GET_PREVIEW_DELAY_CFG = _hk_struct_test.NET_DVR_GET_PREVIEW_DELAY_CFG
NET_DVR_SET_PREVIEW_DELAY_CFG = _hk_struct_test.NET_DVR_SET_PREVIEW_DELAY_CFG
NET_DVR_GET_ZONE_CHANNEL_LINKAGE_CFG = _hk_struct_test.NET_DVR_GET_ZONE_CHANNEL_LINKAGE_CFG
NET_DVR_SET_ZONE_CHANNEL_LINKAGE_CFG = _hk_struct_test.NET_DVR_SET_ZONE_CHANNEL_LINKAGE_CFG
NET_DVR_GET_CENTER_SERVER_CFG = _hk_struct_test.NET_DVR_GET_CENTER_SERVER_CFG
NET_DVR_SET_CENTER_SERVER_CFG = _hk_struct_test.NET_DVR_SET_CENTER_SERVER_CFG
NET_DVR_GET_EMERGENCE_ALARM_PRODUCT_CAP = _hk_struct_test.NET_DVR_GET_EMERGENCE_ALARM_PRODUCT_CAP
NET_DVR_GET_CALL_WAITTING_CFG_CAP = _hk_struct_test.NET_DVR_GET_CALL_WAITTING_CFG_CAP
NET_DVR_GET_CALL_WAITTING_CFG = _hk_struct_test.NET_DVR_GET_CALL_WAITTING_CFG
NET_DVR_SET_CALL_WAITTING_CFG = _hk_struct_test.NET_DVR_SET_CALL_WAITTING_CFG
NET_DVR_GET_ALARM_LAMP_CFG_CAP = _hk_struct_test.NET_DVR_GET_ALARM_LAMP_CFG_CAP
NET_DVR_GET_ALARM_LAMP_CFG = _hk_struct_test.NET_DVR_GET_ALARM_LAMP_CFG
NET_DVR_SET_ALARM_LAMP_CFG = _hk_struct_test.NET_DVR_SET_ALARM_LAMP_CFG
NET_DVR_GET_VOICE_PROMPTION_CFG_CAP = _hk_struct_test.NET_DVR_GET_VOICE_PROMPTION_CFG_CAP
NET_DVR_GET_VOICE_PROMPTION_CFG = _hk_struct_test.NET_DVR_GET_VOICE_PROMPTION_CFG
NET_DVR_SET_VOICE_PROMPTION_CFG = _hk_struct_test.NET_DVR_SET_VOICE_PROMPTION_CFG
NET_DVR_GET_EMERGENCE_ALARM_RESPONSE_CAP = _hk_struct_test.NET_DVR_GET_EMERGENCE_ALARM_RESPONSE_CAP
NET_DVR_EMERGENCE_ALARM_RESPONSE_CTRL = _hk_struct_test.NET_DVR_EMERGENCE_ALARM_RESPONSE_CTRL
NET_DVR_GET_ALARMHOST_NETCFG_V50 = _hk_struct_test.NET_DVR_GET_ALARMHOST_NETCFG_V50
NET_DVR_SET_ALARMHOST_NETCFG_V50 = _hk_struct_test.NET_DVR_SET_ALARMHOST_NETCFG_V50
NET_DVR_REGISTER_ALARM_RS485 = _hk_struct_test.NET_DVR_REGISTER_ALARM_RS485
NET_DVR_GET_ALARMIN_PARAM_LIST = _hk_struct_test.NET_DVR_GET_ALARMIN_PARAM_LIST
NET_DVR_GET_ALARMHOST_OTHER_STATUS_V50 = _hk_struct_test.NET_DVR_GET_ALARMHOST_OTHER_STATUS_V50
NET_DVR_GET_ALARMHOST_OTHER_STATUS_V51 = _hk_struct_test.NET_DVR_GET_ALARMHOST_OTHER_STATUS_V51
NET_DVR_GET_ALARMIN_ASSOCIATED_CHAN_LIST = _hk_struct_test.NET_DVR_GET_ALARMIN_ASSOCIATED_CHAN_LIST
NET_DVR_GET_ALARMIN_TRIGGER = _hk_struct_test.NET_DVR_GET_ALARMIN_TRIGGER
NET_DVR_SET_ALARMIN_TRIGGER = _hk_struct_test.NET_DVR_SET_ALARMIN_TRIGGER
NET_DVR_GET_EMERGENCY_CALL_HELP_TRIGGER = _hk_struct_test.NET_DVR_GET_EMERGENCY_CALL_HELP_TRIGGER
NET_DVR_SET_EMERGENCY_CALL_HELP_TRIGGER = _hk_struct_test.NET_DVR_SET_EMERGENCY_CALL_HELP_TRIGGER
NET_DVR_GET_CONSULT_TRIGGER = _hk_struct_test.NET_DVR_GET_CONSULT_TRIGGER
NET_DVR_SET_CONSULT_TRIGGER = _hk_struct_test.NET_DVR_SET_CONSULT_TRIGGER
NET_DVR_GET_ALARMIN_PARAM_LIST_V50 = _hk_struct_test.NET_DVR_GET_ALARMIN_PARAM_LIST_V50
NET_DVR_GET_CARD_RIGHT_WEEK_PLAN_V50 = _hk_struct_test.NET_DVR_GET_CARD_RIGHT_WEEK_PLAN_V50
NET_DVR_SET_CARD_RIGHT_WEEK_PLAN_V50 = _hk_struct_test.NET_DVR_SET_CARD_RIGHT_WEEK_PLAN_V50
NET_DVR_GET_CARD_RIGHT_HOLIDAY_PLAN_V50 = _hk_struct_test.NET_DVR_GET_CARD_RIGHT_HOLIDAY_PLAN_V50
NET_DVR_SET_CARD_RIGHT_HOLIDAY_PLAN_V50 = _hk_struct_test.NET_DVR_SET_CARD_RIGHT_HOLIDAY_PLAN_V50
NET_DVR_GET_CARD_RIGHT_HOLIDAY_GROUP_V50 = _hk_struct_test.NET_DVR_GET_CARD_RIGHT_HOLIDAY_GROUP_V50
NET_DVR_SET_CARD_RIGHT_HOLIDAY_GROUP_V50 = _hk_struct_test.NET_DVR_SET_CARD_RIGHT_HOLIDAY_GROUP_V50
NET_DVR_GET_CARD_RIGHT_PLAN_TEMPLATE_V50 = _hk_struct_test.NET_DVR_GET_CARD_RIGHT_PLAN_TEMPLATE_V50
NET_DVR_SET_CARD_RIGHT_PLAN_TEMPLATE_V50 = _hk_struct_test.NET_DVR_SET_CARD_RIGHT_PLAN_TEMPLATE_V50
NET_DVR_GET_SCHEDULE_INFO = _hk_struct_test.NET_DVR_GET_SCHEDULE_INFO
NET_DVR_GET_ATTENDANCE_SUMMARY_INFO = _hk_struct_test.NET_DVR_GET_ATTENDANCE_SUMMARY_INFO
NET_DVR_GET_ATTENDANCE_RECORD_INFO = _hk_struct_test.NET_DVR_GET_ATTENDANCE_RECORD_INFO
NET_DVR_GET_ABNORMAL_INFO = _hk_struct_test.NET_DVR_GET_ABNORMAL_INFO
NET_DVR_CAPTURE_FINGERPRINT_INFO = _hk_struct_test.NET_DVR_CAPTURE_FINGERPRINT_INFO
NET_DVR_BULK_UPLOAD_BLACK_LIST_PICTURE = _hk_struct_test.NET_DVR_BULK_UPLOAD_BLACK_LIST_PICTURE
NET_DVR_BULK_UPLOAD_ID_BLACK_LIST = _hk_struct_test.NET_DVR_BULK_UPLOAD_ID_BLACK_LIST
NET_DVR_GET_FAILED_FACE_INFO = _hk_struct_test.NET_DVR_GET_FAILED_FACE_INFO
NET_DVR_GET_FACE_AND_TEMPLATE = _hk_struct_test.NET_DVR_GET_FACE_AND_TEMPLATE
NET_DVR_SET_FACE_AND_TEMPLATE = _hk_struct_test.NET_DVR_SET_FACE_AND_TEMPLATE
NET_DVR_GET_CARD_READER_CFG_V50 = _hk_struct_test.NET_DVR_GET_CARD_READER_CFG_V50
NET_DVR_SET_CARD_READER_CFG_V50 = _hk_struct_test.NET_DVR_SET_CARD_READER_CFG_V50
NET_DVR_GET_FACE_PARAM_CFG = _hk_struct_test.NET_DVR_GET_FACE_PARAM_CFG
NET_DVR_SET_FACE_PARAM_CFG = _hk_struct_test.NET_DVR_SET_FACE_PARAM_CFG
NET_DVR_DEL_FACE_PARAM_CFG = _hk_struct_test.NET_DVR_DEL_FACE_PARAM_CFG
NET_DVR_CAPTURE_FACE_INFO = _hk_struct_test.NET_DVR_CAPTURE_FACE_INFO
NET_DVR_GET_REGISTER_INFO = _hk_struct_test.NET_DVR_GET_REGISTER_INFO
NET_DVR_GET_SMSRELATIVEPARA_V50 = _hk_struct_test.NET_DVR_GET_SMSRELATIVEPARA_V50
NET_DVR_SET_SMSRELATIVEPARA_V50 = _hk_struct_test.NET_DVR_SET_SMSRELATIVEPARA_V50
NET_DVR_GET_ACS_EVENT = _hk_struct_test.NET_DVR_GET_ACS_EVENT
NET_DVR_GET_MULTI_CARD_CFG_V50 = _hk_struct_test.NET_DVR_GET_MULTI_CARD_CFG_V50
NET_DVR_SET_MULTI_CARD_CFG_V50 = _hk_struct_test.NET_DVR_SET_MULTI_CARD_CFG_V50
NET_DVR_DEL_FINGERPRINT_CFG_V50 = _hk_struct_test.NET_DVR_DEL_FINGERPRINT_CFG_V50
NET_DVR_GET_EVENT_CARD_LINKAGE_CFG_V51 = _hk_struct_test.NET_DVR_GET_EVENT_CARD_LINKAGE_CFG_V51
NET_DVR_SET_EVENT_CARD_LINKAGE_CFG_V51 = _hk_struct_test.NET_DVR_SET_EVENT_CARD_LINKAGE_CFG_V51
NET_DVR_SET_EXAM_INFO = _hk_struct_test.NET_DVR_SET_EXAM_INFO
NET_DVR_SET_EXAMINEE_INFO = _hk_struct_test.NET_DVR_SET_EXAMINEE_INFO
NET_DVR_SEARCH_EXAM_COMPARE_RESULT = _hk_struct_test.NET_DVR_SEARCH_EXAM_COMPARE_RESULT
NET_DVR_BULK_CHECK_FACE_PICTURE = _hk_struct_test.NET_DVR_BULK_CHECK_FACE_PICTURE
NET_DVR_JSON_CONFIG = _hk_struct_test.NET_DVR_JSON_CONFIG
NET_DVR_FACE_DATA_RECORD = _hk_struct_test.NET_DVR_FACE_DATA_RECORD
NET_DVR_FACE_DATA_SEARCH = _hk_struct_test.NET_DVR_FACE_DATA_SEARCH
NET_DVR_FACE_DATA_MODIFY = _hk_struct_test.NET_DVR_FACE_DATA_MODIFY
NET_DVR_CAPTURE_DATA_SEARCH = _hk_struct_test.NET_DVR_CAPTURE_DATA_SEARCH
NET_DVR_GET_CARD = _hk_struct_test.NET_DVR_GET_CARD
NET_DVR_SET_CARD = _hk_struct_test.NET_DVR_SET_CARD
NET_DVR_DEL_CARD = _hk_struct_test.NET_DVR_DEL_CARD
NET_DVR_GET_FINGERPRINT = _hk_struct_test.NET_DVR_GET_FINGERPRINT
NET_DVR_SET_FINGERPRINT = _hk_struct_test.NET_DVR_SET_FINGERPRINT
NET_DVR_DEL_FINGERPRINT = _hk_struct_test.NET_DVR_DEL_FINGERPRINT
NET_DVR_GET_FACE = _hk_struct_test.NET_DVR_GET_FACE
NET_DVR_SET_FACE = _hk_struct_test.NET_DVR_SET_FACE
NET_DVR_GET_ALL_ALARM_RS485CFG = _hk_struct_test.NET_DVR_GET_ALL_ALARM_RS485CFG
NET_DVR_GET_ALL_ALARMHOST_RS485_SLOT_CFG = _hk_struct_test.NET_DVR_GET_ALL_ALARMHOST_RS485_SLOT_CFG
NET_DVR_GET_DEVICE_SELF_CHECK_STATE = _hk_struct_test.NET_DVR_GET_DEVICE_SELF_CHECK_STATE
NET_DVR_GET_ALL_ALARM_POINT_CFG = _hk_struct_test.NET_DVR_GET_ALL_ALARM_POINT_CFG
NET_DVR_GET_ALL_ALARM_SENSOR_CFG = _hk_struct_test.NET_DVR_GET_ALL_ALARM_SENSOR_CFG
NET_DVR_GET_ALL_ALARM_SENSOR_JOINT = _hk_struct_test.NET_DVR_GET_ALL_ALARM_SENSOR_JOINT
NET_DVR_GET_AIR_CONDITION_PARAM = _hk_struct_test.NET_DVR_GET_AIR_CONDITION_PARAM
NET_DVR_GET_OUT_SCALE_CFG = _hk_struct_test.NET_DVR_GET_OUT_SCALE_CFG
NET_DVR_SET_OUT_SCALE_CFG = _hk_struct_test.NET_DVR_SET_OUT_SCALE_CFG
NET_DVR_GET_ALARM_CHAN_ABLITITY = _hk_struct_test.NET_DVR_GET_ALARM_CHAN_ABLITITY
NET_DVR_GET_ALARMCENTER_NETCFG = _hk_struct_test.NET_DVR_GET_ALARMCENTER_NETCFG
NET_DVR_SET_ALARMCENTER_NETCFG = _hk_struct_test.NET_DVR_SET_ALARMCENTER_NETCFG
NET_ITC_GET_TRIGGERCFG = _hk_struct_test.NET_ITC_GET_TRIGGERCFG
NET_ITC_SET_TRIGGERCFG = _hk_struct_test.NET_ITC_SET_TRIGGERCFG
NET_ITC_GET_IOOUT_PARAM_CFG = _hk_struct_test.NET_ITC_GET_IOOUT_PARAM_CFG
NET_ITC_SET_IOOUT_PARAM_CFG = _hk_struct_test.NET_ITC_SET_IOOUT_PARAM_CFG
NET_DVR_GET_CAMERA_SETUPCFG = _hk_struct_test.NET_DVR_GET_CAMERA_SETUPCFG
NET_DVR_SET_CAMERA_SETUPCFG = _hk_struct_test.NET_DVR_SET_CAMERA_SETUPCFG
NET_ITC_GET_TRIGGER_DEFAULTCFG = _hk_struct_test.NET_ITC_GET_TRIGGER_DEFAULTCFG
NET_DVR_GET_STATUS_DETECTCFG = _hk_struct_test.NET_DVR_GET_STATUS_DETECTCFG
NET_DVR_SET_STATUS_DETECTCFG = _hk_struct_test.NET_DVR_SET_STATUS_DETECTCFG
NET_ITC_GET_VIDEO_TRIGGERCFG = _hk_struct_test.NET_ITC_GET_VIDEO_TRIGGERCFG
NET_ITC_SET_VIDEO_TRIGGERCFG = _hk_struct_test.NET_ITC_SET_VIDEO_TRIGGERCFG
NET_DVR_GET_TPS_ALARMCFG = _hk_struct_test.NET_DVR_GET_TPS_ALARMCFG
NET_DVR_SET_TPS_ALARMCFG = _hk_struct_test.NET_DVR_SET_TPS_ALARMCFG
NET_DVR_GET_REDAREACFG = _hk_struct_test.NET_DVR_GET_REDAREACFG
NET_DVR_SET_REDAREACFG = _hk_struct_test.NET_DVR_SET_REDAREACFG
NET_DVR_GET_TEST_SPOT = _hk_struct_test.NET_DVR_GET_TEST_SPOT
NET_DVR_SET_TEST_SPOT = _hk_struct_test.NET_DVR_SET_TEST_SPOT
NET_DVR_GET_CABINETCFG = _hk_struct_test.NET_DVR_GET_CABINETCFG
NET_DVR_SET_CABINETCFG = _hk_struct_test.NET_DVR_SET_CABINETCFG
NET_DVR_VEHICLE_CHECK_START = _hk_struct_test.NET_DVR_VEHICLE_CHECK_START
NET_DVR_SET_CAPTUREPIC_CFG = _hk_struct_test.NET_DVR_SET_CAPTUREPIC_CFG
NET_DVR_GET_CAPTUREPIC_CFG = _hk_struct_test.NET_DVR_GET_CAPTUREPIC_CFG
NET_DVR_SET_MOBILEPLATE_RECOG_CFG = _hk_struct_test.NET_DVR_SET_MOBILEPLATE_RECOG_CFG
NET_DVR_GET_MOBILEPLATE_RECOG_CFG = _hk_struct_test.NET_DVR_GET_MOBILEPLATE_RECOG_CFG
NET_DVR_SET_MOBILE_RADAR_CFG = _hk_struct_test.NET_DVR_SET_MOBILE_RADAR_CFG
NET_DVR_GET_MOBILE_RADAR_CFG = _hk_struct_test.NET_DVR_GET_MOBILE_RADAR_CFG
NET_DVR_SET_MOBILE_LOCALPLATECHK_CFG = _hk_struct_test.NET_DVR_SET_MOBILE_LOCALPLATECHK_CFG
NET_DVR_GET_MOBILE_LOCALPLATECHK_CFG = _hk_struct_test.NET_DVR_GET_MOBILE_LOCALPLATECHK_CFG
NET_ITC_GET_ICRCFG = _hk_struct_test.NET_ITC_GET_ICRCFG
NET_ITC_SET_ICRCFG = _hk_struct_test.NET_ITC_SET_ICRCFG
NET_ITC_GET_RS485_ACCESSINFO = _hk_struct_test.NET_ITC_GET_RS485_ACCESSINFO
NET_ITC_SET_RS485_ACCESSINFO = _hk_struct_test.NET_ITC_SET_RS485_ACCESSINFO
NET_ITC_GET_EXCEPTIONCFG = _hk_struct_test.NET_ITC_GET_EXCEPTIONCFG
NET_ITC_SET_EXCEPTIONCFG = _hk_struct_test.NET_ITC_SET_EXCEPTIONCFG
NET_ITC_GET_FTPCFG = _hk_struct_test.NET_ITC_GET_FTPCFG
NET_ITC_SET_FTPCFG = _hk_struct_test.NET_ITC_SET_FTPCFG
NET_DVR_VEHICLE_CONTROL_LIST_START = _hk_struct_test.NET_DVR_VEHICLE_CONTROL_LIST_START
NET_DVR_GET_ALL_VEHICLE_CONTROL_LIST = _hk_struct_test.NET_DVR_GET_ALL_VEHICLE_CONTROL_LIST
NET_DVR_VEHICLE_DELINFO_CTRL = _hk_struct_test.NET_DVR_VEHICLE_DELINFO_CTRL
NET_DVR_GET_ENTRANCE_PARAMCFG = _hk_struct_test.NET_DVR_GET_ENTRANCE_PARAMCFG
NET_DVR_SET_ENTRANCE_PARAMCFG = _hk_struct_test.NET_DVR_SET_ENTRANCE_PARAMCFG
NET_DVR_BARRIERGATE_CTRL = _hk_struct_test.NET_DVR_BARRIERGATE_CTRL
NET_DVR_GATELAMP_CTRL = _hk_struct_test.NET_DVR_GATELAMP_CTRL
NET_DVR_GET_CURTRIGGERMODE = _hk_struct_test.NET_DVR_GET_CURTRIGGERMODE
NET_DVR_GET_GPSDATACFG = _hk_struct_test.NET_DVR_GET_GPSDATACFG
NET_DVR_SET_GPSDATACFG = _hk_struct_test.NET_DVR_SET_GPSDATACFG
NET_DVR_VEHICLELIST_CTRL_START = _hk_struct_test.NET_DVR_VEHICLELIST_CTRL_START
NET_DVR_GET_GUARDCFG = _hk_struct_test.NET_DVR_GET_GUARDCFG
NET_DVR_SET_GUARDCFG = _hk_struct_test.NET_DVR_SET_GUARDCFG
NET_DVR_GET_SNAPINFO_CFG = _hk_struct_test.NET_DVR_GET_SNAPINFO_CFG
NET_DVR_SET_SNAPINFO_CFG = _hk_struct_test.NET_DVR_SET_SNAPINFO_CFG
NET_DVR_GET_SNAPINFO_CFG_V40 = _hk_struct_test.NET_DVR_GET_SNAPINFO_CFG_V40
NET_DVR_SET_SNAPINFO_CFG_V40 = _hk_struct_test.NET_DVR_SET_SNAPINFO_CFG_V40
NET_DVR_SET_CURTRIGGERMODE = _hk_struct_test.NET_DVR_SET_CURTRIGGERMODE
NET_DVR_GET_TRAFFIC_DATA = _hk_struct_test.NET_DVR_GET_TRAFFIC_DATA
NET_DVR_GET_TRAFFIC_FLOW = _hk_struct_test.NET_DVR_GET_TRAFFIC_FLOW
NET_DVR_PARKING_VEHICLE_SEND = _hk_struct_test.NET_DVR_PARKING_VEHICLE_SEND
NET_DVR_PARKING_CARD_SEND = _hk_struct_test.NET_DVR_PARKING_CARD_SEND
NET_DVR_PARKING_CARD_CTRL = _hk_struct_test.NET_DVR_PARKING_CARD_CTRL
NET_DVR_GET_ALARMCTRL_CAPABILITIES = _hk_struct_test.NET_DVR_GET_ALARMCTRL_CAPABILITIES
NET_DVR_SET_ALARMCTRL_CFG = _hk_struct_test.NET_DVR_SET_ALARMCTRL_CFG
NET_DVR_GET_ALARMCTRL_CFG = _hk_struct_test.NET_DVR_GET_ALARMCTRL_CFG
NET_DVR_GET_AUDIO_INPUT = _hk_struct_test.NET_DVR_GET_AUDIO_INPUT
NET_DVR_SET_AUDIO_INPUT = _hk_struct_test.NET_DVR_SET_AUDIO_INPUT
NET_DVR_GET_CAMERA_DEHAZE_CFG = _hk_struct_test.NET_DVR_GET_CAMERA_DEHAZE_CFG
NET_DVR_SET_CAMERA_DEHAZE_CFG = _hk_struct_test.NET_DVR_SET_CAMERA_DEHAZE_CFG
NET_DVR_REMOTECONTROL_ALARM = _hk_struct_test.NET_DVR_REMOTECONTROL_ALARM
NET_DVR_REMOTECONTROL_DISALARM = _hk_struct_test.NET_DVR_REMOTECONTROL_DISALARM
NET_DVR_REMOTECONTROL_STUDY = _hk_struct_test.NET_DVR_REMOTECONTROL_STUDY
NET_DVR_WIRELESS_ALARM_STUDY = _hk_struct_test.NET_DVR_WIRELESS_ALARM_STUDY
NET_IPC_GET_AUX_ALARMCFG = _hk_struct_test.NET_IPC_GET_AUX_ALARMCFG
NET_IPC_SET_AUX_ALARMCFG = _hk_struct_test.NET_IPC_SET_AUX_ALARMCFG
NET_DVR_GET_PREVIEW_DISPLAYCFG = _hk_struct_test.NET_DVR_GET_PREVIEW_DISPLAYCFG
NET_DVR_SET_PREVIEW_DISPLAYCFG = _hk_struct_test.NET_DVR_SET_PREVIEW_DISPLAYCFG
NET_DVR_REMOTECONTROL_PTZ = _hk_struct_test.NET_DVR_REMOTECONTROL_PTZ
NET_DVR_REMOTECONTROL_PRESETPOINT = _hk_struct_test.NET_DVR_REMOTECONTROL_PRESETPOINT
NET_DVR_REMOTECONTROL_CRUISE = _hk_struct_test.NET_DVR_REMOTECONTROL_CRUISE
NET_DVR_GET_MULTI_STREAM_COMPRESSIONCFG = _hk_struct_test.NET_DVR_GET_MULTI_STREAM_COMPRESSIONCFG
NET_DVR_SET_MULTI_STREAM_COMPRESSIONCFG = _hk_struct_test.NET_DVR_SET_MULTI_STREAM_COMPRESSIONCFG
NET_DVR_GET_WPSCFG = _hk_struct_test.NET_DVR_GET_WPSCFG
NET_DVR_SET_WPSCFG = _hk_struct_test.NET_DVR_SET_WPSCFG
NET_DVR_WPS_CONNECT = _hk_struct_test.NET_DVR_WPS_CONNECT
NET_DVR_GET_DEVICE_PIN = _hk_struct_test.NET_DVR_GET_DEVICE_PIN
NET_DVR_UPDATE_PIN = _hk_struct_test.NET_DVR_UPDATE_PIN
NET_DVR_GET_PRESETCFG = _hk_struct_test.NET_DVR_GET_PRESETCFG
NET_DVR_GET_PTZCRUISECFG = _hk_struct_test.NET_DVR_GET_PTZCRUISECFG
NET_DVR_GET_PRESET_NUM = _hk_struct_test.NET_DVR_GET_PRESET_NUM
NET_DVR_GET_PTZCRUISE_NUM = _hk_struct_test.NET_DVR_GET_PTZCRUISE_NUM
NET_DVR_GET_MOTION_TRACK_CFG = _hk_struct_test.NET_DVR_GET_MOTION_TRACK_CFG
NET_DVR_SET_MOTION_TRACK_CFG = _hk_struct_test.NET_DVR_SET_MOTION_TRACK_CFG
NET_DVR_CLEAR_IPC_PARAM = _hk_struct_test.NET_DVR_CLEAR_IPC_PARAM
NET_DVR_GET_IPADDR_FILTERCFG = _hk_struct_test.NET_DVR_GET_IPADDR_FILTERCFG
NET_DVR_SET_IPADDR_FILTERCFG = _hk_struct_test.NET_DVR_SET_IPADDR_FILTERCFG
NET_DVR_GET_LOGO_OVERLAYCFG = _hk_struct_test.NET_DVR_GET_LOGO_OVERLAYCFG
NET_DVR_SET_LOGO_OVERLAYCFG = _hk_struct_test.NET_DVR_SET_LOGO_OVERLAYCFG
NET_DVR_GET_IPV6_LIST = _hk_struct_test.NET_DVR_GET_IPV6_LIST
NET_DVR_GET_AUDIOOUT_VOLUME = _hk_struct_test.NET_DVR_GET_AUDIOOUT_VOLUME
NET_DVR_SET_AUDIOOUT_VOLUME = _hk_struct_test.NET_DVR_SET_AUDIOOUT_VOLUME
NET_DVR_GET_FUZZY_UPGRADE = _hk_struct_test.NET_DVR_GET_FUZZY_UPGRADE
NET_DVR_GET_BV_CORRECT_PARAM = _hk_struct_test.NET_DVR_GET_BV_CORRECT_PARAM
NET_DVR_SET_BV_CORRECT_PARAM = _hk_struct_test.NET_DVR_SET_BV_CORRECT_PARAM
NET_DVR_GET_OUTPUT_VIDEO_TYPE = _hk_struct_test.NET_DVR_GET_OUTPUT_VIDEO_TYPE
NET_DVR_SET_OUTPUT_VIDEO_TYPE = _hk_struct_test.NET_DVR_SET_OUTPUT_VIDEO_TYPE
NET_DVR_FISHEYE_CFG = _hk_struct_test.NET_DVR_FISHEYE_CFG
NET_DVR_GET_PTZ_POINT = _hk_struct_test.NET_DVR_GET_PTZ_POINT
NET_DVR_SET_PTZ_POINT = _hk_struct_test.NET_DVR_SET_PTZ_POINT
NET_DVR_REMOTECONTROL_DEV_PARAM = _hk_struct_test.NET_DVR_REMOTECONTROL_DEV_PARAM
NET_DVR_GET_FISHEYE_STREAM_STATUS = _hk_struct_test.NET_DVR_GET_FISHEYE_STREAM_STATUS
NET_DVR_GET_GBT28181_ACCESS_CFG = _hk_struct_test.NET_DVR_GET_GBT28181_ACCESS_CFG
NET_DVR_SET_GBT28181_ACCESS_CFG = _hk_struct_test.NET_DVR_SET_GBT28181_ACCESS_CFG
NET_DVR_GET_GBT28181_CHANINFO_CFG = _hk_struct_test.NET_DVR_GET_GBT28181_CHANINFO_CFG
NET_DVR_SET_GBT28181_CHANINFO_CFG = _hk_struct_test.NET_DVR_SET_GBT28181_CHANINFO_CFG
NET_DVR_GET_GBT28181_ALARMINCFG = _hk_struct_test.NET_DVR_GET_GBT28181_ALARMINCFG
NET_DVR_SET_GBT28181_ALARMINCFG = _hk_struct_test.NET_DVR_SET_GBT28181_ALARMINCFG
NET_DVR_GET_ISP_CAMERAPARAMCFG = _hk_struct_test.NET_DVR_GET_ISP_CAMERAPARAMCFG
NET_DVR_SET_ISP_CAMERAPARAMCFG = _hk_struct_test.NET_DVR_SET_ISP_CAMERAPARAMCFG
NET_DVR_GET_DEVSERVER_CFG = _hk_struct_test.NET_DVR_GET_DEVSERVER_CFG
NET_DVR_SET_DEVSERVER_CFG = _hk_struct_test.NET_DVR_SET_DEVSERVER_CFG
NET_DVR_GET_WIPERINFO_CFG = _hk_struct_test.NET_DVR_GET_WIPERINFO_CFG
NET_DVR_SET_WIPERINFO_CFG = _hk_struct_test.NET_DVR_SET_WIPERINFO_CFG
NET_DVR_GET_TRACK_DEV_PARAM = _hk_struct_test.NET_DVR_GET_TRACK_DEV_PARAM
NET_DVR_SET_TRACK_DEV_PARAM = _hk_struct_test.NET_DVR_SET_TRACK_DEV_PARAM
NET_DVR_GET_PTZ_TRACK_PARAM = _hk_struct_test.NET_DVR_GET_PTZ_TRACK_PARAM
NET_DVR_SET_PTZ_TRACK_PARAM = _hk_struct_test.NET_DVR_SET_PTZ_TRACK_PARAM
NET_DVR_GET_CENTER_POINT_CFG = _hk_struct_test.NET_DVR_GET_CENTER_POINT_CFG
NET_DVR_SET_CENTER_POINT_CFG = _hk_struct_test.NET_DVR_SET_CENTER_POINT_CFG
NET_DVR_GET_CENTER_POINT_CFG_CAPABILITIES = _hk_struct_test.NET_DVR_GET_CENTER_POINT_CFG_CAPABILITIES
NET_DVR_GET_FISHEYE_CAPABILITIES = _hk_struct_test.NET_DVR_GET_FISHEYE_CAPABILITIES
NET_DVR_GET_BASICPARAMCFG = _hk_struct_test.NET_DVR_GET_BASICPARAMCFG
NET_DVR_SET_BASICPARAMCFG = _hk_struct_test.NET_DVR_SET_BASICPARAMCFG
NET_DVR_GET_PTZOSDCFG = _hk_struct_test.NET_DVR_GET_PTZOSDCFG
NET_DVR_SET_PTZOSDCFG = _hk_struct_test.NET_DVR_SET_PTZOSDCFG
NET_DVR_GET_POWEROFFMEMCFG = _hk_struct_test.NET_DVR_GET_POWEROFFMEMCFG
NET_DVR_SET_POWEROFFMEMCFG = _hk_struct_test.NET_DVR_SET_POWEROFFMEMCFG
NET_DVR_GET_LIMITCFG = _hk_struct_test.NET_DVR_GET_LIMITCFG
NET_DVR_SET_LIMITCFG = _hk_struct_test.NET_DVR_SET_LIMITCFG
NET_DVR_PTZLIMIT_CTRL = _hk_struct_test.NET_DVR_PTZLIMIT_CTRL
NET_DVR_PTZ_CLEARCTRL = _hk_struct_test.NET_DVR_PTZ_CLEARCTRL
NET_DVR_GET_PRIORITIZECFG = _hk_struct_test.NET_DVR_GET_PRIORITIZECFG
NET_DVR_SET_PRIORITIZECFG = _hk_struct_test.NET_DVR_SET_PRIORITIZECFG
NET_DVR_PTZ_INITIALPOSITIONCTRL = _hk_struct_test.NET_DVR_PTZ_INITIALPOSITIONCTRL
NET_DVR_GET_PRIVACY_MASKSCFG = _hk_struct_test.NET_DVR_GET_PRIVACY_MASKSCFG
NET_DVR_SET_PRIVACY_MASKSCFG = _hk_struct_test.NET_DVR_SET_PRIVACY_MASKSCFG
NET_DVR_GET_PTZLOCKCFG = _hk_struct_test.NET_DVR_GET_PTZLOCKCFG
NET_DVR_SET_PTZLOCKCFG = _hk_struct_test.NET_DVR_SET_PTZLOCKCFG
NET_DVR_PTZ_ZOOMRATIOCTRL = _hk_struct_test.NET_DVR_PTZ_ZOOMRATIOCTRL
NET_DVR_GET_PTZLOCKINFO = _hk_struct_test.NET_DVR_GET_PTZLOCKINFO
NET_DVR_GET_PRIVACY_MASKS_ENABLECFG = _hk_struct_test.NET_DVR_GET_PRIVACY_MASKS_ENABLECFG
NET_DVR_SET_PRIVACY_MASKS_ENABLECFG = _hk_struct_test.NET_DVR_SET_PRIVACY_MASKS_ENABLECFG
NET_DVR_GET_SMARTTRACKCFG = _hk_struct_test.NET_DVR_GET_SMARTTRACKCFG
NET_DVR_SET_SMARTTRACKCFG = _hk_struct_test.NET_DVR_SET_SMARTTRACKCFG
NET_DVR_GET_EPTZ_CFG = _hk_struct_test.NET_DVR_GET_EPTZ_CFG
NET_DVR_SET_EPTZ_CFG = _hk_struct_test.NET_DVR_SET_EPTZ_CFG
NET_DVR_GET_EPTZ_CFG_CAPABILITIES = _hk_struct_test.NET_DVR_GET_EPTZ_CFG_CAPABILITIES
NET_DVR_GET_LOW_LIGHTCFG = _hk_struct_test.NET_DVR_GET_LOW_LIGHTCFG
NET_DVR_SET_LOW_LIGHTCFG = _hk_struct_test.NET_DVR_SET_LOW_LIGHTCFG
NET_DVR_GET_FOCUSMODECFG = _hk_struct_test.NET_DVR_GET_FOCUSMODECFG
NET_DVR_SET_FOCUSMODECFG = _hk_struct_test.NET_DVR_SET_FOCUSMODECFG
NET_DVR_GET_INFRARECFG = _hk_struct_test.NET_DVR_GET_INFRARECFG
NET_DVR_SET_INFRARECFG = _hk_struct_test.NET_DVR_SET_INFRARECFG
NET_DVR_GET_AEMODECFG = _hk_struct_test.NET_DVR_GET_AEMODECFG
NET_DVR_SET_AEMODECFG = _hk_struct_test.NET_DVR_SET_AEMODECFG
NET_DVR_CONTROL_RESTORE_SUPPORT = _hk_struct_test.NET_DVR_CONTROL_RESTORE_SUPPORT
NET_DVR_CONTROL_RESTART_SUPPORT = _hk_struct_test.NET_DVR_CONTROL_RESTART_SUPPORT
NET_DVR_CONTROL_PTZ_PATTERN = _hk_struct_test.NET_DVR_CONTROL_PTZ_PATTERN
NET_DVR_GET_PTZ_PARKACTION_CFG = _hk_struct_test.NET_DVR_GET_PTZ_PARKACTION_CFG
NET_DVR_SET_PTZ_PARKACTION_CFG = _hk_struct_test.NET_DVR_SET_PTZ_PARKACTION_CFG
NET_DVR_CONTROL_PTZ_MANUALTRACE = _hk_struct_test.NET_DVR_CONTROL_PTZ_MANUALTRACE
NET_DVR_GET_ROI_DETECT_NUM = _hk_struct_test.NET_DVR_GET_ROI_DETECT_NUM
NET_DVR_GET_ROI_DETECT = _hk_struct_test.NET_DVR_GET_ROI_DETECT
NET_DVR_SET_ROI_DETECT = _hk_struct_test.NET_DVR_SET_ROI_DETECT
NET_DVR_GET_FACE_DETECT = _hk_struct_test.NET_DVR_GET_FACE_DETECT
NET_DVR_SET_FACE_DETECT = _hk_struct_test.NET_DVR_SET_FACE_DETECT
NET_DVR_GET_CORRIDOR_MODE = _hk_struct_test.NET_DVR_GET_CORRIDOR_MODE
NET_DVR_SET_CORRIDOR_MODE = _hk_struct_test.NET_DVR_SET_CORRIDOR_MODE
NET_DVR_GET_SCENECHANGE_DETECTIONCFG = _hk_struct_test.NET_DVR_GET_SCENECHANGE_DETECTIONCFG
NET_DVR_SET_SCENECHANGE_DETECTIONCFG = _hk_struct_test.NET_DVR_SET_SCENECHANGE_DETECTIONCFG
NET_DVR_GET_TRAVERSE_PLANE_DETECTION = _hk_struct_test.NET_DVR_GET_TRAVERSE_PLANE_DETECTION
NET_DVR_SET_TRAVERSE_PLANE_DETECTION = _hk_struct_test.NET_DVR_SET_TRAVERSE_PLANE_DETECTION
NET_DVR_GET_FIELD_DETECTION = _hk_struct_test.NET_DVR_GET_FIELD_DETECTION
NET_DVR_SET_FIELD_DETECTION = _hk_struct_test.NET_DVR_SET_FIELD_DETECTION
NET_DVR_GET_DEFOCUSPARAM = _hk_struct_test.NET_DVR_GET_DEFOCUSPARAM
NET_DVR_SET_DEFOCUSPARAM = _hk_struct_test.NET_DVR_SET_DEFOCUSPARAM
NET_DVR_GET_AUDIOEXCEPTIONPARAM = _hk_struct_test.NET_DVR_GET_AUDIOEXCEPTIONPARAM
NET_DVR_SET_AUDIOEXCEPTIONPARAM = _hk_struct_test.NET_DVR_SET_AUDIOEXCEPTIONPARAM
NET_DVR_GET_CCDPARAMCFG_EX = _hk_struct_test.NET_DVR_GET_CCDPARAMCFG_EX
NET_DVR_SET_CCDPARAMCFG_EX = _hk_struct_test.NET_DVR_SET_CCDPARAMCFG_EX
NET_DVR_START_GET_INPUTVOLUME = _hk_struct_test.NET_DVR_START_GET_INPUTVOLUME
NET_DVR_SET_SCH_TASK = _hk_struct_test.NET_DVR_SET_SCH_TASK
NET_DVR_GET_SCH_TASK = _hk_struct_test.NET_DVR_GET_SCH_TASK
NET_DVR_SET_PRESET_NAME = _hk_struct_test.NET_DVR_SET_PRESET_NAME
NET_DVR_GET_PRESET_NAME = _hk_struct_test.NET_DVR_GET_PRESET_NAME
NET_DVR_SET_AUDIO_NAME = _hk_struct_test.NET_DVR_SET_AUDIO_NAME
NET_DVR_GET_AUDIO_NAME = _hk_struct_test.NET_DVR_GET_AUDIO_NAME
NET_DVR_RESUME_INITRACKPOS = _hk_struct_test.NET_DVR_RESUME_INITRACKPOS
NET_DVR_NTP_SERVER_TEST = _hk_struct_test.NET_DVR_NTP_SERVER_TEST
NET_DVR_NAS_SERVER_TEST = _hk_struct_test.NET_DVR_NAS_SERVER_TEST
NET_DVR_EMAIL_SERVER_TEST = _hk_struct_test.NET_DVR_EMAIL_SERVER_TEST
NET_DVR_FTP_SERVER_TEST = _hk_struct_test.NET_DVR_FTP_SERVER_TEST
NET_DVR_IP_TEST = _hk_struct_test.NET_DVR_IP_TEST
NET_DVR_GET_NET_DISKCFG_V40 = _hk_struct_test.NET_DVR_GET_NET_DISKCFG_V40
NET_DVR_SET_NET_DISKCFG_V40 = _hk_struct_test.NET_DVR_SET_NET_DISKCFG_V40
NET_DVR_GET_IOOUT_CFG = _hk_struct_test.NET_DVR_GET_IOOUT_CFG
NET_DVR_SET_IOOUT_CFG = _hk_struct_test.NET_DVR_SET_IOOUT_CFG
NET_DVR_GET_SIGNAL_SYNC = _hk_struct_test.NET_DVR_GET_SIGNAL_SYNC
NET_DVR_SET_SIGNAL_SYNC = _hk_struct_test.NET_DVR_SET_SIGNAL_SYNC
NET_DVR_GET_EZVIZ_ACCESS_CFG = _hk_struct_test.NET_DVR_GET_EZVIZ_ACCESS_CFG
NET_DVR_SET_EZVIZ_ACCESS_CFG = _hk_struct_test.NET_DVR_SET_EZVIZ_ACCESS_CFG
NET_DVR_GET_SCHEDULE_AUTO_TRACK_CFG = _hk_struct_test.NET_DVR_GET_SCHEDULE_AUTO_TRACK_CFG
NET_DVR_SET_SCHEDULE_AUTO_TRACK_CFG = _hk_struct_test.NET_DVR_SET_SCHEDULE_AUTO_TRACK_CFG
NET_DVR_MAKE_I_FRAME = _hk_struct_test.NET_DVR_MAKE_I_FRAME
NET_DVR_GET_ALARM_RELATE = _hk_struct_test.NET_DVR_GET_ALARM_RELATE
NET_DVR_SET_ALARM_RELATE = _hk_struct_test.NET_DVR_SET_ALARM_RELATE
NET_DVR_GET_PDC_RULECFG_V42 = _hk_struct_test.NET_DVR_GET_PDC_RULECFG_V42
NET_DVR_SET_PDC_RULECFG_V42 = _hk_struct_test.NET_DVR_SET_PDC_RULECFG_V42
NET_DVR_GET_HEATMAP_CFG = _hk_struct_test.NET_DVR_GET_HEATMAP_CFG
NET_DVR_SET_HEATMAP_CFG = _hk_struct_test.NET_DVR_SET_HEATMAP_CFG
NET_DVR_REMOTECONTROL_LINEARSCAN = _hk_struct_test.NET_DVR_REMOTECONTROL_LINEARSCAN
NET_DVR_DPC_CTRL = _hk_struct_test.NET_DVR_DPC_CTRL
NET_DVR_FFC_MANUAL_CTRL = _hk_struct_test.NET_DVR_FFC_MANUAL_CTRL
NET_DVR_FFC_BACKCOMP_CTRL = _hk_struct_test.NET_DVR_FFC_BACKCOMP_CTRL
NET_DVR_GET_FOCUSING_POSITION_STATE = _hk_struct_test.NET_DVR_GET_FOCUSING_POSITION_STATE
NET_DVR_GET_PRIVATE_PROTOCOL_CFG = _hk_struct_test.NET_DVR_GET_PRIVATE_PROTOCOL_CFG
NET_DVR_SET_PRIVATE_PROTOCOL_CFG = _hk_struct_test.NET_DVR_SET_PRIVATE_PROTOCOL_CFG
NET_DVR_COMPLETE_RESTORE_CTRL = _hk_struct_test.NET_DVR_COMPLETE_RESTORE_CTRL
NET_DVR_CLOUDSTORAGE_SERVER_TEST = _hk_struct_test.NET_DVR_CLOUDSTORAGE_SERVER_TEST
NET_DVR_PHONE_NUM_TEST = _hk_struct_test.NET_DVR_PHONE_NUM_TEST
NET_DVR_GET_REMOTECONTROL_STATUS = _hk_struct_test.NET_DVR_GET_REMOTECONTROL_STATUS
NET_DVR_GET_MONITOR_LOCATION_INFO = _hk_struct_test.NET_DVR_GET_MONITOR_LOCATION_INFO
NET_DVR_SET_MONITOR_LOCATION_INFO = _hk_struct_test.NET_DVR_SET_MONITOR_LOCATION_INFO
NET_DVR_GET_SMART_CAPABILITIES = _hk_struct_test.NET_DVR_GET_SMART_CAPABILITIES
NET_DVR_GET_EVENT_TRIGGERS_CAPABILITIES = _hk_struct_test.NET_DVR_GET_EVENT_TRIGGERS_CAPABILITIES
NET_DVR_GET_REGION_ENTRANCE_CAPABILITIES = _hk_struct_test.NET_DVR_GET_REGION_ENTRANCE_CAPABILITIES
NET_DVR_GET_REGION_ENTR_DETECTION = _hk_struct_test.NET_DVR_GET_REGION_ENTR_DETECTION
NET_DVR_SET_REGION_ENTR_DETECTION = _hk_struct_test.NET_DVR_SET_REGION_ENTR_DETECTION
NET_DVR_GET_REGION_ENTR_REGION = _hk_struct_test.NET_DVR_GET_REGION_ENTR_REGION
NET_DVR_SET_REGION_ENTR_REGION = _hk_struct_test.NET_DVR_SET_REGION_ENTR_REGION
NET_DVR_GET_REGION_ENTR_TRIGGER = _hk_struct_test.NET_DVR_GET_REGION_ENTR_TRIGGER
NET_DVR_SET_REGION_ENTR_TRIGGER = _hk_struct_test.NET_DVR_SET_REGION_ENTR_TRIGGER
NET_DVR_GET_REGION_ENTR_SCHEDULE = _hk_struct_test.NET_DVR_GET_REGION_ENTR_SCHEDULE
NET_DVR_SET_REGION_ENTR_SCHEDULE = _hk_struct_test.NET_DVR_SET_REGION_ENTR_SCHEDULE
NET_DVR_GET_REGION_EXITINT_CAPABILITIES = _hk_struct_test.NET_DVR_GET_REGION_EXITINT_CAPABILITIES
NET_DVR_GET_REGION_EXITING_DETECTION = _hk_struct_test.NET_DVR_GET_REGION_EXITING_DETECTION
NET_DVR_SET_REGION_EXITING_DETECTION = _hk_struct_test.NET_DVR_SET_REGION_EXITING_DETECTION
NET_DVR_GET_REGION_EXITING_REGION = _hk_struct_test.NET_DVR_GET_REGION_EXITING_REGION
NET_DVR_SET_REGION_EXITING_REGION = _hk_struct_test.NET_DVR_SET_REGION_EXITING_REGION
NET_DVR_GET_REGION_EXIT_TRIGGER = _hk_struct_test.NET_DVR_GET_REGION_EXIT_TRIGGER
NET_DVR_SET_REGION_EXIT_TRIGGER = _hk_struct_test.NET_DVR_SET_REGION_EXIT_TRIGGER
NET_DVR_GET_REGION_EXIT_SCHEDULE = _hk_struct_test.NET_DVR_GET_REGION_EXIT_SCHEDULE
NET_DVR_SET_REGION_EXIT_SCHEDULE = _hk_struct_test.NET_DVR_SET_REGION_EXIT_SCHEDULE
NET_DVR_GET_LOITERING_CAPABILITIES = _hk_struct_test.NET_DVR_GET_LOITERING_CAPABILITIES
NET_DVR_GET_LOITERING_DETECTION = _hk_struct_test.NET_DVR_GET_LOITERING_DETECTION
NET_DVR_SET_LOITERING_DETECTION = _hk_struct_test.NET_DVR_SET_LOITERING_DETECTION
NET_DVR_GET_LOITERING_REGION = _hk_struct_test.NET_DVR_GET_LOITERING_REGION
NET_DVR_SET_LOITERING_REGION = _hk_struct_test.NET_DVR_SET_LOITERING_REGION
NET_DVR_GET_LOITERING_TRIGGER = _hk_struct_test.NET_DVR_GET_LOITERING_TRIGGER
NET_DVR_SET_LOITERING_TRIGGER = _hk_struct_test.NET_DVR_SET_LOITERING_TRIGGER
NET_DVR_GET_LOITERING_SCHEDULE = _hk_struct_test.NET_DVR_GET_LOITERING_SCHEDULE
NET_DVR_SET_LOITERING_SCHEDULE = _hk_struct_test.NET_DVR_SET_LOITERING_SCHEDULE
NET_DVR_GET_GROUPDETECTION_CAPABILITIES = _hk_struct_test.NET_DVR_GET_GROUPDETECTION_CAPABILITIES
NET_DVR_GET_GROUP_DETECTION = _hk_struct_test.NET_DVR_GET_GROUP_DETECTION
NET_DVR_SET_GROUP_DETECTION = _hk_struct_test.NET_DVR_SET_GROUP_DETECTION
NET_DVR_GET_GROUPDETECTION_REGION = _hk_struct_test.NET_DVR_GET_GROUPDETECTION_REGION
NET_DVR_SET_GROUPDETECTION_REGION = _hk_struct_test.NET_DVR_SET_GROUPDETECTION_REGION
NET_DVR_GET_GROUPDETECTION_TRIGGER = _hk_struct_test.NET_DVR_GET_GROUPDETECTION_TRIGGER
NET_DVR_SET_GROUPDETECTION_TRIGGER = _hk_struct_test.NET_DVR_SET_GROUPDETECTION_TRIGGER
NET_DVR_GET_GROUPDETECTION_SCHEDULE = _hk_struct_test.NET_DVR_GET_GROUPDETECTION_SCHEDULE
NET_DVR_SET_GROUPDETECTION_SCHEDULE = _hk_struct_test.NET_DVR_SET_GROUPDETECTION_SCHEDULE
NET_DVR_GET_RAPIDMOVE_CAPABILITIES = _hk_struct_test.NET_DVR_GET_RAPIDMOVE_CAPABILITIES
NET_DVR_GET_RAPIDMOVE_DETECTION = _hk_struct_test.NET_DVR_GET_RAPIDMOVE_DETECTION
NET_DVR_SET_RAPIDMOVE_DETECTION = _hk_struct_test.NET_DVR_SET_RAPIDMOVE_DETECTION
NET_DVR_GET_RAPIDMOVE_REGION = _hk_struct_test.NET_DVR_GET_RAPIDMOVE_REGION
NET_DVR_SET_RAPIDMOVE_REGION = _hk_struct_test.NET_DVR_SET_RAPIDMOVE_REGION
NET_DVR_GET_RAPIDMOVE_TRIGGER = _hk_struct_test.NET_DVR_GET_RAPIDMOVE_TRIGGER
NET_DVR_SET_RAPIDMOVE_TRIGGER = _hk_struct_test.NET_DVR_SET_RAPIDMOVE_TRIGGER
NET_DVR_GET_RAPIDMOVE_SCHEDULE = _hk_struct_test.NET_DVR_GET_RAPIDMOVE_SCHEDULE
NET_DVR_SET_RAPIDMOVE_SCHEDULE = _hk_struct_test.NET_DVR_SET_RAPIDMOVE_SCHEDULE
NET_DVR_GET_PATKING_CAPABILITIES = _hk_struct_test.NET_DVR_GET_PATKING_CAPABILITIES
NET_DVR_GET_PARKING_DETECTION = _hk_struct_test.NET_DVR_GET_PARKING_DETECTION
NET_DVR_SET_PARKING_DETECTION = _hk_struct_test.NET_DVR_SET_PARKING_DETECTION
NET_DVR_GET_PARKING_REGION = _hk_struct_test.NET_DVR_GET_PARKING_REGION
NET_DVR_SET_PARKING_REGION = _hk_struct_test.NET_DVR_SET_PARKING_REGION
NET_DVR_GET_PARKING_TRIGGER = _hk_struct_test.NET_DVR_GET_PARKING_TRIGGER
NET_DVR_SET_PARKING_TRIGGER = _hk_struct_test.NET_DVR_SET_PARKING_TRIGGER
NET_DVR_GET_PARKING_SCHEDULE = _hk_struct_test.NET_DVR_GET_PARKING_SCHEDULE
NET_DVR_SET_PARKING_SCHEDULE = _hk_struct_test.NET_DVR_SET_PARKING_SCHEDULE
NET_DVR_GET_UNATTENDED_BAGGAGE_CAPABILITIES = _hk_struct_test.NET_DVR_GET_UNATTENDED_BAGGAGE_CAPABILITIES
NET_DVR_GET_UNATTENDED_BAGGAGE_DETECTION = _hk_struct_test.NET_DVR_GET_UNATTENDED_BAGGAGE_DETECTION
NET_DVR_SET_UNATTENDED_BAGGAGE_DETECTION = _hk_struct_test.NET_DVR_SET_UNATTENDED_BAGGAGE_DETECTION
NET_DVR_GET_UNATTENDED_BAGGAGE_REGION = _hk_struct_test.NET_DVR_GET_UNATTENDED_BAGGAGE_REGION
NET_DVR_SET_UNATTENDED_BAGGAGE_REGION = _hk_struct_test.NET_DVR_SET_UNATTENDED_BAGGAGE_REGION
NET_DVR_GET_UNATTENDED_BAGGAGE_TRIGGER = _hk_struct_test.NET_DVR_GET_UNATTENDED_BAGGAGE_TRIGGER
NET_DVR_SET_UNATTENDED_BAGGAGE_TRIGGER = _hk_struct_test.NET_DVR_SET_UNATTENDED_BAGGAGE_TRIGGER
NET_DVR_GET_UNATTENDED_BAGGAGE_SCHEDULE = _hk_struct_test.NET_DVR_GET_UNATTENDED_BAGGAGE_SCHEDULE
NET_DVR_SET_UNATTENDED_BAGGAGE_SCHEDULE = _hk_struct_test.NET_DVR_SET_UNATTENDED_BAGGAGE_SCHEDULE
NET_DVR_GET_ATTENDEDBAGGAGE_CAPABILITIES = _hk_struct_test.NET_DVR_GET_ATTENDEDBAGGAGE_CAPABILITIES
NET_DVR_GET_ATTENDEDBAGGAGE_DETECTION = _hk_struct_test.NET_DVR_GET_ATTENDEDBAGGAGE_DETECTION
NET_DVR_SET_ATTENDEDBAGGAGE_DETECTION = _hk_struct_test.NET_DVR_SET_ATTENDEDBAGGAGE_DETECTION
NET_DVR_GET_ATTENDEDBAGGAGE_REGION = _hk_struct_test.NET_DVR_GET_ATTENDEDBAGGAGE_REGION
NET_DVR_SET_ATTENDEDBAGGAGE_REGION = _hk_struct_test.NET_DVR_SET_ATTENDEDBAGGAGE_REGION
NET_DVR_GET_ATTENDEDBAGGAGE_TRIGGER = _hk_struct_test.NET_DVR_GET_ATTENDEDBAGGAGE_TRIGGER
NET_DVR_SET_ATTENDEDBAGGAGE_TRIGGER = _hk_struct_test.NET_DVR_SET_ATTENDEDBAGGAGE_TRIGGER
NET_DVR_GET_ATTENDEDBAGGAGE_SCHEDULE = _hk_struct_test.NET_DVR_GET_ATTENDEDBAGGAGE_SCHEDULE
NET_DVR_SET_ATTENDEDBAGGAGE_SCHEDULE = _hk_struct_test.NET_DVR_SET_ATTENDEDBAGGAGE_SCHEDULE
NET_DVR_GET_REGIONCLIP_CAPABILITIES = _hk_struct_test.NET_DVR_GET_REGIONCLIP_CAPABILITIES
NET_DVR_GET_REGION_CLIP = _hk_struct_test.NET_DVR_GET_REGION_CLIP
NET_DVR_SET_REGION_CLIP = _hk_struct_test.NET_DVR_SET_REGION_CLIP
NET_DVR_GET_NETWORK_CAPABILITIES = _hk_struct_test.NET_DVR_GET_NETWORK_CAPABILITIES
NET_DVR_GET_WIRELESS_DIAL = _hk_struct_test.NET_DVR_GET_WIRELESS_DIAL
NET_DVR_SET_WIRELESS_DIAL = _hk_struct_test.NET_DVR_SET_WIRELESS_DIAL
NET_DVR_GET_WIRELESSDIAL_CAPABILITIES = _hk_struct_test.NET_DVR_GET_WIRELESSDIAL_CAPABILITIES
NET_DVR_GET_WIRELESSDIAL_SCHEDULE = _hk_struct_test.NET_DVR_GET_WIRELESSDIAL_SCHEDULE
NET_DVR_SET_WIRELESSDIAL_SCHEDULE = _hk_struct_test.NET_DVR_SET_WIRELESSDIAL_SCHEDULE
NET_DVR_GET_WIRELESSDIAL_STATUS = _hk_struct_test.NET_DVR_GET_WIRELESSDIAL_STATUS
NET_DVR_GET_REGION_ENTRANCE_SCHEDULE_CAPABILITIES = _hk_struct_test.NET_DVR_GET_REGION_ENTRANCE_SCHEDULE_CAPABILITIES
NET_DVR_GET_REGION_EXITING_SCHEDULE_CAPABILITIES = _hk_struct_test.NET_DVR_GET_REGION_EXITING_SCHEDULE_CAPABILITIES
NET_DVR_GET_LOITERING_SCHEDULE_CAPABILITIES = _hk_struct_test.NET_DVR_GET_LOITERING_SCHEDULE_CAPABILITIES
NET_DVR_GET_GROUP_SCHEDULE_CAPABILITIES = _hk_struct_test.NET_DVR_GET_GROUP_SCHEDULE_CAPABILITIES
NET_DVR_GET_RAPIDMOVE_SCHEDULE_CAPABILITIES = _hk_struct_test.NET_DVR_GET_RAPIDMOVE_SCHEDULE_CAPABILITIES
NET_DVR_GET_PARKING_SCHEDULE_CAPABILITIES = _hk_struct_test.NET_DVR_GET_PARKING_SCHEDULE_CAPABILITIES
NET_DVR_GET_UNATTENDEDBAGGAGE_SCHEDULE_CAPABILITIES = _hk_struct_test.NET_DVR_GET_UNATTENDEDBAGGAGE_SCHEDULE_CAPABILITIES
NET_DVR_GET_ATTENDEDBAGGAGE_SCHEDULE_CAPABILITIES = _hk_struct_test.NET_DVR_GET_ATTENDEDBAGGAGE_SCHEDULE_CAPABILITIES
NET_DVR_GET_WIRELESSDIAL_SCHEDULE_CAPABILITIES = _hk_struct_test.NET_DVR_GET_WIRELESSDIAL_SCHEDULE_CAPABILITIES
NET_DVR_WIRELESSDIAL_CONNECT = _hk_struct_test.NET_DVR_WIRELESSDIAL_CONNECT
NET_DVR_GET_LITESTORAGE = _hk_struct_test.NET_DVR_GET_LITESTORAGE
NET_DVR_SET_LITESTORAGE = _hk_struct_test.NET_DVR_SET_LITESTORAGE
NET_DVR_GET_LITESTORAGE_CAPABILITIES = _hk_struct_test.NET_DVR_GET_LITESTORAGE_CAPABILITIES
NET_DVR_GET_VEHICLE_CAPABILITIES = _hk_struct_test.NET_DVR_GET_VEHICLE_CAPABILITIES
NET_DVR_GET_VEHICLE_CALIBRATION = _hk_struct_test.NET_DVR_GET_VEHICLE_CALIBRATION
NET_DVR_GET_SLAVECAMERA_CAPABILITIES = _hk_struct_test.NET_DVR_GET_SLAVECAMERA_CAPABILITIES
NET_DVR_GET_SLAVECAMERA = _hk_struct_test.NET_DVR_GET_SLAVECAMERA
NET_DVR_SET_SLAVECAMERA = _hk_struct_test.NET_DVR_SET_SLAVECAMERA
NET_DVR_GET_SLAVECAMERA_STATUS = _hk_struct_test.NET_DVR_GET_SLAVECAMERA_STATUS
NET_DVR_GET_SLAVECAMERA_CALIB_CAPABILITIES = _hk_struct_test.NET_DVR_GET_SLAVECAMERA_CALIB_CAPABILITIES
NET_DVR_GET_SLAVECAMERA_CALIB = _hk_struct_test.NET_DVR_GET_SLAVECAMERA_CALIB
NET_DVR_SET_SLAVECAMERA_CALIB = _hk_struct_test.NET_DVR_SET_SLAVECAMERA_CALIB
NET_DVR_GET_PHY_RATIO = _hk_struct_test.NET_DVR_GET_PHY_RATIO
NET_DVR_SET_PHY_RATIO = _hk_struct_test.NET_DVR_SET_PHY_RATIO
NET_DVR_GET_MASTERSLAVETRACKING_CAPABILITIES = _hk_struct_test.NET_DVR_GET_MASTERSLAVETRACKING_CAPABILITIES
NET_DVR_SET_TRACKINGRATIO = _hk_struct_test.NET_DVR_SET_TRACKINGRATIO
NET_DVR_GET_TRACKING = _hk_struct_test.NET_DVR_GET_TRACKING
NET_DVR_SET_TRACKING = _hk_struct_test.NET_DVR_SET_TRACKING
NET_DVR_GET_TRACKING_CAPABILITIES = _hk_struct_test.NET_DVR_GET_TRACKING_CAPABILITIES
NET_DVR_GET_SLAVECAMERA_CALIB_V50 = _hk_struct_test.NET_DVR_GET_SLAVECAMERA_CALIB_V50
NET_DVR_SET_SLAVECAMERA_CALIB_V50 = _hk_struct_test.NET_DVR_SET_SLAVECAMERA_CALIB_V50
NET_DVR_SET_TRACKINGRATIO_MANUAL = _hk_struct_test.NET_DVR_SET_TRACKINGRATIO_MANUAL
NET_DVR_GET_TRACKINGRATIO_MANUAL = _hk_struct_test.NET_DVR_GET_TRACKINGRATIO_MANUAL
NET_DVR_SET_TRACK_INITPOSTION = _hk_struct_test.NET_DVR_SET_TRACK_INITPOSTION
NET_DVR_GET_PTZ_CAPABILITIES = _hk_struct_test.NET_DVR_GET_PTZ_CAPABILITIES
NET_DVR_GET_THERMOMETRY_BASICPARAM_CAPABILITIES = _hk_struct_test.NET_DVR_GET_THERMOMETRY_BASICPARAM_CAPABILITIES
NET_DVR_GET_THERMOMETRY_BASICPARAM = _hk_struct_test.NET_DVR_GET_THERMOMETRY_BASICPARAM
NET_DVR_SET_THERMOMETRY_BASICPARAM = _hk_struct_test.NET_DVR_SET_THERMOMETRY_BASICPARAM
NET_DVR_GET_THERMOMETRY_SCENE_CAPABILITIES = _hk_struct_test.NET_DVR_GET_THERMOMETRY_SCENE_CAPABILITIES
NET_DVR_GET_THERMOMETRY_PRESETINFO = _hk_struct_test.NET_DVR_GET_THERMOMETRY_PRESETINFO
NET_DVR_SET_THERMOMETRY_PRESETINFO = _hk_struct_test.NET_DVR_SET_THERMOMETRY_PRESETINFO
NET_DVR_GET_THERMOMETRY_ALARMRULE_CAPABILITIES = _hk_struct_test.NET_DVR_GET_THERMOMETRY_ALARMRULE_CAPABILITIES
NET_DVR_GET_THERMOMETRY_ALARMRULE = _hk_struct_test.NET_DVR_GET_THERMOMETRY_ALARMRULE
NET_DVR_SET_THERMOMETRY_ALARMRULE = _hk_struct_test.NET_DVR_SET_THERMOMETRY_ALARMRULE
NET_DVR_GET_REALTIME_THERMOMETRY = _hk_struct_test.NET_DVR_GET_REALTIME_THERMOMETRY
NET_DVR_GET_THERMOMETRY_DIFFCOMPARISON = _hk_struct_test.NET_DVR_GET_THERMOMETRY_DIFFCOMPARISON
NET_DVR_SET_THERMOMETRY_DIFFCOMPARISON = _hk_struct_test.NET_DVR_SET_THERMOMETRY_DIFFCOMPARISON
NET_DVR_GET_THERMOMETRY_TRIGGER = _hk_struct_test.NET_DVR_GET_THERMOMETRY_TRIGGER
NET_DVR_SET_THERMOMETRY_TRIGGER = _hk_struct_test.NET_DVR_SET_THERMOMETRY_TRIGGER
NET_DVR_GET_THERMAL_CAPABILITIES = _hk_struct_test.NET_DVR_GET_THERMAL_CAPABILITIES
NET_DVR_GET_FIREDETECTION_CAPABILITIES = _hk_struct_test.NET_DVR_GET_FIREDETECTION_CAPABILITIES
NET_DVR_GET_FIREDETECTION = _hk_struct_test.NET_DVR_GET_FIREDETECTION
NET_DVR_SET_FIREDETECTION = _hk_struct_test.NET_DVR_SET_FIREDETECTION
NET_DVR_GET_FIREDETECTION_TRIGGER = _hk_struct_test.NET_DVR_GET_FIREDETECTION_TRIGGER
NET_DVR_SET_FIREDETECTION_TRIGGER = _hk_struct_test.NET_DVR_SET_FIREDETECTION_TRIGGER
NET_DVR_GET_OIS_CAPABILITIES = _hk_struct_test.NET_DVR_GET_OIS_CAPABILITIES
NET_DVR_GET_OIS_CFG = _hk_struct_test.NET_DVR_GET_OIS_CFG
NET_DVR_SET_OIS_CFG = _hk_struct_test.NET_DVR_SET_OIS_CFG
NET_DVR_GET_MACFILTER_CAPABILITIES = _hk_struct_test.NET_DVR_GET_MACFILTER_CAPABILITIES
NET_DVR_GET_MACFILTER_CFG = _hk_struct_test.NET_DVR_GET_MACFILTER_CFG
NET_DVR_SET_MACFILTER_CFG = _hk_struct_test.NET_DVR_SET_MACFILTER_CFG
NET_DVR_GET_EAGLEFOCUS_CALCFG_CAPABILITIES = _hk_struct_test.NET_DVR_GET_EAGLEFOCUS_CALCFG_CAPABILITIES
NET_DVR_GET_EAGLEFOCUSING_CALCFG = _hk_struct_test.NET_DVR_GET_EAGLEFOCUSING_CALCFG
NET_DVR_SET_EAGLEFOCUSING_CALCFG = _hk_struct_test.NET_DVR_SET_EAGLEFOCUSING_CALCFG
NET_DVR_GET_EAGLEFOCUSING_CFG_CAPABILITIES = _hk_struct_test.NET_DVR_GET_EAGLEFOCUSING_CFG_CAPABILITIES
NET_DVR_GET_EAGLEFOCUSING_CTRL = _hk_struct_test.NET_DVR_GET_EAGLEFOCUSING_CTRL
NET_DVR_SET_EAGLEFOCUSING_CTRL = _hk_struct_test.NET_DVR_SET_EAGLEFOCUSING_CTRL
NET_DVR_GET_PXOFFLINE_CAPABILITIES = _hk_struct_test.NET_DVR_GET_PXOFFLINE_CAPABILITIES
NET_DVR_SET_PXOFFLINE_CFG = _hk_struct_test.NET_DVR_SET_PXOFFLINE_CFG
NET_DVR_GET_PXOFFLINE_CFG = _hk_struct_test.NET_DVR_GET_PXOFFLINE_CFG
NET_DVR_GET_PAPERCHARGEINFO_CAPABILITIES = _hk_struct_test.NET_DVR_GET_PAPERCHARGEINFO_CAPABILITIES
NET_DVR_SET_PAPERCHARGEINFO = _hk_struct_test.NET_DVR_SET_PAPERCHARGEINFO
NET_DVR_GET_PARKINGSAPCE_CAPABILITIES = _hk_struct_test.NET_DVR_GET_PARKINGSAPCE_CAPABILITIES
NET_DVR_SET_PARKINGSAPCE_INFO = _hk_struct_test.NET_DVR_SET_PARKINGSAPCE_INFO
NET_DVR_GET_PXMULTICTRL_CAPABILITIES = _hk_struct_test.NET_DVR_GET_PXMULTICTRL_CAPABILITIES
NET_DVR_GET_CHARGEACCOUNT_CAPABILITIES = _hk_struct_test.NET_DVR_GET_CHARGEACCOUNT_CAPABILITIES
NET_DVR_SET_CHARGE_ACCOUNTINFO = _hk_struct_test.NET_DVR_SET_CHARGE_ACCOUNTINFO
NET_DVR_SET_PXMULTICTRL_CFG = _hk_struct_test.NET_DVR_SET_PXMULTICTRL_CFG
NET_DVR_GET_PXMULTICTRL_CFG = _hk_struct_test.NET_DVR_GET_PXMULTICTRL_CFG
NET_DVR_GET_TME_CHARGERULE = _hk_struct_test.NET_DVR_GET_TME_CHARGERULE
NET_DVR_SET_TME_CHARGERULE = _hk_struct_test.NET_DVR_SET_TME_CHARGERULE
NET_DVR_GET_TME_CHARGERULE_CAPABILITIES = _hk_struct_test.NET_DVR_GET_TME_CHARGERULE_CAPABILITIES
NET_DVR_GET_ILLEGALCARDFILTERING_CAPABILITIES = _hk_struct_test.NET_DVR_GET_ILLEGALCARDFILTERING_CAPABILITIES
NET_DVR_GET_ILLEGALCARDFILTERING_CFG = _hk_struct_test.NET_DVR_GET_ILLEGALCARDFILTERING_CFG
NET_DVR_SET_ILLEGALCARDFILTERING_CFG = _hk_struct_test.NET_DVR_SET_ILLEGALCARDFILTERING_CFG
NET_DVR_GET_LEDDISPLAY_CAPABILITIES = _hk_struct_test.NET_DVR_GET_LEDDISPLAY_CAPABILITIES
NET_DVR_SET_LEDDISPLAY_CFG = _hk_struct_test.NET_DVR_SET_LEDDISPLAY_CFG
NET_DVR_GET_LEDDISPLAY_CFG = _hk_struct_test.NET_DVR_GET_LEDDISPLAY_CFG
NET_DVR_GET_VOICEBROADCAST_CAPABILITIES = _hk_struct_test.NET_DVR_GET_VOICEBROADCAST_CAPABILITIES
NET_DVR_SET_VOICEBROADCAST_CFG = _hk_struct_test.NET_DVR_SET_VOICEBROADCAST_CFG
NET_DVR_GET_PAPERPRINTFORMAT_CAPABILITIES = _hk_struct_test.NET_DVR_GET_PAPERPRINTFORMAT_CAPABILITIES
NET_DVR_GET_PAPERPRINTFORMAT_CFG = _hk_struct_test.NET_DVR_GET_PAPERPRINTFORMAT_CFG
NET_DVR_SET_PAPERPRINTFORMAT_CFG = _hk_struct_test.NET_DVR_SET_PAPERPRINTFORMAT_CFG
NET_DVR_GET_LOCkGATE_CAPABILITIES = _hk_struct_test.NET_DVR_GET_LOCkGATE_CAPABILITIES
NET_DVR_GET_LOCKGATE_CFG = _hk_struct_test.NET_DVR_GET_LOCKGATE_CFG
NET_DVR_SET_LOCKGATE_CFG = _hk_struct_test.NET_DVR_SET_LOCKGATE_CFG
NET_DVR_GET_PARKING_DATASTATE = _hk_struct_test.NET_DVR_GET_PARKING_DATASTATE
NET_DVR_SET_PARKING_DATASTATE = _hk_struct_test.NET_DVR_SET_PARKING_DATASTATE
NET_DVR_GET_TME_CAPABILITIES = _hk_struct_test.NET_DVR_GET_TME_CAPABILITIES
NET_DVR_GET_TMEVOICE_CAPABILITIES = _hk_struct_test.NET_DVR_GET_TMEVOICE_CAPABILITIES
NET_DVR_SET_TMEVOICE_CFG = _hk_struct_test.NET_DVR_SET_TMEVOICE_CFG
NET_DVR_GET_TMEVOICE_CFG = _hk_struct_test.NET_DVR_GET_TMEVOICE_CFG
NET_DVR_DEL_TMEVOICE_CFG = _hk_struct_test.NET_DVR_DEL_TMEVOICE_CFG
NET_DVR_GET_POSITION = _hk_struct_test.NET_DVR_GET_POSITION
NET_DVR_SET_POSITION = _hk_struct_test.NET_DVR_SET_POSITION
NET_DVR_GET_CENTRALIZEDCTRL_CAPABILITIES = _hk_struct_test.NET_DVR_GET_CENTRALIZEDCTRL_CAPABILITIES
NET_DVR_GET_CENTRALIZEDCTRL = _hk_struct_test.NET_DVR_GET_CENTRALIZEDCTRL
NET_DVR_SET_CENTRALIZEDCTRL = _hk_struct_test.NET_DVR_SET_CENTRALIZEDCTRL
NET_DVR_GET_COMPASS_CAPABILITIES = _hk_struct_test.NET_DVR_GET_COMPASS_CAPABILITIES
NET_DVR_GET_VANDALPROOFALARM = _hk_struct_test.NET_DVR_GET_VANDALPROOFALARM
NET_DVR_SET_VANDALPROOFALARM = _hk_struct_test.NET_DVR_SET_VANDALPROOFALARM
NET_DVR_COMPASS_CALIBRATE_CTRL = _hk_struct_test.NET_DVR_COMPASS_CALIBRATE_CTRL
NET_DVR_COMPASS_NORTH_CTRL = _hk_struct_test.NET_DVR_COMPASS_NORTH_CTRL
NET_DVR_GET_AZIMUTHINFO = _hk_struct_test.NET_DVR_GET_AZIMUTHINFO
NET_DVR_GET_SATELLITETIME = _hk_struct_test.NET_DVR_GET_SATELLITETIME
NET_DVR_SET_SATELLITETIME = _hk_struct_test.NET_DVR_SET_SATELLITETIME
NET_DVR_GET_GISINFO = _hk_struct_test.NET_DVR_GET_GISINFO
NET_DVR_GET_STREAMING_CAPABILITIES = _hk_struct_test.NET_DVR_GET_STREAMING_CAPABILITIES
NET_DVR_GET_REFRESHFRAME_CAPABILITIES = _hk_struct_test.NET_DVR_GET_REFRESHFRAME_CAPABILITIES
NET_DVR_STREAMING_REFRESH_FRAME = _hk_struct_test.NET_DVR_STREAMING_REFRESH_FRAME
NET_DVR_FACECAPTURE_STATISTICS = _hk_struct_test.NET_DVR_FACECAPTURE_STATISTICS
NET_DVR_GET_WIRELESSSERVER_CAPABILITIES = _hk_struct_test.NET_DVR_GET_WIRELESSSERVER_CAPABILITIES
NET_DVR_GET_WIRELESSSERVER = _hk_struct_test.NET_DVR_GET_WIRELESSSERVER
NET_DVR_SET_WIRELESSSERVER = _hk_struct_test.NET_DVR_SET_WIRELESSSERVER
NET_DVR_GET_CONNECT_LIST_CAPABILITIES = _hk_struct_test.NET_DVR_GET_CONNECT_LIST_CAPABILITIES
NET_DVR_GET_THSCREEN_CAPABILITIES = _hk_struct_test.NET_DVR_GET_THSCREEN_CAPABILITIES
NET_DVR_GET_THSCREEN = _hk_struct_test.NET_DVR_GET_THSCREEN
NET_DVR_GET_EXTERNALDEVICE_CAPABILITIES = _hk_struct_test.NET_DVR_GET_EXTERNALDEVICE_CAPABILITIES
NET_DVR_GET_EXTERNALDEVICE = _hk_struct_test.NET_DVR_GET_EXTERNALDEVICE
NET_DVR_SET_EXTERNALDEVICE = _hk_struct_test.NET_DVR_SET_EXTERNALDEVICE
NET_DVR_GET_LEDDISPLAYINFO_CAPABILITIES = _hk_struct_test.NET_DVR_GET_LEDDISPLAYINFO_CAPABILITIES
NET_DVR_SET_LEDDISPLAYINFO = _hk_struct_test.NET_DVR_SET_LEDDISPLAYINFO
NET_DVR_GET_SUPPLEMENTLIGHT_CAPABILITIES = _hk_struct_test.NET_DVR_GET_SUPPLEMENTLIGHT_CAPABILITIES
NET_DVR_GET_SUPPLEMENTLIGHT = _hk_struct_test.NET_DVR_GET_SUPPLEMENTLIGHT
NET_DVR_SET_SUPPLEMENTLIGHT = _hk_struct_test.NET_DVR_SET_SUPPLEMENTLIGHT
NET_DVR_SET_THSCREEN = _hk_struct_test.NET_DVR_SET_THSCREEN
NET_DVR_GET_LOWPOWER_CAPABILITIES = _hk_struct_test.NET_DVR_GET_LOWPOWER_CAPABILITIES
NET_DVR_GET_LOWPOWER = _hk_struct_test.NET_DVR_GET_LOWPOWER
NET_DVR_SET_LOWPOWER = _hk_struct_test.NET_DVR_SET_LOWPOWER
NET_DVR_GET_ZOOMLINKAGE_CAPABILITIES = _hk_struct_test.NET_DVR_GET_ZOOMLINKAGE_CAPABILITIES
NET_DVR_GET_ZOOMLINKAGE = _hk_struct_test.NET_DVR_GET_ZOOMLINKAGE
NET_DVR_SET_ZOOMLINKAGE = _hk_struct_test.NET_DVR_SET_ZOOMLINKAGE
NET_DVR_THSCREEN_TIMING = _hk_struct_test.NET_DVR_THSCREEN_TIMING
NET_DVR_GET_OSD_BATTERY_POWER_CFG = _hk_struct_test.NET_DVR_GET_OSD_BATTERY_POWER_CFG
NET_DVR_SET_OSD_BATTERY_POWER_CFG = _hk_struct_test.NET_DVR_SET_OSD_BATTERY_POWER_CFG
NET_DVR_GET_OSD_BATTERY_POWER_CFG_CAPABILITIES = _hk_struct_test.NET_DVR_GET_OSD_BATTERY_POWER_CFG_CAPABILITIES
NET_DVR_GET_VANDALPROOFALARM_TRIGGER = _hk_struct_test.NET_DVR_GET_VANDALPROOFALARM_TRIGGER
NET_DVR_SET_VANDALPROOFALARM_TRIGGER = _hk_struct_test.NET_DVR_SET_VANDALPROOFALARM_TRIGGER
NET_DVR_GET_PANORAMAIMAGE_CAPABILITIES = _hk_struct_test.NET_DVR_GET_PANORAMAIMAGE_CAPABILITIES
NET_DVR_GET_PANORAMAIMAGE = _hk_struct_test.NET_DVR_GET_PANORAMAIMAGE
NET_DVR_SET_PANORAMAIMAGE = _hk_struct_test.NET_DVR_SET_PANORAMAIMAGE
NET_DVR_GET_STREAMENCRYPTION = _hk_struct_test.NET_DVR_GET_STREAMENCRYPTION
NET_DVR_SET_STREAMENCRYPTION = _hk_struct_test.NET_DVR_SET_STREAMENCRYPTION
NET_DVR_GET_STREAMENCRYPTION_CAPABILITIES = _hk_struct_test.NET_DVR_GET_STREAMENCRYPTION_CAPABILITIES
NET_DVR_GET_REVISE_GPS_CAPABILITIES = _hk_struct_test.NET_DVR_GET_REVISE_GPS_CAPABILITIES
NET_DVR_GET_REVISE_GPS = _hk_struct_test.NET_DVR_GET_REVISE_GPS
NET_DVR_SET_REVISE_GPS = _hk_struct_test.NET_DVR_SET_REVISE_GPS
NET_DVR_GET_PDC_RECOMMEND = _hk_struct_test.NET_DVR_GET_PDC_RECOMMEND
NET_DVR_REMOVE_FLASHSTORAGE = _hk_struct_test.NET_DVR_REMOVE_FLASHSTORAGE
NET_DVR_GET_COUNTING_CAPABILITIES = _hk_struct_test.NET_DVR_GET_COUNTING_CAPABILITIES
NET_DVR_SET_SENSOR_ADJUSTMENT = _hk_struct_test.NET_DVR_SET_SENSOR_ADJUSTMENT
NET_DVR_GET_SENSOR_ADJUSTMENT_CAPABILITIES = _hk_struct_test.NET_DVR_GET_SENSOR_ADJUSTMENT_CAPABILITIES
NET_DVR_GET_WIRELESSSERVER_FULLVERSION_CFG = _hk_struct_test.NET_DVR_GET_WIRELESSSERVER_FULLVERSION_CFG
NET_DVR_SET_WIRELESSSERVER_FULLVERSION_CFG = _hk_struct_test.NET_DVR_SET_WIRELESSSERVER_FULLVERSION_CFG
NET_DVR_GET_ONLINEUSER_INFO = _hk_struct_test.NET_DVR_GET_ONLINEUSER_INFO
NET_DVR_GET_SENSOR_ADJUSTMENT_INFO = _hk_struct_test.NET_DVR_GET_SENSOR_ADJUSTMENT_INFO
NET_DVR_SENSOR_RESET_CTRL = _hk_struct_test.NET_DVR_SENSOR_RESET_CTRL
NET_DVR_GET_POSTRADAR_CAPABILITIES = _hk_struct_test.NET_DVR_GET_POSTRADAR_CAPABILITIES
NET_DVR_GET_POSTRADARSPEED_CFG = _hk_struct_test.NET_DVR_GET_POSTRADARSPEED_CFG
NET_DVR_SET_POSTRADARSPEED_CFG = _hk_struct_test.NET_DVR_SET_POSTRADARSPEED_CFG
NET_DVR_GET_POSTRADARSPEED_RECOM_CFG = _hk_struct_test.NET_DVR_GET_POSTRADARSPEED_RECOM_CFG
NET_DVR_GET_POSTRADARPARAM_CFG = _hk_struct_test.NET_DVR_GET_POSTRADARPARAM_CFG
NET_DVR_SET_POSTRADARPARAM_CFG = _hk_struct_test.NET_DVR_SET_POSTRADARPARAM_CFG
NET_DVR_GET_POSTRADARPARAM_RECOM_CFG = _hk_struct_test.NET_DVR_GET_POSTRADARPARAM_RECOM_CFG
NET_DVR_GET_ENCRYPT_DEVICE_INFO = _hk_struct_test.NET_DVR_GET_ENCRYPT_DEVICE_INFO
NET_DVR_GET_ANR_ARMING_HOST = _hk_struct_test.NET_DVR_GET_ANR_ARMING_HOST
NET_DVR_GET_FIRMWARE_VERSION = _hk_struct_test.NET_DVR_GET_FIRMWARE_VERSION
NET_DVR_GET_FTP_CAPABILITIES = _hk_struct_test.NET_DVR_GET_FTP_CAPABILITIES
NET_DVR_GET_FTPUPLOAD_CFG = _hk_struct_test.NET_DVR_GET_FTPUPLOAD_CFG
NET_DVR_SET_FTPUPLOAD_CFG = _hk_struct_test.NET_DVR_SET_FTPUPLOAD_CFG
NET_DVR_GET_VEHICLE_INFORMATION = _hk_struct_test.NET_DVR_GET_VEHICLE_INFORMATION
NET_DVR_GET_DDNS_COUNTRY_ABILITY = _hk_struct_test.NET_DVR_GET_DDNS_COUNTRY_ABILITY
NET_DVR_GET_DEVICECFG_V50 = _hk_struct_test.NET_DVR_GET_DEVICECFG_V50
NET_DVR_SET_DEVICECFG_V50 = _hk_struct_test.NET_DVR_SET_DEVICECFG_V50
NET_DVR_SET_VEHICLE_RECOG_TASK_V50 = _hk_struct_test.NET_DVR_SET_VEHICLE_RECOG_TASK_V50
NET_DVR_GET_SMARTCALIBRATION_CAPABILITIES = _hk_struct_test.NET_DVR_GET_SMARTCALIBRATION_CAPABILITIES
NET_DVR_GET_TEMPERATURE_TRIGGER = _hk_struct_test.NET_DVR_GET_TEMPERATURE_TRIGGER
NET_DVR_SET_TEMPERATURE_TRIGGER = _hk_struct_test.NET_DVR_SET_TEMPERATURE_TRIGGER
NET_DVR_GET_SMARTCALIBRATION_CFG = _hk_struct_test.NET_DVR_GET_SMARTCALIBRATION_CFG
NET_DVR_SET_SMARTCALIBRATION_CFG = _hk_struct_test.NET_DVR_SET_SMARTCALIBRATION_CFG
NET_DVR_POST_SETUP_CALIB = _hk_struct_test.NET_DVR_POST_SETUP_CALIB
NET_DVR_SET_POS_INFO_OVERLAY = _hk_struct_test.NET_DVR_SET_POS_INFO_OVERLAY
NET_DVR_GET_POS_INFO_OVERLAY = _hk_struct_test.NET_DVR_GET_POS_INFO_OVERLAY
NET_DVR_GET_CAMERA_WORK_MODE = _hk_struct_test.NET_DVR_GET_CAMERA_WORK_MODE
NET_DVR_SET_CAMERA_WORK_MODE = _hk_struct_test.NET_DVR_SET_CAMERA_WORK_MODE
NET_DVR_GET_RESOLUTION_SWITCH_CAPABILITIES = _hk_struct_test.NET_DVR_GET_RESOLUTION_SWITCH_CAPABILITIES
NET_DVR_GET_RESOLUTION_SWITCH = _hk_struct_test.NET_DVR_GET_RESOLUTION_SWITCH
NET_DVR_SET_RESOLUTION_SWITCH = _hk_struct_test.NET_DVR_SET_RESOLUTION_SWITCH
NET_DVR_GET_CONFIRM_MECHANISM_CAPABILITIES = _hk_struct_test.NET_DVR_GET_CONFIRM_MECHANISM_CAPABILITIES
NET_DVR_CONFIRM_MECHANISM_CTRL = _hk_struct_test.NET_DVR_CONFIRM_MECHANISM_CTRL
NET_DVR_GET_VEHICLLE_RESULT_CAPABILITIES = _hk_struct_test.NET_DVR_GET_VEHICLLE_RESULT_CAPABILITIES
NET_DVR_GET_CALIB_CAPABILITIES = _hk_struct_test.NET_DVR_GET_CALIB_CAPABILITIES
NET_DVR_GET_POSINFO_OVERLAY_CAPABILITIES = _hk_struct_test.NET_DVR_GET_POSINFO_OVERLAY_CAPABILITIES
NET_SDK_FINDMEDICALFILE = _hk_struct_test.NET_SDK_FINDMEDICALFILE
NET_SDK_FINDMEDICALPICTURE = _hk_struct_test.NET_SDK_FINDMEDICALPICTURE
NET_DVR_SET_POSINFO_OVERLAY = _hk_struct_test.NET_DVR_SET_POSINFO_OVERLAY
NET_DVR_GET_POSINFO_OVERLAY = _hk_struct_test.NET_DVR_GET_POSINFO_OVERLAY
NET_DVR_GET_FACELIB_TRIGGER = _hk_struct_test.NET_DVR_GET_FACELIB_TRIGGER
NET_DVR_SET_FACELIB_TRIGGER = _hk_struct_test.NET_DVR_SET_FACELIB_TRIGGER
NET_DVR_GET_FACECONTRAST_TRIGGER = _hk_struct_test.NET_DVR_GET_FACECONTRAST_TRIGGER
NET_DVR_SET_FACECONTRAST_TRIGGER = _hk_struct_test.NET_DVR_SET_FACECONTRAST_TRIGGER
NET_DVR_GET_FACECONTRAST_SCHEDULE_CAPABILITIES = _hk_struct_test.NET_DVR_GET_FACECONTRAST_SCHEDULE_CAPABILITIES
NET_DVR_GET_FACECONTRAST_SCHEDULE = _hk_struct_test.NET_DVR_GET_FACECONTRAST_SCHEDULE
NET_DVR_SET_FACECONTRAST_SCHEDULE = _hk_struct_test.NET_DVR_SET_FACECONTRAST_SCHEDULE
NET_DVR_GET_FACELIB_SCHEDULE_CAPABILITIES = _hk_struct_test.NET_DVR_GET_FACELIB_SCHEDULE_CAPABILITIES
NET_DVR_GET_VCA_VERSION_LIST = _hk_struct_test.NET_DVR_GET_VCA_VERSION_LIST
NET_DVR_GET_SETUP_CALIB = _hk_struct_test.NET_DVR_GET_SETUP_CALIB
NET_DVR_GET_PANORAMA_LINKAGE = _hk_struct_test.NET_DVR_GET_PANORAMA_LINKAGE
NET_DVR_SET_PANORAMA_LINKAGE = _hk_struct_test.NET_DVR_SET_PANORAMA_LINKAGE
NET_DVR_GET_FACELIB_SCHEDULE = _hk_struct_test.NET_DVR_GET_FACELIB_SCHEDULE
NET_DVR_SET_FACELIB_SCHEDULE = _hk_struct_test.NET_DVR_SET_FACELIB_SCHEDULE
NET_DVR_GET_SOFTWARE_SERVICE_CAPABILITIES = _hk_struct_test.NET_DVR_GET_SOFTWARE_SERVICE_CAPABILITIES
NET_DVR_GET_SOFTWARE_SERVICE = _hk_struct_test.NET_DVR_GET_SOFTWARE_SERVICE
NET_DVR_SET_SOFTWARE_SERVICE = _hk_struct_test.NET_DVR_SET_SOFTWARE_SERVICE
NET_DVR_GET_PREVIEW_MODE_CAPABILITIES = _hk_struct_test.NET_DVR_GET_PREVIEW_MODE_CAPABILITIES
NET_DVR_SET_EAGLE_FOCUS_GOTOSCENE = _hk_struct_test.NET_DVR_SET_EAGLE_FOCUS_GOTOSCENE
NET_DVR_EAGLE_FOCUS_SCENE_DEL = _hk_struct_test.NET_DVR_EAGLE_FOCUS_SCENE_DEL
NET_DVR_GET_SAFETY_HELMET_TRIGGER = _hk_struct_test.NET_DVR_GET_SAFETY_HELMET_TRIGGER
NET_DVR_SET_SAFETY_HELMET_TRIGGER = _hk_struct_test.NET_DVR_SET_SAFETY_HELMET_TRIGGER
NET_DVR_GET_SAFETY_HELMET_SCHEDULE_CAPABILITIES = _hk_struct_test.NET_DVR_GET_SAFETY_HELMET_SCHEDULE_CAPABILITIES
NET_DVR_GET_SAFETY_HELMET_SCHEDULE = _hk_struct_test.NET_DVR_GET_SAFETY_HELMET_SCHEDULE
NET_DVR_SET_SAFETY_HELMET_SCHEDULE = _hk_struct_test.NET_DVR_SET_SAFETY_HELMET_SCHEDULE
NET_DVR_GET_SIGN_ABNORMAL_TRIGGER = _hk_struct_test.NET_DVR_GET_SIGN_ABNORMAL_TRIGGER
NET_DVR_SET_SIGN_ABNORMAL_TRIGGER = _hk_struct_test.NET_DVR_SET_SIGN_ABNORMAL_TRIGGER
NET_DVR_ONE_KEY_CONFIG_SAN_V50 = _hk_struct_test.NET_DVR_ONE_KEY_CONFIG_SAN_V50
NET_DVR_GET_HDCFG_V50 = _hk_struct_test.NET_DVR_GET_HDCFG_V50
NET_DVR_SET_HDCFG_V50 = _hk_struct_test.NET_DVR_SET_HDCFG_V50
NET_DVR_GET_HDVOLUME_CFG = _hk_struct_test.NET_DVR_GET_HDVOLUME_CFG
NET_DVR_SET_HDVOLUME_CFG = _hk_struct_test.NET_DVR_SET_HDVOLUME_CFG
NET_DVR_GET_POWER_SUPPLY_CABINET_TRIGGER = _hk_struct_test.NET_DVR_GET_POWER_SUPPLY_CABINET_TRIGGER
NET_DVR_SET_POWER_SUPPLY_CABINET_TRIGGER = _hk_struct_test.NET_DVR_SET_POWER_SUPPLY_CABINET_TRIGGER
NET_DVR_GET_SENSOR_TRIGGER = _hk_struct_test.NET_DVR_GET_SENSOR_TRIGGER
NET_DVR_SET_SENSOR_TRIGGER = _hk_struct_test.NET_DVR_SET_SENSOR_TRIGGER
NET_DVR_GET_FACESNAP_TRIGGER = _hk_struct_test.NET_DVR_GET_FACESNAP_TRIGGER
NET_DVR_SET_FACESNAP_TRIGGER = _hk_struct_test.NET_DVR_SET_FACESNAP_TRIGGER
NET_DVR_GET_FACESNAP_SCHEDULE_CAPABILITIES = _hk_struct_test.NET_DVR_GET_FACESNAP_SCHEDULE_CAPABILITIES
NET_DVR_GET_FACESNAP_SCHEDULE = _hk_struct_test.NET_DVR_GET_FACESNAP_SCHEDULE
NET_DVR_SET_FACESNAP_SCHEDULE = _hk_struct_test.NET_DVR_SET_FACESNAP_SCHEDULE
NET_DVR_SET_SCREEN_SWITCH = _hk_struct_test.NET_DVR_SET_SCREEN_SWITCH
NET_DVR_GET_BV_CALIB_PIC = _hk_struct_test.NET_DVR_GET_BV_CALIB_PIC
NET_DVR_GET_BV_CALIB_RESULT = _hk_struct_test.NET_DVR_GET_BV_CALIB_RESULT
NET_DVR_GET_BV_HCORRECTION = _hk_struct_test.NET_DVR_GET_BV_HCORRECTION
NET_DVR_DEL_BV_CALIB_PIC = _hk_struct_test.NET_DVR_DEL_BV_CALIB_PIC
NET_DVR_GET_TV_SCREEN_CFG = _hk_struct_test.NET_DVR_GET_TV_SCREEN_CFG
NET_DVR_SET_TV_SCREEN_CFG = _hk_struct_test.NET_DVR_SET_TV_SCREEN_CFG
NET_DVR_ADJUST_BV_CALIB = _hk_struct_test.NET_DVR_ADJUST_BV_CALIB
NET_DVR_GET_HUMAN_CALIB = _hk_struct_test.NET_DVR_GET_HUMAN_CALIB
NET_DVR_SET_HUMAN_CALIB = _hk_struct_test.NET_DVR_SET_HUMAN_CALIB
NET_DVR_GET_USERCFG_V51 = _hk_struct_test.NET_DVR_GET_USERCFG_V51
NET_DVR_SET_USERCFG_V51 = _hk_struct_test.NET_DVR_SET_USERCFG_V51
NET_DVR_GET_SOFTIO_TRIGGER = _hk_struct_test.NET_DVR_GET_SOFTIO_TRIGGER
NET_DVR_SET_SOFTIO_TRIGGER = _hk_struct_test.NET_DVR_SET_SOFTIO_TRIGGER
NET_DVR_GET_SOFTIO_SCHEDULE_CAPABILITIES = _hk_struct_test.NET_DVR_GET_SOFTIO_SCHEDULE_CAPABILITIES
NET_DVR_GET_SOFTIO_SCHEDULE = _hk_struct_test.NET_DVR_GET_SOFTIO_SCHEDULE
NET_DVR_SET_SOFTIO_SCHEDULE = _hk_struct_test.NET_DVR_SET_SOFTIO_SCHEDULE
NET_DVR_GET_HFPD_TRIGGER = _hk_struct_test.NET_DVR_GET_HFPD_TRIGGER
NET_DVR_SET_HFPD_TRIGGER = _hk_struct_test.NET_DVR_SET_HFPD_TRIGGER
NET_DVR_GET_HFPD_SCHEDULE_CAPABILITIES = _hk_struct_test.NET_DVR_GET_HFPD_SCHEDULE_CAPABILITIES
NET_DVR_GET_HFPD_SCHEDULE = _hk_struct_test.NET_DVR_GET_HFPD_SCHEDULE
NET_DVR_SET_HFPD_SCHEDULE = _hk_struct_test.NET_DVR_SET_HFPD_SCHEDULE
NET_DVR_GET_ALARM_INFO = _hk_struct_test.NET_DVR_GET_ALARM_INFO
NET_DVR_GET_USERCFG_V52 = _hk_struct_test.NET_DVR_GET_USERCFG_V52
NET_DVR_SET_USERCFG_V52 = _hk_struct_test.NET_DVR_SET_USERCFG_V52
NET_DVR_GET_MUTEX_FUNCTION = _hk_struct_test.NET_DVR_GET_MUTEX_FUNCTION
NET_DVR_GET_SINGLE_CHANNELINFO = _hk_struct_test.NET_DVR_GET_SINGLE_CHANNELINFO
NET_DVR_GET_CHANNELINFO = _hk_struct_test.NET_DVR_GET_CHANNELINFO
NET_DVR_CHECK_LOGIN_PASSWORDCFG = _hk_struct_test.NET_DVR_CHECK_LOGIN_PASSWORDCFG
NET_DVR_GET_SINGLE_SECURITY_QUESTION_CFG = _hk_struct_test.NET_DVR_GET_SINGLE_SECURITY_QUESTION_CFG
NET_DVR_SET_SINGLE_SECURITY_QUESTION_CFG = _hk_struct_test.NET_DVR_SET_SINGLE_SECURITY_QUESTION_CFG
NET_DVR_GET_SECURITY_QUESTION_CFG = _hk_struct_test.NET_DVR_GET_SECURITY_QUESTION_CFG
NET_DVR_SET_SECURITY_QUESTION_CFG = _hk_struct_test.NET_DVR_SET_SECURITY_QUESTION_CFG
NET_DVR_GET_ONLINEUSERLIST_SC = _hk_struct_test.NET_DVR_GET_ONLINEUSERLIST_SC
NET_DVR_GET_BLACKLIST_FACECONTRAST_TRIGGER = _hk_struct_test.NET_DVR_GET_BLACKLIST_FACECONTRAST_TRIGGER
NET_DVR_SET_BLACKLIST_FACECONTRAST_TRIGGER = _hk_struct_test.NET_DVR_SET_BLACKLIST_FACECONTRAST_TRIGGER
NET_DVR_GET_WHITELIST_FACECONTRAST_TRIGGER = _hk_struct_test.NET_DVR_GET_WHITELIST_FACECONTRAST_TRIGGER
NET_DVR_SET_WHITELIST_FACECONTRAST_TRIGGER = _hk_struct_test.NET_DVR_SET_WHITELIST_FACECONTRAST_TRIGGER
NET_DVR_GET_BLACKLIST_FACECONTRAST_SCHEDULE_CAPABILITIES = _hk_struct_test.NET_DVR_GET_BLACKLIST_FACECONTRAST_SCHEDULE_CAPABILITIES
NET_DVR_GET_BLACKLIST_FACECONTRAST_SCHEDULE = _hk_struct_test.NET_DVR_GET_BLACKLIST_FACECONTRAST_SCHEDULE
NET_DVR_SET_BLACKLIST_FACECONTRAST_SCHEDULE = _hk_struct_test.NET_DVR_SET_BLACKLIST_FACECONTRAST_SCHEDULE
NET_DVR_GET_WHITELIST_FACECONTRAST_SCHEDULE_CAPABILITIES = _hk_struct_test.NET_DVR_GET_WHITELIST_FACECONTRAST_SCHEDULE_CAPABILITIES
NET_DVR_GET_WHITELIST_FACECONTRAST_SCHEDULE = _hk_struct_test.NET_DVR_GET_WHITELIST_FACECONTRAST_SCHEDULE
NET_DVR_SET_WHITELIST_FACECONTRAST_SCHEDULE = _hk_struct_test.NET_DVR_SET_WHITELIST_FACECONTRAST_SCHEDULE
NET_DVR_GET_HUMAN_RECOGNITION_SCHEDULE_CAPABILITIES = _hk_struct_test.NET_DVR_GET_HUMAN_RECOGNITION_SCHEDULE_CAPABILITIES
NET_DVR_GET_HUMAN_RECOGNITION_SCHEDULE = _hk_struct_test.NET_DVR_GET_HUMAN_RECOGNITION_SCHEDULE
NET_DVR_SET_HUMAN_RECOGNITION_SCHEDULE = _hk_struct_test.NET_DVR_SET_HUMAN_RECOGNITION_SCHEDULE
NET_DVR_GET_HUMAN_RECOGNITION_TRIGGER = _hk_struct_test.NET_DVR_GET_HUMAN_RECOGNITION_TRIGGER
NET_DVR_SET_HUMAN_RECOGNITION_TRIGGER = _hk_struct_test.NET_DVR_SET_HUMAN_RECOGNITION_TRIGGER
NET_DVR_GET_GBT28181_AUDIO_OUTPUT_CFG = _hk_struct_test.NET_DVR_GET_GBT28181_AUDIO_OUTPUT_CFG
NET_DVR_SET_GBT28181_AUDIO_OUTPUT_CFG = _hk_struct_test.NET_DVR_SET_GBT28181_AUDIO_OUTPUT_CFG
NET_DVR_GET_STUDENTS_STOODUP_TRIGGER = _hk_struct_test.NET_DVR_GET_STUDENTS_STOODUP_TRIGGER
NET_DVR_SET_STUDENTS_STOODUP_TRIGGER = _hk_struct_test.NET_DVR_SET_STUDENTS_STOODUP_TRIGGER
NET_DVR_GET_FRAMES_PEOPLE_COUNTING_SCHEDULE_CAPABILITIES = _hk_struct_test.NET_DVR_GET_FRAMES_PEOPLE_COUNTING_SCHEDULE_CAPABILITIES
NET_DVR_GET_FRAMES_PEOPLE_COUNTING_SCHEDULE = _hk_struct_test.NET_DVR_GET_FRAMES_PEOPLE_COUNTING_SCHEDULE
NET_DVR_SET_FRAMES_PEOPLE_COUNTING_SCHEDULE = _hk_struct_test.NET_DVR_SET_FRAMES_PEOPLE_COUNTING_SCHEDULE
NET_DVR_GET_FRAMES_PEOPLE_COUNTING_TRIGGER = _hk_struct_test.NET_DVR_GET_FRAMES_PEOPLE_COUNTING_TRIGGER
NET_DVR_SET_FRAMES_PEOPLE_COUNTING_TRIGGER = _hk_struct_test.NET_DVR_SET_FRAMES_PEOPLE_COUNTING_TRIGGER
NET_DVR_GET_PERSONDENSITY_TRIGGER = _hk_struct_test.NET_DVR_GET_PERSONDENSITY_TRIGGER
NET_DVR_SET_PERSONDENSITY_TRIGGER = _hk_struct_test.NET_DVR_SET_PERSONDENSITY_TRIGGER
NET_DVR_GET_PERSONDENSITY_SCHEDULE_CAPABILITIES = _hk_struct_test.NET_DVR_GET_PERSONDENSITY_SCHEDULE_CAPABILITIES
NET_DVR_GET_PERSONDENSITY_SCHEDULE = _hk_struct_test.NET_DVR_GET_PERSONDENSITY_SCHEDULE
NET_DVR_SET_PERSONDENSITY_SCHEDULE = _hk_struct_test.NET_DVR_SET_PERSONDENSITY_SCHEDULE
NET_DVR_GET_STUDENTS_STOODUP_SCHEDULE_CAPABILITIES = _hk_struct_test.NET_DVR_GET_STUDENTS_STOODUP_SCHEDULE_CAPABILITIES
NET_DVR_GET_STUDENTS_STOODUP_SCHEDULE = _hk_struct_test.NET_DVR_GET_STUDENTS_STOODUP_SCHEDULE
NET_DVR_SET_STUDENTS_STOODUP_SCHEDULE = _hk_struct_test.NET_DVR_SET_STUDENTS_STOODUP_SCHEDULE
NET_DVR_SET_FACE_THERMOMETRY_TRIGGER = _hk_struct_test.NET_DVR_SET_FACE_THERMOMETRY_TRIGGER
NET_DVR_GET_FACE_THERMOMETRY_SCHEDULE_CAPABILITIES = _hk_struct_test.NET_DVR_GET_FACE_THERMOMETRY_SCHEDULE_CAPABILITIES
NET_DVR_GET_FACE_THERMOMETRY_SCHEDULE = _hk_struct_test.NET_DVR_GET_FACE_THERMOMETRY_SCHEDULE
NET_DVR_SET_FACE_THERMOMETRY_SCHEDULE = _hk_struct_test.NET_DVR_SET_FACE_THERMOMETRY_SCHEDULE
NET_DVR_GET_FACE_THERMOMETRY_TRIGGER = _hk_struct_test.NET_DVR_GET_FACE_THERMOMETRY_TRIGGER
NET_DVR_GET_PERSONQUEUE_TRIGGER = _hk_struct_test.NET_DVR_GET_PERSONQUEUE_TRIGGER
NET_DVR_SET_PERSONQUEUE_TRIGGER = _hk_struct_test.NET_DVR_SET_PERSONQUEUE_TRIGGER
NET_DVR_GET_PERSONQUEUE_SCHEDULE_CAPABILITIES = _hk_struct_test.NET_DVR_GET_PERSONQUEUE_SCHEDULE_CAPABILITIES
NET_DVR_GET_PERSONQUEUE_SCHEDULE = _hk_struct_test.NET_DVR_GET_PERSONQUEUE_SCHEDULE
NET_DVR_SET_PERSONQUEUE_SCHEDULE = _hk_struct_test.NET_DVR_SET_PERSONQUEUE_SCHEDULE
NET_DVR_GET_FACESNAPCFG = _hk_struct_test.NET_DVR_GET_FACESNAPCFG
NET_DVR_SET_FACESNAPCFG = _hk_struct_test.NET_DVR_SET_FACESNAPCFG
NET_DVR_GET_DEVACCESS_CFG = _hk_struct_test.NET_DVR_GET_DEVACCESS_CFG
NET_DVR_SET_DEVACCESS_CFG = _hk_struct_test.NET_DVR_SET_DEVACCESS_CFG
NET_DVR_GET_SAVE_PATH_CFG = _hk_struct_test.NET_DVR_GET_SAVE_PATH_CFG
NET_DVR_SET_SAVE_PATH_CFG = _hk_struct_test.NET_DVR_SET_SAVE_PATH_CFG
NET_VCA_GET_RULECFG_V41 = _hk_struct_test.NET_VCA_GET_RULECFG_V41
NET_VCA_SET_RULECFG_V41 = _hk_struct_test.NET_VCA_SET_RULECFG_V41
NET_DVR_GET_AID_RULECFG_V41 = _hk_struct_test.NET_DVR_GET_AID_RULECFG_V41
NET_DVR_SET_AID_RULECFG_V41 = _hk_struct_test.NET_DVR_SET_AID_RULECFG_V41
NET_DVR_GET_TPS_RULECFG_V41 = _hk_struct_test.NET_DVR_GET_TPS_RULECFG_V41
NET_DVR_SET_TPS_RULECFG_V41 = _hk_struct_test.NET_DVR_SET_TPS_RULECFG_V41
NET_VCA_GET_FACEDETECT_RULECFG_V41 = _hk_struct_test.NET_VCA_GET_FACEDETECT_RULECFG_V41
NET_VCA_SET_FACEDETECT_RULECFG_V41 = _hk_struct_test.NET_VCA_SET_FACEDETECT_RULECFG_V41
NET_DVR_GET_PDC_RULECFG_V41 = _hk_struct_test.NET_DVR_GET_PDC_RULECFG_V41
NET_DVR_SET_PDC_RULECFG_V41 = _hk_struct_test.NET_DVR_SET_PDC_RULECFG_V41
NET_DVR_GET_TRIAL_VERSION_CFG = _hk_struct_test.NET_DVR_GET_TRIAL_VERSION_CFG
NET_DVR_GET_VCA_CTRLINFO_CFG = _hk_struct_test.NET_DVR_GET_VCA_CTRLINFO_CFG
NET_DVR_SET_VCA_CTRLINFO_CFG = _hk_struct_test.NET_DVR_SET_VCA_CTRLINFO_CFG
NET_DVR_SYN_CHANNEL_NAME = _hk_struct_test.NET_DVR_SYN_CHANNEL_NAME
NET_DVR_GET_RESET_COUNTER = _hk_struct_test.NET_DVR_GET_RESET_COUNTER
NET_DVR_SET_RESET_COUNTER = _hk_struct_test.NET_DVR_SET_RESET_COUNTER
NET_DVR_GET_OBJECT_COLOR = _hk_struct_test.NET_DVR_GET_OBJECT_COLOR
NET_DVR_SET_OBJECT_COLOR = _hk_struct_test.NET_DVR_SET_OBJECT_COLOR
NET_DVR_GET_AUX_AREA = _hk_struct_test.NET_DVR_GET_AUX_AREA
NET_DVR_SET_AUX_AREA = _hk_struct_test.NET_DVR_SET_AUX_AREA
NET_DVR_GET_CHAN_WORKMODE = _hk_struct_test.NET_DVR_GET_CHAN_WORKMODE
NET_DVR_SET_CHAN_WORKMODE = _hk_struct_test.NET_DVR_SET_CHAN_WORKMODE
NET_DVR_GET_SLAVE_CHANNEL = _hk_struct_test.NET_DVR_GET_SLAVE_CHANNEL
NET_DVR_SET_SLAVE_CHANNEL = _hk_struct_test.NET_DVR_SET_SLAVE_CHANNEL
NET_DVR_GET_VQD_EVENT_RULE = _hk_struct_test.NET_DVR_GET_VQD_EVENT_RULE
NET_DVR_SET_VQD_EVENT_RULE = _hk_struct_test.NET_DVR_SET_VQD_EVENT_RULE
NET_DVR_GET_BASELINE_SCENE = _hk_struct_test.NET_DVR_GET_BASELINE_SCENE
NET_DVR_SET_BASELINE_SCENE = _hk_struct_test.NET_DVR_SET_BASELINE_SCENE
NET_DVR_CONTROL_BASELINE_SCENE = _hk_struct_test.NET_DVR_CONTROL_BASELINE_SCENE
NET_DVR_SET_VCA_DETION_CFG = _hk_struct_test.NET_DVR_SET_VCA_DETION_CFG
NET_DVR_GET_VCA_DETION_CFG = _hk_struct_test.NET_DVR_GET_VCA_DETION_CFG
NET_DVR_GET_STREAM_ATTACHINFO_CFG = _hk_struct_test.NET_DVR_GET_STREAM_ATTACHINFO_CFG
NET_DVR_SET_STREAM_ATTACHINFO_CFG = _hk_struct_test.NET_DVR_SET_STREAM_ATTACHINFO_CFG
NET_DVR_GET_BV_CALIB_TYPE = _hk_struct_test.NET_DVR_GET_BV_CALIB_TYPE
NET_DVR_CONTROL_BV_SAMPLE_CALIB = _hk_struct_test.NET_DVR_CONTROL_BV_SAMPLE_CALIB
NET_DVR_GET_BV_SAMPLE_CALIB_CFG = _hk_struct_test.NET_DVR_GET_BV_SAMPLE_CALIB_CFG
NET_DVR_GET_RULECFG_V42 = _hk_struct_test.NET_DVR_GET_RULECFG_V42
NET_DVR_SET_RULECFG_V42 = _hk_struct_test.NET_DVR_SET_RULECFG_V42
NET_DVR_SET_VCA_DETION_CFG_V40 = _hk_struct_test.NET_DVR_SET_VCA_DETION_CFG_V40
NET_DVR_GET_VCA_DETION_CFG_V40 = _hk_struct_test.NET_DVR_GET_VCA_DETION_CFG_V40
NET_DVR_SET_FLASH_CFG = _hk_struct_test.NET_DVR_SET_FLASH_CFG
NET_DVR_GET_T1TEST_CFG = _hk_struct_test.NET_DVR_GET_T1TEST_CFG
NET_DVR_SET_T1TEST_CFG = _hk_struct_test.NET_DVR_SET_T1TEST_CFG
NET_ITS_GET_OVERLAP_CFG_V50 = _hk_struct_test.NET_ITS_GET_OVERLAP_CFG_V50
NET_ITS_SET_OVERLAP_CFG_V50 = _hk_struct_test.NET_ITS_SET_OVERLAP_CFG_V50
NET_DVR_GET_PARKLAMP_STATE = _hk_struct_test.NET_DVR_GET_PARKLAMP_STATE
NET_DVR_GET_CLOUDSTORAGE_CFG = _hk_struct_test.NET_DVR_GET_CLOUDSTORAGE_CFG
NET_DVR_SET_CLOUDSTORAGE_CFG = _hk_struct_test.NET_DVR_SET_CLOUDSTORAGE_CFG
NET_ITS_GET_BASE_INFO = _hk_struct_test.NET_ITS_GET_BASE_INFO
NET_DVR_GET_SENSOR_INFO = _hk_struct_test.NET_DVR_GET_SENSOR_INFO
NET_DVR_SET_SENSOR_SWITCH = _hk_struct_test.NET_DVR_SET_SENSOR_SWITCH
NET_ITS_GET_IMGMERGE_CFG = _hk_struct_test.NET_ITS_GET_IMGMERGE_CFG
NET_ITS_SET_IMGMERGE_CFG = _hk_struct_test.NET_ITS_SET_IMGMERGE_CFG
NET_ITS_GET_UPLOAD_CFG = _hk_struct_test.NET_ITS_GET_UPLOAD_CFG
NET_ITS_SET_UPLOAD_CFG = _hk_struct_test.NET_ITS_SET_UPLOAD_CFG
NET_DVR_GET_SENSOR_PORT_CAPABILITIES = _hk_struct_test.NET_DVR_GET_SENSOR_PORT_CAPABILITIES
NET_ITS_GET_WORKSTATE = _hk_struct_test.NET_ITS_GET_WORKSTATE
NET_ITS_GET_IPC_CHAN_CFG = _hk_struct_test.NET_ITS_GET_IPC_CHAN_CFG
NET_ITS_SET_IPC_CHAN_CFG = _hk_struct_test.NET_ITS_SET_IPC_CHAN_CFG
NET_ITS_GET_OVERLAP_CFG = _hk_struct_test.NET_ITS_GET_OVERLAP_CFG
NET_ITS_SET_OVERLAP_CFG = _hk_struct_test.NET_ITS_SET_OVERLAP_CFG
NET_DVR_GET_TRIGGEREX_CFG = _hk_struct_test.NET_DVR_GET_TRIGGEREX_CFG
NET_DVR_SET_TRIGGEREX_CFG = _hk_struct_test.NET_DVR_SET_TRIGGEREX_CFG
NET_ITS_GET_ROAD_INFO = _hk_struct_test.NET_ITS_GET_ROAD_INFO
NET_ITS_REMOTE_DEVICE_CONTROL = _hk_struct_test.NET_ITS_REMOTE_DEVICE_CONTROL
NET_ITS_GET_GATEIPC_CHAN_CFG = _hk_struct_test.NET_ITS_GET_GATEIPC_CHAN_CFG
NET_ITS_SET_GATEIPC_CHAN_CFG = _hk_struct_test.NET_ITS_SET_GATEIPC_CHAN_CFG
NET_ITS_TRANSCHAN_START = _hk_struct_test.NET_ITS_TRANSCHAN_START
NET_ITS_GET_ECTWORKSTATE = _hk_struct_test.NET_ITS_GET_ECTWORKSTATE
NET_ITS_GET_ECT_CHAN_INFO = _hk_struct_test.NET_ITS_GET_ECT_CHAN_INFO
NET_DVR_GET_HEATMAP_RESULT = _hk_struct_test.NET_DVR_GET_HEATMAP_RESULT
NET_DVR_SET_ITS_EXDEVCFG = _hk_struct_test.NET_DVR_SET_ITS_EXDEVCFG
NET_DVR_GET_ITS_EXDEVCFG = _hk_struct_test.NET_DVR_GET_ITS_EXDEVCFG
NET_DVR_GET_ITS_EXDEVSTATUS = _hk_struct_test.NET_DVR_GET_ITS_EXDEVSTATUS
NET_DVR_SET_ITS_ENDEVCMD = _hk_struct_test.NET_DVR_SET_ITS_ENDEVCMD
NET_DVR_SET_ENISSUED_DATADEL = _hk_struct_test.NET_DVR_SET_ENISSUED_DATADEL
NET_DVR_GET_PDC_RESULT = _hk_struct_test.NET_DVR_GET_PDC_RESULT
NET_ITS_GET_LAMP_CTRLCFG = _hk_struct_test.NET_ITS_GET_LAMP_CTRLCFG
NET_ITS_SET_LAMP_CTRLCFG = _hk_struct_test.NET_ITS_SET_LAMP_CTRLCFG
NET_ITS_GET_PARKSPACE_ATTRIBUTE_CFG = _hk_struct_test.NET_ITS_GET_PARKSPACE_ATTRIBUTE_CFG
NET_ITS_SET_PARKSPACE_ATTRIBUTE_CFG = _hk_struct_test.NET_ITS_SET_PARKSPACE_ATTRIBUTE_CFG
NET_ITS_SET_LAMP_EXTERNAL_CFG = _hk_struct_test.NET_ITS_SET_LAMP_EXTERNAL_CFG
NET_ITS_SET_COMPEL_CAPTURE = _hk_struct_test.NET_ITS_SET_COMPEL_CAPTURE
NET_DVR_SET_TIMESIGN_CFG = _hk_struct_test.NET_DVR_SET_TIMESIGN_CFG
NET_DVR_GET_TIMESIGN_CFG = _hk_struct_test.NET_DVR_GET_TIMESIGN_CFG
NET_DVR_GET_SIGNALLAMP_STATUS = _hk_struct_test.NET_DVR_GET_SIGNALLAMP_STATUS
NET_DVR_GET_MONITOR_PLAN_VQD = _hk_struct_test.NET_DVR_GET_MONITOR_PLAN_VQD
NET_DVR_GET_MONITORID_VQD = _hk_struct_test.NET_DVR_GET_MONITORID_VQD
NET_DVR_SET_MONITOR_INFO = _hk_struct_test.NET_DVR_SET_MONITOR_INFO
NET_DVR_DEL_MONITOR_PLAN_VQD = _hk_struct_test.NET_DVR_DEL_MONITOR_PLAN_VQD
NET_DVR_GET_MONITOR_VQD_STATUS = _hk_struct_test.NET_DVR_GET_MONITOR_VQD_STATUS
NET_DVR_GET_RECORD_INFO = _hk_struct_test.NET_DVR_GET_RECORD_INFO
NET_DVR_GET_MONITOR_VQDCFG = _hk_struct_test.NET_DVR_GET_MONITOR_VQDCFG
NET_DVR_SET_MONITOR_VQDCFG = _hk_struct_test.NET_DVR_SET_MONITOR_VQDCFG
NET_DVR_SET_MONITOR_PLAN_VQDCFG = _hk_struct_test.NET_DVR_SET_MONITOR_PLAN_VQDCFG
NET_DVR_SCENE_CHANGE_UPDATE = _hk_struct_test.NET_DVR_SCENE_CHANGE_UPDATE
NET_DVR_GET_CALIBRATE_POINT = _hk_struct_test.NET_DVR_GET_CALIBRATE_POINT
NET_DVR_GET_SCENE_CFG = _hk_struct_test.NET_DVR_GET_SCENE_CFG
NET_DVR_SET_SCENE_CFG = _hk_struct_test.NET_DVR_SET_SCENE_CFG
NET_DVR_GET_SCENE_REFERENCE_REGION = _hk_struct_test.NET_DVR_GET_SCENE_REFERENCE_REGION
NET_DVR_SET_SCENE_REFERENCE_REGION = _hk_struct_test.NET_DVR_SET_SCENE_REFERENCE_REGION
NET_DVR_GET_SCENE_CALIBRATION = _hk_struct_test.NET_DVR_GET_SCENE_CALIBRATION
NET_DVR_SET_SCENE_CALIBRATION = _hk_struct_test.NET_DVR_SET_SCENE_CALIBRATION
NET_DVR_GET_SCENE_MASK_REGION = _hk_struct_test.NET_DVR_GET_SCENE_MASK_REGION
NET_DVR_SET_SCENE_MASK_REGION = _hk_struct_test.NET_DVR_SET_SCENE_MASK_REGION
NET_DVR_GET_SCENE_LANECFG = _hk_struct_test.NET_DVR_GET_SCENE_LANECFG
NET_DVR_SET_SCENE_LANECFG = _hk_struct_test.NET_DVR_SET_SCENE_LANECFG
NET_DVR_GET_SCENE_AID_RULECFG = _hk_struct_test.NET_DVR_GET_SCENE_AID_RULECFG
NET_DVR_SET_SCENE_AID_RULECFG = _hk_struct_test.NET_DVR_SET_SCENE_AID_RULECFG
NET_DVR_GET_SCENE_TPS_RULECFG = _hk_struct_test.NET_DVR_GET_SCENE_TPS_RULECFG
NET_DVR_SET_SCENE_TPS_RULECFG = _hk_struct_test.NET_DVR_SET_SCENE_TPS_RULECFG
NET_DVR_GET_SCENE_TIME_CFG = _hk_struct_test.NET_DVR_GET_SCENE_TIME_CFG
NET_DVR_SET_SCENE_TIME_CFG = _hk_struct_test.NET_DVR_SET_SCENE_TIME_CFG
NET_DVR_GET_FORENSICS_MODE = _hk_struct_test.NET_DVR_GET_FORENSICS_MODE
NET_DVR_SET_FORENSICS_MODE = _hk_struct_test.NET_DVR_SET_FORENSICS_MODE
NET_DVR_FORCESTOP_FORENSICS_CTRL = _hk_struct_test.NET_DVR_FORCESTOP_FORENSICS_CTRL
NET_DVR_GET_ALARM_PROCESS_CFG = _hk_struct_test.NET_DVR_GET_ALARM_PROCESS_CFG
NET_DVR_SET_ALARM_PROCESS_CFG = _hk_struct_test.NET_DVR_SET_ALARM_PROCESS_CFG
NET_DVR_GET_BLACKLIST_ALARM_INFO = _hk_struct_test.NET_DVR_GET_BLACKLIST_ALARM_INFO
NET_DVR_GET_STORAGE_RESOURCE_CFG = _hk_struct_test.NET_DVR_GET_STORAGE_RESOURCE_CFG
NET_DVR_SET_STORAGE_RESOURCE_CFG = _hk_struct_test.NET_DVR_SET_STORAGE_RESOURCE_CFG
NET_DVR_DEL_BLACKLIST_ALARM_RECORD = _hk_struct_test.NET_DVR_DEL_BLACKLIST_ALARM_RECORD
NET_DVR_SET_BLACKLIST_GROUP_INFO = _hk_struct_test.NET_DVR_SET_BLACKLIST_GROUP_INFO
NET_DVR_DEL_BLACKLIST_GROUP_INFO = _hk_struct_test.NET_DVR_DEL_BLACKLIST_GROUP_INFO
NET_DVR_GET_BLACKLIST_GROUP_INFO = _hk_struct_test.NET_DVR_GET_BLACKLIST_GROUP_INFO
NET_DVR_SET_BLACKLIST_GROUP_RECORD_CFG = _hk_struct_test.NET_DVR_SET_BLACKLIST_GROUP_RECORD_CFG
NET_DVR_GET_BLACKLIST_GROUP_RECORD_CFG = _hk_struct_test.NET_DVR_GET_BLACKLIST_GROUP_RECORD_CFG
NET_DVR_DEL_BLACKLIST_GROUP_RECORD_CFG = _hk_struct_test.NET_DVR_DEL_BLACKLIST_GROUP_RECORD_CFG
NET_DVR_GET_AREA_MONITOR_CFG = _hk_struct_test.NET_DVR_GET_AREA_MONITOR_CFG
NET_DVR_SET_AREA_MONITOR_CFG = _hk_struct_test.NET_DVR_SET_AREA_MONITOR_CFG
NET_DVR_DEL_AREA_MONITOR_CFG = _hk_struct_test.NET_DVR_DEL_AREA_MONITOR_CFG
NET_DVR_RETRIEVAL_SNAP_RECORD = _hk_struct_test.NET_DVR_RETRIEVAL_SNAP_RECORD
NET_DVR_GET_ALARMLIST = _hk_struct_test.NET_DVR_GET_ALARMLIST
NET_DVR_DETECT_IMAGE = _hk_struct_test.NET_DVR_DETECT_IMAGE
NET_DVR_GET_SNAP_RECORD = _hk_struct_test.NET_DVR_GET_SNAP_RECORD
NET_DVR_DEL_SNAP_RECORD = _hk_struct_test.NET_DVR_DEL_SNAP_RECORD
NET_DVR_GET_FACE_RECORD = _hk_struct_test.NET_DVR_GET_FACE_RECORD
NET_DVR_SET_FACE_RECORD = _hk_struct_test.NET_DVR_SET_FACE_RECORD
NET_DVR_DEL_FACE_RECORD = _hk_struct_test.NET_DVR_DEL_FACE_RECORD
NET_DVR_GET_FACE_DATABASE = _hk_struct_test.NET_DVR_GET_FACE_DATABASE
NET_DVR_SET_FACE_DATABASE = _hk_struct_test.NET_DVR_SET_FACE_DATABASE
NET_DVR_DEL_FACE_DATABASE = _hk_struct_test.NET_DVR_DEL_FACE_DATABASE
NET_DVR_RETRIEVAL_FACE_DATABASE = _hk_struct_test.NET_DVR_RETRIEVAL_FACE_DATABASE
NET_DVR_SET_BLACKLIST_REL_DEV_CFG = _hk_struct_test.NET_DVR_SET_BLACKLIST_REL_DEV_CFG
NET_DVR_DEL_BLACKLIST_REL_DEV = _hk_struct_test.NET_DVR_DEL_BLACKLIST_REL_DEV
NET_DVR_GET_DISK_RAID_INFO = _hk_struct_test.NET_DVR_GET_DISK_RAID_INFO
NET_DVR_SET_DISK_RAID_INFO = _hk_struct_test.NET_DVR_SET_DISK_RAID_INFO
NET_DVR_GET_DVR_SYNCHRONOUS_IPC = _hk_struct_test.NET_DVR_GET_DVR_SYNCHRONOUS_IPC
NET_DVR_SET_DVR_SYNCHRONOUS_IPC = _hk_struct_test.NET_DVR_SET_DVR_SYNCHRONOUS_IPC
NET_DVR_SET_DVR_IPC_PASSWD = _hk_struct_test.NET_DVR_SET_DVR_IPC_PASSWD
NET_DVR_GET_DEVICE_NET_USING_INFO = _hk_struct_test.NET_DVR_GET_DEVICE_NET_USING_INFO
NET_DVR_SET_DVR_IPC_NET = _hk_struct_test.NET_DVR_SET_DVR_IPC_NET
NET_DVR_GET_RECORD_CHANNEL_INFO = _hk_struct_test.NET_DVR_GET_RECORD_CHANNEL_INFO
NET_DVR_SET_RECORD_CHANNEL_INFO = _hk_struct_test.NET_DVR_SET_RECORD_CHANNEL_INFO
NET_DVR_MOUNT_DISK = _hk_struct_test.NET_DVR_MOUNT_DISK
NET_DVR_UNMOUNT_DISK = _hk_struct_test.NET_DVR_UNMOUNT_DISK
NET_DVR_GET_STREAM_SRC_INFO = _hk_struct_test.NET_DVR_GET_STREAM_SRC_INFO
NET_DVR_SET_STREAM_SRC_INFO = _hk_struct_test.NET_DVR_SET_STREAM_SRC_INFO
NET_DVR_GET_STREAM_RECORD_INFO = _hk_struct_test.NET_DVR_GET_STREAM_RECORD_INFO
NET_DVR_SET_STREAM_RECORD_INFO = _hk_struct_test.NET_DVR_SET_STREAM_RECORD_INFO
NET_DVR_GET_STREAM_RECORD_STATUS = _hk_struct_test.NET_DVR_GET_STREAM_RECORD_STATUS
NET_DVR_SET_STREAM_RECORD_STATUS = _hk_struct_test.NET_DVR_SET_STREAM_RECORD_STATUS
NET_DVR_GET_STREAM_INFO = _hk_struct_test.NET_DVR_GET_STREAM_INFO
NET_DVR_GET_STREAM_SRC_INFO_V40 = _hk_struct_test.NET_DVR_GET_STREAM_SRC_INFO_V40
NET_DVR_SET_STREAM_SRC_INFO_V40 = _hk_struct_test.NET_DVR_SET_STREAM_SRC_INFO_V40
NET_DVR_GET_RELOCATE_INFO = _hk_struct_test.NET_DVR_GET_RELOCATE_INFO
NET_DVR_START_GOP_INFO_PASSBACK = _hk_struct_test.NET_DVR_START_GOP_INFO_PASSBACK
NET_DVR_GET_CHANS_RECORD_STATUS_CFG = _hk_struct_test.NET_DVR_GET_CHANS_RECORD_STATUS_CFG
NET_DVR_SET_CHANS_RECORD_STATUS_CFG = _hk_struct_test.NET_DVR_SET_CHANS_RECORD_STATUS_CFG
NET_DVR_GET_IP_ALARM_GROUP_NUM = _hk_struct_test.NET_DVR_GET_IP_ALARM_GROUP_NUM
NET_DVR_GET_IP_ALARM_IN = _hk_struct_test.NET_DVR_GET_IP_ALARM_IN
NET_DVR_GET_IP_ALARM_OUT = _hk_struct_test.NET_DVR_GET_IP_ALARM_OUT
NET_DVR_GET_FTPCFG_SECOND = _hk_struct_test.NET_DVR_GET_FTPCFG_SECOND
NET_DVR_SET_FTPCFG_SECOND = _hk_struct_test.NET_DVR_SET_FTPCFG_SECOND
NET_DVR_GET_DEFAULT_VIDEO_EFFECT = _hk_struct_test.NET_DVR_GET_DEFAULT_VIDEO_EFFECT
NET_DVR_SET_VIDEO_EFFECT = _hk_struct_test.NET_DVR_SET_VIDEO_EFFECT
NET_DVR_DEL_INVALID_DISK = _hk_struct_test.NET_DVR_DEL_INVALID_DISK
NET_DVR_GET_DRAWFRAME_DISK_QUOTA_CFG = _hk_struct_test.NET_DVR_GET_DRAWFRAME_DISK_QUOTA_CFG
NET_DVR_SET_DRAWFRAME_DISK_QUOTA_CFG = _hk_struct_test.NET_DVR_SET_DRAWFRAME_DISK_QUOTA_CFG
NET_DVR_GET_NAT_CFG = _hk_struct_test.NET_DVR_GET_NAT_CFG
NET_DVR_SET_NAT_CFG = _hk_struct_test.NET_DVR_SET_NAT_CFG
NET_DVR_GET_AES_KEY = _hk_struct_test.NET_DVR_GET_AES_KEY
NET_DVR_GET_POE_CFG = _hk_struct_test.NET_DVR_GET_POE_CFG
NET_DVR_SET_POE_CFG = _hk_struct_test.NET_DVR_SET_POE_CFG
NET_DVR_GET_CUSTOM_PRO_CFG = _hk_struct_test.NET_DVR_GET_CUSTOM_PRO_CFG
NET_DVR_SET_CUSTOM_PRO_CFG = _hk_struct_test.NET_DVR_SET_CUSTOM_PRO_CFG
NET_DVR_GET_STREAM_CABAC = _hk_struct_test.NET_DVR_GET_STREAM_CABAC
NET_DVR_SET_STREAM_CABAC = _hk_struct_test.NET_DVR_SET_STREAM_CABAC
NET_DVR_GET_ESATA_MINISAS_USAGE_CFG = _hk_struct_test.NET_DVR_GET_ESATA_MINISAS_USAGE_CFG
NET_DVR_SET_ESATA_MINISAS_USAGE_CFG = _hk_struct_test.NET_DVR_SET_ESATA_MINISAS_USAGE_CFG
NET_DVR_GET_HDCFG_V40 = _hk_struct_test.NET_DVR_GET_HDCFG_V40
NET_DVR_SET_HDCFG_V40 = _hk_struct_test.NET_DVR_SET_HDCFG_V40
NET_DVR_GET_POE_CHANNEL_ADD_MODE = _hk_struct_test.NET_DVR_GET_POE_CHANNEL_ADD_MODE
NET_DVR_SET_POE_CHANNEL_ADD_MODE = _hk_struct_test.NET_DVR_SET_POE_CHANNEL_ADD_MODE
NET_DVR_GET_DIGITAL_CHANNEL_STATE = _hk_struct_test.NET_DVR_GET_DIGITAL_CHANNEL_STATE
NET_DVR_GET_BONJOUR_CFG = _hk_struct_test.NET_DVR_GET_BONJOUR_CFG
NET_DVR_SET_BONJOUR_CFG = _hk_struct_test.NET_DVR_SET_BONJOUR_CFG
NET_DVR_GET_SOCKS_CFG = _hk_struct_test.NET_DVR_GET_SOCKS_CFG
NET_DVR_SET_SOCKS_CFG = _hk_struct_test.NET_DVR_SET_SOCKS_CFG
NET_DVR_GET_QOS_CFG = _hk_struct_test.NET_DVR_GET_QOS_CFG
NET_DVR_SET_QOS_CFG = _hk_struct_test.NET_DVR_SET_QOS_CFG
NET_DVR_GET_HTTPS_CFG = _hk_struct_test.NET_DVR_GET_HTTPS_CFG
NET_DVR_SET_HTTPS_CFG = _hk_struct_test.NET_DVR_SET_HTTPS_CFG
NET_DVR_GET_WD1_CFG = _hk_struct_test.NET_DVR_GET_WD1_CFG
NET_DVR_SET_WD1_CFG = _hk_struct_test.NET_DVR_SET_WD1_CFG
NET_DVR_CREATE_CERT = _hk_struct_test.NET_DVR_CREATE_CERT
NET_DVR_DELETE_CERT = _hk_struct_test.NET_DVR_DELETE_CERT
NET_DVR_GET_RECORD_LOCK_PERCENTAGE = _hk_struct_test.NET_DVR_GET_RECORD_LOCK_PERCENTAGE
NET_DVR_SET_RECORD_LOCK_PERCENTAGE = _hk_struct_test.NET_DVR_SET_RECORD_LOCK_PERCENTAGE
NET_DVR_CMD_TRIGGER_PERIOD_RECORD = _hk_struct_test.NET_DVR_CMD_TRIGGER_PERIOD_RECORD
NET_DVR_UPLOAD_CERT = _hk_struct_test.NET_DVR_UPLOAD_CERT
NET_DVR_DOWNLOAD_CERT = _hk_struct_test.NET_DVR_DOWNLOAD_CERT
NET_DVR_GET_CERT = _hk_struct_test.NET_DVR_GET_CERT
NET_DVR_GET_POS_FILTER_CFG = _hk_struct_test.NET_DVR_GET_POS_FILTER_CFG
NET_DVR_SET_POS_FILTER_CFG = _hk_struct_test.NET_DVR_SET_POS_FILTER_CFG
NET_DVR_GET_CONNECT_POS_CFG = _hk_struct_test.NET_DVR_GET_CONNECT_POS_CFG
NET_DVR_SET_CONNECT_POS_CFG = _hk_struct_test.NET_DVR_SET_CONNECT_POS_CFG
NET_DVR_GET_CHAN_FILTER_CFG = _hk_struct_test.NET_DVR_GET_CHAN_FILTER_CFG
NET_DVR_SET_CHAN_FILTER_CFG = _hk_struct_test.NET_DVR_SET_CHAN_FILTER_CFG
NET_DVR_GET_FTPCFG_V40 = _hk_struct_test.NET_DVR_GET_FTPCFG_V40
NET_DVR_SET_FTPCFG_V40 = _hk_struct_test.NET_DVR_SET_FTPCFG_V40
NET_DVR_GET_MONTHLY_RECORD_DISTRIBUTION = _hk_struct_test.NET_DVR_GET_MONTHLY_RECORD_DISTRIBUTION
NET_DVR_GET_ACCESS_DEVICE_CHANNEL_INFO = _hk_struct_test.NET_DVR_GET_ACCESS_DEVICE_CHANNEL_INFO
NET_DVR_GET_PREVIEW_SWITCH_CFG = _hk_struct_test.NET_DVR_GET_PREVIEW_SWITCH_CFG
NET_DVR_SET_PREVIEW_SWITCH_CFG = _hk_struct_test.NET_DVR_SET_PREVIEW_SWITCH_CFG
NET_DVR_GET_N_PLUS_ONE_WORK_MODE = _hk_struct_test.NET_DVR_GET_N_PLUS_ONE_WORK_MODE
NET_DVR_SET_N_PLUS_ONE_WORK_MODE = _hk_struct_test.NET_DVR_SET_N_PLUS_ONE_WORK_MODE
NET_DVR_GET_HD_STATUS = _hk_struct_test.NET_DVR_GET_HD_STATUS
NET_DVR_SET_HD_STATUS = _hk_struct_test.NET_DVR_SET_HD_STATUS
NET_DVR_IMPORT_IPC_CFG_FILE = _hk_struct_test.NET_DVR_IMPORT_IPC_CFG_FILE
NET_DVR_EXPORT_IPC_CFG_FILE = _hk_struct_test.NET_DVR_EXPORT_IPC_CFG_FILE
NET_DVR_UPGRADE_IPC = _hk_struct_test.NET_DVR_UPGRADE_IPC
NET_DVR_GET_RAID_BACKGROUND_TASK_SPEED = _hk_struct_test.NET_DVR_GET_RAID_BACKGROUND_TASK_SPEED
NET_DVR_SET_RAID_BACKGROUND_TASK_SPEED = _hk_struct_test.NET_DVR_SET_RAID_BACKGROUND_TASK_SPEED
NET_DVR_GET_EXCEPTIONCFG_V40 = _hk_struct_test.NET_DVR_GET_EXCEPTIONCFG_V40
NET_DVR_SET_EXCEPTIONCFG_V40 = _hk_struct_test.NET_DVR_SET_EXCEPTIONCFG_V40
NET_DVR_GET_PICCFG_V40 = _hk_struct_test.NET_DVR_GET_PICCFG_V40
NET_DVR_SET_PICCFG_V40 = _hk_struct_test.NET_DVR_SET_PICCFG_V40
NET_DVR_GET_ALARMINCFG_V40 = _hk_struct_test.NET_DVR_GET_ALARMINCFG_V40
NET_DVR_SET_ALARMINCFG_V40 = _hk_struct_test.NET_DVR_SET_ALARMINCFG_V40
NET_DVR_GET_IPALARMINCFG_V40 = _hk_struct_test.NET_DVR_GET_IPALARMINCFG_V40
NET_DVR_GET_IPALARMOUTCFG_V40 = _hk_struct_test.NET_DVR_GET_IPALARMOUTCFG_V40
NET_DVR_GET_USERCFG_V40 = _hk_struct_test.NET_DVR_GET_USERCFG_V40
NET_DVR_SET_USERCFG_V40 = _hk_struct_test.NET_DVR_SET_USERCFG_V40
NET_DVR_GET_WORK_STATUS = _hk_struct_test.NET_DVR_GET_WORK_STATUS
NET_DVR_GET_JPEG_CAPTURE_CFG_V40 = _hk_struct_test.NET_DVR_GET_JPEG_CAPTURE_CFG_V40
NET_DVR_SET_JPEG_CAPTURE_CFG_V40 = _hk_struct_test.NET_DVR_SET_JPEG_CAPTURE_CFG_V40
NET_DVR_GET_HDGROUP_CFG_V40 = _hk_struct_test.NET_DVR_GET_HDGROUP_CFG_V40
NET_DVR_SET_HDGROUP_CFG_V40 = _hk_struct_test.NET_DVR_SET_HDGROUP_CFG_V40
NET_DVR_GET_SMD_HOLIDAY_HANDLE = _hk_struct_test.NET_DVR_GET_SMD_HOLIDAY_HANDLE
NET_DVR_SET_SMD_HOLIDAY_HANDLE = _hk_struct_test.NET_DVR_SET_SMD_HOLIDAY_HANDLE
NET_DVR_GET_PIC_MODEL_CFG = _hk_struct_test.NET_DVR_GET_PIC_MODEL_CFG
NET_DVR_SET_PIC_MODEL_CFG = _hk_struct_test.NET_DVR_SET_PIC_MODEL_CFG
NET_DVR_START_LOCAL_MOUSE_EVENT = _hk_struct_test.NET_DVR_START_LOCAL_MOUSE_EVENT
NET_DVR_START_SIMULARE_MOUSE_EVENT = _hk_struct_test.NET_DVR_START_SIMULARE_MOUSE_EVENT
NET_DVR_GET_WORK_STATUS_V50 = _hk_struct_test.NET_DVR_GET_WORK_STATUS_V50
NET_DVR_GET_ACCESS_CAMERA_INFO = _hk_struct_test.NET_DVR_GET_ACCESS_CAMERA_INFO
NET_DVR_SET_ACCESS_CAMERA_INFO = _hk_struct_test.NET_DVR_SET_ACCESS_CAMERA_INFO
NET_DVR_PULL_DISK = _hk_struct_test.NET_DVR_PULL_DISK
NET_DVR_SCAN_RAID = _hk_struct_test.NET_DVR_SCAN_RAID
NET_DVR_GET_USER_RIGHT_CFG = _hk_struct_test.NET_DVR_GET_USER_RIGHT_CFG
NET_DVR_SET_USER_RIGHT_CFG = _hk_struct_test.NET_DVR_SET_USER_RIGHT_CFG
NET_DVR_ONE_KEY_CONFIG = _hk_struct_test.NET_DVR_ONE_KEY_CONFIG
NET_DVR_RESTART_SERVICE = _hk_struct_test.NET_DVR_RESTART_SERVICE
NET_DVR_GET_MAX_MACHINE_NUM_CFG = _hk_struct_test.NET_DVR_GET_MAX_MACHINE_NUM_CFG
NET_DVR_SET_MAX_MACHINE_NUM_CFG = _hk_struct_test.NET_DVR_SET_MAX_MACHINE_NUM_CFG
NET_DVR_ADD_DEVICE = _hk_struct_test.NET_DVR_ADD_DEVICE
NET_DVR_DEL_DEVICE = _hk_struct_test.NET_DVR_DEL_DEVICE
NET_DVR_GET_DATA_CALLBACK_CFG = _hk_struct_test.NET_DVR_GET_DATA_CALLBACK_CFG
NET_DVR_SET_DATA_CALLBACK_CFG = _hk_struct_test.NET_DVR_SET_DATA_CALLBACK_CFG
NET_DVR_CLONE_LUN = _hk_struct_test.NET_DVR_CLONE_LUN
NET_DVR_EXPAND_LUN = _hk_struct_test.NET_DVR_EXPAND_LUN
NET_DVR_GET_N_PLUS_ONE_DEVICE_INFO = _hk_struct_test.NET_DVR_GET_N_PLUS_ONE_DEVICE_INFO
NET_DVR_MODIFY_DVR_NET_DISK = _hk_struct_test.NET_DVR_MODIFY_DVR_NET_DISK
NET_DVR_CREATE_NAS = _hk_struct_test.NET_DVR_CREATE_NAS
NET_DVR_DELETE_NAS = _hk_struct_test.NET_DVR_DELETE_NAS
NET_DVR_OPEN_ISCSI = _hk_struct_test.NET_DVR_OPEN_ISCSI
NET_DVR_CLOSE_ISCSI = _hk_struct_test.NET_DVR_CLOSE_ISCSI
NET_DVR_GET_FC = _hk_struct_test.NET_DVR_GET_FC
NET_DVR_OPEN_FC = _hk_struct_test.NET_DVR_OPEN_FC
NET_DVR_CLOSE_FC = _hk_struct_test.NET_DVR_CLOSE_FC
NET_DVR_ONE_KEY_CONFIG_SAN = _hk_struct_test.NET_DVR_ONE_KEY_CONFIG_SAN
NET_DVR_RECORD_CHECK = _hk_struct_test.NET_DVR_RECORD_CHECK
NET_DVR_ADD_RECORD_PASSBACK_TASK_MANUAL = _hk_struct_test.NET_DVR_ADD_RECORD_PASSBACK_TASK_MANUAL
NET_DVR_GET_ALL_RECORD_PASSBACK_TASK_MANUAL = _hk_struct_test.NET_DVR_GET_ALL_RECORD_PASSBACK_TASK_MANUAL
NET_DVR_RECORD_PASSBACK_TASK_MANUAL_CTRL = _hk_struct_test.NET_DVR_RECORD_PASSBACK_TASK_MANUAL_CTRL
NET_DVR_DEL_RECORD_PASSBACK_TASK_MANUAL = _hk_struct_test.NET_DVR_DEL_RECORD_PASSBACK_TASK_MANUAL
NET_DVR_GET_RECORD_PASSBACK_PLAN_CFG = _hk_struct_test.NET_DVR_GET_RECORD_PASSBACK_PLAN_CFG
NET_DVR_SET_RECORD_PASSBACK_PLAN_CFG = _hk_struct_test.NET_DVR_SET_RECORD_PASSBACK_PLAN_CFG
NET_DVR_GET_DEV_STORAGE_CFG = _hk_struct_test.NET_DVR_GET_DEV_STORAGE_CFG
NET_DVR_GET_ONLINE_USER_CFG = _hk_struct_test.NET_DVR_GET_ONLINE_USER_CFG
NET_DVR_GET_RECORD_SEGMENT_CFG = _hk_struct_test.NET_DVR_GET_RECORD_SEGMENT_CFG
NET_DVR_GET_REC_PASSBACK_TASK_EXECUTABLE = _hk_struct_test.NET_DVR_GET_REC_PASSBACK_TASK_EXECUTABLE
NET_DVR_GET_STREAM_MEDIA_CFG = _hk_struct_test.NET_DVR_GET_STREAM_MEDIA_CFG
NET_DVR_SET_STREAM_MEDIA_CFG = _hk_struct_test.NET_DVR_SET_STREAM_MEDIA_CFG
NET_DVR_GET_USERCFG_V50 = _hk_struct_test.NET_DVR_GET_USERCFG_V50
NET_DVR_SET_USERCFG_V50 = _hk_struct_test.NET_DVR_SET_USERCFG_V50
NET_DVR_GET_RECORD_PASSBACK_BASIC_CFG_CAP = _hk_struct_test.NET_DVR_GET_RECORD_PASSBACK_BASIC_CFG_CAP
NET_DVR_GET_RECORD_PASSBACK_BASIC_CFG = _hk_struct_test.NET_DVR_GET_RECORD_PASSBACK_BASIC_CFG
NET_DVR_SET_RECORD_PASSBACK_BASIC_CFG = _hk_struct_test.NET_DVR_SET_RECORD_PASSBACK_BASIC_CFG
NET_DVR_ONE_KEY_CONFIG_V50 = _hk_struct_test.NET_DVR_ONE_KEY_CONFIG_V50
NET_DVR_GET_RACM_CAP = _hk_struct_test.NET_DVR_GET_RACM_CAP
NET_DVR_GET_THUMBNAILS = _hk_struct_test.NET_DVR_GET_THUMBNAILS
NET_DVR_ADD_RECORD_PASSBACK_TASK_MANUAL_V50 = _hk_struct_test.NET_DVR_ADD_RECORD_PASSBACK_TASK_MANUAL_V50
NET_DVR_GET_RECORD_PASSBACK_HISTORY_PLAN_CFG_CAP = _hk_struct_test.NET_DVR_GET_RECORD_PASSBACK_HISTORY_PLAN_CFG_CAP
NET_DVR_GET_RECORD_PASSBACK_HISTORY_PLAN_CFG = _hk_struct_test.NET_DVR_GET_RECORD_PASSBACK_HISTORY_PLAN_CFG
NET_DVR_SET_RECORD_PASSBACK_HISTORY_PLAN_CFG = _hk_struct_test.NET_DVR_SET_RECORD_PASSBACK_HISTORY_PLAN_CFG
NET_DVR_ONE_KEY_CONFIG_V51 = _hk_struct_test.NET_DVR_ONE_KEY_CONFIG_V51
NET_DVR_GET_RECORD_PACK = _hk_struct_test.NET_DVR_GET_RECORD_PACK
NET_DVR_SET_RECORD_PACK = _hk_struct_test.NET_DVR_SET_RECORD_PACK
NET_DVR_GET_CLOUD_STORAGE_CFG = _hk_struct_test.NET_DVR_GET_CLOUD_STORAGE_CFG
NET_DVR_SET_CLOUD_STORAGE_CFG = _hk_struct_test.NET_DVR_SET_CLOUD_STORAGE_CFG
NET_DVR_GET_GOP_INFO = _hk_struct_test.NET_DVR_GET_GOP_INFO
NET_DVR_GET_PHY_DISK_INFO = _hk_struct_test.NET_DVR_GET_PHY_DISK_INFO
NET_DVR_GET_RECORDING_AUTO_TRACK_CFG = _hk_struct_test.NET_DVR_GET_RECORDING_AUTO_TRACK_CFG
NET_DVR_SET_RECORDING_AUTO_TRACK_CFG = _hk_struct_test.NET_DVR_SET_RECORDING_AUTO_TRACK_CFG
NET_DVR_GET_RECORDING_PUBLISH_CFG = _hk_struct_test.NET_DVR_GET_RECORDING_PUBLISH_CFG
NET_DVR_SET_RECORDING_PUBLISH_CFG = _hk_struct_test.NET_DVR_SET_RECORDING_PUBLISH_CFG
NET_DVR_RECORDING_ONEKEY_CONTROL = _hk_struct_test.NET_DVR_RECORDING_ONEKEY_CONTROL
NET_DVR_GET_RECORDING_END_TIME = _hk_struct_test.NET_DVR_GET_RECORDING_END_TIME
NET_DVR_RECORDING_PUBLISH = _hk_struct_test.NET_DVR_RECORDING_PUBLISH
NET_DVR_GET_CURRICULUM_CFG = _hk_struct_test.NET_DVR_GET_CURRICULUM_CFG
NET_DVR_SET_CURRICULUM_CFG = _hk_struct_test.NET_DVR_SET_CURRICULUM_CFG
NET_DVR_GET_COURSE_INDEX_CFG = _hk_struct_test.NET_DVR_GET_COURSE_INDEX_CFG
NET_DVR_SET_COURSE_INDEX_CFG = _hk_struct_test.NET_DVR_SET_COURSE_INDEX_CFG
NET_DVR_GET_PPT_CHANNEL = _hk_struct_test.NET_DVR_GET_PPT_CHANNEL
NET_DVR_GET_PPT_DETECT_CFG = _hk_struct_test.NET_DVR_GET_PPT_DETECT_CFG
NET_DVR_SET_PPT_DETECT_CFG = _hk_struct_test.NET_DVR_SET_PPT_DETECT_CFG
NET_DVR_GET_RECORDINGHOST_CFG = _hk_struct_test.NET_DVR_GET_RECORDINGHOST_CFG
NET_DVR_SET_RECORDINGHOST_CFG = _hk_struct_test.NET_DVR_SET_RECORDINGHOST_CFG
NET_DVR_GET_BACKUP_RECORD_CFG = _hk_struct_test.NET_DVR_GET_BACKUP_RECORD_CFG
NET_DVR_SET_BACKUP_RECORD_CFG = _hk_struct_test.NET_DVR_SET_BACKUP_RECORD_CFG
NET_DVR_GET_AUDIO_ACTIVATION_CFG = _hk_struct_test.NET_DVR_GET_AUDIO_ACTIVATION_CFG
NET_DVR_SET_AUDIO_ACTIVATION_CFG = _hk_struct_test.NET_DVR_SET_AUDIO_ACTIVATION_CFG
NET_DVR_GET_DECODERCFG_V40 = _hk_struct_test.NET_DVR_GET_DECODERCFG_V40
NET_DVR_SET_DECODERCFG_V40 = _hk_struct_test.NET_DVR_SET_DECODERCFG_V40
NET_DVR_INFRARED_OUTPUT_CONTROL = _hk_struct_test.NET_DVR_INFRARED_OUTPUT_CONTROL
NET_DVR_GET_INFRARED_CMD_NAME_CFG = _hk_struct_test.NET_DVR_GET_INFRARED_CMD_NAME_CFG
NET_DVR_SET_INFRARED_CMD_NAME_CFG = _hk_struct_test.NET_DVR_SET_INFRARED_CMD_NAME_CFG
NET_DVR_START_INFRARED_LEARN = _hk_struct_test.NET_DVR_START_INFRARED_LEARN
NET_DVR_GET_TRIAL_SYSTEM_CFG = _hk_struct_test.NET_DVR_GET_TRIAL_SYSTEM_CFG
NET_DVR_SET_CASE_INFO = _hk_struct_test.NET_DVR_SET_CASE_INFO
NET_DVR_GET_TRIAL_MICROPHONE_STATUS = _hk_struct_test.NET_DVR_GET_TRIAL_MICROPHONE_STATUS
NET_DVR_SET_TRIAL_MICROPHONE_STATUS = _hk_struct_test.NET_DVR_SET_TRIAL_MICROPHONE_STATUS
NET_DVR_GET_TRIAL_HOST_STATUS = _hk_struct_test.NET_DVR_GET_TRIAL_HOST_STATUS
NET_DVR_GET_LAMP_OUT = _hk_struct_test.NET_DVR_GET_LAMP_OUT
NET_DVR_SET_LAMP_OUT = _hk_struct_test.NET_DVR_SET_LAMP_OUT
NET_DVR_LAMP_REMOTE_CONTROL = _hk_struct_test.NET_DVR_LAMP_REMOTE_CONTROL
NET_DVR_REMOTE_CONTROL_PLAY = _hk_struct_test.NET_DVR_REMOTE_CONTROL_PLAY
NET_DVR_GET_LOCAL_INPUT_CFG = _hk_struct_test.NET_DVR_GET_LOCAL_INPUT_CFG
NET_DVR_SET_LOCAL_INPUT_CFG = _hk_struct_test.NET_DVR_SET_LOCAL_INPUT_CFG
NET_DVR_GET_CASE_INFO = _hk_struct_test.NET_DVR_GET_CASE_INFO
NET_DVR_INQUEST_GET_CDW_STATUS = _hk_struct_test.NET_DVR_INQUEST_GET_CDW_STATUS
NET_DVR_GET_MIX_AUDIOIN_CFG = _hk_struct_test.NET_DVR_GET_MIX_AUDIOIN_CFG
NET_DVR_SET_MIX_AUDIOIN_CFG = _hk_struct_test.NET_DVR_SET_MIX_AUDIOIN_CFG
NET_DVR_GET_MIX_AUDIOOUT_CFG = _hk_struct_test.NET_DVR_GET_MIX_AUDIOOUT_CFG
NET_DVR_SET_MIX_AUDIOOUT_CFG = _hk_struct_test.NET_DVR_SET_MIX_AUDIOOUT_CFG
NET_DVR_GET_AUDIOIN_VOLUME_CFG = _hk_struct_test.NET_DVR_GET_AUDIOIN_VOLUME_CFG
NET_DVR_SET_AUDIOIN_VOLUME_CFG = _hk_struct_test.NET_DVR_SET_AUDIOIN_VOLUME_CFG
NET_DVR_GET_AREA_MASK_CFG = _hk_struct_test.NET_DVR_GET_AREA_MASK_CFG
NET_DVR_SET_AREA_MASK_CFG = _hk_struct_test.NET_DVR_SET_AREA_MASK_CFG
NET_DVR_GET_AUDIO_DIACRITICAL_CFG = _hk_struct_test.NET_DVR_GET_AUDIO_DIACRITICAL_CFG
NET_DVR_SET_AUDIO_DIACRITICAL_CFG = _hk_struct_test.NET_DVR_SET_AUDIO_DIACRITICAL_CFG
NET_DVR_GET_WIFI_DHCP_ADDR_CFG = _hk_struct_test.NET_DVR_GET_WIFI_DHCP_ADDR_CFG
NET_DVR_SET_WIFI_DHCP_ADDR_CFG = _hk_struct_test.NET_DVR_SET_WIFI_DHCP_ADDR_CFG
NET_DVR_GET_WIFI_CLIENT_LIST_INFO = _hk_struct_test.NET_DVR_GET_WIFI_CLIENT_LIST_INFO
NET_DVR_REMOTECONTROL_POWER_ON = _hk_struct_test.NET_DVR_REMOTECONTROL_POWER_ON
NET_DVR_GET_MULTISTREAM_RELATION_CHAN_CFG = _hk_struct_test.NET_DVR_GET_MULTISTREAM_RELATION_CHAN_CFG
NET_DVR_SET_MULTISTREAM_RELATION_CHAN_CFG = _hk_struct_test.NET_DVR_SET_MULTISTREAM_RELATION_CHAN_CFG
NET_DVR_GET_VIDEOOUT_RESOLUTION_CFG = _hk_struct_test.NET_DVR_GET_VIDEOOUT_RESOLUTION_CFG
NET_DVR_SET_VIDEOOUT_RESOLUTION_CFG = _hk_struct_test.NET_DVR_SET_VIDEOOUT_RESOLUTION_CFG
NET_DVR_GET_AUDIOOUT_VOLUME_CFG = _hk_struct_test.NET_DVR_GET_AUDIOOUT_VOLUME_CFG
NET_DVR_SET_AUDIOOUT_VOLUME_CFG = _hk_struct_test.NET_DVR_SET_AUDIOOUT_VOLUME_CFG
NET_DVR_INQUEST_PAUSE_CDW = _hk_struct_test.NET_DVR_INQUEST_PAUSE_CDW
NET_DVR_INQUEST_RESUME_CDW = _hk_struct_test.NET_DVR_INQUEST_RESUME_CDW
NET_DVR_GET_INPUT_CHAN_CFG = _hk_struct_test.NET_DVR_GET_INPUT_CHAN_CFG
NET_DVR_SET_INPUT_CHAN_CFG = _hk_struct_test.NET_DVR_SET_INPUT_CHAN_CFG
NET_DVR_GET_INQUEST_MIX_AUDIOIN_CFG = _hk_struct_test.NET_DVR_GET_INQUEST_MIX_AUDIOIN_CFG
NET_DVR_SET_INQUEST_MIX_AUDIOIN_CFG = _hk_struct_test.NET_DVR_SET_INQUEST_MIX_AUDIOIN_CFG
NET_DVR_CASE_INFO_CTRL = _hk_struct_test.NET_DVR_CASE_INFO_CTRL
NET_DVR_GET_INQUEST_USER_RIGHT = _hk_struct_test.NET_DVR_GET_INQUEST_USER_RIGHT
NET_DVR_SET_INQUEST_USER_RIGHT = _hk_struct_test.NET_DVR_SET_INQUEST_USER_RIGHT
NET_DVR_GET_INQUEST_CASE_INFO = _hk_struct_test.NET_DVR_GET_INQUEST_CASE_INFO
NET_DVR_SET_INQUEST_CASE_INFO = _hk_struct_test.NET_DVR_SET_INQUEST_CASE_INFO
NET_DVR_GET_FILM_MODE_CFG = _hk_struct_test.NET_DVR_GET_FILM_MODE_CFG
NET_DVR_SET_FILM_MODE_CFG = _hk_struct_test.NET_DVR_SET_FILM_MODE_CFG
NET_DVR_GET_FILM_MODE_CFG_CAP = _hk_struct_test.NET_DVR_GET_FILM_MODE_CFG_CAP
NET_DVR_GET_DIRECTED_STRATEGY_CFG = _hk_struct_test.NET_DVR_GET_DIRECTED_STRATEGY_CFG
NET_DVR_SET_DIRECTED_STRATEGY_CFG = _hk_struct_test.NET_DVR_SET_DIRECTED_STRATEGY_CFG
NET_DVR_GET_DIRECTED_STRATEGY_CFG_CAP = _hk_struct_test.NET_DVR_GET_DIRECTED_STRATEGY_CFG_CAP
NET_DVR_GET_FRAME_CFG = _hk_struct_test.NET_DVR_GET_FRAME_CFG
NET_DVR_SET_FRAME_CFG = _hk_struct_test.NET_DVR_SET_FRAME_CFG
NET_DVR_GET_FRAME_CFG_CAP = _hk_struct_test.NET_DVR_GET_FRAME_CFG_CAP
NET_DVR_GET_AUDIO_EFFECTIVE_CFG = _hk_struct_test.NET_DVR_GET_AUDIO_EFFECTIVE_CFG
NET_DVR_SET_AUDIO_EFFECTIVE_CFG = _hk_struct_test.NET_DVR_SET_AUDIO_EFFECTIVE_CFG
NET_DVR_GET_AUDIO_EFFECTIVE_CFG_CAP = _hk_struct_test.NET_DVR_GET_AUDIO_EFFECTIVE_CFG_CAP
NET_DVR_GET_RECORD_VIDEO_CFG = _hk_struct_test.NET_DVR_GET_RECORD_VIDEO_CFG
NET_DVR_SET_RECORD_VIDEO_CFG = _hk_struct_test.NET_DVR_SET_RECORD_VIDEO_CFG
NET_DVR_GET_OUTPUT_CFG = _hk_struct_test.NET_DVR_GET_OUTPUT_CFG
NET_DVR_SET_OUTPUT_CFG = _hk_struct_test.NET_DVR_SET_OUTPUT_CFG
NET_DVR_CODER_DISPLAY_START = _hk_struct_test.NET_DVR_CODER_DISPLAY_START
NET_DVR_CODER_DISPLAY_STOP = _hk_struct_test.NET_DVR_CODER_DISPLAY_STOP
NET_DVR_GET_WINDOW_STATUS = _hk_struct_test.NET_DVR_GET_WINDOW_STATUS
NET_DVR_GET_VQD_LOOP_DIAGNOSE_CFG = _hk_struct_test.NET_DVR_GET_VQD_LOOP_DIAGNOSE_CFG
NET_DVR_SET_VQD_LOOP_DIAGNOSE_CFG = _hk_struct_test.NET_DVR_SET_VQD_LOOP_DIAGNOSE_CFG
NET_DVR_GET_VQD_DIAGNOSE_INFO = _hk_struct_test.NET_DVR_GET_VQD_DIAGNOSE_INFO
NET_DVR_RECORDING_PUBLISH_FILE = _hk_struct_test.NET_DVR_RECORDING_PUBLISH_FILE
NET_DVR_GET_RECORDING_PUBLISH_FILE_CAP = _hk_struct_test.NET_DVR_GET_RECORDING_PUBLISH_FILE_CAP
NET_DVR_GET_PUBLISH_PROGRESS = _hk_struct_test.NET_DVR_GET_PUBLISH_PROGRESS
NET_DVR_GET_RECORD_VIDEO_CFG_CAP = _hk_struct_test.NET_DVR_GET_RECORD_VIDEO_CFG_CAP
NET_DVR_GET_RTMP_CFG = _hk_struct_test.NET_DVR_GET_RTMP_CFG
NET_DVR_SET_RTMP_CFG = _hk_struct_test.NET_DVR_SET_RTMP_CFG
NET_DVR_GET_RTMP_CFG_CAP = _hk_struct_test.NET_DVR_GET_RTMP_CFG_CAP
NET_DVR_DEL_BACKGROUND_PIC = _hk_struct_test.NET_DVR_DEL_BACKGROUND_PIC
NET_DVR_GET_BACKGROUND_PIC_CFG = _hk_struct_test.NET_DVR_GET_BACKGROUND_PIC_CFG
NET_DVR_GET_BACKGROUND_PIC_INFO = _hk_struct_test.NET_DVR_GET_BACKGROUND_PIC_INFO
NET_DVR_SET_BACKGROUND_PIC_INFO = _hk_struct_test.NET_DVR_SET_BACKGROUND_PIC_INFO
NET_DVR_GET_BACKGROUND_PIC_INFO_CAP = _hk_struct_test.NET_DVR_GET_BACKGROUND_PIC_INFO_CAP
NET_DVR_GET_RECORD_HOST_CAP = _hk_struct_test.NET_DVR_GET_RECORD_HOST_CAP
NET_DVR_GET_COURSE_LIST = _hk_struct_test.NET_DVR_GET_COURSE_LIST
NET_DVR_GET_RECORD_STATUS = _hk_struct_test.NET_DVR_GET_RECORD_STATUS
NET_DVR_MANUAL_CURRICULUM_CONTROL = _hk_struct_test.NET_DVR_MANUAL_CURRICULUM_CONTROL
NET_DVR_GET_IMAGE_DIFF_DETECTION_CFG = _hk_struct_test.NET_DVR_GET_IMAGE_DIFF_DETECTION_CFG
NET_DVR_SET_IMAGE_DIFF_DETECTION_CFG = _hk_struct_test.NET_DVR_SET_IMAGE_DIFF_DETECTION_CFG
NET_DVR_GET_IMAGE_DIFF_DETECTION_CFG_CAP = _hk_struct_test.NET_DVR_GET_IMAGE_DIFF_DETECTION_CFG_CAP
NET_DVR_GET_RECORDING_PUBLISH_FILE_INFO = _hk_struct_test.NET_DVR_GET_RECORDING_PUBLISH_FILE_INFO
NET_DVR_SET_RECORDING_PUBLISH_FILE_INFO = _hk_struct_test.NET_DVR_SET_RECORDING_PUBLISH_FILE_INFO
NET_DVR_GET_RECORDING_PUBLISH_FILE_INFO_CAP = _hk_struct_test.NET_DVR_GET_RECORDING_PUBLISH_FILE_INFO_CAP
NET_DVR_MANUAL_CURRICULUM_CONTROL_CAP = _hk_struct_test.NET_DVR_MANUAL_CURRICULUM_CONTROL_CAP
NET_DVR_GET_STATISTIC_DATA_LIST = _hk_struct_test.NET_DVR_GET_STATISTIC_DATA_LIST
NET_DVR_GET_DEVICE_LAN_ENCODE = _hk_struct_test.NET_DVR_GET_DEVICE_LAN_ENCODE
NET_DVR_GET_GBT28181_SERVICE_CFG = _hk_struct_test.NET_DVR_GET_GBT28181_SERVICE_CFG
NET_DVR_SET_GBT28181_SERVICE_CFG = _hk_struct_test.NET_DVR_SET_GBT28181_SERVICE_CFG
NET_DVR_GET_GBT28181_SERVICE_CAPABILITIES = _hk_struct_test.NET_DVR_GET_GBT28181_SERVICE_CAPABILITIES
NET_DVR_GET_CLOUD_URL = _hk_struct_test.NET_DVR_GET_CLOUD_URL
NET_DVR_GET_CLOUD_URL_CAP = _hk_struct_test.NET_DVR_GET_CLOUD_URL_CAP
NET_DVR_GET_CLOUD_CFG = _hk_struct_test.NET_DVR_GET_CLOUD_CFG
NET_DVR_SET_CLOUD_CFG = _hk_struct_test.NET_DVR_SET_CLOUD_CFG
NET_DVR_GET_CLOUD_CFG_CAP = _hk_struct_test.NET_DVR_GET_CLOUD_CFG_CAP
NET_DVR_GET_CLOUD_UPLOADSTRATEGY = _hk_struct_test.NET_DVR_GET_CLOUD_UPLOADSTRATEGY
NET_DVR_SET_CLOUD_UPLOADSTRATEGY = _hk_struct_test.NET_DVR_SET_CLOUD_UPLOADSTRATEGY
NET_DVR_GET_CLOUDSTORAGE_UPLOADSTRATEGY_CAP = _hk_struct_test.NET_DVR_GET_CLOUDSTORAGE_UPLOADSTRATEGY_CAP
NET_DVR_GET_VIDEO_IMAGE_DB_CFG = _hk_struct_test.NET_DVR_GET_VIDEO_IMAGE_DB_CFG
NET_DVR_SET_VIDEO_IMAGE_DB_CFG = _hk_struct_test.NET_DVR_SET_VIDEO_IMAGE_DB_CFG
NET_DVR_GET_VIDEO_IMAGE_DB_CFG_CAP = _hk_struct_test.NET_DVR_GET_VIDEO_IMAGE_DB_CFG_CAP
NET_DVR_GET_FILE_INFO_BY_ID = _hk_struct_test.NET_DVR_GET_FILE_INFO_BY_ID
NET_DVR_QUERY_FILE_INFO_CAP = _hk_struct_test.NET_DVR_QUERY_FILE_INFO_CAP
NET_DVR_DEL_FILE_FROM_DB = _hk_struct_test.NET_DVR_DEL_FILE_FROM_DB
NET_DVR_GET_VIDEO_IMAGE_DB_CAP = _hk_struct_test.NET_DVR_GET_VIDEO_IMAGE_DB_CAP
NET_DVR_GET_FIGURE = _hk_struct_test.NET_DVR_GET_FIGURE
NET_DVR_SYNC_IPC_PASSWD = _hk_struct_test.NET_DVR_SYNC_IPC_PASSWD
NET_DVR_GET_VEHICLE_BLACKLST_SCHEDULE = _hk_struct_test.NET_DVR_GET_VEHICLE_BLACKLST_SCHEDULE
NET_DVR_SET_VEHICLE_BLACKLST_SCHEDULE = _hk_struct_test.NET_DVR_SET_VEHICLE_BLACKLST_SCHEDULE
NET_DVR_GET_VEHICLE_WHITELST_SCHEDULE = _hk_struct_test.NET_DVR_GET_VEHICLE_WHITELST_SCHEDULE
NET_DVR_SET_VEHICLE_WHITELST_SCHEDULE = _hk_struct_test.NET_DVR_SET_VEHICLE_WHITELST_SCHEDULE
NET_DVR_GET_VEHICLE_BLACKLIST_EVENT_TRIGGER = _hk_struct_test.NET_DVR_GET_VEHICLE_BLACKLIST_EVENT_TRIGGER
NET_DVR_SET_VEHICLE_BLACKLIST_EVENT_TRIGGER = _hk_struct_test.NET_DVR_SET_VEHICLE_BLACKLIST_EVENT_TRIGGER
NET_DVR_GET_VEHICLE_WHITELIST_EVENT_TRIGGER = _hk_struct_test.NET_DVR_GET_VEHICLE_WHITELIST_EVENT_TRIGGER
NET_DVR_SET_VEHICLE_WHITELIST_EVENT_TRIGGER = _hk_struct_test.NET_DVR_SET_VEHICLE_WHITELIST_EVENT_TRIGGER
NET_DVR_GET_TRAFFIC_CAP = _hk_struct_test.NET_DVR_GET_TRAFFIC_CAP
NET_DVR_GET_VEHICLE_ALLLIST_EVENT_TRIGGER = _hk_struct_test.NET_DVR_GET_VEHICLE_ALLLIST_EVENT_TRIGGER
NET_DVR_SET_VEHICLE_ALLLIST_EVENT_TRIGGER = _hk_struct_test.NET_DVR_SET_VEHICLE_ALLLIST_EVENT_TRIGGER
NET_DVR_GET_VEHICLE_OTHERLIST_EVENT_TRIGGER = _hk_struct_test.NET_DVR_GET_VEHICLE_OTHERLIST_EVENT_TRIGGER
NET_DVR_SET_VEHICLE_OTHERLIST_EVENT_TRIGGER = _hk_struct_test.NET_DVR_SET_VEHICLE_OTHERLIST_EVENT_TRIGGER
NET_DVR_GET_STORAGEDETECTION_EVENT_TRIGGER = _hk_struct_test.NET_DVR_GET_STORAGEDETECTION_EVENT_TRIGGER
NET_DVR_SET_STORAGEDETECTION_EVENT_TRIGGER = _hk_struct_test.NET_DVR_SET_STORAGEDETECTION_EVENT_TRIGGER
NET_DVR_GET_STORAGEDETECTION_SCHEDULE_CAPABILITIES = _hk_struct_test.NET_DVR_GET_STORAGEDETECTION_SCHEDULE_CAPABILITIES
NET_DVR_GET_STORAGEDETECTION_SCHEDULE = _hk_struct_test.NET_DVR_GET_STORAGEDETECTION_SCHEDULE
NET_DVR_SET_STORAGEDETECTION_SCHEDULE = _hk_struct_test.NET_DVR_SET_STORAGEDETECTION_SCHEDULE
NET_DVR_GET_STORAGEDETECTION_STATE = _hk_struct_test.NET_DVR_GET_STORAGEDETECTION_STATE
NET_DVR_GET_STORAGEDETECTION_RWLOCK = _hk_struct_test.NET_DVR_GET_STORAGEDETECTION_RWLOCK
NET_DVR_GET_STORAGEDETECTION_RWLOCK_CAPABILITIES = _hk_struct_test.NET_DVR_GET_STORAGEDETECTION_RWLOCK_CAPABILITIES
NET_DVR_SET_STORAGEDETECTION_RWLOCK = _hk_struct_test.NET_DVR_SET_STORAGEDETECTION_RWLOCK
NET_DVR_GET_PTZTRACKSTATUS = _hk_struct_test.NET_DVR_GET_PTZTRACKSTATUS
NET_DVR_SET_STORAGEDETECTION_UNLOCK = _hk_struct_test.NET_DVR_SET_STORAGEDETECTION_UNLOCK
NET_DVR_GET_STORAGEDETECTION_UNLOCK_CAPABILITIES = _hk_struct_test.NET_DVR_GET_STORAGEDETECTION_UNLOCK_CAPABILITIES
NET_DVR_SET_SHIPSDETECTION_CFG = _hk_struct_test.NET_DVR_SET_SHIPSDETECTION_CFG
NET_DVR_GET_SHIPSDETECTION_CFG = _hk_struct_test.NET_DVR_GET_SHIPSDETECTION_CFG
NET_DVR_GET_SHIPSDETECTION_CAPABILITIES = _hk_struct_test.NET_DVR_GET_SHIPSDETECTION_CAPABILITIES
NET_DVR_GET_SHIPSDETECTION_COUNT = _hk_struct_test.NET_DVR_GET_SHIPSDETECTION_COUNT
NET_DVR_SHIPSCOUNT_DELETE_CTRL = _hk_struct_test.NET_DVR_SHIPSCOUNT_DELETE_CTRL
NET_DVR_GET_BAREDATAOVERLAY_CAPABILITIES = _hk_struct_test.NET_DVR_GET_BAREDATAOVERLAY_CAPABILITIES
NET_DVR_SET_BAREDATAOVERLAY_CFG = _hk_struct_test.NET_DVR_SET_BAREDATAOVERLAY_CFG
NET_DVR_GET_BAREDATAOVERLAY_CFG = _hk_struct_test.NET_DVR_GET_BAREDATAOVERLAY_CFG
NET_DVR_GET_SHIPSDETECTION_SCHEDULE = _hk_struct_test.NET_DVR_GET_SHIPSDETECTION_SCHEDULE
NET_DVR_SET_SHIPSDETECTION_SCHEDULE = _hk_struct_test.NET_DVR_SET_SHIPSDETECTION_SCHEDULE
NET_DVR_GET_SHIPSDETECTION_EVENT_TRIGGER = _hk_struct_test.NET_DVR_GET_SHIPSDETECTION_EVENT_TRIGGER
NET_DVR_SET_SHIPSDETECTION_EVENT_TRIGGER = _hk_struct_test.NET_DVR_SET_SHIPSDETECTION_EVENT_TRIGGER
NET_DVR_GET_SHIPSDETECTION_SCHEDULE_CAPABILITIES = _hk_struct_test.NET_DVR_GET_SHIPSDETECTION_SCHEDULE_CAPABILITIES
NET_DVR_FIRE_FOCUSZOOM_CTRL = _hk_struct_test.NET_DVR_FIRE_FOCUSZOOM_CTRL
NET_DVR_GET_FIREDETECTION_SCHEDULE_CAPABILITIES = _hk_struct_test.NET_DVR_GET_FIREDETECTION_SCHEDULE_CAPABILITIES
NET_DVR_GET_FIREDETECTION_SCHEDULE = _hk_struct_test.NET_DVR_GET_FIREDETECTION_SCHEDULE
NET_DVR_SET_FIREDETECTION_SCHEDULE = _hk_struct_test.NET_DVR_SET_FIREDETECTION_SCHEDULE
NET_DVR_GET_MANUALRANGING_CAPABILITIES = _hk_struct_test.NET_DVR_GET_MANUALRANGING_CAPABILITIES
NET_DVR_SET_MANUALRANGING = _hk_struct_test.NET_DVR_SET_MANUALRANGING
NET_DVR_GET_MANUALDEICING_CAPABILITIES = _hk_struct_test.NET_DVR_GET_MANUALDEICING_CAPABILITIES
NET_DVR_SET_MANUALDEICING = _hk_struct_test.NET_DVR_SET_MANUALDEICING
NET_DVR_GET_MANUALDEICING = _hk_struct_test.NET_DVR_GET_MANUALDEICING
NET_DVR_GET_THERMALPOWER_CAPABILITIES = _hk_struct_test.NET_DVR_GET_THERMALPOWER_CAPABILITIES
NET_DVR_GET_THERMALPOWER = _hk_struct_test.NET_DVR_GET_THERMALPOWER
NET_DVR_SET_THERMALPOWER = _hk_struct_test.NET_DVR_SET_THERMALPOWER
NET_DVR_GET_PTZABSOLUTEEX_CAPABILITIES = _hk_struct_test.NET_DVR_GET_PTZABSOLUTEEX_CAPABILITIES
NET_DVR_GET_PTZABSOLUTEEX = _hk_struct_test.NET_DVR_GET_PTZABSOLUTEEX
NET_DVR_SET_PTZABSOLUTEEX = _hk_struct_test.NET_DVR_SET_PTZABSOLUTEEX
NET_DVR_GET_CRUISE_CAPABILITIES = _hk_struct_test.NET_DVR_GET_CRUISE_CAPABILITIES
NET_DVR_GET_CRUISE_INFO = _hk_struct_test.NET_DVR_GET_CRUISE_INFO
NET_DVR_GET_TEMP_HUMI_CAPABILITIES = _hk_struct_test.NET_DVR_GET_TEMP_HUMI_CAPABILITIES
NET_DVR_GET_TEMP_HUMI_INFO = _hk_struct_test.NET_DVR_GET_TEMP_HUMI_INFO
NET_DVR_GET_MANUALTHERM_INFO = _hk_struct_test.NET_DVR_GET_MANUALTHERM_INFO
NET_DVR_GET_MANUALTHERM_CAPABILITIES = _hk_struct_test.NET_DVR_GET_MANUALTHERM_CAPABILITIES
NET_DVR_SET_MANUALTHERM = _hk_struct_test.NET_DVR_SET_MANUALTHERM
NET_DVR_GET_ACCESSORY_CARD_INFO_CAPABILITIES = _hk_struct_test.NET_DVR_GET_ACCESSORY_CARD_INFO_CAPABILITIES
NET_DVR_GET_ACCESSORY_CARD_INFO = _hk_struct_test.NET_DVR_GET_ACCESSORY_CARD_INFO
NET_DVR_GET_THERMINTELL_CAPABILITIES = _hk_struct_test.NET_DVR_GET_THERMINTELL_CAPABILITIES
NET_DVR_GET_THERMINTELL = _hk_struct_test.NET_DVR_GET_THERMINTELL
NET_DVR_SET_THERMINTELL = _hk_struct_test.NET_DVR_SET_THERMINTELL
NET_GET_CRUISEPOINT_V50 = _hk_struct_test.NET_GET_CRUISEPOINT_V50
NET_DVR_GET_MANUALTHERM_BASIC_CAPABILITIES = _hk_struct_test.NET_DVR_GET_MANUALTHERM_BASIC_CAPABILITIES
NET_DVR_SET_MANUALTHERM_BASICPARAM = _hk_struct_test.NET_DVR_SET_MANUALTHERM_BASICPARAM
NET_DVR_GET_MANUALTHERM_BASICPARAM = _hk_struct_test.NET_DVR_GET_MANUALTHERM_BASICPARAM
NET_DVR_GET_FIRESHIELDMASK_CAPABILITIES = _hk_struct_test.NET_DVR_GET_FIRESHIELDMASK_CAPABILITIES
NET_DVR_GET_HIDDEN_INFORMATION_CAPABILITIES = _hk_struct_test.NET_DVR_GET_HIDDEN_INFORMATION_CAPABILITIES
NET_DVR_GET_HIDDEN_INFORMATION = _hk_struct_test.NET_DVR_GET_HIDDEN_INFORMATION
NET_DVR_SET_HIDDEN_INFORMATION = _hk_struct_test.NET_DVR_SET_HIDDEN_INFORMATION
NET_DVR_SET_FIRESHIELDMASK_CFG = _hk_struct_test.NET_DVR_SET_FIRESHIELDMASK_CFG
NET_DVR_GET_FIRESHIELDMASK_CFG = _hk_struct_test.NET_DVR_GET_FIRESHIELDMASK_CFG
NET_DVR_GET_SMOKESHIELDMASK_CAPABILITIES = _hk_struct_test.NET_DVR_GET_SMOKESHIELDMASK_CAPABILITIES
NET_DVR_SET_SMOKESHIELDMASK_CFG = _hk_struct_test.NET_DVR_SET_SMOKESHIELDMASK_CFG
NET_DVR_GET_SMOKESHIELDMASK_CFG = _hk_struct_test.NET_DVR_GET_SMOKESHIELDMASK_CFG
NET_DVR_GET_AREASCAN_CAPABILITIES = _hk_struct_test.NET_DVR_GET_AREASCAN_CAPABILITIES
NET_DVR_GET_AREASCAN_CFG = _hk_struct_test.NET_DVR_GET_AREASCAN_CFG
NET_DVR_DEL_AREASCAN_CFG = _hk_struct_test.NET_DVR_DEL_AREASCAN_CFG
NET_DVR_AREASCAN_INIT_CTRL = _hk_struct_test.NET_DVR_AREASCAN_INIT_CTRL
NET_DVR_AREASCAN_CONFIRM_CTRL = _hk_struct_test.NET_DVR_AREASCAN_CONFIRM_CTRL
NET_DVR_AREASCAN_STOP_CTRL = _hk_struct_test.NET_DVR_AREASCAN_STOP_CTRL
NET_DVR_SAVE_SCANZOOM_CTRL = _hk_struct_test.NET_DVR_SAVE_SCANZOOM_CTRL
NET_DVR_GET_SCANZOOM_CTRL = _hk_struct_test.NET_DVR_GET_SCANZOOM_CTRL
NET_DVR_DEL_FIRESHIELDMASK_CTRL = _hk_struct_test.NET_DVR_DEL_FIRESHIELDMASK_CTRL
NET_DVR_DEL_SMOKESHIELDMASK_CTRL = _hk_struct_test.NET_DVR_DEL_SMOKESHIELDMASK_CTRL
NET_DVR_GET_DENSEFOG_EVENT_TRIGGER = _hk_struct_test.NET_DVR_GET_DENSEFOG_EVENT_TRIGGER
NET_DVR_SET_DENSEFOG_EVENT_TRIGGER = _hk_struct_test.NET_DVR_SET_DENSEFOG_EVENT_TRIGGER
NET_DVR_SET_DENSEFOGDETECTION_CFG = _hk_struct_test.NET_DVR_SET_DENSEFOGDETECTION_CFG
NET_DVR_GET_DENSEFOGDETECTION_CFG = _hk_struct_test.NET_DVR_GET_DENSEFOGDETECTION_CFG
NET_DVR_GET_DENSEFOGDETECTION_CAPABILITIES = _hk_struct_test.NET_DVR_GET_DENSEFOGDETECTION_CAPABILITIES
NET_DVR_GET_THERMOMETRY_SCHEDULE_CAPABILITIES = _hk_struct_test.NET_DVR_GET_THERMOMETRY_SCHEDULE_CAPABILITIES
NET_DVR_GET_THERMOMETRY_SCHEDULE = _hk_struct_test.NET_DVR_GET_THERMOMETRY_SCHEDULE
NET_DVR_SET_THERMOMETRY_SCHEDULE = _hk_struct_test.NET_DVR_SET_THERMOMETRY_SCHEDULE
NET_DVR_GET_TEMPERTURE_SCHEDULE_CAPABILITIES = _hk_struct_test.NET_DVR_GET_TEMPERTURE_SCHEDULE_CAPABILITIES
NET_DVR_GET_TEMPERTURE_SCHEDULE = _hk_struct_test.NET_DVR_GET_TEMPERTURE_SCHEDULE
NET_DVR_SET_TEMPERTURE_SCHEDULE = _hk_struct_test.NET_DVR_SET_TEMPERTURE_SCHEDULE
NET_DVR_GET_SEARCH_LOG_CAPABILITIES = _hk_struct_test.NET_DVR_GET_SEARCH_LOG_CAPABILITIES
NET_DVR_GET_VEHICLEFLOW = _hk_struct_test.NET_DVR_GET_VEHICLEFLOW
NET_DVR_GET_IPADDR_FILTERCFG_V50 = _hk_struct_test.NET_DVR_GET_IPADDR_FILTERCFG_V50
NET_DVR_SET_IPADDR_FILTERCFG_V50 = _hk_struct_test.NET_DVR_SET_IPADDR_FILTERCFG_V50
NET_DVR_GET_TEMPHUMSENSOR_CAPABILITIES = _hk_struct_test.NET_DVR_GET_TEMPHUMSENSOR_CAPABILITIES
NET_DVR_GET_TEMPHUMSENSOR = _hk_struct_test.NET_DVR_GET_TEMPHUMSENSOR
NET_DVR_SET_TEMPHUMSENSOR = _hk_struct_test.NET_DVR_SET_TEMPHUMSENSOR
NET_DVR_GET_THERMOMETRY_MODE_CAPABILITIES = _hk_struct_test.NET_DVR_GET_THERMOMETRY_MODE_CAPABILITIES
NET_DVR_GET_THERMOMETRY_MODE = _hk_struct_test.NET_DVR_GET_THERMOMETRY_MODE
NET_DVR_SET_THERMOMETRY_MODE = _hk_struct_test.NET_DVR_SET_THERMOMETRY_MODE
NET_DVR_GET_THERMAL_PIP_CAPABILITIES = _hk_struct_test.NET_DVR_GET_THERMAL_PIP_CAPABILITIES
NET_DVR_GET_THERMAL_PIP = _hk_struct_test.NET_DVR_GET_THERMAL_PIP
NET_DVR_SET_THERMAL_PIP = _hk_struct_test.NET_DVR_SET_THERMAL_PIP
NET_DVR_GET_THERMAL_INTELRULEDISPLAY_CAPABILITIES = _hk_struct_test.NET_DVR_GET_THERMAL_INTELRULEDISPLAY_CAPABILITIES
NET_DVR_GET_THERMAL_INTELRULE_DISPLAY = _hk_struct_test.NET_DVR_GET_THERMAL_INTELRULE_DISPLAY
NET_DVR_SET_THERMAL_INTELRULE_DISPLAY = _hk_struct_test.NET_DVR_SET_THERMAL_INTELRULE_DISPLAY
NET_DVR_GET_THERMAL_ALGVERSION = _hk_struct_test.NET_DVR_GET_THERMAL_ALGVERSION
NET_DVR_GET_CURRENT_LOCK_CAPABILITIES = _hk_struct_test.NET_DVR_GET_CURRENT_LOCK_CAPABILITIES
NET_DVR_GET_CURRENT_LOCK = _hk_struct_test.NET_DVR_GET_CURRENT_LOCK
NET_DVR_SET_CURRENT_LOCK = _hk_struct_test.NET_DVR_SET_CURRENT_LOCK
NET_DVR_DEL_MANUALTHERM_RULE = _hk_struct_test.NET_DVR_DEL_MANUALTHERM_RULE
NET_DVR_GET_UPGRADE_INFO = _hk_struct_test.NET_DVR_GET_UPGRADE_INFO
NET_DVR_SWITCH_TRANSFER = _hk_struct_test.NET_DVR_SWITCH_TRANSFER
NET_DVR_GET_MB_POWERCTRLPARA = _hk_struct_test.NET_DVR_GET_MB_POWERCTRLPARA
NET_DVR_SET_MB_POWERCTRLPARA = _hk_struct_test.NET_DVR_SET_MB_POWERCTRLPARA
NET_DVR_GET_AUTOBACKUPPARA = _hk_struct_test.NET_DVR_GET_AUTOBACKUPPARA
NET_DVR_SET_AUTOBACKUPPARA = _hk_struct_test.NET_DVR_SET_AUTOBACKUPPARA
NET_DVR_GET_MB_GPSPARA = _hk_struct_test.NET_DVR_GET_MB_GPSPARA
NET_DVR_SET_MB_GPSPARA = _hk_struct_test.NET_DVR_SET_MB_GPSPARA
NET_DVR_GET_MB_SENSORINPARA = _hk_struct_test.NET_DVR_GET_MB_SENSORINPARA
NET_DVR_SET_MB_SENSORINPARA = _hk_struct_test.NET_DVR_SET_MB_SENSORINPARA
NET_DVR_GET_GSENSORPARA = _hk_struct_test.NET_DVR_GET_GSENSORPARA
NET_DVR_SET_GSENSORPARA = _hk_struct_test.NET_DVR_SET_GSENSORPARA
NET_DVR_GET_MB_DOWNLOADSVRPARA = _hk_struct_test.NET_DVR_GET_MB_DOWNLOADSVRPARA
NET_DVR_SET_MB_DOWNLOADSVRPARA = _hk_struct_test.NET_DVR_SET_MB_DOWNLOADSVRPARA
NET_DVR_GET_PLATERECOG_PARA = _hk_struct_test.NET_DVR_GET_PLATERECOG_PARA
NET_DVR_SET_PLATERECOG_PARA = _hk_struct_test.NET_DVR_SET_PLATERECOG_PARA
NET_DVR_GET_ENFORCESYS_PARA = _hk_struct_test.NET_DVR_GET_ENFORCESYS_PARA
NET_DVR_SET_ENFORCESYS_PARA = _hk_struct_test.NET_DVR_SET_ENFORCESYS_PARA
NET_DVR_GET_GPS_DATA = _hk_struct_test.NET_DVR_GET_GPS_DATA
NET_DVR_GET_ANALOG_ALARMINCFG = _hk_struct_test.NET_DVR_GET_ANALOG_ALARMINCFG
NET_DVR_SET_ANALOG_ALARMINCFG = _hk_struct_test.NET_DVR_SET_ANALOG_ALARMINCFG
NET_DVR_GET_SYSTEM_CAPABILITIES = _hk_struct_test.NET_DVR_GET_SYSTEM_CAPABILITIES
NET_DVR_GET_EAGLEEYE_CAPABILITIES = _hk_struct_test.NET_DVR_GET_EAGLEEYE_CAPABILITIES
NET_DVR_GET_SLAVECAMERA_CALIB_V51 = _hk_struct_test.NET_DVR_GET_SLAVECAMERA_CALIB_V51
NET_DVR_SET_SLAVECAMERA_CALIB_V51 = _hk_struct_test.NET_DVR_SET_SLAVECAMERA_CALIB_V51
NET_DVR_SET_GOTOSCENE = _hk_struct_test.NET_DVR_SET_GOTOSCENE
NET_DVR_GET_PTZ_NOTIFICATION = _hk_struct_test.NET_DVR_GET_PTZ_NOTIFICATION
NET_DVR_SET_PTZ_NOTIFICATION = _hk_struct_test.NET_DVR_SET_PTZ_NOTIFICATION
NET_DVR_MATRIX_WALL_SET = _hk_struct_test.NET_DVR_MATRIX_WALL_SET
NET_DVR_MATRIX_WALL_GET = _hk_struct_test.NET_DVR_MATRIX_WALL_GET
NET_DVR_WALLWIN_GET = _hk_struct_test.NET_DVR_WALLWIN_GET
NET_DVR_WALLWIN_SET = _hk_struct_test.NET_DVR_WALLWIN_SET
NET_DVR_WALLWINPARAM_SET = _hk_struct_test.NET_DVR_WALLWINPARAM_SET
NET_DVR_WALLWINPARAM_GET = _hk_struct_test.NET_DVR_WALLWINPARAM_GET
NET_DVR_WALLSCENEPARAM_GET = _hk_struct_test.NET_DVR_WALLSCENEPARAM_GET
NET_DVR_WALLSCENEPARAM_SET = _hk_struct_test.NET_DVR_WALLSCENEPARAM_SET
NET_DVR_MATRIX_GETWINSTATUS = _hk_struct_test.NET_DVR_MATRIX_GETWINSTATUS
NET_DVR_GET_WINASSOCIATEDDEVINFO = _hk_struct_test.NET_DVR_GET_WINASSOCIATEDDEVINFO
NET_DVR_WALLOUTPUT_GET = _hk_struct_test.NET_DVR_WALLOUTPUT_GET
NET_DVR_WALLOUTPUT_SET = _hk_struct_test.NET_DVR_WALLOUTPUT_SET
NET_DVR_GET_UNITEDMATRIXSYSTEM = _hk_struct_test.NET_DVR_GET_UNITEDMATRIXSYSTEM
NET_DVR_GET_WALL_CFG = _hk_struct_test.NET_DVR_GET_WALL_CFG
NET_DVR_SET_WALL_CFG = _hk_struct_test.NET_DVR_SET_WALL_CFG
NET_DVR_CLOSE_ALL_WND = _hk_struct_test.NET_DVR_CLOSE_ALL_WND
NET_DVR_SWITCH_WIN_TOP = _hk_struct_test.NET_DVR_SWITCH_WIN_TOP
NET_DVR_SWITCH_WIN_BOTTOM = _hk_struct_test.NET_DVR_SWITCH_WIN_BOTTOM
NET_DVR_CLOSE_ALL_WND_V41 = _hk_struct_test.NET_DVR_CLOSE_ALL_WND_V41
NET_DVR_GET_WALL_WINDOW_V41 = _hk_struct_test.NET_DVR_GET_WALL_WINDOW_V41
NET_DVR_SET_WALL_WINDOW_V41 = _hk_struct_test.NET_DVR_SET_WALL_WINDOW_V41
NET_DVR_GET_CURRENT_SCENE_V41 = _hk_struct_test.NET_DVR_GET_CURRENT_SCENE_V41
NET_DVR_GET_WALL_SCENE_PARAM_V41 = _hk_struct_test.NET_DVR_GET_WALL_SCENE_PARAM_V41
NET_DVR_SET_WALL_SCENE_PARAM_V41 = _hk_struct_test.NET_DVR_SET_WALL_SCENE_PARAM_V41
NET_DVR_GET_MATRIX_LOGO_CFG = _hk_struct_test.NET_DVR_GET_MATRIX_LOGO_CFG
NET_DVR_SET_MATRIX_LOGO_CFG = _hk_struct_test.NET_DVR_SET_MATRIX_LOGO_CFG
NET_DVR_GET_WIN_LOGO_CFG = _hk_struct_test.NET_DVR_GET_WIN_LOGO_CFG
NET_DVR_SET_WIN_LOGO_CFG = _hk_struct_test.NET_DVR_SET_WIN_LOGO_CFG
NET_DVR_DELETE_LOGO = _hk_struct_test.NET_DVR_DELETE_LOGO
NET_DVR_SET_DISPLAY_EFFECT_CFG = _hk_struct_test.NET_DVR_SET_DISPLAY_EFFECT_CFG
NET_DVR_GET_DISPLAY_EFFECT_CFG = _hk_struct_test.NET_DVR_GET_DISPLAY_EFFECT_CFG
NET_DVR_DEC_PLAY_REMOTE_FILE = _hk_struct_test.NET_DVR_DEC_PLAY_REMOTE_FILE
NET_DVR_DEC_PLAY_REMOTE_FILE_V50 = _hk_struct_test.NET_DVR_DEC_PLAY_REMOTE_FILE_V50
NET_DVR_GET_WIN_ZOOM_STATUS = _hk_struct_test.NET_DVR_GET_WIN_ZOOM_STATUS
NET_DVR_GET_ALL_MATRIX_LOGOCFG = _hk_struct_test.NET_DVR_GET_ALL_MATRIX_LOGOCFG
NET_DVR_SIMULATE_REMOTE_CONTROL = _hk_struct_test.NET_DVR_SIMULATE_REMOTE_CONTROL
NET_DVR_SET_SCREEN_SIGNAL_CFG = _hk_struct_test.NET_DVR_SET_SCREEN_SIGNAL_CFG
NET_DVR_GET_SCREEN_SIGNAL_CFG = _hk_struct_test.NET_DVR_GET_SCREEN_SIGNAL_CFG
NET_DVR_SET_SCREEN_SPLICE_CFG = _hk_struct_test.NET_DVR_SET_SCREEN_SPLICE_CFG
NET_DVR_GET_SCREEN_SPLICE_CFG = _hk_struct_test.NET_DVR_GET_SCREEN_SPLICE_CFG
NET_DVR_GET_SCREEN_FAN_WORK_MODE = _hk_struct_test.NET_DVR_GET_SCREEN_FAN_WORK_MODE
NET_DVR_SET_SCREEN_FAN_WORK_MODE = _hk_struct_test.NET_DVR_SET_SCREEN_FAN_WORK_MODE
NET_DVR_SHOW_SCREEN_WORK_STATUS = _hk_struct_test.NET_DVR_SHOW_SCREEN_WORK_STATUS
NET_DVR_GET_VGA_CFG = _hk_struct_test.NET_DVR_GET_VGA_CFG
NET_DVR_SET_VGA_CFG = _hk_struct_test.NET_DVR_SET_VGA_CFG
NET_DVR_GET_SCREEN_MENU_CFG = _hk_struct_test.NET_DVR_GET_SCREEN_MENU_CFG
NET_DVR_SET_SCREEN_MENU_CFG = _hk_struct_test.NET_DVR_SET_SCREEN_MENU_CFG
NET_DVR_SET_SCREEN_DISPLAY_CFG = _hk_struct_test.NET_DVR_SET_SCREEN_DISPLAY_CFG
NET_DVR_GET_SCREEN_DISPLAY_CFG = _hk_struct_test.NET_DVR_GET_SCREEN_DISPLAY_CFG
NET_DVR_SET_FUSION_CFG = _hk_struct_test.NET_DVR_SET_FUSION_CFG
NET_DVR_GET_FUSION_CFG = _hk_struct_test.NET_DVR_GET_FUSION_CFG
NET_DVR_SET_PIP_CFG = _hk_struct_test.NET_DVR_SET_PIP_CFG
NET_DVR_GET_PIP_CFG = _hk_struct_test.NET_DVR_GET_PIP_CFG
NET_DVR_SET_DEFOG_LCD = _hk_struct_test.NET_DVR_SET_DEFOG_LCD
NET_DVR_GET_DEFOG_LCD = _hk_struct_test.NET_DVR_GET_DEFOG_LCD
NET_DVR_SHOW_IP = _hk_struct_test.NET_DVR_SHOW_IP
NET_DVR_SCREEN_MAINTENANCE_WALL = _hk_struct_test.NET_DVR_SCREEN_MAINTENANCE_WALL
NET_DVR_SET_SCREEN_POS = _hk_struct_test.NET_DVR_SET_SCREEN_POS
NET_DVR_GET_SCREEN_POS = _hk_struct_test.NET_DVR_GET_SCREEN_POS
NET_DVR_SCREEN_INDEX_SET = _hk_struct_test.NET_DVR_SCREEN_INDEX_SET
NET_DVR_SCREEN_INDEX_GET = _hk_struct_test.NET_DVR_SCREEN_INDEX_GET
NET_DVR_SCREEN_SPLICE_SET = _hk_struct_test.NET_DVR_SCREEN_SPLICE_SET
NET_DVR_SCREEN_SPLICE_GET = _hk_struct_test.NET_DVR_SCREEN_SPLICE_GET
NET_DVR_SET_SCREEN_PARAM = _hk_struct_test.NET_DVR_SET_SCREEN_PARAM
NET_DVR_GET_SCREEN_PARAM = _hk_struct_test.NET_DVR_GET_SCREEN_PARAM
NET_DVR_SET_SWITCH_CFG = _hk_struct_test.NET_DVR_SET_SWITCH_CFG
NET_DVR_GET_SWITCH_CFG = _hk_struct_test.NET_DVR_GET_SWITCH_CFG
NET_DVR_SET_POWERON_DELAY_CFG = _hk_struct_test.NET_DVR_SET_POWERON_DELAY_CFG
NET_DVR_GET_POWERON_DELAY_CFG = _hk_struct_test.NET_DVR_GET_POWERON_DELAY_CFG
NET_DVR_SET_SCREEN_POSITION = _hk_struct_test.NET_DVR_SET_SCREEN_POSITION
NET_DVR_GET_SCREEN_POSITION = _hk_struct_test.NET_DVR_GET_SCREEN_POSITION
NET_DVR_SCREEN_SCENE_CONTROL = _hk_struct_test.NET_DVR_SCREEN_SCENE_CONTROL
NET_DVR_GET_CURRENT_SCREEN_SCENE = _hk_struct_test.NET_DVR_GET_CURRENT_SCREEN_SCENE
NET_DVR_GET_SCREEN_SCENE_PARAM = _hk_struct_test.NET_DVR_GET_SCREEN_SCENE_PARAM
NET_DVR_SET_SCREEN_SCENE_PARAM = _hk_struct_test.NET_DVR_SET_SCREEN_SCENE_PARAM
NET_DVR_GET_EXTERNAL_MATRIX_RELATION = _hk_struct_test.NET_DVR_GET_EXTERNAL_MATRIX_RELATION
NET_DVR_GET_LCD_AUDIO_CFG = _hk_struct_test.NET_DVR_GET_LCD_AUDIO_CFG
NET_DVR_SET_LCD_AUDIO_CFG = _hk_struct_test.NET_DVR_SET_LCD_AUDIO_CFG
NET_DVR_GET_LCD_WORK_STATE = _hk_struct_test.NET_DVR_GET_LCD_WORK_STATE
NET_DVR_GET_BOOT_LOGO_CFG = _hk_struct_test.NET_DVR_GET_BOOT_LOGO_CFG
NET_DVR_SET_BOOT_LOGO_CFG = _hk_struct_test.NET_DVR_SET_BOOT_LOGO_CFG
NET_DVR_GET_STREAM_DST_COMPRESSIONINFO = _hk_struct_test.NET_DVR_GET_STREAM_DST_COMPRESSIONINFO
NET_DVR_SET_STREAM_DST_COMPRESSIONINFO = _hk_struct_test.NET_DVR_SET_STREAM_DST_COMPRESSIONINFO
NET_DVR_GET_STREAM_TRANS_STATUS = _hk_struct_test.NET_DVR_GET_STREAM_TRANS_STATUS
NET_DVR_GET_DEVICE_TRANS_STATUS = _hk_struct_test.NET_DVR_GET_DEVICE_TRANS_STATUS
NET_DVR_GET_ALLSTREAM_SRC_INFO = _hk_struct_test.NET_DVR_GET_ALLSTREAM_SRC_INFO
NET_DVR_GET_BIG_SCREEN_AUDIO = _hk_struct_test.NET_DVR_GET_BIG_SCREEN_AUDIO
NET_DVR_SET_BIG_SCREEN_AUDIO = _hk_struct_test.NET_DVR_SET_BIG_SCREEN_AUDIO
NET_DVR_GET_DEV_WORK_MODE = _hk_struct_test.NET_DVR_GET_DEV_WORK_MODE
NET_DVR_SET_DEV_WORK_MODE = _hk_struct_test.NET_DVR_SET_DEV_WORK_MODE
NET_DVR_APPLY_TRANS_CHAN = _hk_struct_test.NET_DVR_APPLY_TRANS_CHAN
NET_DVR_GET_DISPCHAN_CFG = _hk_struct_test.NET_DVR_GET_DISPCHAN_CFG
NET_DVR_SET_DISPCHAN_CFG = _hk_struct_test.NET_DVR_SET_DISPCHAN_CFG
NET_DVR_GET_DEC_CHAN_STATUS = _hk_struct_test.NET_DVR_GET_DEC_CHAN_STATUS
NET_DVR_GET_DISP_CHAN_STATUS = _hk_struct_test.NET_DVR_GET_DISP_CHAN_STATUS
NET_DVR_GET_ALARMIN_STATUS = _hk_struct_test.NET_DVR_GET_ALARMIN_STATUS
NET_DVR_GET_ALARMOUT_STATUS = _hk_struct_test.NET_DVR_GET_ALARMOUT_STATUS
NET_DVR_GET_AUDIO_CHAN_STATUS = _hk_struct_test.NET_DVR_GET_AUDIO_CHAN_STATUS
NET_DVR_GET_VIDEO_AUDIOIN_CFG = _hk_struct_test.NET_DVR_GET_VIDEO_AUDIOIN_CFG
NET_DVR_SET_VIDEO_AUDIOIN_CFG = _hk_struct_test.NET_DVR_SET_VIDEO_AUDIOIN_CFG
NET_DVR_SET_BASEMAP_CFG = _hk_struct_test.NET_DVR_SET_BASEMAP_CFG
NET_DVR_GET_BASEMAP_CFG = _hk_struct_test.NET_DVR_GET_BASEMAP_CFG
NET_DVR_GET_VIRTUAL_SCREEN_CFG = _hk_struct_test.NET_DVR_GET_VIRTUAL_SCREEN_CFG
NET_DVR_SET_VIRTUAL_SCREEN_CFG = _hk_struct_test.NET_DVR_SET_VIRTUAL_SCREEN_CFG
NET_DVR_GET_BASEMAP_WIN_CFG = _hk_struct_test.NET_DVR_GET_BASEMAP_WIN_CFG
NET_DVR_SET_BASEMAP_WIN_CFG = _hk_struct_test.NET_DVR_SET_BASEMAP_WIN_CFG
NET_DVR_DELETE_PICTURE = _hk_struct_test.NET_DVR_DELETE_PICTURE
NET_DVR_GET_BASEMAP_PIC_INFO = _hk_struct_test.NET_DVR_GET_BASEMAP_PIC_INFO
NET_DVR_SET_BASEMAP_WIN_CFG_V40 = _hk_struct_test.NET_DVR_SET_BASEMAP_WIN_CFG_V40
NET_DVR_GET_BASEMAP_WIN_CFG_V40 = _hk_struct_test.NET_DVR_GET_BASEMAP_WIN_CFG_V40
NET_DVR_GET_DEC_VCA_CFG = _hk_struct_test.NET_DVR_GET_DEC_VCA_CFG
NET_DVR_SET_DEC_VCA_CFG = _hk_struct_test.NET_DVR_SET_DEC_VCA_CFG
NET_DVR_SET_VS_INPUT_CHAN_INIT_ALL = _hk_struct_test.NET_DVR_SET_VS_INPUT_CHAN_INIT_ALL
NET_DVR_GET_VS_INPUT_CHAN_INIT_ALL = _hk_struct_test.NET_DVR_GET_VS_INPUT_CHAN_INIT_ALL
NET_DVR_GET_VS_INPUT_CHAN_INIT = _hk_struct_test.NET_DVR_GET_VS_INPUT_CHAN_INIT
NET_DVR_GET_VS_INPUT_CHAN_CFG = _hk_struct_test.NET_DVR_GET_VS_INPUT_CHAN_CFG
NET_DVR_GET_TERMINAL_CONFERENCE_STATUS = _hk_struct_test.NET_DVR_GET_TERMINAL_CONFERENCE_STATUS
NET_DVR_GET_TERMINAL_INPUT_CFG_CAP = _hk_struct_test.NET_DVR_GET_TERMINAL_INPUT_CFG_CAP
NET_DVR_GET_TERMINAL_INPUT_CFG = _hk_struct_test.NET_DVR_GET_TERMINAL_INPUT_CFG
NET_DVR_SET_TERMINAL_INPUT_CFG = _hk_struct_test.NET_DVR_SET_TERMINAL_INPUT_CFG
NET_DVR_GET_CONFERENCE_REGION_CAP = _hk_struct_test.NET_DVR_GET_CONFERENCE_REGION_CAP
NET_DVR_GET_CONFERENCE_REGION = _hk_struct_test.NET_DVR_GET_CONFERENCE_REGION
NET_DVR_SET_CONFERENCE_REGION = _hk_struct_test.NET_DVR_SET_CONFERENCE_REGION
NET_DVR_GET_TERMINAL_CALL_CFG_CAP = _hk_struct_test.NET_DVR_GET_TERMINAL_CALL_CFG_CAP
NET_DVR_GET_TERMINAL_CALL_CFG = _hk_struct_test.NET_DVR_GET_TERMINAL_CALL_CFG
NET_DVR_SET_TERMINAL_CALL_CFG = _hk_struct_test.NET_DVR_SET_TERMINAL_CALL_CFG
NET_DVR_GET_TERMINAL_CTRL_CAP = _hk_struct_test.NET_DVR_GET_TERMINAL_CTRL_CAP
NET_DVR_TERMINAL_CTRL = _hk_struct_test.NET_DVR_TERMINAL_CTRL
NET_DVR_GET_CALL_QUERY_CAP = _hk_struct_test.NET_DVR_GET_CALL_QUERY_CAP
NET_DVR_GET_CALLINFO_BY_COND = _hk_struct_test.NET_DVR_GET_CALLINFO_BY_COND
NET_DVR_SET_FUSION_SCALE = _hk_struct_test.NET_DVR_SET_FUSION_SCALE
NET_DVR_GET_FUSION_SCALE = _hk_struct_test.NET_DVR_GET_FUSION_SCALE
NET_DVR_GET_VCS_CAP = _hk_struct_test.NET_DVR_GET_VCS_CAP
NET_DVR_GET_TERMINAL_GK_CFG_CAP = _hk_struct_test.NET_DVR_GET_TERMINAL_GK_CFG_CAP
NET_DVR_GET_TERMINAL_GK_CFG = _hk_struct_test.NET_DVR_GET_TERMINAL_GK_CFG
NET_DVR_SET_TERMINAL_GK_CFG = _hk_struct_test.NET_DVR_SET_TERMINAL_GK_CFG
NET_DVR_GET_MCU_CONFERENCESEARCH_CAP = _hk_struct_test.NET_DVR_GET_MCU_CONFERENCESEARCH_CAP
NET_DVR_SET_VS_INPUT_CHAN_CFG = _hk_struct_test.NET_DVR_SET_VS_INPUT_CHAN_CFG
NET_DVR_GET_VS_NETSRC_CFG = _hk_struct_test.NET_DVR_GET_VS_NETSRC_CFG
NET_DVR_SET_VS_NETSRC_CFG = _hk_struct_test.NET_DVR_SET_VS_NETSRC_CFG
NET_DVR_GET_LLDP_CFG = _hk_struct_test.NET_DVR_GET_LLDP_CFG
NET_DVR_SET_LLDP_CFG = _hk_struct_test.NET_DVR_SET_LLDP_CFG
NET_DVR_GET_LLDP_CAP = _hk_struct_test.NET_DVR_GET_LLDP_CAP
NET_DVR_GET_FIBER_CONVERT_BASIC_INFO = _hk_struct_test.NET_DVR_GET_FIBER_CONVERT_BASIC_INFO
NET_DVR_GET_FIBER_CONVERT_WORK_STATE = _hk_struct_test.NET_DVR_GET_FIBER_CONVERT_WORK_STATE
NET_DVR_GET_FIBER_CONVERT_TOPOLOGY = _hk_struct_test.NET_DVR_GET_FIBER_CONVERT_TOPOLOGY
NET_DVR_GET_FC_PORT_REMARKS = _hk_struct_test.NET_DVR_GET_FC_PORT_REMARKS
NET_DVR_SET_FC_PORT_REMARKS = _hk_struct_test.NET_DVR_SET_FC_PORT_REMARKS
NET_DVR_GET_PORT_REMARKS_CAP = _hk_struct_test.NET_DVR_GET_PORT_REMARKS_CAP
NET_DVR_GET_MCU_CONFERENCECONTROL_CAP = _hk_struct_test.NET_DVR_GET_MCU_CONFERENCECONTROL_CAP
NET_DVR_GET_MCU_TERMINALCONTROL_CAP = _hk_struct_test.NET_DVR_GET_MCU_TERMINALCONTROL_CAP
NET_DVR_GET_MCU_TERIMINALGROUP_CAP = _hk_struct_test.NET_DVR_GET_MCU_TERIMINALGROUP_CAP
NET_DVR_GET_MCU_TERMINAL_CAP = _hk_struct_test.NET_DVR_GET_MCU_TERMINAL_CAP
NET_DVR_GET_MCU_CONFERENCE_CAP = _hk_struct_test.NET_DVR_GET_MCU_CONFERENCE_CAP
NET_DVR_GET_MCU_GK_CFG_CAP = _hk_struct_test.NET_DVR_GET_MCU_GK_CFG_CAP
NET_DVR_GET_MCU_GK_SERVER_CAP = _hk_struct_test.NET_DVR_GET_MCU_GK_SERVER_CAP
NET_DVR_GET_EDID_CFG_FILE_INFO = _hk_struct_test.NET_DVR_GET_EDID_CFG_FILE_INFO
NET_DVR_GET_EDID_CFG_FILE_INFO_LIST = _hk_struct_test.NET_DVR_GET_EDID_CFG_FILE_INFO_LIST
NET_DVR_SET_EDID_CFG_FILE_INFO = _hk_struct_test.NET_DVR_SET_EDID_CFG_FILE_INFO
NET_DVR_DEL_EDID_CFG_FILE_INFO = _hk_struct_test.NET_DVR_DEL_EDID_CFG_FILE_INFO
NET_DVR_GET_EDID_CFG_FILE_INFO_CAP = _hk_struct_test.NET_DVR_GET_EDID_CFG_FILE_INFO_CAP
NET_DVR_GET_SUBWND_DECODE_OSD = _hk_struct_test.NET_DVR_GET_SUBWND_DECODE_OSD
NET_DVR_GET_SUBWND_DECODE_OSD_ALL = _hk_struct_test.NET_DVR_GET_SUBWND_DECODE_OSD_ALL
NET_DVR_SET_SUBWND_DECODE_OSD = _hk_struct_test.NET_DVR_SET_SUBWND_DECODE_OSD
NET_DVR_GET_SUBWND_DECODE_OSD_CAP = _hk_struct_test.NET_DVR_GET_SUBWND_DECODE_OSD_CAP
NET_DVR_GET_DECODE_CHANNEL_OSD = _hk_struct_test.NET_DVR_GET_DECODE_CHANNEL_OSD
NET_DVR_SET_DECODE_CHANNEL_OSD = _hk_struct_test.NET_DVR_SET_DECODE_CHANNEL_OSD
NET_DVR_GET_OUTPUT_PIC_INFO = _hk_struct_test.NET_DVR_GET_OUTPUT_PIC_INFO
NET_DVR_SET_OUTPUT_PIC_INFO = _hk_struct_test.NET_DVR_SET_OUTPUT_PIC_INFO
NET_DVR_GET_OUTPUT_PIC_WIN_CFG = _hk_struct_test.NET_DVR_GET_OUTPUT_PIC_WIN_CFG
NET_DVR_SET_OUTPUT_PIC_WIN_CFG = _hk_struct_test.NET_DVR_SET_OUTPUT_PIC_WIN_CFG
NET_DVR_GET_OUTPUT_ALL_PIC_WIN_CFG = _hk_struct_test.NET_DVR_GET_OUTPUT_ALL_PIC_WIN_CFG
NET_DVR_DELETE_OUPUT_PIC = _hk_struct_test.NET_DVR_DELETE_OUPUT_PIC
NET_DVR_GET_OUTPUT_OSD_CFG = _hk_struct_test.NET_DVR_GET_OUTPUT_OSD_CFG
NET_DVR_SET_OUTPUT_OSD_CFG = _hk_struct_test.NET_DVR_SET_OUTPUT_OSD_CFG
NET_DVR_GET_OUTPUT_ALL_OSD_CFG = _hk_struct_test.NET_DVR_GET_OUTPUT_ALL_OSD_CFG
NET_DVR_GET_CHAN_RELATION = _hk_struct_test.NET_DVR_GET_CHAN_RELATION
NET_DVR_SET_CHAN_RELATION = _hk_struct_test.NET_DVR_SET_CHAN_RELATION
NET_DVR_GET_ALL_CHAN_RELATION = _hk_struct_test.NET_DVR_GET_ALL_CHAN_RELATION
NET_DVR_GET_NS_RING_CFG = _hk_struct_test.NET_DVR_GET_NS_RING_CFG
NET_DVR_SET_NS_RING_CFG = _hk_struct_test.NET_DVR_SET_NS_RING_CFG
NET_DVR_GET_NS_RING_STATUS = _hk_struct_test.NET_DVR_GET_NS_RING_STATUS
NET_DVR_GET_OPTICAL_PORT_INFO = _hk_struct_test.NET_DVR_GET_OPTICAL_PORT_INFO
NET_DVR_SET_OPTICAL_PORT_INFO = _hk_struct_test.NET_DVR_SET_OPTICAL_PORT_INFO
NET_DVR_GET_OPTICAL_CHAN_RELATE_CFG = _hk_struct_test.NET_DVR_GET_OPTICAL_CHAN_RELATE_CFG
NET_DVR_SET_OPTICAL_CHAN_RELATE_CFG = _hk_struct_test.NET_DVR_SET_OPTICAL_CHAN_RELATE_CFG
NET_DVR_GET_WIN_ROAM_SWITCH_CFG = _hk_struct_test.NET_DVR_GET_WIN_ROAM_SWITCH_CFG
NET_DVR_SET_WIN_ROAM_SWITCH_CFG = _hk_struct_test.NET_DVR_SET_WIN_ROAM_SWITCH_CFG
NET_DVR_START_SCREEN_CRTL = _hk_struct_test.NET_DVR_START_SCREEN_CRTL
NET_DVR_GET_SCREEN_FLIE_LIST = _hk_struct_test.NET_DVR_GET_SCREEN_FLIE_LIST
NET_DVR_GET_SCREEN_FILEINFO = _hk_struct_test.NET_DVR_GET_SCREEN_FILEINFO
NET_DVR_SET_SCREEN_FILEINFO = _hk_struct_test.NET_DVR_SET_SCREEN_FILEINFO
NET_DVR_GET_LED_OUTPUT_CFG = _hk_struct_test.NET_DVR_GET_LED_OUTPUT_CFG
NET_DVR_SET_LED_OUTPUT_CFG = _hk_struct_test.NET_DVR_SET_LED_OUTPUT_CFG
NET_DVR_GET_LED_OUTPUT_PORT_CFG = _hk_struct_test.NET_DVR_GET_LED_OUTPUT_PORT_CFG
NET_DVR_SET_LED_OUTPUT_PORT_CFG = _hk_struct_test.NET_DVR_SET_LED_OUTPUT_PORT_CFG
NET_DVR_GET_LED_DISPLAY_AREA_CFG = _hk_struct_test.NET_DVR_GET_LED_DISPLAY_AREA_CFG
NET_DVR_SET_LED_DISPLAY_AREA_CFG = _hk_struct_test.NET_DVR_SET_LED_DISPLAY_AREA_CFG
NET_DVR_GET_LED_PORT_CFG = _hk_struct_test.NET_DVR_GET_LED_PORT_CFG
NET_DVR_SET_LED_PORT_CFG = _hk_struct_test.NET_DVR_SET_LED_PORT_CFG
NET_DVR_GET_LED_DISPLAY_CFG = _hk_struct_test.NET_DVR_GET_LED_DISPLAY_CFG
NET_DVR_SET_LED_DISPLAY_CFG = _hk_struct_test.NET_DVR_SET_LED_DISPLAY_CFG
NET_DVR_GET_ALL_LED_PORT_CFG = _hk_struct_test.NET_DVR_GET_ALL_LED_PORT_CFG
NET_DVR_SAVE_LED_CONFIGURATION = _hk_struct_test.NET_DVR_SAVE_LED_CONFIGURATION
NET_DVR_GET_LED_TEST_SIGNAL_CFG = _hk_struct_test.NET_DVR_GET_LED_TEST_SIGNAL_CFG
NET_DVR_SET_LED_TEST_SIGNAL_CFG = _hk_struct_test.NET_DVR_SET_LED_TEST_SIGNAL_CFG
NET_DVR_GET_LED_NOSIGNAL_CFG = _hk_struct_test.NET_DVR_GET_LED_NOSIGNAL_CFG
NET_DVR_SET_LED_NOSIGNAL_CFG = _hk_struct_test.NET_DVR_SET_LED_NOSIGNAL_CFG
NET_DVR_GET_LED_INPUT_CFG = _hk_struct_test.NET_DVR_GET_LED_INPUT_CFG
NET_DVR_SET_LED_INPUT_CFG = _hk_struct_test.NET_DVR_SET_LED_INPUT_CFG
NET_DVR_GET_LED_RECV_GAMMA_CFG = _hk_struct_test.NET_DVR_GET_LED_RECV_GAMMA_CFG
NET_DVR_SET_LED_RECV_GAMMA_CFG = _hk_struct_test.NET_DVR_SET_LED_RECV_GAMMA_CFG
NET_DVR_GET_LED_RECV_CFG = _hk_struct_test.NET_DVR_GET_LED_RECV_CFG
NET_DVR_SET_LED_RECV_CFG = _hk_struct_test.NET_DVR_SET_LED_RECV_CFG
NET_DVR_GET_LED_RECV_ADVANCED_CFG = _hk_struct_test.NET_DVR_GET_LED_RECV_ADVANCED_CFG
NET_DVR_SET_LED_RECV_ADVANCED_CFG = _hk_struct_test.NET_DVR_SET_LED_RECV_ADVANCED_CFG
NET_DVR_GET_LED_SCREEN_DISPLAY_CFG = _hk_struct_test.NET_DVR_GET_LED_SCREEN_DISPLAY_CFG
NET_DVR_SET_LED_SCREEN_DISPLAY_CFG = _hk_struct_test.NET_DVR_SET_LED_SCREEN_DISPLAY_CFG
NET_DVR_GET_INSERTPLAY_PROGRESS = _hk_struct_test.NET_DVR_GET_INSERTPLAY_PROGRESS
NET_DVR_GET_SCREEN_CONFIG = _hk_struct_test.NET_DVR_GET_SCREEN_CONFIG
NET_DVR_SET_SCREEN_CONFIG = _hk_struct_test.NET_DVR_SET_SCREEN_CONFIG
NET_DVR_GET_SCREEN_CONFIG_CAP = _hk_struct_test.NET_DVR_GET_SCREEN_CONFIG_CAP
NET_DVR_GET_SCHEDULE_PUBLISH_PROGRESS = _hk_struct_test.NET_DVR_GET_SCHEDULE_PUBLISH_PROGRESS
NET_DVR_GET_PUBLISH_UPGRADE_PROGRESS = _hk_struct_test.NET_DVR_GET_PUBLISH_UPGRADE_PROGRESS
NET_DVR_GET_INPUT_BOARD_CFG = _hk_struct_test.NET_DVR_GET_INPUT_BOARD_CFG
NET_DVR_GET_INPUT_BOARD_CFG_LIST = _hk_struct_test.NET_DVR_GET_INPUT_BOARD_CFG_LIST
NET_DVR_SET_INPUT_BOARD_CFG = _hk_struct_test.NET_DVR_SET_INPUT_BOARD_CFG
NET_DVR_GET_INPUT_SOURCE_TEXT_CAP = _hk_struct_test.NET_DVR_GET_INPUT_SOURCE_TEXT_CAP
NET_DVR_GET_INPUT_SOURCE_TEXT_CFG = _hk_struct_test.NET_DVR_GET_INPUT_SOURCE_TEXT_CFG
NET_DVR_GET_INPUT_SOURCE_TEXT_CFG_LSIT = _hk_struct_test.NET_DVR_GET_INPUT_SOURCE_TEXT_CFG_LSIT
NET_DVR_SET_INPUT_SOURCE_TEXT_CFG = _hk_struct_test.NET_DVR_SET_INPUT_SOURCE_TEXT_CFG
NET_DVR_SET_INPUT_SOURCE_TEXT_CFG_LIST = _hk_struct_test.NET_DVR_SET_INPUT_SOURCE_TEXT_CFG_LIST
NET_DVR_GET_INPUT_SOURCE_RESOLUTION_CAP = _hk_struct_test.NET_DVR_GET_INPUT_SOURCE_RESOLUTION_CAP
NET_DVR_GET_INPUT_SOURCE_RESOLUTION_CFG = _hk_struct_test.NET_DVR_GET_INPUT_SOURCE_RESOLUTION_CFG
NET_DVR_GET_INPUT_SOURCE_RESOLUTION_CFG_LIST = _hk_struct_test.NET_DVR_GET_INPUT_SOURCE_RESOLUTION_CFG_LIST
NET_DVR_SET_INPUT_SOURCE_RESOLUTION_CFG = _hk_struct_test.NET_DVR_SET_INPUT_SOURCE_RESOLUTION_CFG
NET_DVR_SET_INPUT_SOURCE_RESOLUTION_CFG_LIST = _hk_struct_test.NET_DVR_SET_INPUT_SOURCE_RESOLUTION_CFG_LIST
NET_DVR_GET_LED_AREA_INFO_LIST = _hk_struct_test.NET_DVR_GET_LED_AREA_INFO_LIST
NET_DVR_GET_DISPINPUT_CFG = _hk_struct_test.NET_DVR_GET_DISPINPUT_CFG
NET_DVR_GET_DISPINPUT_CFG_LIST = _hk_struct_test.NET_DVR_GET_DISPINPUT_CFG_LIST
NET_DVR_SET_DISPINPUT_CFG = _hk_struct_test.NET_DVR_SET_DISPINPUT_CFG
NET_DVR_GET_DISPINPUT_CFG_CAP = _hk_struct_test.NET_DVR_GET_DISPINPUT_CFG_CAP
NET_DVR_GET_CURRENT_VALID_PORT = _hk_struct_test.NET_DVR_GET_CURRENT_VALID_PORT
NET_DVR_SET_ONLINE_UPGRADE = _hk_struct_test.NET_DVR_SET_ONLINE_UPGRADE
NET_DVR_GET_ONLINEUPGRADE_PROGRESS = _hk_struct_test.NET_DVR_GET_ONLINEUPGRADE_PROGRESS
NET_DVR_GET_FIRMWARECODE = _hk_struct_test.NET_DVR_GET_FIRMWARECODE
NET_DVR_GET_ONLINEUPGRADE_SERVER = _hk_struct_test.NET_DVR_GET_ONLINEUPGRADE_SERVER
NET_DVR_GET_ONLINEUPGRADE_VERSION = _hk_struct_test.NET_DVR_GET_ONLINEUPGRADE_VERSION
NET_DVR_GET_RECOMMEN_VERSION = _hk_struct_test.NET_DVR_GET_RECOMMEN_VERSION
NET_DVR_GET_ONLINEUPGRADE_ABILITY = _hk_struct_test.NET_DVR_GET_ONLINEUPGRADE_ABILITY
NET_DVR_GET_FIBER_CONVERT_BASIC_INFO_V50 = _hk_struct_test.NET_DVR_GET_FIBER_CONVERT_BASIC_INFO_V50
NET_DVR_GET_FIBER_CONVERT_WORK_STATE_V50 = _hk_struct_test.NET_DVR_GET_FIBER_CONVERT_WORK_STATE_V50
NET_SDK_LED_SCREEN_CHECK = _hk_struct_test.NET_SDK_LED_SCREEN_CHECK
NET_SDK_GENERATE_OUTPUT_CONTROL = _hk_struct_test.NET_SDK_GENERATE_OUTPUT_CONTROL
NET_SDK_GET_MATRIX_STATUS_V51 = _hk_struct_test.NET_SDK_GET_MATRIX_STATUS_V51
NET_DVR_GET_ALARM_LINKAGE_CFG = _hk_struct_test.NET_DVR_GET_ALARM_LINKAGE_CFG
NET_DVR_SET_ALARM_LINKAGE_CFG = _hk_struct_test.NET_DVR_SET_ALARM_LINKAGE_CFG
NET_DVR_GET_RS485_WORK_MODE = _hk_struct_test.NET_DVR_GET_RS485_WORK_MODE
NET_DVR_SET_RS485_WORK_MODE = _hk_struct_test.NET_DVR_SET_RS485_WORK_MODE
NET_DVR_GET_SPLITTER_TRANS_CHAN_CFG = _hk_struct_test.NET_DVR_GET_SPLITTER_TRANS_CHAN_CFG
NET_DVR_SET_SPLITTER_TRANS_CHAN_CFG = _hk_struct_test.NET_DVR_SET_SPLITTER_TRANS_CHAN_CFG
NET_DVR_GET_RS485_PROTOCOL_VERSION = _hk_struct_test.NET_DVR_GET_RS485_PROTOCOL_VERSION
NET_DVR_ALARMHOST_REGISTER_DETECTOR = _hk_struct_test.NET_DVR_ALARMHOST_REGISTER_DETECTOR
NET_DVR_GET_SIP_CFG = _hk_struct_test.NET_DVR_GET_SIP_CFG
NET_DVR_SET_SIP_CFG = _hk_struct_test.NET_DVR_SET_SIP_CFG
NET_DVR_GET_IP_VIEW_DEVCFG = _hk_struct_test.NET_DVR_GET_IP_VIEW_DEVCFG
NET_DVR_SET_IP_VIEW_DEVCFG = _hk_struct_test.NET_DVR_SET_IP_VIEW_DEVCFG
NET_DVR_GET_IP_VIEW_AUDIO_CFG = _hk_struct_test.NET_DVR_GET_IP_VIEW_AUDIO_CFG
NET_DVR_SET_IP_VIEW_AUDIO_CFG = _hk_struct_test.NET_DVR_SET_IP_VIEW_AUDIO_CFG
NET_DVR_GET_IP_VIEW_CALL_CFG = _hk_struct_test.NET_DVR_GET_IP_VIEW_CALL_CFG
NET_DVR_SET_IP_VIEW_CALL_CFG = _hk_struct_test.NET_DVR_SET_IP_VIEW_CALL_CFG
NET_DVR_GET_AUDIO_LIMIT_ALARM_CFG = _hk_struct_test.NET_DVR_GET_AUDIO_LIMIT_ALARM_CFG
NET_DVR_SET_AUDIO_LIMIT_ALARM_CFG = _hk_struct_test.NET_DVR_SET_AUDIO_LIMIT_ALARM_CFG
NET_DVR_GET_BUTTON_DOWN_ALARM_CFG = _hk_struct_test.NET_DVR_GET_BUTTON_DOWN_ALARM_CFG
NET_DVR_SET_BUTTON_DOWN_ALARM_CFG = _hk_struct_test.NET_DVR_SET_BUTTON_DOWN_ALARM_CFG
NET_DVR_GET_ISCSI_CFG = _hk_struct_test.NET_DVR_GET_ISCSI_CFG
NET_DVR_SET_ISCSI_CFG = _hk_struct_test.NET_DVR_SET_ISCSI_CFG
NET_DVR_GET_SECURITYMODE = _hk_struct_test.NET_DVR_GET_SECURITYMODE
NET_DVR_GET_TEMP_HUMI = _hk_struct_test.NET_DVR_GET_TEMP_HUMI
NET_DVR_SET_ALARMSOUNDMODE = _hk_struct_test.NET_DVR_SET_ALARMSOUNDMODE
NET_DVR_GET_ALARMSOUNDMODE = _hk_struct_test.NET_DVR_GET_ALARMSOUNDMODE
NET_DVR_SET_IPDEVICE_ACTIVATED = _hk_struct_test.NET_DVR_SET_IPDEVICE_ACTIVATED
NET_DVR_GET_DIGITAL_CHAN_SECURITY_STATUS = _hk_struct_test.NET_DVR_GET_DIGITAL_CHAN_SECURITY_STATUS
NET_DVR_GET_ACTIVATE_IPC_ABILITY = _hk_struct_test.NET_DVR_GET_ACTIVATE_IPC_ABILITY
NET_DVR_GET_VIDEO_INTERCOM_DEVICEID_CFG = _hk_struct_test.NET_DVR_GET_VIDEO_INTERCOM_DEVICEID_CFG
NET_DVR_SET_VIDEO_INTERCOM_DEVICEID_CFG = _hk_struct_test.NET_DVR_SET_VIDEO_INTERCOM_DEVICEID_CFG
NET_DVR_SET_PRIVILEGE_PASSWORD = _hk_struct_test.NET_DVR_SET_PRIVILEGE_PASSWORD
NET_DVR_GET_OPERATION_TIME_CFG = _hk_struct_test.NET_DVR_GET_OPERATION_TIME_CFG
NET_DVR_SET_OPERATION_TIME_CFG = _hk_struct_test.NET_DVR_SET_OPERATION_TIME_CFG
NET_DVR_GET_VIDEO_INTERCOM_RELATEDEV_CFG = _hk_struct_test.NET_DVR_GET_VIDEO_INTERCOM_RELATEDEV_CFG
NET_DVR_SET_VIDEO_INTERCOM_RELATEDEV_CFG = _hk_struct_test.NET_DVR_SET_VIDEO_INTERCOM_RELATEDEV_CFG
NET_DVR_REMOTECONTROL_NOTICE_DATA = _hk_struct_test.NET_DVR_REMOTECONTROL_NOTICE_DATA
NET_DVR_REMOTECONTROL_GATEWAY = _hk_struct_test.NET_DVR_REMOTECONTROL_GATEWAY
NET_DVR_REMOTECONTROL_OPERATION_AUTH = _hk_struct_test.NET_DVR_REMOTECONTROL_OPERATION_AUTH
NET_DVR_GET_VIDEO_INTERCOM_IOIN_CFG = _hk_struct_test.NET_DVR_GET_VIDEO_INTERCOM_IOIN_CFG
NET_DVR_SET_VIDEO_INTERCOM_IOIN_CFG = _hk_struct_test.NET_DVR_SET_VIDEO_INTERCOM_IOIN_CFG
NET_DVR_GET_VIDEO_INTERCOM_IOOUT_CFG = _hk_struct_test.NET_DVR_GET_VIDEO_INTERCOM_IOOUT_CFG
NET_DVR_SET_VIDEO_INTERCOM_IOOUT_CFG = _hk_struct_test.NET_DVR_SET_VIDEO_INTERCOM_IOOUT_CFG
NET_DVR_GET_ELEVATORCONTROL_CFG = _hk_struct_test.NET_DVR_GET_ELEVATORCONTROL_CFG
NET_DVR_SET_ELEVATORCONTROL_CFG = _hk_struct_test.NET_DVR_SET_ELEVATORCONTROL_CFG
NET_DVR_GET_VIDEOINTERCOM_STREAM = _hk_struct_test.NET_DVR_GET_VIDEOINTERCOM_STREAM
NET_DVR_SET_VIDEOINTERCOM_STREAM = _hk_struct_test.NET_DVR_SET_VIDEOINTERCOM_STREAM
NET_DVR_GET_WDR_CFG = _hk_struct_test.NET_DVR_GET_WDR_CFG
NET_DVR_SET_WDR_CFG = _hk_struct_test.NET_DVR_SET_WDR_CFG
NET_DVR_GET_VIS_DEVINFO = _hk_struct_test.NET_DVR_GET_VIS_DEVINFO
NET_DVR_GET_VIS_REGISTER_INFO = _hk_struct_test.NET_DVR_GET_VIS_REGISTER_INFO
NET_DVR_GET_ELEVATORCONTROL_CFG_V40 = _hk_struct_test.NET_DVR_GET_ELEVATORCONTROL_CFG_V40
NET_DVR_SET_ELEVATORCONTROL_CFG_V40 = _hk_struct_test.NET_DVR_SET_ELEVATORCONTROL_CFG_V40
NET_DVR_GET_CALL_ROOM_CFG = _hk_struct_test.NET_DVR_GET_CALL_ROOM_CFG
NET_DVR_SET_CALL_ROOM_CFG = _hk_struct_test.NET_DVR_SET_CALL_ROOM_CFG
NET_DVR_VIDEO_CALL_SIGNAL_PROCESS = _hk_struct_test.NET_DVR_VIDEO_CALL_SIGNAL_PROCESS
NET_DVR_GET_CALLER_INFO = _hk_struct_test.NET_DVR_GET_CALLER_INFO
NET_DVR_GET_CALL_STATUS = _hk_struct_test.NET_DVR_GET_CALL_STATUS
NET_DVR_GET_SERVER_DEVICE_INFO = _hk_struct_test.NET_DVR_GET_SERVER_DEVICE_INFO
NET_DVR_SET_CALL_SIGNAL = _hk_struct_test.NET_DVR_SET_CALL_SIGNAL
NET_DVR_GET_VIDEO_INTERCOM_ALARM_CFG = _hk_struct_test.NET_DVR_GET_VIDEO_INTERCOM_ALARM_CFG
NET_DVR_SET_VIDEO_INTERCOM_ALARM_CFG = _hk_struct_test.NET_DVR_SET_VIDEO_INTERCOM_ALARM_CFG
NET_DVR_GET_RING_LIST = _hk_struct_test.NET_DVR_GET_RING_LIST
NET_DVR_GET_ROOM_CUSTOM_CFG = _hk_struct_test.NET_DVR_GET_ROOM_CUSTOM_CFG
NET_DVR_SET_ROOM_CUSTOM_CFG = _hk_struct_test.NET_DVR_SET_ROOM_CUSTOM_CFG
NET_DVR_GET_ELEVATORCONTROL_CFG_V50 = _hk_struct_test.NET_DVR_GET_ELEVATORCONTROL_CFG_V50
NET_DVR_SET_ELEVATORCONTROL_CFG_V50 = _hk_struct_test.NET_DVR_SET_ELEVATORCONTROL_CFG_V50
NET_DVR_GET_SIP_CFG_V50 = _hk_struct_test.NET_DVR_GET_SIP_CFG_V50
NET_DVR_SET_SIP_CFG_V50 = _hk_struct_test.NET_DVR_SET_SIP_CFG_V50
NET_DVR_GET_NOTICE_VIDEO_DATA = _hk_struct_test.NET_DVR_GET_NOTICE_VIDEO_DATA
NET_DVR_DEBUGINFO_START = _hk_struct_test.NET_DVR_DEBUGINFO_START
NET_DVR_AUTO_TEST_START = _hk_struct_test.NET_DVR_AUTO_TEST_START
NET_DVR_GET_SELFCHECK_RESULT = _hk_struct_test.NET_DVR_GET_SELFCHECK_RESULT
NET_DVR_SET_TEST_COMMAND = _hk_struct_test.NET_DVR_SET_TEST_COMMAND
NET_DVR_SET_TEST_DEVMODULE = _hk_struct_test.NET_DVR_SET_TEST_DEVMODULE
NET_DVR_GET_TEST_DEVMODULE = _hk_struct_test.NET_DVR_GET_TEST_DEVMODULE
NET_DVR_SET_AUTOFOCUS_TEST = _hk_struct_test.NET_DVR_SET_AUTOFOCUS_TEST
NET_DVR_CHECK_USER_STATUS = _hk_struct_test.NET_DVR_CHECK_USER_STATUS
NET_DVR_GET_TEST_COMMAND = _hk_struct_test.NET_DVR_GET_TEST_COMMAND
NET_DVR_GET_DIAL_SWITCH_CFG = _hk_struct_test.NET_DVR_GET_DIAL_SWITCH_CFG
NET_DVR_SET_AGING_TRICK_SCAN = _hk_struct_test.NET_DVR_SET_AGING_TRICK_SCAN
NET_DVR_GET_ECCENTRIC_CORRECT_STATE = _hk_struct_test.NET_DVR_GET_ECCENTRIC_CORRECT_STATE
NET_DVR_GET_THERMOMETRYRULE_TEMPERATURE_INFO = _hk_struct_test.NET_DVR_GET_THERMOMETRYRULE_TEMPERATURE_INFO
NET_DVR_T1_TEST_CMD = _hk_struct_test.NET_DVR_T1_TEST_CMD
NET_DVR_GET_MEMU_OUTPUT_MODE = _hk_struct_test.NET_DVR_GET_MEMU_OUTPUT_MODE
NET_DVR_SET_MEMU_OUTPUT_MODE = _hk_struct_test.NET_DVR_SET_MEMU_OUTPUT_MODE
NET_DVR_GET_DEV_LOGIN_RET_INFO = _hk_struct_test.NET_DVR_GET_DEV_LOGIN_RET_INFO
NET_DVR_GET_TEST_VERSION_HEAD = _hk_struct_test.NET_DVR_GET_TEST_VERSION_HEAD
NET_DVR_SET_TEST_VERSION_HEAD = _hk_struct_test.NET_DVR_SET_TEST_VERSION_HEAD
NET_DVR_GET_TEST_VERSION_HEAD_V1 = _hk_struct_test.NET_DVR_GET_TEST_VERSION_HEAD_V1
NET_DVR_SET_TEST_VERSION_HEAD_V1 = _hk_struct_test.NET_DVR_SET_TEST_VERSION_HEAD_V1
NET_DVR_GET_TEST_VERSION_HEAD_V2 = _hk_struct_test.NET_DVR_GET_TEST_VERSION_HEAD_V2
NET_DVR_SET_TEST_VERSION_HEAD_V2 = _hk_struct_test.NET_DVR_SET_TEST_VERSION_HEAD_V2
NET_DVR_GET_TEST_VERSION_HEAD_ONLY_0 = _hk_struct_test.NET_DVR_GET_TEST_VERSION_HEAD_ONLY_0
NET_DVR_SET_TEST_VERSION_HEAD_ONLY_0 = _hk_struct_test.NET_DVR_SET_TEST_VERSION_HEAD_ONLY_0
MAX_LOCAL_ADDR_LEN = _hk_struct_test.MAX_LOCAL_ADDR_LEN
MAX_COUNTRY_NAME_LEN = _hk_struct_test.MAX_COUNTRY_NAME_LEN
MAJOR_ALARM = _hk_struct_test.MAJOR_ALARM
MINOR_ALARM_IN = _hk_struct_test.MINOR_ALARM_IN
MINOR_ALARM_OUT = _hk_struct_test.MINOR_ALARM_OUT
MINOR_MOTDET_START = _hk_struct_test.MINOR_MOTDET_START
MINOR_MOTDET_STOP = _hk_struct_test.MINOR_MOTDET_STOP
MINOR_HIDE_ALARM_START = _hk_struct_test.MINOR_HIDE_ALARM_START
MINOR_HIDE_ALARM_STOP = _hk_struct_test.MINOR_HIDE_ALARM_STOP
MINOR_VCA_ALARM_START = _hk_struct_test.MINOR_VCA_ALARM_START
MINOR_VCA_ALARM_STOP = _hk_struct_test.MINOR_VCA_ALARM_STOP
MINOR_ITS_ALARM_START = _hk_struct_test.MINOR_ITS_ALARM_START
MINOR_ITS_ALARM_STOP = _hk_struct_test.MINOR_ITS_ALARM_STOP
MINOR_NETALARM_START = _hk_struct_test.MINOR_NETALARM_START
MINOR_NETALARM_STOP = _hk_struct_test.MINOR_NETALARM_STOP
MINOR_NETALARM_RESUME = _hk_struct_test.MINOR_NETALARM_RESUME
MINOR_WIRELESS_ALARM_START = _hk_struct_test.MINOR_WIRELESS_ALARM_START
MINOR_WIRELESS_ALARM_STOP = _hk_struct_test.MINOR_WIRELESS_ALARM_STOP
MINOR_PIR_ALARM_START = _hk_struct_test.MINOR_PIR_ALARM_START
MINOR_PIR_ALARM_STOP = _hk_struct_test.MINOR_PIR_ALARM_STOP
MINOR_CALLHELP_ALARM_START = _hk_struct_test.MINOR_CALLHELP_ALARM_START
MINOR_CALLHELP_ALARM_STOP = _hk_struct_test.MINOR_CALLHELP_ALARM_STOP
MINOR_IPCHANNEL_ALARMIN_START = _hk_struct_test.MINOR_IPCHANNEL_ALARMIN_START
MINOR_IPCHANNEL_ALARMIN_STOP = _hk_struct_test.MINOR_IPCHANNEL_ALARMIN_STOP
MINOR_DETECTFACE_ALARM_START = _hk_struct_test.MINOR_DETECTFACE_ALARM_START
MINOR_DETECTFACE_ALARM_STOP = _hk_struct_test.MINOR_DETECTFACE_ALARM_STOP
MINOR_VQD_ALARM_START = _hk_struct_test.MINOR_VQD_ALARM_START
MINOR_VQD_ALARM_STOP = _hk_struct_test.MINOR_VQD_ALARM_STOP
MINOR_VCA_SECNECHANGE_DETECTION = _hk_struct_test.MINOR_VCA_SECNECHANGE_DETECTION
MINOR_SMART_REGION_EXITING_BEGIN = _hk_struct_test.MINOR_SMART_REGION_EXITING_BEGIN
MINOR_SMART_REGION_EXITING_END = _hk_struct_test.MINOR_SMART_REGION_EXITING_END
MINOR_SMART_LOITERING_BEGIN = _hk_struct_test.MINOR_SMART_LOITERING_BEGIN
MINOR_SMART_LOITERING_END = _hk_struct_test.MINOR_SMART_LOITERING_END
MINOR_VCA_ALARM_LINE_DETECTION_BEGIN = _hk_struct_test.MINOR_VCA_ALARM_LINE_DETECTION_BEGIN
MINOR_VCA_ALARM_LINE_DETECTION_END = _hk_struct_test.MINOR_VCA_ALARM_LINE_DETECTION_END
MINOR_VCA_ALARM_INTRUDE_BEGIN = _hk_struct_test.MINOR_VCA_ALARM_INTRUDE_BEGIN
MINOR_VCA_ALARM_INTRUDE_END = _hk_struct_test.MINOR_VCA_ALARM_INTRUDE_END
MINOR_VCA_ALARM_AUDIOINPUT = _hk_struct_test.MINOR_VCA_ALARM_AUDIOINPUT
MINOR_VCA_ALARM_AUDIOABNORMAL = _hk_struct_test.MINOR_VCA_ALARM_AUDIOABNORMAL
MINOR_VCA_DEFOCUS_DETECTION_BEGIN = _hk_struct_test.MINOR_VCA_DEFOCUS_DETECTION_BEGIN
MINOR_VCA_DEFOCUS_DETECTION_END = _hk_struct_test.MINOR_VCA_DEFOCUS_DETECTION_END
MINOR_EXT_ALARM = _hk_struct_test.MINOR_EXT_ALARM
MINOR_VCA_FACE_ALARM_BEGIN = _hk_struct_test.MINOR_VCA_FACE_ALARM_BEGIN
MINOR_SMART_REGION_ENTRANCE_BEGIN = _hk_struct_test.MINOR_SMART_REGION_ENTRANCE_BEGIN
MINOR_SMART_REGION_ENTRANCE_END = _hk_struct_test.MINOR_SMART_REGION_ENTRANCE_END
MINOR_SMART_PEOPLE_GATHERING_BEGIN = _hk_struct_test.MINOR_SMART_PEOPLE_GATHERING_BEGIN
MINOR_SMART_PEOPLE_GATHERING_END = _hk_struct_test.MINOR_SMART_PEOPLE_GATHERING_END
MINOR_SMART_FAST_MOVING_BEGIN = _hk_struct_test.MINOR_SMART_FAST_MOVING_BEGIN
MINOR_SMART_FAST_MOVING_END = _hk_struct_test.MINOR_SMART_FAST_MOVING_END
MINOR_VCA_FACE_ALARM_END = _hk_struct_test.MINOR_VCA_FACE_ALARM_END
MINOR_VCA_SCENE_CHANGE_ALARM_BEGIN = _hk_struct_test.MINOR_VCA_SCENE_CHANGE_ALARM_BEGIN
MINOR_VCA_SCENE_CHANGE_ALARM_END = _hk_struct_test.MINOR_VCA_SCENE_CHANGE_ALARM_END
MINOR_VCA_ALARM_AUDIOINPUT_BEGIN = _hk_struct_test.MINOR_VCA_ALARM_AUDIOINPUT_BEGIN
MINOR_VCA_ALARM_AUDIOINPUT_END = _hk_struct_test.MINOR_VCA_ALARM_AUDIOINPUT_END
MINOR_VCA_ALARM_AUDIOABNORMAL_BEGIN = _hk_struct_test.MINOR_VCA_ALARM_AUDIOABNORMAL_BEGIN
MINOR_VCA_ALARM_AUDIOABNORMAL_END = _hk_struct_test.MINOR_VCA_ALARM_AUDIOABNORMAL_END
MINOR_VCA_LECTURE_DETECTION_BEGIN = _hk_struct_test.MINOR_VCA_LECTURE_DETECTION_BEGIN
MINOR_VCA_LECTURE_DETECTION_END = _hk_struct_test.MINOR_VCA_LECTURE_DETECTION_END
MINOR_VCA_ALARM_AUDIOSTEEPDROP = _hk_struct_test.MINOR_VCA_ALARM_AUDIOSTEEPDROP
MINOR_VCA_ANSWER_DETECTION_BEGIN = _hk_struct_test.MINOR_VCA_ANSWER_DETECTION_BEGIN
MINOR_VCA_ANSWER_DETECTION_END = _hk_struct_test.MINOR_VCA_ANSWER_DETECTION_END
MINOR_SMART_PARKING_BEGIN = _hk_struct_test.MINOR_SMART_PARKING_BEGIN
MINOR_SMART_PARKING_END = _hk_struct_test.MINOR_SMART_PARKING_END
MINOR_SMART_UNATTENDED_BAGGAGE_BEGIN = _hk_struct_test.MINOR_SMART_UNATTENDED_BAGGAGE_BEGIN
MINOR_SMART_UNATTENDED_BAGGAGE_END = _hk_struct_test.MINOR_SMART_UNATTENDED_BAGGAGE_END
MINOR_SMART_OBJECT_REMOVAL_BEGIN = _hk_struct_test.MINOR_SMART_OBJECT_REMOVAL_BEGIN
MINOR_SMART_OBJECT_REMOVAL_END = _hk_struct_test.MINOR_SMART_OBJECT_REMOVAL_END
MINOR_SMART_VEHICLE_ALARM_START = _hk_struct_test.MINOR_SMART_VEHICLE_ALARM_START
MINOR_SMART_VEHICLE_ALARM_STOP = _hk_struct_test.MINOR_SMART_VEHICLE_ALARM_STOP
MINOR_THERMAL_FIREDETECTION = _hk_struct_test.MINOR_THERMAL_FIREDETECTION
MINOR_THERMAL_FIREDETECTION_END = _hk_struct_test.MINOR_THERMAL_FIREDETECTION_END
MINOR_SMART_VANDALPROOF_BEGIN = _hk_struct_test.MINOR_SMART_VANDALPROOF_BEGIN
MINOR_SMART_VANDALPROOF_END = _hk_struct_test.MINOR_SMART_VANDALPROOF_END
MINOR_FACESNAP_MATCH_ALARM_START = _hk_struct_test.MINOR_FACESNAP_MATCH_ALARM_START
MINOR_FACESNAP_MATCH_ALARM_STOP = _hk_struct_test.MINOR_FACESNAP_MATCH_ALARM_STOP
MINOR_WHITELIST_FACESNAP_MATCH_ALARM_START = _hk_struct_test.MINOR_WHITELIST_FACESNAP_MATCH_ALARM_START
MINOR_WHITELIST_FACESNAP_MATCH_ALARM_STOP = _hk_struct_test.MINOR_WHITELIST_FACESNAP_MATCH_ALARM_STOP
MINOR_THERMAL_SHIPSDETECTION = _hk_struct_test.MINOR_THERMAL_SHIPSDETECTION
MINOR_THERMAL_THERMOMETRY_EARLYWARNING_BEGIN = _hk_struct_test.MINOR_THERMAL_THERMOMETRY_EARLYWARNING_BEGIN
MINOR_THERMAL_THERMOMETRY_EARLYWARNING_END = _hk_struct_test.MINOR_THERMAL_THERMOMETRY_EARLYWARNING_END
MINOR_THERMAL_THERMOMETRY_ALARM_BEGIN = _hk_struct_test.MINOR_THERMAL_THERMOMETRY_ALARM_BEGIN
MINOR_THERMAL_THERMOMETRY_ALARM_END = _hk_struct_test.MINOR_THERMAL_THERMOMETRY_ALARM_END
MINOR_THERMAL_THERMOMETRY_DIFF_ALARM_BEGIN = _hk_struct_test.MINOR_THERMAL_THERMOMETRY_DIFF_ALARM_BEGIN
MINOR_THERMAL_THERMOMETRY_DIFF_ALARM_END = _hk_struct_test.MINOR_THERMAL_THERMOMETRY_DIFF_ALARM_END
MINOR_FACE_THERMOMETRY_ALARM = _hk_struct_test.MINOR_FACE_THERMOMETRY_ALARM
MINOR_SMART_DENSEFOGDETECTION_BEGIN = _hk_struct_test.MINOR_SMART_DENSEFOGDETECTION_BEGIN
MINOR_SMART_DENSEFOGDETECTION_END = _hk_struct_test.MINOR_SMART_DENSEFOGDETECTION_END
MINOR_RUNNING_ALARM = _hk_struct_test.MINOR_RUNNING_ALARM
MINOR_RETENTION_ALARM = _hk_struct_test.MINOR_RETENTION_ALARM
MINOR_SAFETY_HELMET_ALARM_START = _hk_struct_test.MINOR_SAFETY_HELMET_ALARM_START
MINOR_SAFETY_HELMET_ALARM_STOP = _hk_struct_test.MINOR_SAFETY_HELMET_ALARM_STOP
MINOR_HFPD_ALARM_START = _hk_struct_test.MINOR_HFPD_ALARM_START
MINOR_HFPD_ALARM_STOP = _hk_struct_test.MINOR_HFPD_ALARM_STOP
MINOR_MIXED_TARGET_ALARM_START = _hk_struct_test.MINOR_MIXED_TARGET_ALARM_START
MINOR_MIXED_TARGET_ALARM_STOP = _hk_struct_test.MINOR_MIXED_TARGET_ALARM_STOP
MINOR_VCA_PLAY_CELLPHONE_ALARM_BEGIN = _hk_struct_test.MINOR_VCA_PLAY_CELLPHONE_ALARM_BEGIN
MINOR_VCA_PLAY_CELLPHONE_ALARM_END = _hk_struct_test.MINOR_VCA_PLAY_CELLPHONE_ALARM_END
MINOR_VCA_GET_UP_ALARM_BEGIN = _hk_struct_test.MINOR_VCA_GET_UP_ALARM_BEGIN
MINOR_VCA_GET_UP_ALARM_END = _hk_struct_test.MINOR_VCA_GET_UP_ALARM_END
MINOR_VCA_ADV_REACH_HEIGHT_ALARM_BEGIN = _hk_struct_test.MINOR_VCA_ADV_REACH_HEIGHT_ALARM_BEGIN
MINOR_VCA_ADV_REACH_HEIGHT_ALARM_END = _hk_struct_test.MINOR_VCA_ADV_REACH_HEIGHT_ALARM_END
MINOR_VCA_TOILET_TARRY_ALARM_BEGIN = _hk_struct_test.MINOR_VCA_TOILET_TARRY_ALARM_BEGIN
MINOR_VCA_TOILET_TARRY_ALARM_END = _hk_struct_test.MINOR_VCA_TOILET_TARRY_ALARM_END
MINOR_HUMAN_RECOGNITION_ALARM_BEGIN = _hk_struct_test.MINOR_HUMAN_RECOGNITION_ALARM_BEGIN
MINOR_HUMAN_RECOGNITION_ALARM_END = _hk_struct_test.MINOR_HUMAN_RECOGNITION_ALARM_END
MINOR_STUDENTS_STOODUP_ALARM_BEGIN = _hk_struct_test.MINOR_STUDENTS_STOODUP_ALARM_BEGIN
MINOR_STUDENTS_STOODUP_ALARM_END = _hk_struct_test.MINOR_STUDENTS_STOODUP_ALARM_END
MINOR_FRAMES_PEOPLE_COUNTING_ALARM = _hk_struct_test.MINOR_FRAMES_PEOPLE_COUNTING_ALARM
MINOR_FACE_SNAP_ALARM_BEGIN = _hk_struct_test.MINOR_FACE_SNAP_ALARM_BEGIN
MINOR_FACE_SNAP_ALARM_END = _hk_struct_test.MINOR_FACE_SNAP_ALARM_END
MINOR_TEACHER_BEHAVIOR_DETECT_ALARM_BEGIN = _hk_struct_test.MINOR_TEACHER_BEHAVIOR_DETECT_ALARM_BEGIN
MINOR_TEACHER_BEHAVIOR_DETECT_ALARM_END = _hk_struct_test.MINOR_TEACHER_BEHAVIOR_DETECT_ALARM_END
MINOR_PERIMETER_CAPTURE_ALARM_BEGIN = _hk_struct_test.MINOR_PERIMETER_CAPTURE_ALARM_BEGIN
MINOR_PERIMETER_CAPTURE_ALARM_END = _hk_struct_test.MINOR_PERIMETER_CAPTURE_ALARM_END
MINOR_UNREGISTERED_STREET_VENDOR_ALARM = _hk_struct_test.MINOR_UNREGISTERED_STREET_VENDOR_ALARM
MINOR_PERSON_QUEUE_TIME_ALARM_BEGIN = _hk_struct_test.MINOR_PERSON_QUEUE_TIME_ALARM_BEGIN
MINOR_PERSON_QUEUE_TIME_ALARM_END = _hk_struct_test.MINOR_PERSON_QUEUE_TIME_ALARM_END
MINOR_PERSON_QUEUE_COUNTING_ALARM_BEGIN = _hk_struct_test.MINOR_PERSON_QUEUE_COUNTING_ALARM_BEGIN
MINOR_PERSON_QUEUE_COUNTING_ALARM_END = _hk_struct_test.MINOR_PERSON_QUEUE_COUNTING_ALARM_END
MINOR_FACE_SNAP_MATCH_FAILURE_ALARM_START = _hk_struct_test.MINOR_FACE_SNAP_MATCH_FAILURE_ALARM_START
MINOR_FACE_SNAP_MATCH_FAILURE_ALARM_END = _hk_struct_test.MINOR_FACE_SNAP_MATCH_FAILURE_ALARM_END
MINOR_ACCESS_CONTROLLER_EVENT = _hk_struct_test.MINOR_ACCESS_CONTROLLER_EVENT
MINOR_VIDEO_INTERCOM_EVENT = _hk_struct_test.MINOR_VIDEO_INTERCOM_EVENT
MINOR_GJD_EVENT = _hk_struct_test.MINOR_GJD_EVENT
MINOR_LUMINITE_EVENT = _hk_struct_test.MINOR_LUMINITE_EVENT
MINOR_OPTEX_EVENT = _hk_struct_test.MINOR_OPTEX_EVENT
MINOR_CAMERA_DETECTOR_EVENT = _hk_struct_test.MINOR_CAMERA_DETECTOR_EVENT
MINOR_SECURITY_CONTROL_PANEL_EVENT = _hk_struct_test.MINOR_SECURITY_CONTROL_PANEL_EVENT
MINOR_VCA_SPACE_CHANGE_START = _hk_struct_test.MINOR_VCA_SPACE_CHANGE_START
MINOR_VCA_SPACE_CHANGE_STOP = _hk_struct_test.MINOR_VCA_SPACE_CHANGE_STOP
MINOR_MANUAL_ALARM = _hk_struct_test.MINOR_MANUAL_ALARM
MINOR_DETECTOR_ALARM = _hk_struct_test.MINOR_DETECTOR_ALARM
MINOR_LINKAGE_ALARM = _hk_struct_test.MINOR_LINKAGE_ALARM
MINOR_VCA_SITUATION_ANALYSIS_START = _hk_struct_test.MINOR_VCA_SITUATION_ANALYSIS_START
MINOR_VCA_SITUATION_ANALYSIS_STOP = _hk_struct_test.MINOR_VCA_SITUATION_ANALYSIS_STOP
MINOR_FIRE_ALARM = _hk_struct_test.MINOR_FIRE_ALARM
MINOR_SUPERVISE_ALARM = _hk_struct_test.MINOR_SUPERVISE_ALARM
MINOR_SHIELD_ALARM = _hk_struct_test.MINOR_SHIELD_ALARM
MINOR_ABNORMAL_ALARM = _hk_struct_test.MINOR_ABNORMAL_ALARM
MINOR_RESIDUAL_CURRENT_ALARM = _hk_struct_test.MINOR_RESIDUAL_CURRENT_ALARM
MINOR_TEMPERATURE_ALARM = _hk_struct_test.MINOR_TEMPERATURE_ALARM
MINOR_ARC_ALARM = _hk_struct_test.MINOR_ARC_ALARM
MINOR_VCA_YARD_TARRY_ALARM_BEGIN = _hk_struct_test.MINOR_VCA_YARD_TARRY_ALARM_BEGIN
MINOR_VCA_YARD_TARRY_ALARM_END = _hk_struct_test.MINOR_VCA_YARD_TARRY_ALARM_END
MINOR_VCA_KEY_PERSON_GET_UP_ALARM_BEGIN = _hk_struct_test.MINOR_VCA_KEY_PERSON_GET_UP_ALARM_BEGIN
MINOR_VCA_KEY_PERSON_GET_UP_ALARM_END = _hk_struct_test.MINOR_VCA_KEY_PERSON_GET_UP_ALARM_END
MINOR_VCA_SIT_QUIETLY_ALARM_BEGIN = _hk_struct_test.MINOR_VCA_SIT_QUIETLY_ALARM_BEGIN
MINOR_VCA_SIT_QUIETLY_ALARM_END = _hk_struct_test.MINOR_VCA_SIT_QUIETLY_ALARM_END
MINOR_VCA_STAND_UP_ALARM_BEGIN = _hk_struct_test.MINOR_VCA_STAND_UP_ALARM_BEGIN
MINOR_VCA_STAND_UP_ALARM_END = _hk_struct_test.MINOR_VCA_STAND_UP_ALARM_END
MINOR_VCA_REACH_HIGHT_ALARM_BEGIN = _hk_struct_test.MINOR_VCA_REACH_HIGHT_ALARM_BEGIN
MINOR_VCA_REACH_HIGHT_ALARM_END = _hk_struct_test.MINOR_VCA_REACH_HIGHT_ALARM_END
MINOR_LFPD_ALARM_START = _hk_struct_test.MINOR_LFPD_ALARM_START
MINOR_LFPD_ALARM_STOP = _hk_struct_test.MINOR_LFPD_ALARM_STOP
MINOR_DREDGERDETECTION_ALARM = _hk_struct_test.MINOR_DREDGERDETECTION_ALARM
MINOR_ALARMIN_SHORT_CIRCUIT = _hk_struct_test.MINOR_ALARMIN_SHORT_CIRCUIT
MINOR_ALARMIN_BROKEN_CIRCUIT = _hk_struct_test.MINOR_ALARMIN_BROKEN_CIRCUIT
MINOR_ALARMIN_EXCEPTION = _hk_struct_test.MINOR_ALARMIN_EXCEPTION
MINOR_ALARMIN_RESUME = _hk_struct_test.MINOR_ALARMIN_RESUME
MINOR_HOST_DESMANTLE_ALARM = _hk_struct_test.MINOR_HOST_DESMANTLE_ALARM
MINOR_HOST_DESMANTLE_RESUME = _hk_struct_test.MINOR_HOST_DESMANTLE_RESUME
MINOR_CARD_READER_DESMANTLE_ALARM = _hk_struct_test.MINOR_CARD_READER_DESMANTLE_ALARM
MINOR_CARD_READER_DESMANTLE_RESUME = _hk_struct_test.MINOR_CARD_READER_DESMANTLE_RESUME
MINOR_CASE_SENSOR_ALARM = _hk_struct_test.MINOR_CASE_SENSOR_ALARM
MINOR_CASE_SENSOR_RESUME = _hk_struct_test.MINOR_CASE_SENSOR_RESUME
MINOR_STRESS_ALARM = _hk_struct_test.MINOR_STRESS_ALARM
MINOR_OFFLINE_ECENT_NEARLY_FULL = _hk_struct_test.MINOR_OFFLINE_ECENT_NEARLY_FULL
MINOR_CARD_MAX_AUTHENTICATE_FAIL = _hk_struct_test.MINOR_CARD_MAX_AUTHENTICATE_FAIL
MINOR_SD_CARD_FULL = _hk_struct_test.MINOR_SD_CARD_FULL
MINOR_LINKAGE_CAPTURE_PIC = _hk_struct_test.MINOR_LINKAGE_CAPTURE_PIC
MINOR_SECURITY_MODULE_DESMANTLE_ALARM = _hk_struct_test.MINOR_SECURITY_MODULE_DESMANTLE_ALARM
MINOR_SECURITY_MODULE_DESMANTLE_RESUME = _hk_struct_test.MINOR_SECURITY_MODULE_DESMANTLE_RESUME
MINOR_POS_START_ALARM = _hk_struct_test.MINOR_POS_START_ALARM
MINOR_POS_END_ALARM = _hk_struct_test.MINOR_POS_END_ALARM
MINOR_FACE_IMAGE_QUALITY_LOW = _hk_struct_test.MINOR_FACE_IMAGE_QUALITY_LOW
MINOR_FINGE_RPRINT_QUALITY_LOW = _hk_struct_test.MINOR_FINGE_RPRINT_QUALITY_LOW
MINOR_FIRE_IMPORT_SHORT_CIRCUIT = _hk_struct_test.MINOR_FIRE_IMPORT_SHORT_CIRCUIT
MINOR_FIRE_IMPORT_BROKEN_CIRCUIT = _hk_struct_test.MINOR_FIRE_IMPORT_BROKEN_CIRCUIT
MINOR_FIRE_IMPORT_RESUME = _hk_struct_test.MINOR_FIRE_IMPORT_RESUME
MINOR_FIRE_BUTTON_TRIGGER = _hk_struct_test.MINOR_FIRE_BUTTON_TRIGGER
MINOR_FIRE_BUTTON_RESUME = _hk_struct_test.MINOR_FIRE_BUTTON_RESUME
MINOR_MAINTENANCE_BUTTON_TRIGGER = _hk_struct_test.MINOR_MAINTENANCE_BUTTON_TRIGGER
MINOR_MAINTENANCE_BUTTON_RESUME = _hk_struct_test.MINOR_MAINTENANCE_BUTTON_RESUME
MINOR_EMERGENCY_BUTTON_TRIGGER = _hk_struct_test.MINOR_EMERGENCY_BUTTON_TRIGGER
MINOR_EMERGENCY_BUTTON_RESUME = _hk_struct_test.MINOR_EMERGENCY_BUTTON_RESUME
MINOR_DISTRACT_CONTROLLER_ALARM = _hk_struct_test.MINOR_DISTRACT_CONTROLLER_ALARM
MINOR_DISTRACT_CONTROLLER_RESUME = _hk_struct_test.MINOR_DISTRACT_CONTROLLER_RESUME
MINOR_PERSON_DENSITY_DETECTION_START = _hk_struct_test.MINOR_PERSON_DENSITY_DETECTION_START
MINOR_PERSON_DENSITY_DETECTION_END = _hk_struct_test.MINOR_PERSON_DENSITY_DETECTION_END
MINOR_CHANNEL_CONTROLLER_DESMANTLE_ALARM = _hk_struct_test.MINOR_CHANNEL_CONTROLLER_DESMANTLE_ALARM
MINOR_CHANNEL_CONTROLLER_DESMANTLE_RESUME = _hk_struct_test.MINOR_CHANNEL_CONTROLLER_DESMANTLE_RESUME
MINOR_CHANNEL_CONTROLLER_FIRE_IMPORT_ALARM = _hk_struct_test.MINOR_CHANNEL_CONTROLLER_FIRE_IMPORT_ALARM
MINOR_CHANNEL_CONTROLLER_FIRE_IMPORT_RESUME = _hk_struct_test.MINOR_CHANNEL_CONTROLLER_FIRE_IMPORT_RESUME
MINOR_HEART_RATE_ABNORMAL_BEGIN = _hk_struct_test.MINOR_HEART_RATE_ABNORMAL_BEGIN
MINOR_HEART_RATE_ABNORMAL_END = _hk_struct_test.MINOR_HEART_RATE_ABNORMAL_END
MINOR_BLOOD_OXYGEN_ABNORMAL_BEGIN = _hk_struct_test.MINOR_BLOOD_OXYGEN_ABNORMAL_BEGIN
MINOR_BLOOD_OXYGEN_ABNORMAL_END = _hk_struct_test.MINOR_BLOOD_OXYGEN_ABNORMAL_END
MINOR_SYSTOLIC_BLOOD_PRESSURE_ABNORMAL_BEGIN = _hk_struct_test.MINOR_SYSTOLIC_BLOOD_PRESSURE_ABNORMAL_BEGIN
MINOR_SYSTOLIC_BLOOD_PRESSURE_ABNORMAL_END = _hk_struct_test.MINOR_SYSTOLIC_BLOOD_PRESSURE_ABNORMAL_END
MINOR_DIASTOLIC_BLOOD_PRESSURE_ABNORMAL_BEGIN = _hk_struct_test.MINOR_DIASTOLIC_BLOOD_PRESSURE_ABNORMAL_BEGIN
MINOR_DIASTOLIC_BLOOD_PRESSURE_ABNORMAL_END = _hk_struct_test.MINOR_DIASTOLIC_BLOOD_PRESSURE_ABNORMAL_END
MINOR_VCA_LEAVE_POSITION_START = _hk_struct_test.MINOR_VCA_LEAVE_POSITION_START
MINOR_VCA_LEAVE_POSITION_STOP = _hk_struct_test.MINOR_VCA_LEAVE_POSITION_STOP
MINOR_VCA_STOOODUP_START = _hk_struct_test.MINOR_VCA_STOOODUP_START
MINOR_VCA_STOOODUP_STOP = _hk_struct_test.MINOR_VCA_STOOODUP_STOP
MINOR_VCA_PEOPLENUM_CHANGE_START = _hk_struct_test.MINOR_VCA_PEOPLENUM_CHANGE_START
MINOR_VCA_PEOPLENUM_CHANGE_STOP = _hk_struct_test.MINOR_VCA_PEOPLENUM_CHANGE_STOP
MINOR_VCA_RUNNING_START = _hk_struct_test.MINOR_VCA_RUNNING_START
MINOR_VCA_RUNNING_STOP = _hk_struct_test.MINOR_VCA_RUNNING_STOP
MINOR_VCA_VIOLENT_MOTION_START = _hk_struct_test.MINOR_VCA_VIOLENT_MOTION_START
MINOR_VCA_VIOLENT_MOTION_STOP = _hk_struct_test.MINOR_VCA_VIOLENT_MOTION_STOP
MINOR_VCA_FAIL_DOWN_START = _hk_struct_test.MINOR_VCA_FAIL_DOWN_START
MINOR_VCA_FAIL_DOWN_STOP = _hk_struct_test.MINOR_VCA_FAIL_DOWN_STOP
MINOR_VCA_RETENTION_START = _hk_struct_test.MINOR_VCA_RETENTION_START
MINOR_VCA_RETENTION_STOP = _hk_struct_test.MINOR_VCA_RETENTION_STOP
MINOR_PRINTER_OUT_OF_PAPER = _hk_struct_test.MINOR_PRINTER_OUT_OF_PAPER
MINOR_LEGAL_EVENT_NEARLY_FULL = _hk_struct_test.MINOR_LEGAL_EVENT_NEARLY_FULL
MINOR_ALARM_CUSTOM1 = _hk_struct_test.MINOR_ALARM_CUSTOM1
MINOR_ALARM_CUSTOM2 = _hk_struct_test.MINOR_ALARM_CUSTOM2
MINOR_ALARM_CUSTOM3 = _hk_struct_test.MINOR_ALARM_CUSTOM3
MINOR_ALARM_CUSTOM4 = _hk_struct_test.MINOR_ALARM_CUSTOM4
MINOR_ALARM_CUSTOM5 = _hk_struct_test.MINOR_ALARM_CUSTOM5
MINOR_ALARM_CUSTOM6 = _hk_struct_test.MINOR_ALARM_CUSTOM6
MINOR_ALARM_CUSTOM7 = _hk_struct_test.MINOR_ALARM_CUSTOM7
MINOR_ALARM_CUSTOM8 = _hk_struct_test.MINOR_ALARM_CUSTOM8
MINOR_ALARM_CUSTOM9 = _hk_struct_test.MINOR_ALARM_CUSTOM9
MINOR_ALARM_CUSTOM10 = _hk_struct_test.MINOR_ALARM_CUSTOM10
MINOR_ALARM_CUSTOM11 = _hk_struct_test.MINOR_ALARM_CUSTOM11
MINOR_ALARM_CUSTOM12 = _hk_struct_test.MINOR_ALARM_CUSTOM12
MINOR_ALARM_CUSTOM13 = _hk_struct_test.MINOR_ALARM_CUSTOM13
MINOR_ALARM_CUSTOM14 = _hk_struct_test.MINOR_ALARM_CUSTOM14
MINOR_ALARM_CUSTOM15 = _hk_struct_test.MINOR_ALARM_CUSTOM15
MINOR_ALARM_CUSTOM16 = _hk_struct_test.MINOR_ALARM_CUSTOM16
MINOR_ALARM_CUSTOM17 = _hk_struct_test.MINOR_ALARM_CUSTOM17
MINOR_ALARM_CUSTOM18 = _hk_struct_test.MINOR_ALARM_CUSTOM18
MINOR_ALARM_CUSTOM19 = _hk_struct_test.MINOR_ALARM_CUSTOM19
MINOR_ALARM_CUSTOM20 = _hk_struct_test.MINOR_ALARM_CUSTOM20
MINOR_ALARM_CUSTOM21 = _hk_struct_test.MINOR_ALARM_CUSTOM21
MINOR_ALARM_CUSTOM22 = _hk_struct_test.MINOR_ALARM_CUSTOM22
MINOR_ALARM_CUSTOM23 = _hk_struct_test.MINOR_ALARM_CUSTOM23
MINOR_ALARM_CUSTOM24 = _hk_struct_test.MINOR_ALARM_CUSTOM24
MINOR_ALARM_CUSTOM25 = _hk_struct_test.MINOR_ALARM_CUSTOM25
MINOR_ALARM_CUSTOM26 = _hk_struct_test.MINOR_ALARM_CUSTOM26
MINOR_ALARM_CUSTOM27 = _hk_struct_test.MINOR_ALARM_CUSTOM27
MINOR_ALARM_CUSTOM28 = _hk_struct_test.MINOR_ALARM_CUSTOM28
MINOR_ALARM_CUSTOM29 = _hk_struct_test.MINOR_ALARM_CUSTOM29
MINOR_ALARM_CUSTOM30 = _hk_struct_test.MINOR_ALARM_CUSTOM30
MINOR_ALARM_CUSTOM31 = _hk_struct_test.MINOR_ALARM_CUSTOM31
MINOR_ALARM_CUSTOM32 = _hk_struct_test.MINOR_ALARM_CUSTOM32
MINOR_ALARM_CUSTOM33 = _hk_struct_test.MINOR_ALARM_CUSTOM33
MINOR_ALARM_CUSTOM34 = _hk_struct_test.MINOR_ALARM_CUSTOM34
MINOR_ALARM_CUSTOM35 = _hk_struct_test.MINOR_ALARM_CUSTOM35
MINOR_ALARM_CUSTOM36 = _hk_struct_test.MINOR_ALARM_CUSTOM36
MINOR_ALARM_CUSTOM37 = _hk_struct_test.MINOR_ALARM_CUSTOM37
MINOR_ALARM_CUSTOM38 = _hk_struct_test.MINOR_ALARM_CUSTOM38
MINOR_ALARM_CUSTOM39 = _hk_struct_test.MINOR_ALARM_CUSTOM39
MINOR_ALARM_CUSTOM40 = _hk_struct_test.MINOR_ALARM_CUSTOM40
MINOR_ALARM_CUSTOM41 = _hk_struct_test.MINOR_ALARM_CUSTOM41
MINOR_ALARM_CUSTOM42 = _hk_struct_test.MINOR_ALARM_CUSTOM42
MINOR_ALARM_CUSTOM43 = _hk_struct_test.MINOR_ALARM_CUSTOM43
MINOR_ALARM_CUSTOM44 = _hk_struct_test.MINOR_ALARM_CUSTOM44
MINOR_ALARM_CUSTOM45 = _hk_struct_test.MINOR_ALARM_CUSTOM45
MINOR_ALARM_CUSTOM46 = _hk_struct_test.MINOR_ALARM_CUSTOM46
MINOR_ALARM_CUSTOM47 = _hk_struct_test.MINOR_ALARM_CUSTOM47
MINOR_ALARM_CUSTOM48 = _hk_struct_test.MINOR_ALARM_CUSTOM48
MINOR_ALARM_CUSTOM49 = _hk_struct_test.MINOR_ALARM_CUSTOM49
MINOR_ALARM_CUSTOM50 = _hk_struct_test.MINOR_ALARM_CUSTOM50
MINOR_ALARM_CUSTOM51 = _hk_struct_test.MINOR_ALARM_CUSTOM51
MINOR_ALARM_CUSTOM52 = _hk_struct_test.MINOR_ALARM_CUSTOM52
MINOR_ALARM_CUSTOM53 = _hk_struct_test.MINOR_ALARM_CUSTOM53
MINOR_ALARM_CUSTOM54 = _hk_struct_test.MINOR_ALARM_CUSTOM54
MINOR_ALARM_CUSTOM55 = _hk_struct_test.MINOR_ALARM_CUSTOM55
MINOR_ALARM_CUSTOM56 = _hk_struct_test.MINOR_ALARM_CUSTOM56
MINOR_ALARM_CUSTOM57 = _hk_struct_test.MINOR_ALARM_CUSTOM57
MINOR_ALARM_CUSTOM58 = _hk_struct_test.MINOR_ALARM_CUSTOM58
MINOR_ALARM_CUSTOM59 = _hk_struct_test.MINOR_ALARM_CUSTOM59
MINOR_ALARM_CUSTOM60 = _hk_struct_test.MINOR_ALARM_CUSTOM60
MINOR_ALARM_CUSTOM61 = _hk_struct_test.MINOR_ALARM_CUSTOM61
MINOR_ALARM_CUSTOM62 = _hk_struct_test.MINOR_ALARM_CUSTOM62
MINOR_ALARM_CUSTOM63 = _hk_struct_test.MINOR_ALARM_CUSTOM63
MINOR_ALARM_CUSTOM64 = _hk_struct_test.MINOR_ALARM_CUSTOM64
MINOR_LOCK_HIJIACK_FINGER_ALARM = _hk_struct_test.MINOR_LOCK_HIJIACK_FINGER_ALARM
MINOR_LOCK_HIJIACK_PASSWORD_ALARM = _hk_struct_test.MINOR_LOCK_HIJIACK_PASSWORD_ALARM
MINOR_LOCK_PRY_DOOR_ALARM = _hk_struct_test.MINOR_LOCK_PRY_DOOR_ALARM
MINOR_LOCK_LOCKED_ALARM = _hk_struct_test.MINOR_LOCK_LOCKED_ALARM
MINOR_LOCK_BATTERLOW_ALARM = _hk_struct_test.MINOR_LOCK_BATTERLOW_ALARM
MINOR_LOCK_BLACKLIST_DOOR_ALARM = _hk_struct_test.MINOR_LOCK_BLACKLIST_DOOR_ALARM
MINOR_LOCK_OFFLINE_ALARM = _hk_struct_test.MINOR_LOCK_OFFLINE_ALARM
MINOR_LOCK_UNCLOSED_ALARM = _hk_struct_test.MINOR_LOCK_UNCLOSED_ALARM
MINOR_LOCK_NO_HOME_ALARM = _hk_struct_test.MINOR_LOCK_NO_HOME_ALARM
MINOR_LOCK_MAGNETOMETER_ALARM = _hk_struct_test.MINOR_LOCK_MAGNETOMETER_ALARM
MINOR_LOCK_IR_DETECTOR_ALARM = _hk_struct_test.MINOR_LOCK_IR_DETECTOR_ALARM
MINOR_LOCK_FP_LOCKED_ALARM = _hk_struct_test.MINOR_LOCK_FP_LOCKED_ALARM
MINOR_LOCK_PASSWORD_LOCKED_ALARM = _hk_struct_test.MINOR_LOCK_PASSWORD_LOCKED_ALARM
MINOR_LOCK_HIJIACK_ALARM = _hk_struct_test.MINOR_LOCK_HIJIACK_ALARM
MINOR_ALARMHOST_SHORT_CIRCUIT = _hk_struct_test.MINOR_ALARMHOST_SHORT_CIRCUIT
MINOR_ALARMHOST_BROKEN_CIRCUIT = _hk_struct_test.MINOR_ALARMHOST_BROKEN_CIRCUIT
MINOR_ALARMHOST_ALARM_RESET = _hk_struct_test.MINOR_ALARMHOST_ALARM_RESET
MINOR_ALARMHOST_ALARM_NORMAL = _hk_struct_test.MINOR_ALARMHOST_ALARM_NORMAL
MINOR_ALARMHOST_PASSWORD_ERROR = _hk_struct_test.MINOR_ALARMHOST_PASSWORD_ERROR
MINOR_ALARMHOST_ID_CARD_ILLEGALLY = _hk_struct_test.MINOR_ALARMHOST_ID_CARD_ILLEGALLY
MINOR_ALARMHOST_KEYPAD_REMOVE = _hk_struct_test.MINOR_ALARMHOST_KEYPAD_REMOVE
MINOR_ALARMHOST_KEYPAD_REMOVE_RESTORE = _hk_struct_test.MINOR_ALARMHOST_KEYPAD_REMOVE_RESTORE
MINOR_ALARMHOST_BELOW_ALARM_LIMIT1 = _hk_struct_test.MINOR_ALARMHOST_BELOW_ALARM_LIMIT1
MINOR_ALARMHOST_BELOW_ALARM_LIMIT2 = _hk_struct_test.MINOR_ALARMHOST_BELOW_ALARM_LIMIT2
MINOR_ALARMHOST_BELOW_ALARM_LIMIT3 = _hk_struct_test.MINOR_ALARMHOST_BELOW_ALARM_LIMIT3
MINOR_ALARMHOST_BELOW_ALARM_LIMIT4 = _hk_struct_test.MINOR_ALARMHOST_BELOW_ALARM_LIMIT4
MINOR_ALARMHOST_ABOVE_ALARM_LIMIT1 = _hk_struct_test.MINOR_ALARMHOST_ABOVE_ALARM_LIMIT1
MINOR_ALARMHOST_ABOVE_ALARM_LIMIT2 = _hk_struct_test.MINOR_ALARMHOST_ABOVE_ALARM_LIMIT2
MINOR_ALARMHOST_ABOVE_ALARM_LIMIT3 = _hk_struct_test.MINOR_ALARMHOST_ABOVE_ALARM_LIMIT3
MINOR_ALARMHOST_ABOVE_ALARM_LIMIT4 = _hk_struct_test.MINOR_ALARMHOST_ABOVE_ALARM_LIMIT4
MINOR_ALARMHOST_VIRTUAL_DEFENCE_BANDIT = _hk_struct_test.MINOR_ALARMHOST_VIRTUAL_DEFENCE_BANDIT
MINOR_ALARMHOST_VIRTUAL_DEFENCE_FIRE = _hk_struct_test.MINOR_ALARMHOST_VIRTUAL_DEFENCE_FIRE
MINOR_ALARMHOST_VIRTUAL_DEFENCE_URGENT = _hk_struct_test.MINOR_ALARMHOST_VIRTUAL_DEFENCE_URGENT
MINOR_UPS_ALARM = _hk_struct_test.MINOR_UPS_ALARM
MINOR_ELECTRICITY_METER_ALARM = _hk_struct_test.MINOR_ELECTRICITY_METER_ALARM
MINOR_SWITCH_POWER_ALARM = _hk_struct_test.MINOR_SWITCH_POWER_ALARM
MINOR_GAS_DETECT_SYS_ALARM = _hk_struct_test.MINOR_GAS_DETECT_SYS_ALARM
MINOR_TRANSFORMER_TEMPRATURE_ALARM = _hk_struct_test.MINOR_TRANSFORMER_TEMPRATURE_ALARM
MINOR_TEMP_HUMI_ALARM = _hk_struct_test.MINOR_TEMP_HUMI_ALARM
MINOR_UPS_ALARM_RESTORE = _hk_struct_test.MINOR_UPS_ALARM_RESTORE
MINOR_ELECTRICITY_METER_ALARM_RESTORE = _hk_struct_test.MINOR_ELECTRICITY_METER_ALARM_RESTORE
MINOR_SWITCH_POWER_ALARM_RESTORE = _hk_struct_test.MINOR_SWITCH_POWER_ALARM_RESTORE
MINOR_GAS_DETECT_SYS_ALARM_RESTORE = _hk_struct_test.MINOR_GAS_DETECT_SYS_ALARM_RESTORE
MINOR_TRANSFORMER_TEMPRATURE_ALARM_RESTORE = _hk_struct_test.MINOR_TRANSFORMER_TEMPRATURE_ALARM_RESTORE
MINOR_TEMP_HUMI_ALARM_RESTORE = _hk_struct_test.MINOR_TEMP_HUMI_ALARM_RESTORE
MINOR_WATER_LEVEL_SENSOR_ALARM = _hk_struct_test.MINOR_WATER_LEVEL_SENSOR_ALARM
MINOR_WATER_LEVEL_SENSOR_ALARM_RESTORE = _hk_struct_test.MINOR_WATER_LEVEL_SENSOR_ALARM_RESTORE
MINOR_DUST_NOISE_ALARM = _hk_struct_test.MINOR_DUST_NOISE_ALARM
MINOR_DUST_NOISE_ALARM_RESTORE = _hk_struct_test.MINOR_DUST_NOISE_ALARM_RESTORE
MINOR_ENVIRONMENTAL_LOGGER_ALARM = _hk_struct_test.MINOR_ENVIRONMENTAL_LOGGER_ALARM
MINOR_ENVIRONMENTAL_LOGGER_ALARM_RESTORE = _hk_struct_test.MINOR_ENVIRONMENTAL_LOGGER_ALARM_RESTORE
MINOR_TRIGGER_TAMPER = _hk_struct_test.MINOR_TRIGGER_TAMPER
MINOR_TRIGGER_TAMPER_RESTORE = _hk_struct_test.MINOR_TRIGGER_TAMPER_RESTORE
MINOR_EMERGENCY_CALL_HELP_ALARM = _hk_struct_test.MINOR_EMERGENCY_CALL_HELP_ALARM
MINOR_EMERGENCY_CALL_HELP_ALARM_RESTORE = _hk_struct_test.MINOR_EMERGENCY_CALL_HELP_ALARM_RESTORE
MINOR_CONSULTING_ALARM = _hk_struct_test.MINOR_CONSULTING_ALARM
MINOR_CONSULTING_ALARM_RESTORE = _hk_struct_test.MINOR_CONSULTING_ALARM_RESTORE
MINOR_ALARMHOST_ZONE_MODULE_REMOVE = _hk_struct_test.MINOR_ALARMHOST_ZONE_MODULE_REMOVE
MINOR_ALARMHOST_ZONE_MODULE_RESET = _hk_struct_test.MINOR_ALARMHOST_ZONE_MODULE_RESET
MINOR_ALARMHOST_ALARM_WIND_SPEED_ALARM = _hk_struct_test.MINOR_ALARMHOST_ALARM_WIND_SPEED_ALARM
MINOR_ALARMHOST_ALARM_WIND_SPEED_ALARM_RESTORE = _hk_struct_test.MINOR_ALARMHOST_ALARM_WIND_SPEED_ALARM_RESTORE
MINOR_ALARMHOST_ALARM_GENERATE_OUTPUT_ALARM = _hk_struct_test.MINOR_ALARMHOST_ALARM_GENERATE_OUTPUT_ALARM
MINOR_ALARMHOST_ALARM_GENERATE_OUTPUT_RESTORE = _hk_struct_test.MINOR_ALARMHOST_ALARM_GENERATE_OUTPUT_RESTORE
MINOR_ALARMHOST_ALARM_SOAK_ALARM = _hk_struct_test.MINOR_ALARMHOST_ALARM_SOAK_ALARM
MINOR_ALARMHOST_ALARM_SOAK_ALARM_RESTORE = _hk_struct_test.MINOR_ALARMHOST_ALARM_SOAK_ALARM_RESTORE
MINOR_ALARMHOST_ALARM_SOLAR_POWER_ALARM = _hk_struct_test.MINOR_ALARMHOST_ALARM_SOLAR_POWER_ALARM
MINOR_ALARMHOST_ALARM_SOLAR_POWER_ALARM_RESTORE = _hk_struct_test.MINOR_ALARMHOST_ALARM_SOLAR_POWER_ALARM_RESTORE
MINOR_ALARMHOST_ALARM_SF6_ALARM = _hk_struct_test.MINOR_ALARMHOST_ALARM_SF6_ALARM
MINOR_ALARMHOST_ALARM_SF6_ALARM_RESTORE = _hk_struct_test.MINOR_ALARMHOST_ALARM_SF6_ALARM_RESTORE
MINOR_ALARMHOST_ALARM_WEIGHT_ALARM = _hk_struct_test.MINOR_ALARMHOST_ALARM_WEIGHT_ALARM
MINOR_ALARMHOST_ALARM_WEIGHT_ALARM_RESTORE = _hk_struct_test.MINOR_ALARMHOST_ALARM_WEIGHT_ALARM_RESTORE
MINOR_ALARMHOST_ALARM_WEATHER_ALARM = _hk_struct_test.MINOR_ALARMHOST_ALARM_WEATHER_ALARM
MINOR_ALARMHOST_ALARM_WEATHER_ALARM_RESTORE = _hk_struct_test.MINOR_ALARMHOST_ALARM_WEATHER_ALARM_RESTORE
MINOR_ALARMHOST_ALARM_FUEL_GAS_ALARM = _hk_struct_test.MINOR_ALARMHOST_ALARM_FUEL_GAS_ALARM
MINOR_ALARMHOST_ALARM_FUEL_GAS_ALARM_RESTORE = _hk_struct_test.MINOR_ALARMHOST_ALARM_FUEL_GAS_ALARM_RESTORE
MINOR_ALARMHOST_ALARM_FIRE_ALARM = _hk_struct_test.MINOR_ALARMHOST_ALARM_FIRE_ALARM
MINOR_ALARMHOST_ALARM_FIRE_ALARM_RESTORE = _hk_struct_test.MINOR_ALARMHOST_ALARM_FIRE_ALARM_RESTORE
MINOR_ALARMHOST_WIRELESS_OUTPUT_MODULE_REMOVE = _hk_struct_test.MINOR_ALARMHOST_WIRELESS_OUTPUT_MODULE_REMOVE
MINOR_ALARMHOST_WIRELESS_OUTPUT_MODULE_RESET = _hk_struct_test.MINOR_ALARMHOST_WIRELESS_OUTPUT_MODULE_RESET
MINOR_ALARMHOST_WIRELESS_REPEATER_MODULE_REMOVE = _hk_struct_test.MINOR_ALARMHOST_WIRELESS_REPEATER_MODULE_REMOVE
MINOR_ALARMHOST_WIRELESS_SIREN_MODULE_REMOVE = _hk_struct_test.MINOR_ALARMHOST_WIRELESS_SIREN_MODULE_REMOVE
MINOR_ALARMHOST_WIRELESS_SIREN_MODULE_RESET = _hk_struct_test.MINOR_ALARMHOST_WIRELESS_SIREN_MODULE_RESET
MINOR_RS485_DEV_ALARM = _hk_struct_test.MINOR_RS485_DEV_ALARM
MINOR_RS485_DEV_RESTORE = _hk_struct_test.MINOR_RS485_DEV_RESTORE
MINOR_ALARMHOST_ALARM_HOST_ALARM = _hk_struct_test.MINOR_ALARMHOST_ALARM_HOST_ALARM
MINOR_ALARMHOST_ALARM_HOST_RESTORE = _hk_struct_test.MINOR_ALARMHOST_ALARM_HOST_RESTORE
MINOR_AIR_CONDITION_DEV_ALARM = _hk_struct_test.MINOR_AIR_CONDITION_DEV_ALARM
MINOR_AIR_CONDITION_DEV_RESTORE = _hk_struct_test.MINOR_AIR_CONDITION_DEV_RESTORE
MINOR_ALARMHOST_WIRELESS_REPEATER_MODULE_RESET = _hk_struct_test.MINOR_ALARMHOST_WIRELESS_REPEATER_MODULE_RESET
MINOR_ALARM_ELEVATOR_BREAKDOWN = _hk_struct_test.MINOR_ALARM_ELEVATOR_BREAKDOWN
MINOR_WATER_PRESSURE_SENSOR_ALARM = _hk_struct_test.MINOR_WATER_PRESSURE_SENSOR_ALARM
MINOR_FLOW_SENSOR_ALARM = _hk_struct_test.MINOR_FLOW_SENSOR_ALARM
MINOR_SENSOR_LINKAGE_ALARM = _hk_struct_test.MINOR_SENSOR_LINKAGE_ALARM
MINOR_SENSOR_LINKAGE_ALARM_RESTORE = _hk_struct_test.MINOR_SENSOR_LINKAGE_ALARM_RESTORE
MAJOR_EXCEPTION = _hk_struct_test.MAJOR_EXCEPTION
MINOR_SUBSYSTEM_ERROR = _hk_struct_test.MINOR_SUBSYSTEM_ERROR
MINOR_RAID_ERROR = _hk_struct_test.MINOR_RAID_ERROR
MINOR_VI_LOST = _hk_struct_test.MINOR_VI_LOST
MINOR_ILLEGAL_ACCESS = _hk_struct_test.MINOR_ILLEGAL_ACCESS
MINOR_HD_FULL = _hk_struct_test.MINOR_HD_FULL
MINOR_HD_ERROR = _hk_struct_test.MINOR_HD_ERROR
MINOR_DCD_LOST = _hk_struct_test.MINOR_DCD_LOST
MINOR_IP_CONFLICT = _hk_struct_test.MINOR_IP_CONFLICT
MINOR_NET_BROKEN = _hk_struct_test.MINOR_NET_BROKEN
MINOR_REC_ERROR = _hk_struct_test.MINOR_REC_ERROR
MINOR_IPC_NO_LINK = _hk_struct_test.MINOR_IPC_NO_LINK
MINOR_VI_EXCEPTION = _hk_struct_test.MINOR_VI_EXCEPTION
MINOR_IPC_IP_CONFLICT = _hk_struct_test.MINOR_IPC_IP_CONFLICT
MINOR_SENCE_EXCEPTION = _hk_struct_test.MINOR_SENCE_EXCEPTION
MINOR_PIC_REC_ERROR = _hk_struct_test.MINOR_PIC_REC_ERROR
MINOR_VI_MISMATCH = _hk_struct_test.MINOR_VI_MISMATCH
MINOR_RESOLUTION_MISMATCH = _hk_struct_test.MINOR_RESOLUTION_MISMATCH
MINOR_FANABNORMAL = _hk_struct_test.MINOR_FANABNORMAL
MINOR_FANRESUME = _hk_struct_test.MINOR_FANRESUME
MINOR_SUBSYSTEM_ABNORMALREBOOT = _hk_struct_test.MINOR_SUBSYSTEM_ABNORMALREBOOT
MINOR_MATRIX_STARTBUZZER = _hk_struct_test.MINOR_MATRIX_STARTBUZZER
MINOR_NET_ABNORMAL = _hk_struct_test.MINOR_NET_ABNORMAL
MINOR_MEM_ABNORMAL = _hk_struct_test.MINOR_MEM_ABNORMAL
MINOR_FILE_ABNORMAL = _hk_struct_test.MINOR_FILE_ABNORMAL
MINOR_PANEL_ABNORMAL = _hk_struct_test.MINOR_PANEL_ABNORMAL
MINOR_PANEL_RESUME = _hk_struct_test.MINOR_PANEL_RESUME
MINOR_RS485_DEVICE_ABNORMAL = _hk_struct_test.MINOR_RS485_DEVICE_ABNORMAL
MINOR_RS485_DEVICE_REVERT = _hk_struct_test.MINOR_RS485_DEVICE_REVERT
MINOR_SCREEN_SUBSYSTEM_ABNORMALREBOOT = _hk_struct_test.MINOR_SCREEN_SUBSYSTEM_ABNORMALREBOOT
MINOR_SCREEN_SUBSYSTEM_ABNORMALINSERT = _hk_struct_test.MINOR_SCREEN_SUBSYSTEM_ABNORMALINSERT
MINOR_SCREEN_SUBSYSTEM_ABNORMALPULLOUT = _hk_struct_test.MINOR_SCREEN_SUBSYSTEM_ABNORMALPULLOUT
MINOR_SCREEN_ABNARMALTEMPERATURE = _hk_struct_test.MINOR_SCREEN_ABNARMALTEMPERATURE
MINOR_HIGH_TEMPERATURE_PROTECT = _hk_struct_test.MINOR_HIGH_TEMPERATURE_PROTECT
MINOR_RECORD_OVERFLOW = _hk_struct_test.MINOR_RECORD_OVERFLOW
MINOR_DSP_ABNORMAL = _hk_struct_test.MINOR_DSP_ABNORMAL
MINOR_ANR_RECORD_FAIED = _hk_struct_test.MINOR_ANR_RECORD_FAIED
MINOR_SPARE_WORK_DEVICE_EXCEPT = _hk_struct_test.MINOR_SPARE_WORK_DEVICE_EXCEPT
MINOR_START_IPC_MAS_FAILED = _hk_struct_test.MINOR_START_IPC_MAS_FAILED
MINOR_IPCM_CRASH = _hk_struct_test.MINOR_IPCM_CRASH
MINOR_POE_POWER_EXCEPTION = _hk_struct_test.MINOR_POE_POWER_EXCEPTION
MINOR_UPLOAD_DATA_CS_EXCEPTION = _hk_struct_test.MINOR_UPLOAD_DATA_CS_EXCEPTION
MINOR_DIAL_EXCEPTION = _hk_struct_test.MINOR_DIAL_EXCEPTION
MINOR_DEV_EXCEPTION_OFFLINE = _hk_struct_test.MINOR_DEV_EXCEPTION_OFFLINE
MINOR_UPGRADEFAIL = _hk_struct_test.MINOR_UPGRADEFAIL
MINOR_AI_LOST = _hk_struct_test.MINOR_AI_LOST
MINOR_SYNC_IPC_PASSWD = _hk_struct_test.MINOR_SYNC_IPC_PASSWD
MINOR_EZVIZ_OFFLINE = _hk_struct_test.MINOR_EZVIZ_OFFLINE
MINOR_VQD_ABNORMAL = _hk_struct_test.MINOR_VQD_ABNORMAL
MINOR_ACCESSORIES_PLATE = _hk_struct_test.MINOR_ACCESSORIES_PLATE
MINOR_KMS_EXPAMSION_DISK_LOST = _hk_struct_test.MINOR_KMS_EXPAMSION_DISK_LOST
MINOR_ABNORMAL_PORT = _hk_struct_test.MINOR_ABNORMAL_PORT
MINOR_CAMERA_ANGLE_ANOMALY = _hk_struct_test.MINOR_CAMERA_ANGLE_ANOMALY
MINOR_DATA_DISK_ERROE = _hk_struct_test.MINOR_DATA_DISK_ERROE
MINOR_INTELLIGENT_SYSTEM_RUNNING_ERROR = _hk_struct_test.MINOR_INTELLIGENT_SYSTEM_RUNNING_ERROR
MINOR_FACESNAP_RESOLUTION_OVERFLOW = _hk_struct_test.MINOR_FACESNAP_RESOLUTION_OVERFLOW
MINOR_SMD_RESOLUTION_OVERFLOW = _hk_struct_test.MINOR_SMD_RESOLUTION_OVERFLOW
MINOR_AUDIO_LOSS_EXCEPTION = _hk_struct_test.MINOR_AUDIO_LOSS_EXCEPTION
MINOR_SAFETY_HELMET_EXCEPTION = _hk_struct_test.MINOR_SAFETY_HELMET_EXCEPTION
MINOR_VCA_PIC_LENGTH_OVERFLOW = _hk_struct_test.MINOR_VCA_PIC_LENGTH_OVERFLOW
MINOR_FACE_MODEL_EXCEPTION = _hk_struct_test.MINOR_FACE_MODEL_EXCEPTION
MINOR_SSD_EXCEPTION = _hk_struct_test.MINOR_SSD_EXCEPTION
MINOR_CLUSTER_DEVICE_OFFLINE = _hk_struct_test.MINOR_CLUSTER_DEVICE_OFFLINE
MINOR_CLUSTER_CONFIG_FAILED = _hk_struct_test.MINOR_CLUSTER_CONFIG_FAILED
MINOR_CLUSTER_DISASTER_TOLERANCE_EXCEPT = _hk_struct_test.MINOR_CLUSTER_DISASTER_TOLERANCE_EXCEPT
MINOR_CLUSTER_STORFULL_EXCEPTION = _hk_struct_test.MINOR_CLUSTER_STORFULL_EXCEPTION
MINOR_CLUSTER_VERSION_EXCEPTION = _hk_struct_test.MINOR_CLUSTER_VERSION_EXCEPTION
MINOR_CLUSTER_OFFLINENODE_EXCEPTION = _hk_struct_test.MINOR_CLUSTER_OFFLINENODE_EXCEPTION
MINOR_CLUSTER_RECORDCYCLE_EXCEPTION = _hk_struct_test.MINOR_CLUSTER_RECORDCYCLE_EXCEPTION
MINOR_CLUSTER_IPCTRANSFER_EXCEPTION = _hk_struct_test.MINOR_CLUSTER_IPCTRANSFER_EXCEPTION
MINOR_CLUSTER_IPCONFLICT_EXCEPTION = _hk_struct_test.MINOR_CLUSTER_IPCONFLICT_EXCEPTION
MINOR_GET_SUB_STREAM_FAILURE = _hk_struct_test.MINOR_GET_SUB_STREAM_FAILURE
MINOR_HDD_SHM_DETECT_EXCEPTION = _hk_struct_test.MINOR_HDD_SHM_DETECT_EXCEPTION
MINOR_DEVICE_FORTIFY_FAILURE = _hk_struct_test.MINOR_DEVICE_FORTIFY_FAILURE
MINOR_EVENT_UPLOAD_EXCEPTION = _hk_struct_test.MINOR_EVENT_UPLOAD_EXCEPTION
MINOR_LORA_EXCEPTION = _hk_struct_test.MINOR_LORA_EXCEPTION
MINOR_AK_OR_SK_IS_EMPTY = _hk_struct_test.MINOR_AK_OR_SK_IS_EMPTY
MINOR_HIGH_HD_TEMPERATURE = _hk_struct_test.MINOR_HIGH_HD_TEMPERATURE
MINOR_LOW_HD_TEMPERATURE = _hk_struct_test.MINOR_LOW_HD_TEMPERATURE
MINOR_HD_IMPACT = _hk_struct_test.MINOR_HD_IMPACT
MINOR_HD_BAD_BLOCK = _hk_struct_test.MINOR_HD_BAD_BLOCK
MINOR_SEVERE_HD_FAILURE = _hk_struct_test.MINOR_SEVERE_HD_FAILURE
MINOR_RELEASE_FAILED = _hk_struct_test.MINOR_RELEASE_FAILED
MINOR_PORT_CONFLICT = _hk_struct_test.MINOR_PORT_CONFLICT
MINOR_MODULE_STARTUP_FAILED = _hk_struct_test.MINOR_MODULE_STARTUP_FAILED
MINOR_DEV_POWER_ON = _hk_struct_test.MINOR_DEV_POWER_ON
MINOR_DEV_POWER_OFF = _hk_struct_test.MINOR_DEV_POWER_OFF
MINOR_WATCH_DOG_RESET = _hk_struct_test.MINOR_WATCH_DOG_RESET
MINOR_LOW_BATTERY = _hk_struct_test.MINOR_LOW_BATTERY
MINOR_BATTERY_RESUME = _hk_struct_test.MINOR_BATTERY_RESUME
MINOR_AC_OFF = _hk_struct_test.MINOR_AC_OFF
MINOR_AC_RESUME = _hk_struct_test.MINOR_AC_RESUME
MINOR_NET_RESUME = _hk_struct_test.MINOR_NET_RESUME
MINOR_FLASH_ABNORMAL = _hk_struct_test.MINOR_FLASH_ABNORMAL
MINOR_CARD_READER_OFFLINE = _hk_struct_test.MINOR_CARD_READER_OFFLINE
MINOR_CARD_READER_RESUME = _hk_struct_test.MINOR_CARD_READER_RESUME
MINOR_INDICATOR_LIGHT_OFF = _hk_struct_test.MINOR_INDICATOR_LIGHT_OFF
MINOR_INDICATOR_LIGHT_RESUME = _hk_struct_test.MINOR_INDICATOR_LIGHT_RESUME
MINOR_CHANNEL_CONTROLLER_OFF = _hk_struct_test.MINOR_CHANNEL_CONTROLLER_OFF
MINOR_CHANNEL_CONTROLLER_RESUME = _hk_struct_test.MINOR_CHANNEL_CONTROLLER_RESUME
MINOR_SECURITY_MODULE_OFF = _hk_struct_test.MINOR_SECURITY_MODULE_OFF
MINOR_SECURITY_MODULE_RESUME = _hk_struct_test.MINOR_SECURITY_MODULE_RESUME
MINOR_BATTERY_ELECTRIC_LOW = _hk_struct_test.MINOR_BATTERY_ELECTRIC_LOW
MINOR_BATTERY_ELECTRIC_RESUME = _hk_struct_test.MINOR_BATTERY_ELECTRIC_RESUME
MINOR_LOCAL_CONTROL_NET_BROKEN = _hk_struct_test.MINOR_LOCAL_CONTROL_NET_BROKEN
MINOR_LOCAL_CONTROL_NET_RSUME = _hk_struct_test.MINOR_LOCAL_CONTROL_NET_RSUME
MINOR_MASTER_RS485_LOOPNODE_BROKEN = _hk_struct_test.MINOR_MASTER_RS485_LOOPNODE_BROKEN
MINOR_MASTER_RS485_LOOPNODE_RESUME = _hk_struct_test.MINOR_MASTER_RS485_LOOPNODE_RESUME
MINOR_LOCAL_CONTROL_OFFLINE = _hk_struct_test.MINOR_LOCAL_CONTROL_OFFLINE
MINOR_LOCAL_CONTROL_RESUME = _hk_struct_test.MINOR_LOCAL_CONTROL_RESUME
MINOR_LOCAL_DOWNSIDE_RS485_LOOPNODE_BROKEN = _hk_struct_test.MINOR_LOCAL_DOWNSIDE_RS485_LOOPNODE_BROKEN
MINOR_LOCAL_DOWNSIDE_RS485_LOOPNODE_RESUME = _hk_struct_test.MINOR_LOCAL_DOWNSIDE_RS485_LOOPNODE_RESUME
MINOR_DISTRACT_CONTROLLER_ONLINE = _hk_struct_test.MINOR_DISTRACT_CONTROLLER_ONLINE
MINOR_DISTRACT_CONTROLLER_OFFLINE = _hk_struct_test.MINOR_DISTRACT_CONTROLLER_OFFLINE
MINOR_ID_CARD_READER_NOT_CONNECT = _hk_struct_test.MINOR_ID_CARD_READER_NOT_CONNECT
MINOR_ID_CARD_READER_RESUME = _hk_struct_test.MINOR_ID_CARD_READER_RESUME
MINOR_FINGER_PRINT_MODULE_NOT_CONNECT = _hk_struct_test.MINOR_FINGER_PRINT_MODULE_NOT_CONNECT
MINOR_FINGER_PRINT_MODULE_RESUME = _hk_struct_test.MINOR_FINGER_PRINT_MODULE_RESUME
MINOR_CAMERA_NOT_CONNECT = _hk_struct_test.MINOR_CAMERA_NOT_CONNECT
MINOR_CAMERA_RESUME = _hk_struct_test.MINOR_CAMERA_RESUME
MINOR_COM_NOT_CONNECT = _hk_struct_test.MINOR_COM_NOT_CONNECT
MINOR_COM_RESUME = _hk_struct_test.MINOR_COM_RESUME
MINOR_DEVICE_NOT_AUTHORIZE = _hk_struct_test.MINOR_DEVICE_NOT_AUTHORIZE
MINOR_PEOPLE_AND_ID_CARD_DEVICE_ONLINE = _hk_struct_test.MINOR_PEOPLE_AND_ID_CARD_DEVICE_ONLINE
MINOR_PEOPLE_AND_ID_CARD_DEVICE_OFFLINE = _hk_struct_test.MINOR_PEOPLE_AND_ID_CARD_DEVICE_OFFLINE
MINOR_LOCAL_LOGIN_LOCK = _hk_struct_test.MINOR_LOCAL_LOGIN_LOCK
MINOR_LOCAL_LOGIN_UNLOCK = _hk_struct_test.MINOR_LOCAL_LOGIN_UNLOCK
MINOR_SUBMARINEBACK_COMM_BREAK = _hk_struct_test.MINOR_SUBMARINEBACK_COMM_BREAK
MINOR_SUBMARINEBACK_COMM_RESUME = _hk_struct_test.MINOR_SUBMARINEBACK_COMM_RESUME
MINOR_MOTOR_SENSOR_EXCEPTION = _hk_struct_test.MINOR_MOTOR_SENSOR_EXCEPTION
MINOR_CAN_BUS_EXCEPTION = _hk_struct_test.MINOR_CAN_BUS_EXCEPTION
MINOR_CAN_BUS_RESUME = _hk_struct_test.MINOR_CAN_BUS_RESUME
MINOR_GATE_TEMPERATURE_OVERRUN = _hk_struct_test.MINOR_GATE_TEMPERATURE_OVERRUN
MINOR_IR_EMITTER_EXCEPTION = _hk_struct_test.MINOR_IR_EMITTER_EXCEPTION
MINOR_IR_EMITTER_RESUME = _hk_struct_test.MINOR_IR_EMITTER_RESUME
MINOR_LAMP_BOARD_COMM_EXCEPTION = _hk_struct_test.MINOR_LAMP_BOARD_COMM_EXCEPTION
MINOR_LAMP_BOARD_COMM_RESUME = _hk_struct_test.MINOR_LAMP_BOARD_COMM_RESUME
MINOR_IR_ADAPTOR_COMM_EXCEPTION = _hk_struct_test.MINOR_IR_ADAPTOR_COMM_EXCEPTION
MINOR_IR_ADAPTOR_COMM_RESUME = _hk_struct_test.MINOR_IR_ADAPTOR_COMM_RESUME
MINOR_PRINTER_ONLINE = _hk_struct_test.MINOR_PRINTER_ONLINE
MINOR_PRINTER_OFFLINE = _hk_struct_test.MINOR_PRINTER_OFFLINE
MINOR_4G_MOUDLE_ONLINE = _hk_struct_test.MINOR_4G_MOUDLE_ONLINE
MINOR_4G_MOUDLE_OFFLINE = _hk_struct_test.MINOR_4G_MOUDLE_OFFLINE
MINOR_DSP_START_FAILED = _hk_struct_test.MINOR_DSP_START_FAILED
MINOR_SMART_REGULATION_NOT_ALLOWED = _hk_struct_test.MINOR_SMART_REGULATION_NOT_ALLOWED
MINOR_AUXILIARY_BOARD_OFFLINE = _hk_struct_test.MINOR_AUXILIARY_BOARD_OFFLINE
MINOR_AUXILIARY_BOARD_RESUME = _hk_struct_test.MINOR_AUXILIARY_BOARD_RESUME
MINOR_IDCARD_SECURITY_MOUDLE_EXCEPTION = _hk_struct_test.MINOR_IDCARD_SECURITY_MOUDLE_EXCEPTION
MINOR_IDCARD_SECURITY_MOUDLE_RESUME = _hk_struct_test.MINOR_IDCARD_SECURITY_MOUDLE_RESUME
MINOR_FP_PERIPHERAL_EXCEPTION = _hk_struct_test.MINOR_FP_PERIPHERAL_EXCEPTION
MINOR_FP_PERIPHERAL_RESUME = _hk_struct_test.MINOR_FP_PERIPHERAL_RESUME
MINOR_EXCEPTION_CUSTOM1 = _hk_struct_test.MINOR_EXCEPTION_CUSTOM1
MINOR_EXCEPTION_CUSTOM2 = _hk_struct_test.MINOR_EXCEPTION_CUSTOM2
MINOR_EXCEPTION_CUSTOM3 = _hk_struct_test.MINOR_EXCEPTION_CUSTOM3
MINOR_EXCEPTION_CUSTOM4 = _hk_struct_test.MINOR_EXCEPTION_CUSTOM4
MINOR_EXCEPTION_CUSTOM5 = _hk_struct_test.MINOR_EXCEPTION_CUSTOM5
MINOR_EXCEPTION_CUSTOM6 = _hk_struct_test.MINOR_EXCEPTION_CUSTOM6
MINOR_EXCEPTION_CUSTOM7 = _hk_struct_test.MINOR_EXCEPTION_CUSTOM7
MINOR_EXCEPTION_CUSTOM8 = _hk_struct_test.MINOR_EXCEPTION_CUSTOM8
MINOR_EXCEPTION_CUSTOM9 = _hk_struct_test.MINOR_EXCEPTION_CUSTOM9
MINOR_EXCEPTION_CUSTOM10 = _hk_struct_test.MINOR_EXCEPTION_CUSTOM10
MINOR_EXCEPTION_CUSTOM11 = _hk_struct_test.MINOR_EXCEPTION_CUSTOM11
MINOR_EXCEPTION_CUSTOM12 = _hk_struct_test.MINOR_EXCEPTION_CUSTOM12
MINOR_EXCEPTION_CUSTOM13 = _hk_struct_test.MINOR_EXCEPTION_CUSTOM13
MINOR_EXCEPTION_CUSTOM14 = _hk_struct_test.MINOR_EXCEPTION_CUSTOM14
MINOR_EXCEPTION_CUSTOM15 = _hk_struct_test.MINOR_EXCEPTION_CUSTOM15
MINOR_EXCEPTION_CUSTOM16 = _hk_struct_test.MINOR_EXCEPTION_CUSTOM16
MINOR_EXCEPTION_CUSTOM17 = _hk_struct_test.MINOR_EXCEPTION_CUSTOM17
MINOR_EXCEPTION_CUSTOM18 = _hk_struct_test.MINOR_EXCEPTION_CUSTOM18
MINOR_EXCEPTION_CUSTOM19 = _hk_struct_test.MINOR_EXCEPTION_CUSTOM19
MINOR_EXCEPTION_CUSTOM20 = _hk_struct_test.MINOR_EXCEPTION_CUSTOM20
MINOR_EXCEPTION_CUSTOM21 = _hk_struct_test.MINOR_EXCEPTION_CUSTOM21
MINOR_EXCEPTION_CUSTOM22 = _hk_struct_test.MINOR_EXCEPTION_CUSTOM22
MINOR_EXCEPTION_CUSTOM23 = _hk_struct_test.MINOR_EXCEPTION_CUSTOM23
MINOR_EXCEPTION_CUSTOM24 = _hk_struct_test.MINOR_EXCEPTION_CUSTOM24
MINOR_EXCEPTION_CUSTOM25 = _hk_struct_test.MINOR_EXCEPTION_CUSTOM25
MINOR_EXCEPTION_CUSTOM26 = _hk_struct_test.MINOR_EXCEPTION_CUSTOM26
MINOR_EXCEPTION_CUSTOM27 = _hk_struct_test.MINOR_EXCEPTION_CUSTOM27
MINOR_EXCEPTION_CUSTOM28 = _hk_struct_test.MINOR_EXCEPTION_CUSTOM28
MINOR_EXCEPTION_CUSTOM29 = _hk_struct_test.MINOR_EXCEPTION_CUSTOM29
MINOR_EXCEPTION_CUSTOM30 = _hk_struct_test.MINOR_EXCEPTION_CUSTOM30
MINOR_EXCEPTION_CUSTOM31 = _hk_struct_test.MINOR_EXCEPTION_CUSTOM31
MINOR_EXCEPTION_CUSTOM32 = _hk_struct_test.MINOR_EXCEPTION_CUSTOM32
MINOR_EXCEPTION_CUSTOM33 = _hk_struct_test.MINOR_EXCEPTION_CUSTOM33
MINOR_EXCEPTION_CUSTOM34 = _hk_struct_test.MINOR_EXCEPTION_CUSTOM34
MINOR_EXCEPTION_CUSTOM35 = _hk_struct_test.MINOR_EXCEPTION_CUSTOM35
MINOR_EXCEPTION_CUSTOM36 = _hk_struct_test.MINOR_EXCEPTION_CUSTOM36
MINOR_EXCEPTION_CUSTOM37 = _hk_struct_test.MINOR_EXCEPTION_CUSTOM37
MINOR_EXCEPTION_CUSTOM38 = _hk_struct_test.MINOR_EXCEPTION_CUSTOM38
MINOR_EXCEPTION_CUSTOM39 = _hk_struct_test.MINOR_EXCEPTION_CUSTOM39
MINOR_EXCEPTION_CUSTOM40 = _hk_struct_test.MINOR_EXCEPTION_CUSTOM40
MINOR_EXCEPTION_CUSTOM41 = _hk_struct_test.MINOR_EXCEPTION_CUSTOM41
MINOR_EXCEPTION_CUSTOM42 = _hk_struct_test.MINOR_EXCEPTION_CUSTOM42
MINOR_EXCEPTION_CUSTOM43 = _hk_struct_test.MINOR_EXCEPTION_CUSTOM43
MINOR_EXCEPTION_CUSTOM44 = _hk_struct_test.MINOR_EXCEPTION_CUSTOM44
MINOR_EXCEPTION_CUSTOM45 = _hk_struct_test.MINOR_EXCEPTION_CUSTOM45
MINOR_EXCEPTION_CUSTOM46 = _hk_struct_test.MINOR_EXCEPTION_CUSTOM46
MINOR_EXCEPTION_CUSTOM47 = _hk_struct_test.MINOR_EXCEPTION_CUSTOM47
MINOR_EXCEPTION_CUSTOM48 = _hk_struct_test.MINOR_EXCEPTION_CUSTOM48
MINOR_EXCEPTION_CUSTOM49 = _hk_struct_test.MINOR_EXCEPTION_CUSTOM49
MINOR_EXCEPTION_CUSTOM50 = _hk_struct_test.MINOR_EXCEPTION_CUSTOM50
MINOR_EXCEPTION_CUSTOM51 = _hk_struct_test.MINOR_EXCEPTION_CUSTOM51
MINOR_EXCEPTION_CUSTOM52 = _hk_struct_test.MINOR_EXCEPTION_CUSTOM52
MINOR_EXCEPTION_CUSTOM53 = _hk_struct_test.MINOR_EXCEPTION_CUSTOM53
MINOR_EXCEPTION_CUSTOM54 = _hk_struct_test.MINOR_EXCEPTION_CUSTOM54
MINOR_EXCEPTION_CUSTOM55 = _hk_struct_test.MINOR_EXCEPTION_CUSTOM55
MINOR_EXCEPTION_CUSTOM56 = _hk_struct_test.MINOR_EXCEPTION_CUSTOM56
MINOR_EXCEPTION_CUSTOM57 = _hk_struct_test.MINOR_EXCEPTION_CUSTOM57
MINOR_EXCEPTION_CUSTOM58 = _hk_struct_test.MINOR_EXCEPTION_CUSTOM58
MINOR_EXCEPTION_CUSTOM59 = _hk_struct_test.MINOR_EXCEPTION_CUSTOM59
MINOR_EXCEPTION_CUSTOM60 = _hk_struct_test.MINOR_EXCEPTION_CUSTOM60
MINOR_EXCEPTION_CUSTOM61 = _hk_struct_test.MINOR_EXCEPTION_CUSTOM61
MINOR_EXCEPTION_CUSTOM62 = _hk_struct_test.MINOR_EXCEPTION_CUSTOM62
MINOR_EXCEPTION_CUSTOM63 = _hk_struct_test.MINOR_EXCEPTION_CUSTOM63
MINOR_EXCEPTION_CUSTOM64 = _hk_struct_test.MINOR_EXCEPTION_CUSTOM64
MINOR_SWITCH_WIRED_NETWORK = _hk_struct_test.MINOR_SWITCH_WIRED_NETWORK
MINOR_SWITCH_WIRELESS_NETWORK = _hk_struct_test.MINOR_SWITCH_WIRELESS_NETWORK
MINOR_LOCK_ONLINE_RESUME = _hk_struct_test.MINOR_LOCK_ONLINE_RESUME
MINOR_SUBSYSTEM_IP_CONFLICT = _hk_struct_test.MINOR_SUBSYSTEM_IP_CONFLICT
MINOR_SUBSYSTEM_NET_BROKEN = _hk_struct_test.MINOR_SUBSYSTEM_NET_BROKEN
MINOR_FAN_ABNORMAL = _hk_struct_test.MINOR_FAN_ABNORMAL
MINOR_BACKPANEL_TEMPERATURE_ABNORMAL = _hk_struct_test.MINOR_BACKPANEL_TEMPERATURE_ABNORMAL
MINOR_SDCARD_ABNORMAL = _hk_struct_test.MINOR_SDCARD_ABNORMAL
MINOR_SDCARD_DAMAGE = _hk_struct_test.MINOR_SDCARD_DAMAGE
MINOR_POC_ABNORMAL = _hk_struct_test.MINOR_POC_ABNORMAL
MINOR_MAIN_POWER_FAULT = _hk_struct_test.MINOR_MAIN_POWER_FAULT
MINOR_BACK_UP_POWER_FAULT = _hk_struct_test.MINOR_BACK_UP_POWER_FAULT
MINOR_TAMPER_FAULT = _hk_struct_test.MINOR_TAMPER_FAULT
MINOR_RS232_FAULT = _hk_struct_test.MINOR_RS232_FAULT
MINOR_RS485_FAULT = _hk_struct_test.MINOR_RS485_FAULT
MINOR_LAN_STATUS_FAULT = _hk_struct_test.MINOR_LAN_STATUS_FAULT
MINOR_LAN_LINK1_FAULT = _hk_struct_test.MINOR_LAN_LINK1_FAULT
MINOR_LAN_LINK2_FAULT = _hk_struct_test.MINOR_LAN_LINK2_FAULT
MINOR_SIM_CARD_STATUS_FAULT = _hk_struct_test.MINOR_SIM_CARD_STATUS_FAULT
MINOR_4G_LINK1_FAULT = _hk_struct_test.MINOR_4G_LINK1_FAULT
MINOR_4G_LINK2_FAULT = _hk_struct_test.MINOR_4G_LINK2_FAULT
MINOR_OTHER_FAULT = _hk_struct_test.MINOR_OTHER_FAULT
MINOR_FIRE_CONTROL_CONNECT_FAULT = _hk_struct_test.MINOR_FIRE_CONTROL_CONNECT_FAULT
MINOR_SENSOR_SHORT_CIRCUIT = _hk_struct_test.MINOR_SENSOR_SHORT_CIRCUIT
MINOR_SENSOR_OPEN_CIRCUIT = _hk_struct_test.MINOR_SENSOR_OPEN_CIRCUIT
MINOR_SENSOR_MIS_CONNECT = _hk_struct_test.MINOR_SENSOR_MIS_CONNECT
MINOR_SENSOR_FAULT_RESTORE = _hk_struct_test.MINOR_SENSOR_FAULT_RESTORE
MINOR_DEVICE_FAULT = _hk_struct_test.MINOR_DEVICE_FAULT
MINOR_OVERVOLTAGE = _hk_struct_test.MINOR_OVERVOLTAGE
MINOR_UNDERVOLTAGE = _hk_struct_test.MINOR_UNDERVOLTAGE
MINOR_ALARMHOST_WDT_RESET = _hk_struct_test.MINOR_ALARMHOST_WDT_RESET
MINOR_ALARMHOST_RTC_EXCEPTION = _hk_struct_test.MINOR_ALARMHOST_RTC_EXCEPTION
MINOR_ALARMHOST_TEL_LINE_CONNECT_FAILURE = _hk_struct_test.MINOR_ALARMHOST_TEL_LINE_CONNECT_FAILURE
MINOR_ALARMHOST_TEL_LINE_CONNECT_RESTORE = _hk_struct_test.MINOR_ALARMHOST_TEL_LINE_CONNECT_RESTORE
MINOR_ALARMHOST_EXPANDER_BUS_LOSS = _hk_struct_test.MINOR_ALARMHOST_EXPANDER_BUS_LOSS
MINOR_ALARMHOST_EXPANDER_BUS_RESTORE = _hk_struct_test.MINOR_ALARMHOST_EXPANDER_BUS_RESTORE
MINOR_ALARMHOST_KEYPAD_BUS_LOSS = _hk_struct_test.MINOR_ALARMHOST_KEYPAD_BUS_LOSS
MINOR_ALARMHOST_KEYPAD_BUS_RESTORE = _hk_struct_test.MINOR_ALARMHOST_KEYPAD_BUS_RESTORE
MINOR_ALARMHOST_SENSOR_FAILURE = _hk_struct_test.MINOR_ALARMHOST_SENSOR_FAILURE
MINOR_ALARMHOST_SENSOR_RESTORE = _hk_struct_test.MINOR_ALARMHOST_SENSOR_RESTORE
MINOR_ALARMHOST_RS485_CONNECT_FAILURE = _hk_struct_test.MINOR_ALARMHOST_RS485_CONNECT_FAILURE
MINOR_ALARMHOST_RS485_CONNECT_RESTORE = _hk_struct_test.MINOR_ALARMHOST_RS485_CONNECT_RESTORE
MINOR_ALARMHOST_WIRED_NETWORK_ABNORMAL = _hk_struct_test.MINOR_ALARMHOST_WIRED_NETWORK_ABNORMAL
MINOR_ALARMHOST_WIRED_NETWORK_RESTORE = _hk_struct_test.MINOR_ALARMHOST_WIRED_NETWORK_RESTORE
MINOR_ALARMHOST_GPRS_ABNORMAL = _hk_struct_test.MINOR_ALARMHOST_GPRS_ABNORMAL
MINOR_ALARMHOST_GPRS_RESTORE = _hk_struct_test.MINOR_ALARMHOST_GPRS_RESTORE
MINOR_ALARMHOST_3G_ABNORMAL = _hk_struct_test.MINOR_ALARMHOST_3G_ABNORMAL
MINOR_ALARMHOST_3G_RESTORE = _hk_struct_test.MINOR_ALARMHOST_3G_RESTORE
MINOR_ALARMHOST_SIM_CARD_ABNORMAL = _hk_struct_test.MINOR_ALARMHOST_SIM_CARD_ABNORMAL
MINOR_ALARMHOST_SIM_CARD_RESTORE = _hk_struct_test.MINOR_ALARMHOST_SIM_CARD_RESTORE
MINOR_FORMAT_HDD_ERROR = _hk_struct_test.MINOR_FORMAT_HDD_ERROR
MINOR_USB_ERROR = _hk_struct_test.MINOR_USB_ERROR
MINOR_USB_RESTORE = _hk_struct_test.MINOR_USB_RESTORE
MINOR_PRINT_ERROR = _hk_struct_test.MINOR_PRINT_ERROR
MINOR_PRINT_RESTORE = _hk_struct_test.MINOR_PRINT_RESTORE
MINOR_ALARMHOST_SUBSYSTEM_COMMUNICATION_ERROR = _hk_struct_test.MINOR_ALARMHOST_SUBSYSTEM_COMMUNICATION_ERROR
MINOR_MCU_RESTART = _hk_struct_test.MINOR_MCU_RESTART
MINOR_GPRS_MODULE_FAULT = _hk_struct_test.MINOR_GPRS_MODULE_FAULT
MINOR_TELEPHONE_MODULE_FAULT = _hk_struct_test.MINOR_TELEPHONE_MODULE_FAULT
MINOR_WIFI_ABNORMAL = _hk_struct_test.MINOR_WIFI_ABNORMAL
MINOR_WIFI_RESTORE = _hk_struct_test.MINOR_WIFI_RESTORE
MINOR_RF_ABNORMAL = _hk_struct_test.MINOR_RF_ABNORMAL
MINOR_RF_RESTORE = _hk_struct_test.MINOR_RF_RESTORE
MINOR_DETECTOR_ONLINE = _hk_struct_test.MINOR_DETECTOR_ONLINE
MINOR_DETECTOR_OFFLINE = _hk_struct_test.MINOR_DETECTOR_OFFLINE
MINOR_DETECTOR_BATTERY_NORMAL = _hk_struct_test.MINOR_DETECTOR_BATTERY_NORMAL
MINOR_DETECTOR_BATTERY_LOW = _hk_struct_test.MINOR_DETECTOR_BATTERY_LOW
MINOR_DATA_TRAFFIC_OVERFLOW = _hk_struct_test.MINOR_DATA_TRAFFIC_OVERFLOW
MINOR_ALARMHOST_ZONE_MODULE_LOSS = _hk_struct_test.MINOR_ALARMHOST_ZONE_MODULE_LOSS
MINOR_ALARMHOST_ZONE_MODULE_RESTORE = _hk_struct_test.MINOR_ALARMHOST_ZONE_MODULE_RESTORE
MINOR_WIRELESS_OUTPUT_LOSS = _hk_struct_test.MINOR_WIRELESS_OUTPUT_LOSS
MINOR_WIRELESS_OUTPUT_RESTORE = _hk_struct_test.MINOR_WIRELESS_OUTPUT_RESTORE
MINOR_WIRELESS_REPEATER_LOSS = _hk_struct_test.MINOR_WIRELESS_REPEATER_LOSS
MINOR_WIRELESS_REPEATER_RESTORE = _hk_struct_test.MINOR_WIRELESS_REPEATER_RESTORE
MINOR_ALARMHOST_TRIGGER_MODULE_LOSS = _hk_struct_test.MINOR_ALARMHOST_TRIGGER_MODULE_LOSS
MINOR_ALARMHOST_TRIGGER_MODULE_RESTORE = _hk_struct_test.MINOR_ALARMHOST_TRIGGER_MODULE_RESTORE
MINOR_ALARMHOST_WIRELESS_SIREN_LOSS = _hk_struct_test.MINOR_ALARMHOST_WIRELESS_SIREN_LOSS
MINOR_ALARMHOST_WIRELESS_SIREN_RESTORE = _hk_struct_test.MINOR_ALARMHOST_WIRELESS_SIREN_RESTORE
MINOR_TX1_SUB_SYSTEM_EXCEPTION = _hk_struct_test.MINOR_TX1_SUB_SYSTEM_EXCEPTION
MINOR_TX1_REBOOT_EXCEPTION = _hk_struct_test.MINOR_TX1_REBOOT_EXCEPTION
MINOR_TX1_SUB_SYSTEM_LOSS = _hk_struct_test.MINOR_TX1_SUB_SYSTEM_LOSS
MINOR_TX1_SUB_SYSTEM_RESTORE = _hk_struct_test.MINOR_TX1_SUB_SYSTEM_RESTORE
MINOR_WIRELESS_SPEED_EXCEPTION = _hk_struct_test.MINOR_WIRELESS_SPEED_EXCEPTION
MAJOR_OPERATION = _hk_struct_test.MAJOR_OPERATION
MINOR_VCA_MOTIONEXCEPTION = _hk_struct_test.MINOR_VCA_MOTIONEXCEPTION
MINOR_START_DVR = _hk_struct_test.MINOR_START_DVR
MINOR_STOP_DVR = _hk_struct_test.MINOR_STOP_DVR
MINOR_STOP_ABNORMAL = _hk_struct_test.MINOR_STOP_ABNORMAL
MINOR_REBOOT_DVR = _hk_struct_test.MINOR_REBOOT_DVR
MINOR_LOCAL_LOGIN = _hk_struct_test.MINOR_LOCAL_LOGIN
MINOR_LOCAL_LOGOUT = _hk_struct_test.MINOR_LOCAL_LOGOUT
MINOR_LOCAL_CFG_PARM = _hk_struct_test.MINOR_LOCAL_CFG_PARM
MINOR_LOCAL_PLAYBYFILE = _hk_struct_test.MINOR_LOCAL_PLAYBYFILE
MINOR_LOCAL_PLAYBYTIME = _hk_struct_test.MINOR_LOCAL_PLAYBYTIME
MINOR_LOCAL_START_REC = _hk_struct_test.MINOR_LOCAL_START_REC
MINOR_LOCAL_STOP_REC = _hk_struct_test.MINOR_LOCAL_STOP_REC
MINOR_LOCAL_PTZCTRL = _hk_struct_test.MINOR_LOCAL_PTZCTRL
MINOR_LOCAL_PREVIEW = _hk_struct_test.MINOR_LOCAL_PREVIEW
MINOR_LOCAL_MODIFY_TIME = _hk_struct_test.MINOR_LOCAL_MODIFY_TIME
MINOR_LOCAL_UPGRADE = _hk_struct_test.MINOR_LOCAL_UPGRADE
MINOR_LOCAL_RECFILE_OUTPUT = _hk_struct_test.MINOR_LOCAL_RECFILE_OUTPUT
MINOR_LOCAL_FORMAT_HDD = _hk_struct_test.MINOR_LOCAL_FORMAT_HDD
MINOR_LOCAL_CFGFILE_OUTPUT = _hk_struct_test.MINOR_LOCAL_CFGFILE_OUTPUT
MINOR_LOCAL_CFGFILE_INPUT = _hk_struct_test.MINOR_LOCAL_CFGFILE_INPUT
MINOR_LOCAL_COPYFILE = _hk_struct_test.MINOR_LOCAL_COPYFILE
MINOR_LOCAL_LOCKFILE = _hk_struct_test.MINOR_LOCAL_LOCKFILE
MINOR_LOCAL_UNLOCKFILE = _hk_struct_test.MINOR_LOCAL_UNLOCKFILE
MINOR_LOCAL_DVR_ALARM = _hk_struct_test.MINOR_LOCAL_DVR_ALARM
MINOR_IPC_ADD = _hk_struct_test.MINOR_IPC_ADD
MINOR_IPC_DEL = _hk_struct_test.MINOR_IPC_DEL
MINOR_IPC_SET = _hk_struct_test.MINOR_IPC_SET
MINOR_LOCAL_START_BACKUP = _hk_struct_test.MINOR_LOCAL_START_BACKUP
MINOR_LOCAL_STOP_BACKUP = _hk_struct_test.MINOR_LOCAL_STOP_BACKUP
MINOR_LOCAL_COPYFILE_START_TIME = _hk_struct_test.MINOR_LOCAL_COPYFILE_START_TIME
MINOR_LOCAL_COPYFILE_END_TIME = _hk_struct_test.MINOR_LOCAL_COPYFILE_END_TIME
MINOR_LOCAL_ADD_NAS = _hk_struct_test.MINOR_LOCAL_ADD_NAS
MINOR_LOCAL_DEL_NAS = _hk_struct_test.MINOR_LOCAL_DEL_NAS
MINOR_LOCAL_SET_NAS = _hk_struct_test.MINOR_LOCAL_SET_NAS
MINOR_LOCAL_RESET_PASSWD = _hk_struct_test.MINOR_LOCAL_RESET_PASSWD
MINOR_REMOTE_LOGIN = _hk_struct_test.MINOR_REMOTE_LOGIN
MINOR_REMOTE_LOGOUT = _hk_struct_test.MINOR_REMOTE_LOGOUT
MINOR_REMOTE_START_REC = _hk_struct_test.MINOR_REMOTE_START_REC
MINOR_REMOTE_STOP_REC = _hk_struct_test.MINOR_REMOTE_STOP_REC
MINOR_START_TRANS_CHAN = _hk_struct_test.MINOR_START_TRANS_CHAN
MINOR_STOP_TRANS_CHAN = _hk_struct_test.MINOR_STOP_TRANS_CHAN
MINOR_REMOTE_GET_PARM = _hk_struct_test.MINOR_REMOTE_GET_PARM
MINOR_REMOTE_CFG_PARM = _hk_struct_test.MINOR_REMOTE_CFG_PARM
MINOR_REMOTE_GET_STATUS = _hk_struct_test.MINOR_REMOTE_GET_STATUS
MINOR_REMOTE_ARM = _hk_struct_test.MINOR_REMOTE_ARM
MINOR_REMOTE_DISARM = _hk_struct_test.MINOR_REMOTE_DISARM
MINOR_REMOTE_REBOOT = _hk_struct_test.MINOR_REMOTE_REBOOT
MINOR_START_VT = _hk_struct_test.MINOR_START_VT
MINOR_STOP_VT = _hk_struct_test.MINOR_STOP_VT
MINOR_REMOTE_UPGRADE = _hk_struct_test.MINOR_REMOTE_UPGRADE
MINOR_REMOTE_PLAYBYFILE = _hk_struct_test.MINOR_REMOTE_PLAYBYFILE
MINOR_REMOTE_PLAYBYTIME = _hk_struct_test.MINOR_REMOTE_PLAYBYTIME
MINOR_REMOTE_PTZCTRL = _hk_struct_test.MINOR_REMOTE_PTZCTRL
MINOR_REMOTE_FORMAT_HDD = _hk_struct_test.MINOR_REMOTE_FORMAT_HDD
MINOR_REMOTE_STOP = _hk_struct_test.MINOR_REMOTE_STOP
MINOR_REMOTE_LOCKFILE = _hk_struct_test.MINOR_REMOTE_LOCKFILE
MINOR_REMOTE_UNLOCKFILE = _hk_struct_test.MINOR_REMOTE_UNLOCKFILE
MINOR_REMOTE_CFGFILE_OUTPUT = _hk_struct_test.MINOR_REMOTE_CFGFILE_OUTPUT
MINOR_REMOTE_CFGFILE_INTPUT = _hk_struct_test.MINOR_REMOTE_CFGFILE_INTPUT
MINOR_REMOTE_RECFILE_OUTPUT = _hk_struct_test.MINOR_REMOTE_RECFILE_OUTPUT
MINOR_REMOTE_DVR_ALARM = _hk_struct_test.MINOR_REMOTE_DVR_ALARM
MINOR_REMOTE_IPC_ADD = _hk_struct_test.MINOR_REMOTE_IPC_ADD
MINOR_REMOTE_IPC_DEL = _hk_struct_test.MINOR_REMOTE_IPC_DEL
MINOR_REMOTE_IPC_SET = _hk_struct_test.MINOR_REMOTE_IPC_SET
MINOR_REBOOT_VCA_LIB = _hk_struct_test.MINOR_REBOOT_VCA_LIB
MINOR_REMOTE_ADD_NAS = _hk_struct_test.MINOR_REMOTE_ADD_NAS
MINOR_REMOTE_DEL_NAS = _hk_struct_test.MINOR_REMOTE_DEL_NAS
MINOR_REMOTE_SET_NAS = _hk_struct_test.MINOR_REMOTE_SET_NAS
MINOR_LOCAL_OPERATE_LOCK = _hk_struct_test.MINOR_LOCAL_OPERATE_LOCK
MINOR_LOCAL_OPERATE_UNLOCK = _hk_struct_test.MINOR_LOCAL_OPERATE_UNLOCK
MINOR_REMOTE_DELETE_HDISK = _hk_struct_test.MINOR_REMOTE_DELETE_HDISK
MINOR_REMOTE_LOAD_HDISK = _hk_struct_test.MINOR_REMOTE_LOAD_HDISK
MINOR_REMOTE_UNLOAD_HDISK = _hk_struct_test.MINOR_REMOTE_UNLOAD_HDISK
MINOR_SCHEDULE_ANGLECALIBRATION = _hk_struct_test.MINOR_SCHEDULE_ANGLECALIBRATION
MINOR_OTHER_OPERATE = _hk_struct_test.MINOR_OTHER_OPERATE
MINOR_LOCAL_START_REC_CDRW = _hk_struct_test.MINOR_LOCAL_START_REC_CDRW
MINOR_LOCAL_STOP_REC_CDRW = _hk_struct_test.MINOR_LOCAL_STOP_REC_CDRW
MINOR_REMOTE_START_REC_CDRW = _hk_struct_test.MINOR_REMOTE_START_REC_CDRW
MINOR_REMOTE_STOP_REC_CDRW = _hk_struct_test.MINOR_REMOTE_STOP_REC_CDRW
MINOR_LOCAL_PIC_OUTPUT = _hk_struct_test.MINOR_LOCAL_PIC_OUTPUT
MINOR_REMOTE_PIC_OUTPUT = _hk_struct_test.MINOR_REMOTE_PIC_OUTPUT
MINOR_LOCAL_INQUEST_RESUME = _hk_struct_test.MINOR_LOCAL_INQUEST_RESUME
MINOR_REMOTE_INQUEST_RESUME = _hk_struct_test.MINOR_REMOTE_INQUEST_RESUME
MINOR_LOCAL_ADD_FILE = _hk_struct_test.MINOR_LOCAL_ADD_FILE
MINOR_LOCAL_DEL_FILE = _hk_struct_test.MINOR_LOCAL_DEL_FILE
MINOR_REMOTE_INQUEST_ADD_FILE = _hk_struct_test.MINOR_REMOTE_INQUEST_ADD_FILE
MINOR_SUBSYSTEMREBOOT = _hk_struct_test.MINOR_SUBSYSTEMREBOOT
MINOR_MATRIX_STARTTRANSFERVIDEO = _hk_struct_test.MINOR_MATRIX_STARTTRANSFERVIDEO
MINOR_MATRIX_STOPTRANSFERVIDEO = _hk_struct_test.MINOR_MATRIX_STOPTRANSFERVIDEO
MINOR_REMOTE_SET_ALLSUBSYSTEM = _hk_struct_test.MINOR_REMOTE_SET_ALLSUBSYSTEM
MINOR_REMOTE_GET_ALLSUBSYSTEM = _hk_struct_test.MINOR_REMOTE_GET_ALLSUBSYSTEM
MINOR_REMOTE_SET_PLANARRAY = _hk_struct_test.MINOR_REMOTE_SET_PLANARRAY
MINOR_REMOTE_GET_PLANARRAY = _hk_struct_test.MINOR_REMOTE_GET_PLANARRAY
MINOR_MATRIX_STARTTRANSFERAUDIO = _hk_struct_test.MINOR_MATRIX_STARTTRANSFERAUDIO
MINOR_MATRIX_STOPRANSFERAUDIO = _hk_struct_test.MINOR_MATRIX_STOPRANSFERAUDIO
MINOR_LOGON_CODESPITTER = _hk_struct_test.MINOR_LOGON_CODESPITTER
MINOR_LOGOFF_CODESPITTER = _hk_struct_test.MINOR_LOGOFF_CODESPITTER
MINOR_START_DYNAMIC_DECODE = _hk_struct_test.MINOR_START_DYNAMIC_DECODE
MINOR_STOP_DYNAMIC_DECODE = _hk_struct_test.MINOR_STOP_DYNAMIC_DECODE
MINOR_GET_CYC_CFG = _hk_struct_test.MINOR_GET_CYC_CFG
MINOR_SET_CYC_CFG = _hk_struct_test.MINOR_SET_CYC_CFG
MINOR_START_CYC_DECODE = _hk_struct_test.MINOR_START_CYC_DECODE
MINOR_STOP_CYC_DECODE = _hk_struct_test.MINOR_STOP_CYC_DECODE
MINOR_GET_DECCHAN_STATUS = _hk_struct_test.MINOR_GET_DECCHAN_STATUS
MINOR_GET_DECCHAN_INFO = _hk_struct_test.MINOR_GET_DECCHAN_INFO
MINOR_START_PASSIVE_DEC = _hk_struct_test.MINOR_START_PASSIVE_DEC
MINOR_STOP_PASSIVE_DEC = _hk_struct_test.MINOR_STOP_PASSIVE_DEC
MINOR_CTRL_PASSIVE_DEC = _hk_struct_test.MINOR_CTRL_PASSIVE_DEC
MINOR_RECON_PASSIVE_DEC = _hk_struct_test.MINOR_RECON_PASSIVE_DEC
MINOR_GET_DEC_CHAN_SW = _hk_struct_test.MINOR_GET_DEC_CHAN_SW
MINOR_SET_DEC_CHAN_SW = _hk_struct_test.MINOR_SET_DEC_CHAN_SW
MINOR_CTRL_DEC_CHAN_SCALE = _hk_struct_test.MINOR_CTRL_DEC_CHAN_SCALE
MINOR_SET_REMOTE_REPLAY = _hk_struct_test.MINOR_SET_REMOTE_REPLAY
MINOR_GET_REMOTE_REPLAY = _hk_struct_test.MINOR_GET_REMOTE_REPLAY
MINOR_CTRL_REMOTE_REPLAY = _hk_struct_test.MINOR_CTRL_REMOTE_REPLAY
MINOR_SET_DISP_CFG = _hk_struct_test.MINOR_SET_DISP_CFG
MINOR_GET_DISP_CFG = _hk_struct_test.MINOR_GET_DISP_CFG
MINOR_SET_PLANTABLE = _hk_struct_test.MINOR_SET_PLANTABLE
MINOR_GET_PLANTABLE = _hk_struct_test.MINOR_GET_PLANTABLE
MINOR_START_PPPPOE = _hk_struct_test.MINOR_START_PPPPOE
MINOR_STOP_PPPPOE = _hk_struct_test.MINOR_STOP_PPPPOE
MINOR_UPLOAD_LOGO = _hk_struct_test.MINOR_UPLOAD_LOGO
MINOR_LOCAL_PIN = _hk_struct_test.MINOR_LOCAL_PIN
MINOR_LOCAL_DIAL = _hk_struct_test.MINOR_LOCAL_DIAL
MINOR_SMS_CONTROL = _hk_struct_test.MINOR_SMS_CONTROL
MINOR_CALL_ONLINE = _hk_struct_test.MINOR_CALL_ONLINE
MINOR_REMOTE_PIN = _hk_struct_test.MINOR_REMOTE_PIN
MINOR_REMOTE_BYPASS = _hk_struct_test.MINOR_REMOTE_BYPASS
MINOR_REMOTE_UNBYPASS = _hk_struct_test.MINOR_REMOTE_UNBYPASS
MINOR_REMOTE_SET_ALARMIN_CFG = _hk_struct_test.MINOR_REMOTE_SET_ALARMIN_CFG
MINOR_REMOTE_GET_ALARMIN_CFG = _hk_struct_test.MINOR_REMOTE_GET_ALARMIN_CFG
MINOR_REMOTE_SET_ALARMOUT_CFG = _hk_struct_test.MINOR_REMOTE_SET_ALARMOUT_CFG
MINOR_REMOTE_GET_ALARMOUT_CFG = _hk_struct_test.MINOR_REMOTE_GET_ALARMOUT_CFG
MINOR_REMOTE_ALARMOUT_OPEN_MAN = _hk_struct_test.MINOR_REMOTE_ALARMOUT_OPEN_MAN
MINOR_REMOTE_ALARMOUT_CLOSE_MAN = _hk_struct_test.MINOR_REMOTE_ALARMOUT_CLOSE_MAN
MINOR_REMOTE_ALARM_ENABLE_CFG = _hk_struct_test.MINOR_REMOTE_ALARM_ENABLE_CFG
MINOR_DBDATA_OUTPUT = _hk_struct_test.MINOR_DBDATA_OUTPUT
MINOR_DBDATA_INPUT = _hk_struct_test.MINOR_DBDATA_INPUT
MINOR_MU_SWITCH = _hk_struct_test.MINOR_MU_SWITCH
MINOR_MU_PTZ = _hk_struct_test.MINOR_MU_PTZ
MINOR_DELETE_LOGO = _hk_struct_test.MINOR_DELETE_LOGO
MINOR_REMOTE_INQUEST_DEL_FILE = _hk_struct_test.MINOR_REMOTE_INQUEST_DEL_FILE
MINOR_LOCAL_CONF_REB_RAID = _hk_struct_test.MINOR_LOCAL_CONF_REB_RAID
MINOR_LOCAL_CONF_SPARE = _hk_struct_test.MINOR_LOCAL_CONF_SPARE
MINOR_LOCAL_ADD_RAID = _hk_struct_test.MINOR_LOCAL_ADD_RAID
MINOR_LOCAL_DEL_RAID = _hk_struct_test.MINOR_LOCAL_DEL_RAID
MINOR_LOCAL_MIG_RAID = _hk_struct_test.MINOR_LOCAL_MIG_RAID
MINOR_LOCAL_REB_RAID = _hk_struct_test.MINOR_LOCAL_REB_RAID
MINOR_LOCAL_QUICK_CONF_RAID = _hk_struct_test.MINOR_LOCAL_QUICK_CONF_RAID
MINOR_LOCAL_ADD_VD = _hk_struct_test.MINOR_LOCAL_ADD_VD
MINOR_LOCAL_DEL_VD = _hk_struct_test.MINOR_LOCAL_DEL_VD
MINOR_LOCAL_RP_VD = _hk_struct_test.MINOR_LOCAL_RP_VD
MINOR_LOCAL_FORMAT_EXPANDVD = _hk_struct_test.MINOR_LOCAL_FORMAT_EXPANDVD
MINOR_LOCAL_RAID_UPGRADE = _hk_struct_test.MINOR_LOCAL_RAID_UPGRADE
MINOR_LOCAL_STOP_RAID = _hk_struct_test.MINOR_LOCAL_STOP_RAID
MINOR_REMOTE_CONF_REB_RAID = _hk_struct_test.MINOR_REMOTE_CONF_REB_RAID
MINOR_REMOTE_CONF_SPARE = _hk_struct_test.MINOR_REMOTE_CONF_SPARE
MINOR_REMOTE_ADD_RAID = _hk_struct_test.MINOR_REMOTE_ADD_RAID
MINOR_REMOTE_DEL_RAID = _hk_struct_test.MINOR_REMOTE_DEL_RAID
MINOR_REMOTE_MIG_RAID = _hk_struct_test.MINOR_REMOTE_MIG_RAID
MINOR_REMOTE_REB_RAID = _hk_struct_test.MINOR_REMOTE_REB_RAID
MINOR_REMOTE_QUICK_CONF_RAID = _hk_struct_test.MINOR_REMOTE_QUICK_CONF_RAID
MINOR_REMOTE_ADD_VD = _hk_struct_test.MINOR_REMOTE_ADD_VD
MINOR_REMOTE_DEL_VD = _hk_struct_test.MINOR_REMOTE_DEL_VD
MINOR_REMOTE_RP_VD = _hk_struct_test.MINOR_REMOTE_RP_VD
MINOR_REMOTE_FORMAT_EXPANDVD = _hk_struct_test.MINOR_REMOTE_FORMAT_EXPANDVD
MINOR_REMOTE_RAID_UPGRADE = _hk_struct_test.MINOR_REMOTE_RAID_UPGRADE
MINOR_REMOTE_STOP_RAID = _hk_struct_test.MINOR_REMOTE_STOP_RAID
MINOR_LOCAL_START_PIC_REC = _hk_struct_test.MINOR_LOCAL_START_PIC_REC
MINOR_LOCAL_STOP_PIC_REC = _hk_struct_test.MINOR_LOCAL_STOP_PIC_REC
MINOR_LOCAL_SET_SNMP = _hk_struct_test.MINOR_LOCAL_SET_SNMP
MINOR_LOCAL_TAG_OPT = _hk_struct_test.MINOR_LOCAL_TAG_OPT
MINOR_REMOTE_START_PIC_REC = _hk_struct_test.MINOR_REMOTE_START_PIC_REC
MINOR_REMOTE_STOP_PIC_REC = _hk_struct_test.MINOR_REMOTE_STOP_PIC_REC
MINOR_REMOTE_SET_SNMP = _hk_struct_test.MINOR_REMOTE_SET_SNMP
MINOR_REMOTE_TAG_OPT = _hk_struct_test.MINOR_REMOTE_TAG_OPT
MINOR_REMOTE_LOGIN_LOCK = _hk_struct_test.MINOR_REMOTE_LOGIN_LOCK
MINOR_REMOTE_LOGIN_UNLOCK = _hk_struct_test.MINOR_REMOTE_LOGIN_UNLOCK
MINOR_LOCAL_VOUT_SWITCH = _hk_struct_test.MINOR_LOCAL_VOUT_SWITCH
MINOR_STREAM_CABAC = _hk_struct_test.MINOR_STREAM_CABAC
MINOR_LOCAL_SPARE_OPT = _hk_struct_test.MINOR_LOCAL_SPARE_OPT
MINOR_REMOTE_SPARE_OPT = _hk_struct_test.MINOR_REMOTE_SPARE_OPT
MINOR_LOCAL_IPCCFGFILE_OUTPUT = _hk_struct_test.MINOR_LOCAL_IPCCFGFILE_OUTPUT
MINOR_LOCAL_IPCCFGFILE_INPUT = _hk_struct_test.MINOR_LOCAL_IPCCFGFILE_INPUT
MINOR_LOCAL_IPC_UPGRADE = _hk_struct_test.MINOR_LOCAL_IPC_UPGRADE
MINOR_REMOTE_IPCCFGFILE_OUTPUT = _hk_struct_test.MINOR_REMOTE_IPCCFGFILE_OUTPUT
MINOR_REMOTE_IPCCFGFILE_INPUT = _hk_struct_test.MINOR_REMOTE_IPCCFGFILE_INPUT
MINOR_REMOTE_IPC_UPGRADE = _hk_struct_test.MINOR_REMOTE_IPC_UPGRADE
MINOR_LOCAL_UNLOAD_HDISK = _hk_struct_test.MINOR_LOCAL_UNLOAD_HDISK
MINOR_LOCAL_AUDIO_MIX = _hk_struct_test.MINOR_LOCAL_AUDIO_MIX
MINOR_REMOTE_AUDIO_MIX = _hk_struct_test.MINOR_REMOTE_AUDIO_MIX
MINOR_LOCAL_TRIAL_PAUSE = _hk_struct_test.MINOR_LOCAL_TRIAL_PAUSE
MINOR_LOCAL_TRIAL_RESUME = _hk_struct_test.MINOR_LOCAL_TRIAL_RESUME
MINOR_REMOTE_TRIAL_PAUSE = _hk_struct_test.MINOR_REMOTE_TRIAL_PAUSE
MINOR_REMOTE_TRIAL_RESUME = _hk_struct_test.MINOR_REMOTE_TRIAL_RESUME
MINOR_REMOTE_MODIFY_VERIFICATION_CODE = _hk_struct_test.MINOR_REMOTE_MODIFY_VERIFICATION_CODE
MINOR_LOCAL_MAKECALL = _hk_struct_test.MINOR_LOCAL_MAKECALL
MINOR_LOCAL_REJECTCALL = _hk_struct_test.MINOR_LOCAL_REJECTCALL
MINOR_LOCAL_ANSWERCALL = _hk_struct_test.MINOR_LOCAL_ANSWERCALL
MINOR_LOCAL_HANGUPCALL = _hk_struct_test.MINOR_LOCAL_HANGUPCALL
MINOR_REMOTE_MAKECALL = _hk_struct_test.MINOR_REMOTE_MAKECALL
MINOR_REMOTE_REJECTCALL = _hk_struct_test.MINOR_REMOTE_REJECTCALL
MINOR_REMOTE_ANSWERCALL = _hk_struct_test.MINOR_REMOTE_ANSWERCALL
MINOR_REMOTE_HANGUPCALL = _hk_struct_test.MINOR_REMOTE_HANGUPCALL
MINOR_SET_MULTI_MASTER = _hk_struct_test.MINOR_SET_MULTI_MASTER
MINOR_SET_MULTI_SLAVE = _hk_struct_test.MINOR_SET_MULTI_SLAVE
MINOR_CANCEL_MULTI_MASTER = _hk_struct_test.MINOR_CANCEL_MULTI_MASTER
MINOR_CANCEL_MULTI_SLAVE = _hk_struct_test.MINOR_CANCEL_MULTI_SLAVE
MINOR_DISPLAY_LOGO = _hk_struct_test.MINOR_DISPLAY_LOGO
MINOR_HIDE_LOGO = _hk_struct_test.MINOR_HIDE_LOGO
MINOR_SET_DEC_DELAY_LEVEL = _hk_struct_test.MINOR_SET_DEC_DELAY_LEVEL
MINOR_SET_BIGSCREEN_DIPLAY_AREA = _hk_struct_test.MINOR_SET_BIGSCREEN_DIPLAY_AREA
MINOR_CUT_VIDEO_SOURCE = _hk_struct_test.MINOR_CUT_VIDEO_SOURCE
MINOR_SET_BASEMAP_AREA = _hk_struct_test.MINOR_SET_BASEMAP_AREA
MINOR_DOWNLOAD_BASEMAP = _hk_struct_test.MINOR_DOWNLOAD_BASEMAP
MINOR_CUT_BASEMAP = _hk_struct_test.MINOR_CUT_BASEMAP
MINOR_CONTROL_ELEC_ENLARGE = _hk_struct_test.MINOR_CONTROL_ELEC_ENLARGE
MINOR_SET_OUTPUT_RESOLUTION = _hk_struct_test.MINOR_SET_OUTPUT_RESOLUTION
MINOR_SET_TRANCSPARENCY = _hk_struct_test.MINOR_SET_TRANCSPARENCY
MINOR_SET_OSD = _hk_struct_test.MINOR_SET_OSD
MINOR_RESTORE_DEC_STATUS = _hk_struct_test.MINOR_RESTORE_DEC_STATUS
MINOR_SCREEN_OPEN_SCREEN = _hk_struct_test.MINOR_SCREEN_OPEN_SCREEN
MINOR_SCREEN_CLOSE_SCREEN = _hk_struct_test.MINOR_SCREEN_CLOSE_SCREEN
MINOR_SCREEN_SWITCH_SIGNAL = _hk_struct_test.MINOR_SCREEN_SWITCH_SIGNAL
MINOR_SCREEN_MODIFY_NETWORK = _hk_struct_test.MINOR_SCREEN_MODIFY_NETWORK
MINOR_SCREEN_MODIFY_LEDRES = _hk_struct_test.MINOR_SCREEN_MODIFY_LEDRES
MINOR_SCREEN_SHOW_NORMAL = _hk_struct_test.MINOR_SCREEN_SHOW_NORMAL
MINOR_SCREEN_SHOW_TILE = _hk_struct_test.MINOR_SCREEN_SHOW_TILE
MINOR_SCREEN_DEC_NORMAL = _hk_struct_test.MINOR_SCREEN_DEC_NORMAL
MINOR_SCREEN_DEC_LOWLATENCY = _hk_struct_test.MINOR_SCREEN_DEC_LOWLATENCY
MINOR_SCREEN_MODIFY_SELFRES = _hk_struct_test.MINOR_SCREEN_MODIFY_SELFRES
MINOR_SCREEN_OUTPUT_POSITION = _hk_struct_test.MINOR_SCREEN_OUTPUT_POSITION
MINOR_SCREEN_IMAGE_ENHANCE = _hk_struct_test.MINOR_SCREEN_IMAGE_ENHANCE
MINOR_SCREEN_JOIN_SIGNAL = _hk_struct_test.MINOR_SCREEN_JOIN_SIGNAL
MINOR_SCREEN_SIGNAL_OSD = _hk_struct_test.MINOR_SCREEN_SIGNAL_OSD
MINOR_SCREEN_ASSOCIATED_INTERACTION = _hk_struct_test.MINOR_SCREEN_ASSOCIATED_INTERACTION
MINOR_SCREEN_MODIFY_MATRIX = _hk_struct_test.MINOR_SCREEN_MODIFY_MATRIX
MINOR_SCREEN_WND_TOP_KEEP = _hk_struct_test.MINOR_SCREEN_WND_TOP_KEEP
MINOR_SCREEN_WND_OPEN_KEEP = _hk_struct_test.MINOR_SCREEN_WND_OPEN_KEEP
MINOR_SCREEN_WALL_MIRROR = _hk_struct_test.MINOR_SCREEN_WALL_MIRROR
MINOR_SCREEN_UPLOAD_BASEMAP = _hk_struct_test.MINOR_SCREEN_UPLOAD_BASEMAP
MINOR_SCREEN_SHOW_BASEMAP = _hk_struct_test.MINOR_SCREEN_SHOW_BASEMAP
MINOR_SCREEN_HIDE_BASEMAP = _hk_struct_test.MINOR_SCREEN_HIDE_BASEMAP
MINOR_SCREEN_MODIFY_SERIAL = _hk_struct_test.MINOR_SCREEN_MODIFY_SERIAL
MINOR_SCREEN_SET_INPUT = _hk_struct_test.MINOR_SCREEN_SET_INPUT
MINOR_SCREEN_SET_OUTPUT = _hk_struct_test.MINOR_SCREEN_SET_OUTPUT
MINOR_SCREEN_SET_OSD = _hk_struct_test.MINOR_SCREEN_SET_OSD
MINOR_SCREEN_SET_LOGO = _hk_struct_test.MINOR_SCREEN_SET_LOGO
MINOR_SCREEN_SET_LAYOUT = _hk_struct_test.MINOR_SCREEN_SET_LAYOUT
MINOR_SCREEN_PICTUREPREVIEW = _hk_struct_test.MINOR_SCREEN_PICTUREPREVIEW
MINOR_SCREEN_GET_OSD = _hk_struct_test.MINOR_SCREEN_GET_OSD
MINOR_SCREEN_GET_LAYOUT = _hk_struct_test.MINOR_SCREEN_GET_LAYOUT
MINOR_SCREEN_LAYOUT_CTRL = _hk_struct_test.MINOR_SCREEN_LAYOUT_CTRL
MINOR_GET_ALL_VALID_WND = _hk_struct_test.MINOR_GET_ALL_VALID_WND
MINOR_GET_SIGNAL_WND = _hk_struct_test.MINOR_GET_SIGNAL_WND
MINOR_WINDOW_CTRL = _hk_struct_test.MINOR_WINDOW_CTRL
MINOR_GET_LAYOUT_LIST = _hk_struct_test.MINOR_GET_LAYOUT_LIST
MINOR_LAYOUT_CTRL = _hk_struct_test.MINOR_LAYOUT_CTRL
MINOR_SET_LAYOUT = _hk_struct_test.MINOR_SET_LAYOUT
MINOR_GET_SIGNAL_LIST = _hk_struct_test.MINOR_GET_SIGNAL_LIST
MINOR_GET_PLAN_LIST = _hk_struct_test.MINOR_GET_PLAN_LIST
MINOR_SET_PLAN = _hk_struct_test.MINOR_SET_PLAN
MINOR_CTRL_PLAN = _hk_struct_test.MINOR_CTRL_PLAN
MINOR_CTRL_SCREEN = _hk_struct_test.MINOR_CTRL_SCREEN
MINOR_ADD_NETSIG = _hk_struct_test.MINOR_ADD_NETSIG
MINOR_SET_NETSIG = _hk_struct_test.MINOR_SET_NETSIG
MINOR_SET_DECBDCFG = _hk_struct_test.MINOR_SET_DECBDCFG
MINOR_GET_DECBDCFG = _hk_struct_test.MINOR_GET_DECBDCFG
MINOR_GET_DEVICE_STATUS = _hk_struct_test.MINOR_GET_DEVICE_STATUS
MINOR_UPLOAD_PICTURE = _hk_struct_test.MINOR_UPLOAD_PICTURE
MINOR_SET_USERPWD = _hk_struct_test.MINOR_SET_USERPWD
MINOR_ADD_LAYOUT = _hk_struct_test.MINOR_ADD_LAYOUT
MINOR_DEL_LAYOUT = _hk_struct_test.MINOR_DEL_LAYOUT
MINOR_DEL_NETSIG = _hk_struct_test.MINOR_DEL_NETSIG
MINOR_ADD_PLAN = _hk_struct_test.MINOR_ADD_PLAN
MINOR_DEL_PLAN = _hk_struct_test.MINOR_DEL_PLAN
MINOR_GET_EXTERNAL_MATRIX_CFG = _hk_struct_test.MINOR_GET_EXTERNAL_MATRIX_CFG
MINOR_SET_EXTERNAL_MATRIX_CFG = _hk_struct_test.MINOR_SET_EXTERNAL_MATRIX_CFG
MINOR_GET_USER_CFG = _hk_struct_test.MINOR_GET_USER_CFG
MINOR_SET_USER_CFG = _hk_struct_test.MINOR_SET_USER_CFG
MINOR_GET_DISPLAY_PANEL_LINK_CFG = _hk_struct_test.MINOR_GET_DISPLAY_PANEL_LINK_CFG
MINOR_SET_DISPLAY_PANEL_LINK_CFG = _hk_struct_test.MINOR_SET_DISPLAY_PANEL_LINK_CFG
MINOR_GET_WALLSCENE_PARAM = _hk_struct_test.MINOR_GET_WALLSCENE_PARAM
MINOR_SET_WALLSCENE_PARAM = _hk_struct_test.MINOR_SET_WALLSCENE_PARAM
MINOR_GET_CURRENT_WALLSCENE = _hk_struct_test.MINOR_GET_CURRENT_WALLSCENE
MINOR_SWITCH_WALLSCENE = _hk_struct_test.MINOR_SWITCH_WALLSCENE
MINOR_SIP_LOGIN = _hk_struct_test.MINOR_SIP_LOGIN
MINOR_VOIP_START = _hk_struct_test.MINOR_VOIP_START
MINOR_VOIP_STOP = _hk_struct_test.MINOR_VOIP_STOP
MINOR_WIN_TOP = _hk_struct_test.MINOR_WIN_TOP
MINOR_WIN_BOTTOM = _hk_struct_test.MINOR_WIN_BOTTOM
MINOR_SET_USER_ADD_CFG = _hk_struct_test.MINOR_SET_USER_ADD_CFG
MINOR_SET_USER_MODF_CFG = _hk_struct_test.MINOR_SET_USER_MODF_CFG
MINOR_SET_USER_DEL_CFG = _hk_struct_test.MINOR_SET_USER_DEL_CFG
MINOR_LOCAL_LOAD_HDISK = _hk_struct_test.MINOR_LOCAL_LOAD_HDISK
MINOR_LOCAL_DELETE_HDISK = _hk_struct_test.MINOR_LOCAL_DELETE_HDISK
MINOR_LOCAL_MAIN_AUXILIARY_PORT_SWITCH = _hk_struct_test.MINOR_LOCAL_MAIN_AUXILIARY_PORT_SWITCH
MINOR_LOCAL_HARD_DISK_CHECK = _hk_struct_test.MINOR_LOCAL_HARD_DISK_CHECK
MINOR_LOCAL_CFG_DEVICE_TYPE = _hk_struct_test.MINOR_LOCAL_CFG_DEVICE_TYPE
MINOR_REMOTE_CFG_DEVICE_TYPE = _hk_struct_test.MINOR_REMOTE_CFG_DEVICE_TYPE
MINOR_LOCAL_CFG_WORK_HOT_SERVER = _hk_struct_test.MINOR_LOCAL_CFG_WORK_HOT_SERVER
MINOR_REMOTE_CFG_WORK_HOT_SERVER = _hk_struct_test.MINOR_REMOTE_CFG_WORK_HOT_SERVER
MINOR_LOCAL_DELETE_WORK = _hk_struct_test.MINOR_LOCAL_DELETE_WORK
MINOR_REMOTE_DELETE_WORK = _hk_struct_test.MINOR_REMOTE_DELETE_WORK
MINOR_LOCAL_ADD_WORK = _hk_struct_test.MINOR_LOCAL_ADD_WORK
MINOR_REMOTE_ADD_WORK = _hk_struct_test.MINOR_REMOTE_ADD_WORK
MINOR_LOCAL_IPCHEATMAP_OUTPUT = _hk_struct_test.MINOR_LOCAL_IPCHEATMAP_OUTPUT
MINOR_LOCAL_IPCHEATFLOW_OUTPUT = _hk_struct_test.MINOR_LOCAL_IPCHEATFLOW_OUTPUT
MINOR_REMOTE_SMS_SEND = _hk_struct_test.MINOR_REMOTE_SMS_SEND
MINOR_LOCAL_SMS_SEND = _hk_struct_test.MINOR_LOCAL_SMS_SEND
MINOR_ALARM_SMS_SEND = _hk_struct_test.MINOR_ALARM_SMS_SEND
MINOR_SMS_RECV = _hk_struct_test.MINOR_SMS_RECV
MINOR_LOCAL_SMS_SEARCH = _hk_struct_test.MINOR_LOCAL_SMS_SEARCH
MINOR_REMOTE_SMS_SEARCH = _hk_struct_test.MINOR_REMOTE_SMS_SEARCH
MINOR_LOCAL_SMS_READ = _hk_struct_test.MINOR_LOCAL_SMS_READ
MINOR_REMOTE_SMS_READ = _hk_struct_test.MINOR_REMOTE_SMS_READ
MINOR_REMOTE_DIAL_CONNECT = _hk_struct_test.MINOR_REMOTE_DIAL_CONNECT
MINOR_REMOTE_DIAL_DISCONN = _hk_struct_test.MINOR_REMOTE_DIAL_DISCONN
MINOR_LOCAL_WHITELIST_SET = _hk_struct_test.MINOR_LOCAL_WHITELIST_SET
MINOR_REMOTE_WHITELIST_SET = _hk_struct_test.MINOR_REMOTE_WHITELIST_SET
MINOR_LOCAL_DIAL_PARA_SET = _hk_struct_test.MINOR_LOCAL_DIAL_PARA_SET
MINOR_REMOTE_DIAL_PARA_SET = _hk_struct_test.MINOR_REMOTE_DIAL_PARA_SET
MINOR_LOCAL_DIAL_SCHEDULE_SET = _hk_struct_test.MINOR_LOCAL_DIAL_SCHEDULE_SET
MINOR_REMOTE_DIAL_SCHEDULE_SET = _hk_struct_test.MINOR_REMOTE_DIAL_SCHEDULE_SET
MINOR_PLAT_OPER = _hk_struct_test.MINOR_PLAT_OPER
MINOR_REMOTE_CFG_POE_WORK_MODE = _hk_struct_test.MINOR_REMOTE_CFG_POE_WORK_MODE
MINOR_LOCAL_CFG_POE_WORK_MODE = _hk_struct_test.MINOR_LOCAL_CFG_POE_WORK_MODE
MINOR_REMOTE_CFG_FACE_CONTRAST = _hk_struct_test.MINOR_REMOTE_CFG_FACE_CONTRAST
MINOR_LOCAL_CFG_FACE_CONTRAST = _hk_struct_test.MINOR_LOCAL_CFG_FACE_CONTRAST
MINOR_REMOTE_CFG_WHITELIST_FACE_CONTRAST = _hk_struct_test.MINOR_REMOTE_CFG_WHITELIST_FACE_CONTRAST
MINOR_LOCAL_CFG_WHITELIST_FACE_CONTRAST = _hk_struct_test.MINOR_LOCAL_CFG_WHITELIST_FACE_CONTRAST
MINOR_LOCAL_CHECK_TIME = _hk_struct_test.MINOR_LOCAL_CHECK_TIME
MINOR_VCA_ONEKEY_EXPORT_PICTURE = _hk_struct_test.MINOR_VCA_ONEKEY_EXPORT_PICTURE
MINOR_VCA_ONEKEY_DELETE_PICTURE = _hk_struct_test.MINOR_VCA_ONEKEY_DELETE_PICTURE
MINOR_VCA_ONEKEY_EXPORT_VIDEO = _hk_struct_test.MINOR_VCA_ONEKEY_EXPORT_VIDEO
MINOR_VCA_ONEKEY_DELETE_VIDEO = _hk_struct_test.MINOR_VCA_ONEKEY_DELETE_VIDEO
MINOR_REMOTE_CFG_WIRELESS_DIALPARAM = _hk_struct_test.MINOR_REMOTE_CFG_WIRELESS_DIALPARAM
MINOR_LOCAL_CFG_WIRELESS_DIALPARAM = _hk_struct_test.MINOR_LOCAL_CFG_WIRELESS_DIALPARAM
MINOR_REMOTE_CFG_WIRELESS_SMSPARAM = _hk_struct_test.MINOR_REMOTE_CFG_WIRELESS_SMSPARAM
MINOR_LOCAL_CFG_WIRELESS_SMSPARAM = _hk_struct_test.MINOR_LOCAL_CFG_WIRELESS_SMSPARAM
MINOR_REMOTE_CFG_WIRELESS_SMSSElFHELP = _hk_struct_test.MINOR_REMOTE_CFG_WIRELESS_SMSSElFHELP
MINOR_LOCAL_CFG_WIRELESS_SMSSElFHELP = _hk_struct_test.MINOR_LOCAL_CFG_WIRELESS_SMSSElFHELP
MINOR_REMOTE_CFG_WIRELESS_NETFLOWPARAM = _hk_struct_test.MINOR_REMOTE_CFG_WIRELESS_NETFLOWPARAM
MINOR_LOCAL_CFG_WIRELESS_NETFLOWPARAM = _hk_struct_test.MINOR_LOCAL_CFG_WIRELESS_NETFLOWPARAM
MINOR_REMOTE_OPEN_DOOR = _hk_struct_test.MINOR_REMOTE_OPEN_DOOR
MINOR_REMOTE_CLOSE_DOOR = _hk_struct_test.MINOR_REMOTE_CLOSE_DOOR
MINOR_REMOTE_ALWAYS_OPEN = _hk_struct_test.MINOR_REMOTE_ALWAYS_OPEN
MINOR_REMOTE_ALWAYS_CLOSE = _hk_struct_test.MINOR_REMOTE_ALWAYS_CLOSE
MINOR_REMOTE_CHECK_TIME = _hk_struct_test.MINOR_REMOTE_CHECK_TIME
MINOR_NTP_CHECK_TIME = _hk_struct_test.MINOR_NTP_CHECK_TIME
MINOR_REMOTE_CLEAR_CARD = _hk_struct_test.MINOR_REMOTE_CLEAR_CARD
MINOR_REMOTE_RESTORE_CFG = _hk_struct_test.MINOR_REMOTE_RESTORE_CFG
MINOR_ALARMIN_ARM = _hk_struct_test.MINOR_ALARMIN_ARM
MINOR_ALARMIN_DISARM = _hk_struct_test.MINOR_ALARMIN_DISARM
MINOR_LOCAL_RESTORE_CFG = _hk_struct_test.MINOR_LOCAL_RESTORE_CFG
MINOR_REMOTE_CAPTURE_PIC = _hk_struct_test.MINOR_REMOTE_CAPTURE_PIC
MINOR_MOD_NET_REPORT_CFG = _hk_struct_test.MINOR_MOD_NET_REPORT_CFG
MINOR_MOD_GPRS_REPORT_PARAM = _hk_struct_test.MINOR_MOD_GPRS_REPORT_PARAM
MINOR_MOD_REPORT_GROUP_PARAM = _hk_struct_test.MINOR_MOD_REPORT_GROUP_PARAM
MINOR_UNLOCK_PASSWORD_OPEN_DOOR = _hk_struct_test.MINOR_UNLOCK_PASSWORD_OPEN_DOOR
MINOR_AUTO_RENUMBER = _hk_struct_test.MINOR_AUTO_RENUMBER
MINOR_AUTO_COMPLEMENT_NUMBER = _hk_struct_test.MINOR_AUTO_COMPLEMENT_NUMBER
MINOR_NORMAL_CFGFILE_INPUT = _hk_struct_test.MINOR_NORMAL_CFGFILE_INPUT
MINOR_NORMAL_CFGFILE_OUTTPUT = _hk_struct_test.MINOR_NORMAL_CFGFILE_OUTTPUT
MINOR_CARD_RIGHT_INPUT = _hk_struct_test.MINOR_CARD_RIGHT_INPUT
MINOR_CARD_RIGHT_OUTTPUT = _hk_struct_test.MINOR_CARD_RIGHT_OUTTPUT
MINOR_LOCAL_USB_UPGRADE = _hk_struct_test.MINOR_LOCAL_USB_UPGRADE
MINOR_REMOTE_VISITOR_CALL_LADDER = _hk_struct_test.MINOR_REMOTE_VISITOR_CALL_LADDER
MINOR_REMOTE_HOUSEHOLD_CALL_LADDER = _hk_struct_test.MINOR_REMOTE_HOUSEHOLD_CALL_LADDER
MINOR_REMOTE_ACTUAL_GUARD = _hk_struct_test.MINOR_REMOTE_ACTUAL_GUARD
MINOR_REMOTE_ACTUAL_UNGUARD = _hk_struct_test.MINOR_REMOTE_ACTUAL_UNGUARD
MINOR_REMOTE_CONTROL_NOT_CODE_OPER_FAILED = _hk_struct_test.MINOR_REMOTE_CONTROL_NOT_CODE_OPER_FAILED
MINOR_REMOTE_CONTROL_CLOSE_DOOR = _hk_struct_test.MINOR_REMOTE_CONTROL_CLOSE_DOOR
MINOR_REMOTE_CONTROL_OPEN_DOOR = _hk_struct_test.MINOR_REMOTE_CONTROL_OPEN_DOOR
MINOR_REMOTE_CONTROL_ALWAYS_OPEN_DOOR = _hk_struct_test.MINOR_REMOTE_CONTROL_ALWAYS_OPEN_DOOR
MINOR_M1_CARD_ENCRYPT_VERIFY_OPEN = _hk_struct_test.MINOR_M1_CARD_ENCRYPT_VERIFY_OPEN
MINOR_M1_CARD_ENCRYPT_VERIFY_CLOSE = _hk_struct_test.MINOR_M1_CARD_ENCRYPT_VERIFY_CLOSE
MINOR_NFC_FUNCTION_OPEN = _hk_struct_test.MINOR_NFC_FUNCTION_OPEN
MINOR_NFC_FUNCTION_CLOSE = _hk_struct_test.MINOR_NFC_FUNCTION_CLOSE
MINOR_OFFLINE_DATA_OUTPUT = _hk_struct_test.MINOR_OFFLINE_DATA_OUTPUT
MINOR_CREATE_SSH_LINK = _hk_struct_test.MINOR_CREATE_SSH_LINK
MINOR_CLOSE_SSH_LINK = _hk_struct_test.MINOR_CLOSE_SSH_LINK
MINOR_OPERATION_CUSTOM1 = _hk_struct_test.MINOR_OPERATION_CUSTOM1
MINOR_OPERATION_CUSTOM2 = _hk_struct_test.MINOR_OPERATION_CUSTOM2
MINOR_OPERATION_CUSTOM3 = _hk_struct_test.MINOR_OPERATION_CUSTOM3
MINOR_OPERATION_CUSTOM4 = _hk_struct_test.MINOR_OPERATION_CUSTOM4
MINOR_OPERATION_CUSTOM5 = _hk_struct_test.MINOR_OPERATION_CUSTOM5
MINOR_OPERATION_CUSTOM6 = _hk_struct_test.MINOR_OPERATION_CUSTOM6
MINOR_OPERATION_CUSTOM7 = _hk_struct_test.MINOR_OPERATION_CUSTOM7
MINOR_OPERATION_CUSTOM8 = _hk_struct_test.MINOR_OPERATION_CUSTOM8
MINOR_OPERATION_CUSTOM9 = _hk_struct_test.MINOR_OPERATION_CUSTOM9
MINOR_OPERATION_CUSTOM10 = _hk_struct_test.MINOR_OPERATION_CUSTOM10
MINOR_OPERATION_CUSTOM11 = _hk_struct_test.MINOR_OPERATION_CUSTOM11
MINOR_OPERATION_CUSTOM12 = _hk_struct_test.MINOR_OPERATION_CUSTOM12
MINOR_OPERATION_CUSTOM13 = _hk_struct_test.MINOR_OPERATION_CUSTOM13
MINOR_OPERATION_CUSTOM14 = _hk_struct_test.MINOR_OPERATION_CUSTOM14
MINOR_OPERATION_CUSTOM15 = _hk_struct_test.MINOR_OPERATION_CUSTOM15
MINOR_OPERATION_CUSTOM16 = _hk_struct_test.MINOR_OPERATION_CUSTOM16
MINOR_OPERATION_CUSTOM17 = _hk_struct_test.MINOR_OPERATION_CUSTOM17
MINOR_OPERATION_CUSTOM18 = _hk_struct_test.MINOR_OPERATION_CUSTOM18
MINOR_OPERATION_CUSTOM19 = _hk_struct_test.MINOR_OPERATION_CUSTOM19
MINOR_OPERATION_CUSTOM20 = _hk_struct_test.MINOR_OPERATION_CUSTOM20
MINOR_OPERATION_CUSTOM21 = _hk_struct_test.MINOR_OPERATION_CUSTOM21
MINOR_OPERATION_CUSTOM22 = _hk_struct_test.MINOR_OPERATION_CUSTOM22
MINOR_OPERATION_CUSTOM23 = _hk_struct_test.MINOR_OPERATION_CUSTOM23
MINOR_OPERATION_CUSTOM24 = _hk_struct_test.MINOR_OPERATION_CUSTOM24
MINOR_OPERATION_CUSTOM25 = _hk_struct_test.MINOR_OPERATION_CUSTOM25
MINOR_OPERATION_CUSTOM26 = _hk_struct_test.MINOR_OPERATION_CUSTOM26
MINOR_OPERATION_CUSTOM27 = _hk_struct_test.MINOR_OPERATION_CUSTOM27
MINOR_OPERATION_CUSTOM28 = _hk_struct_test.MINOR_OPERATION_CUSTOM28
MINOR_OPERATION_CUSTOM29 = _hk_struct_test.MINOR_OPERATION_CUSTOM29
MINOR_OPERATION_CUSTOM30 = _hk_struct_test.MINOR_OPERATION_CUSTOM30
MINOR_OPERATION_CUSTOM31 = _hk_struct_test.MINOR_OPERATION_CUSTOM31
MINOR_OPERATION_CUSTOM32 = _hk_struct_test.MINOR_OPERATION_CUSTOM32
MINOR_OPERATION_CUSTOM33 = _hk_struct_test.MINOR_OPERATION_CUSTOM33
MINOR_OPERATION_CUSTOM34 = _hk_struct_test.MINOR_OPERATION_CUSTOM34
MINOR_OPERATION_CUSTOM35 = _hk_struct_test.MINOR_OPERATION_CUSTOM35
MINOR_OPERATION_CUSTOM36 = _hk_struct_test.MINOR_OPERATION_CUSTOM36
MINOR_OPERATION_CUSTOM37 = _hk_struct_test.MINOR_OPERATION_CUSTOM37
MINOR_OPERATION_CUSTOM38 = _hk_struct_test.MINOR_OPERATION_CUSTOM38
MINOR_OPERATION_CUSTOM39 = _hk_struct_test.MINOR_OPERATION_CUSTOM39
MINOR_OPERATION_CUSTOM40 = _hk_struct_test.MINOR_OPERATION_CUSTOM40
MINOR_OPERATION_CUSTOM41 = _hk_struct_test.MINOR_OPERATION_CUSTOM41
MINOR_OPERATION_CUSTOM42 = _hk_struct_test.MINOR_OPERATION_CUSTOM42
MINOR_OPERATION_CUSTOM43 = _hk_struct_test.MINOR_OPERATION_CUSTOM43
MINOR_OPERATION_CUSTOM44 = _hk_struct_test.MINOR_OPERATION_CUSTOM44
MINOR_OPERATION_CUSTOM45 = _hk_struct_test.MINOR_OPERATION_CUSTOM45
MINOR_OPERATION_CUSTOM46 = _hk_struct_test.MINOR_OPERATION_CUSTOM46
MINOR_OPERATION_CUSTOM47 = _hk_struct_test.MINOR_OPERATION_CUSTOM47
MINOR_OPERATION_CUSTOM48 = _hk_struct_test.MINOR_OPERATION_CUSTOM48
MINOR_OPERATION_CUSTOM49 = _hk_struct_test.MINOR_OPERATION_CUSTOM49
MINOR_OPERATION_CUSTOM50 = _hk_struct_test.MINOR_OPERATION_CUSTOM50
MINOR_OPERATION_CUSTOM51 = _hk_struct_test.MINOR_OPERATION_CUSTOM51
MINOR_OPERATION_CUSTOM52 = _hk_struct_test.MINOR_OPERATION_CUSTOM52
MINOR_OPERATION_CUSTOM53 = _hk_struct_test.MINOR_OPERATION_CUSTOM53
MINOR_OPERATION_CUSTOM54 = _hk_struct_test.MINOR_OPERATION_CUSTOM54
MINOR_OPERATION_CUSTOM55 = _hk_struct_test.MINOR_OPERATION_CUSTOM55
MINOR_OPERATION_CUSTOM56 = _hk_struct_test.MINOR_OPERATION_CUSTOM56
MINOR_OPERATION_CUSTOM57 = _hk_struct_test.MINOR_OPERATION_CUSTOM57
MINOR_OPERATION_CUSTOM58 = _hk_struct_test.MINOR_OPERATION_CUSTOM58
MINOR_OPERATION_CUSTOM59 = _hk_struct_test.MINOR_OPERATION_CUSTOM59
MINOR_OPERATION_CUSTOM60 = _hk_struct_test.MINOR_OPERATION_CUSTOM60
MINOR_OPERATION_CUSTOM61 = _hk_struct_test.MINOR_OPERATION_CUSTOM61
MINOR_OPERATION_CUSTOM62 = _hk_struct_test.MINOR_OPERATION_CUSTOM62
MINOR_OPERATION_CUSTOM63 = _hk_struct_test.MINOR_OPERATION_CUSTOM63
MINOR_OPERATION_CUSTOM64 = _hk_struct_test.MINOR_OPERATION_CUSTOM64
MINOR_SET_WIFI_PARAMETER = _hk_struct_test.MINOR_SET_WIFI_PARAMETER
MINOR_EZVIZ_LOGIN = _hk_struct_test.MINOR_EZVIZ_LOGIN
MINOR_EZVIZ_LOGINOUT = _hk_struct_test.MINOR_EZVIZ_LOGINOUT
MINOR_LOCK_ADD = _hk_struct_test.MINOR_LOCK_ADD
MINOR_LOCK_DELETE = _hk_struct_test.MINOR_LOCK_DELETE
MINOR_LOCK_GET_STATUS = _hk_struct_test.MINOR_LOCK_GET_STATUS
MINOR_LOCK_SET_TMP_PASSWORD = _hk_struct_test.MINOR_LOCK_SET_TMP_PASSWORD
MINOR_LOCK_SET_SILENT_MODE = _hk_struct_test.MINOR_LOCK_SET_SILENT_MODE
MINOR_LOCK_SET_LATE_WARNING = _hk_struct_test.MINOR_LOCK_SET_LATE_WARNING
MINOR_LOCK_IPC_ADD = _hk_struct_test.MINOR_LOCK_IPC_ADD
MINOR_LOCK_IPC_REMOVE = _hk_struct_test.MINOR_LOCK_IPC_REMOVE
MINOR_LOCK_DETECTOR_ADD = _hk_struct_test.MINOR_LOCK_DETECTOR_ADD
MINOR_LOCK_DETECTOR_REMOVE = _hk_struct_test.MINOR_LOCK_DETECTOR_REMOVE
MINOR_LOCK_MESSAGE_REMINDING_OPEN = _hk_struct_test.MINOR_LOCK_MESSAGE_REMINDING_OPEN
MINOR_LOCK_MESSAGE_REMINDING_CLOSE = _hk_struct_test.MINOR_LOCK_MESSAGE_REMINDING_CLOSE
MINOR_LOCK_SET_HEART_BEAT = _hk_struct_test.MINOR_LOCK_SET_HEART_BEAT
MINOR_LOCK_REBOOT = _hk_struct_test.MINOR_LOCK_REBOOT
MINOR_LOCK_CLEAR_USER = _hk_struct_test.MINOR_LOCK_CLEAR_USER
MINOR_LOCK_FORMAT = _hk_struct_test.MINOR_LOCK_FORMAT
MINOR_LOCK_FINGER_CHANGE = _hk_struct_test.MINOR_LOCK_FINGER_CHANGE
MINOR_LOCK_PASSWORD_CHANGE = _hk_struct_test.MINOR_LOCK_PASSWORD_CHANGE
MINOR_LOCK_CARD_CHANGE = _hk_struct_test.MINOR_LOCK_CARD_CHANGE
MINOR_LOCK_USER_CHANGE = _hk_struct_test.MINOR_LOCK_USER_CHANGE
MINOR_LOCK_SYSTEM_CHANGE = _hk_struct_test.MINOR_LOCK_SYSTEM_CHANGE
MINOR_LOCK_CHANGE_ADD_UESR = _hk_struct_test.MINOR_LOCK_CHANGE_ADD_UESR
MINOR_LOCK_CHANGE_DEL_UESR = _hk_struct_test.MINOR_LOCK_CHANGE_DEL_UESR
MINOR_LOCK_CHANGE_CUSTOM_USER_NAME = _hk_struct_test.MINOR_LOCK_CHANGE_CUSTOM_USER_NAME
MINOR_LOCK_CHANGE_REMOTE_DEVICE = _hk_struct_test.MINOR_LOCK_CHANGE_REMOTE_DEVICE
MINOR_LOCK_CHANGE_ADD_FP = _hk_struct_test.MINOR_LOCK_CHANGE_ADD_FP
MINOR_LOCK_CHANGE_DEL_FP = _hk_struct_test.MINOR_LOCK_CHANGE_DEL_FP
MINOR_LOCK_CHANGE_ADD_PASSWORD = _hk_struct_test.MINOR_LOCK_CHANGE_ADD_PASSWORD
MINOR_LOCK_CHANGE_DEL_PASSWORD = _hk_struct_test.MINOR_LOCK_CHANGE_DEL_PASSWORD
MINOR_LOCK_CHANGE_ADD_CARD = _hk_struct_test.MINOR_LOCK_CHANGE_ADD_CARD
MINOR_LOCK_CHANGE_DEL_CARD = _hk_struct_test.MINOR_LOCK_CHANGE_DEL_CARD
MINOR_LOCK_NETWORK_SWITCH = _hk_struct_test.MINOR_LOCK_NETWORK_SWITCH
MINOR_LOCK_CLEAR_NETWORK_DATA = _hk_struct_test.MINOR_LOCK_CLEAR_NETWORK_DATA
MINOR_LOCK_CLEAR_HOST_USER = _hk_struct_test.MINOR_LOCK_CLEAR_HOST_USER
MINOR_LOCK_CLEAR_GUEST_USER = _hk_struct_test.MINOR_LOCK_CLEAR_GUEST_USER
MINOR_LOCK_CLEAN_ALL_REMOTE_DEVICE = _hk_struct_test.MINOR_LOCK_CLEAN_ALL_REMOTE_DEVICE
MINOR_LOCK_CLEAN_NORMAL_USER_FINGRT = _hk_struct_test.MINOR_LOCK_CLEAN_NORMAL_USER_FINGRT
MINOR_LOCK_CLEAN_ALL_CARD = _hk_struct_test.MINOR_LOCK_CLEAN_ALL_CARD
MINOR_LOCK_CLEAN_ALL_PASSWORD = _hk_struct_test.MINOR_LOCK_CLEAN_ALL_PASSWORD
MINOR_START_WIRELESSSERVER = _hk_struct_test.MINOR_START_WIRELESSSERVER
MINOR_STOP_WIRELESSSERVER = _hk_struct_test.MINOR_STOP_WIRELESSSERVER
MINOR_EMERGENCY_CARD_AUTH_NORMAL_CARD = _hk_struct_test.MINOR_EMERGENCY_CARD_AUTH_NORMAL_CARD
MINOR_CHANGE_ALWAYS_OPEN_RIGHT = _hk_struct_test.MINOR_CHANGE_ALWAYS_OPEN_RIGHT
MINOR_LOCK_DOOR_BELL_EVENT = _hk_struct_test.MINOR_LOCK_DOOR_BELL_EVENT
MINOR_SET_TRIGGERMODE_CFG = _hk_struct_test.MINOR_SET_TRIGGERMODE_CFG
MINOR_GET_TRIGGERMODE_CFG = _hk_struct_test.MINOR_GET_TRIGGERMODE_CFG
MINOR_SET_IOOUT_CFG = _hk_struct_test.MINOR_SET_IOOUT_CFG
MINOR_GET_IOOUT_CFG = _hk_struct_test.MINOR_GET_IOOUT_CFG
MINOR_GET_TRIGGERMODE_DEFAULT = _hk_struct_test.MINOR_GET_TRIGGERMODE_DEFAULT
MINOR_GET_ITCSTATUS = _hk_struct_test.MINOR_GET_ITCSTATUS
MINOR_SET_STATUS_DETECT_CFG = _hk_struct_test.MINOR_SET_STATUS_DETECT_CFG
MINOR_GET_STATUS_DETECT_CFG = _hk_struct_test.MINOR_GET_STATUS_DETECT_CFG
MINOR_SET_VIDEO_TRIGGERMODE_CFG = _hk_struct_test.MINOR_SET_VIDEO_TRIGGERMODE_CFG
MINOR_GET_VIDEO_TRIGGERMODE_CFG = _hk_struct_test.MINOR_GET_VIDEO_TRIGGERMODE_CFG
MINOR_ALARMHOST_GUARD = _hk_struct_test.MINOR_ALARMHOST_GUARD
MINOR_ALARMHOST_UNGUARD = _hk_struct_test.MINOR_ALARMHOST_UNGUARD
MINOR_ALARMHOST_BYPASS = _hk_struct_test.MINOR_ALARMHOST_BYPASS
MINOR_ALARMHOST_DURESS_ACCESS = _hk_struct_test.MINOR_ALARMHOST_DURESS_ACCESS
MINOR_ALARMHOST_RS485_PARAM = _hk_struct_test.MINOR_ALARMHOST_RS485_PARAM
MINOR_ALARMHOST_ALARM_OUTPUT = _hk_struct_test.MINOR_ALARMHOST_ALARM_OUTPUT
MINOR_ALARMHOST_ACCESS_OPEN = _hk_struct_test.MINOR_ALARMHOST_ACCESS_OPEN
MINOR_ALARMHOST_ACCESS_CLOSE = _hk_struct_test.MINOR_ALARMHOST_ACCESS_CLOSE
MINOR_ALARMHOST_SIREN_OPEN = _hk_struct_test.MINOR_ALARMHOST_SIREN_OPEN
MINOR_ALARMHOST_SIREN_CLOSE = _hk_struct_test.MINOR_ALARMHOST_SIREN_CLOSE
MINOR_ALARMHOST_MOD_ZONE_CONFIG = _hk_struct_test.MINOR_ALARMHOST_MOD_ZONE_CONFIG
MINOR_ALARMHOST_MOD_ALARMOUT_CONIFG = _hk_struct_test.MINOR_ALARMHOST_MOD_ALARMOUT_CONIFG
MINOR_ALARMHOST_MOD_ANALOG_CONFIG = _hk_struct_test.MINOR_ALARMHOST_MOD_ANALOG_CONFIG
MINOR_ALARMHOST_RS485_CONFIG = _hk_struct_test.MINOR_ALARMHOST_RS485_CONFIG
MINOR_ALARMHOST_PHONE_CONFIG = _hk_struct_test.MINOR_ALARMHOST_PHONE_CONFIG
MINOR_ALARMHOST_ADD_ADMIN = _hk_struct_test.MINOR_ALARMHOST_ADD_ADMIN
MINOR_ALARMHOST_MOD_ADMIN_PARAM = _hk_struct_test.MINOR_ALARMHOST_MOD_ADMIN_PARAM
MINOR_ALARMHOST_DEL_ADMIN = _hk_struct_test.MINOR_ALARMHOST_DEL_ADMIN
MINOR_ALARMHOST_ADD_NETUSER = _hk_struct_test.MINOR_ALARMHOST_ADD_NETUSER
MINOR_ALARMHOST_MOD_NETUSER_PARAM = _hk_struct_test.MINOR_ALARMHOST_MOD_NETUSER_PARAM
MINOR_ALARMHOST_DEL_NETUSER = _hk_struct_test.MINOR_ALARMHOST_DEL_NETUSER
MINOR_ALARMHOST_ADD_OPERATORUSER = _hk_struct_test.MINOR_ALARMHOST_ADD_OPERATORUSER
MINOR_ALARMHOST_MOD_OPERATORUSER_PW = _hk_struct_test.MINOR_ALARMHOST_MOD_OPERATORUSER_PW
MINOR_ALARMHOST_DEL_OPERATORUSER = _hk_struct_test.MINOR_ALARMHOST_DEL_OPERATORUSER
MINOR_ALARMHOST_ADD_KEYPADUSER = _hk_struct_test.MINOR_ALARMHOST_ADD_KEYPADUSER
MINOR_ALARMHOST_DEL_KEYPADUSER = _hk_struct_test.MINOR_ALARMHOST_DEL_KEYPADUSER
MINOR_ALARMHOST_MOD_HOST_CONFIG = _hk_struct_test.MINOR_ALARMHOST_MOD_HOST_CONFIG
MINOR_ALARMHOST_RESTORE_BYPASS = _hk_struct_test.MINOR_ALARMHOST_RESTORE_BYPASS
MINOR_ALARMHOST_ALARMOUT_OPEN = _hk_struct_test.MINOR_ALARMHOST_ALARMOUT_OPEN
MINOR_ALARMHOST_ALARMOUT_CLOSE = _hk_struct_test.MINOR_ALARMHOST_ALARMOUT_CLOSE
MINOR_ALARMHOST_MOD_SUBSYSTEM_PARAM = _hk_struct_test.MINOR_ALARMHOST_MOD_SUBSYSTEM_PARAM
MINOR_ALARMHOST_GROUP_BYPASS = _hk_struct_test.MINOR_ALARMHOST_GROUP_BYPASS
MINOR_ALARMHOST_RESTORE_GROUP_BYPASS = _hk_struct_test.MINOR_ALARMHOST_RESTORE_GROUP_BYPASS
MINOR_ALARMHOST_MOD_GRPS_PARAM = _hk_struct_test.MINOR_ALARMHOST_MOD_GRPS_PARAM
MINOR_ALARMHOST_MOD_REPORT_MOD = _hk_struct_test.MINOR_ALARMHOST_MOD_REPORT_MOD
MINOR_ALARMHOST_MOD_GATEWAY_PARAM = _hk_struct_test.MINOR_ALARMHOST_MOD_GATEWAY_PARAM
MINOR_STAY_ARM = _hk_struct_test.MINOR_STAY_ARM
MINOR_QUICK_ARM = _hk_struct_test.MINOR_QUICK_ARM
MINOR_AUTOMATIC_ARM = _hk_struct_test.MINOR_AUTOMATIC_ARM
MINOR_AUTOMATIC_DISARM = _hk_struct_test.MINOR_AUTOMATIC_DISARM
MINOR_KEYSWITCH_ARM = _hk_struct_test.MINOR_KEYSWITCH_ARM
MINOR_KEYSWITCH_DISARM = _hk_struct_test.MINOR_KEYSWITCH_DISARM
MINOR_CLEAR_ALARM = _hk_struct_test.MINOR_CLEAR_ALARM
MINOR_MOD_FAULT_CFG = _hk_struct_test.MINOR_MOD_FAULT_CFG
MINOR_MOD_EVENT_TRIGGER_ALARMOUT_CFG = _hk_struct_test.MINOR_MOD_EVENT_TRIGGER_ALARMOUT_CFG
MINOR_SEARCH_EXTERNAL_MODULE = _hk_struct_test.MINOR_SEARCH_EXTERNAL_MODULE
MINOR_REGISTER_EXTERNAL_MODULE = _hk_struct_test.MINOR_REGISTER_EXTERNAL_MODULE
MINOR_CLOSE_KEYBOARD_ALARM = _hk_struct_test.MINOR_CLOSE_KEYBOARD_ALARM
MINOR_MOD_3G_PARAM = _hk_struct_test.MINOR_MOD_3G_PARAM
MINOR_MOD_PRINT_PARAM = _hk_struct_test.MINOR_MOD_PRINT_PARAM
MINOR_ALARMHOST_SD_CARD_FORMAT = _hk_struct_test.MINOR_ALARMHOST_SD_CARD_FORMAT
MINOR_ALARMHOST_SUBSYSTEM_UPGRADE = _hk_struct_test.MINOR_ALARMHOST_SUBSYSTEM_UPGRADE
MINOR_PLAN_ARM_CFG = _hk_struct_test.MINOR_PLAN_ARM_CFG
MINOR_PHONE_ARM = _hk_struct_test.MINOR_PHONE_ARM
MINOR_PHONE_STAY_ARM = _hk_struct_test.MINOR_PHONE_STAY_ARM
MINOR_PHONE_QUICK_ARM = _hk_struct_test.MINOR_PHONE_QUICK_ARM
MINOR_PHONE_DISARM = _hk_struct_test.MINOR_PHONE_DISARM
MINOR_PHONE_CLEAR_ALARM = _hk_struct_test.MINOR_PHONE_CLEAR_ALARM
MINOR_WHITELIST_CFG = _hk_struct_test.MINOR_WHITELIST_CFG
MINOR_TIME_TRIGGER_CFG = _hk_struct_test.MINOR_TIME_TRIGGER_CFG
MINOR_CAPTRUE_CFG = _hk_struct_test.MINOR_CAPTRUE_CFG
MINOR_TAMPER_CFG = _hk_struct_test.MINOR_TAMPER_CFG
MINOR_REMOTE_KEYPAD_UPGRADE = _hk_struct_test.MINOR_REMOTE_KEYPAD_UPGRADE
MINOR_ONETOUCH_AWAY_ARMING = _hk_struct_test.MINOR_ONETOUCH_AWAY_ARMING
MINOR_ONETOUCH_STAY_ARMING = _hk_struct_test.MINOR_ONETOUCH_STAY_ARMING
MINOR_SINGLE_PARTITION_ARMING_OR_DISARMING = _hk_struct_test.MINOR_SINGLE_PARTITION_ARMING_OR_DISARMING
MINOR_CARD_CONFIGURATION = _hk_struct_test.MINOR_CARD_CONFIGURATION
MINOR_CARD_ARMING_OR_DISARMING = _hk_struct_test.MINOR_CARD_ARMING_OR_DISARMING
MINOR_EXPENDING_NETCENTER_CONFIGURATION = _hk_struct_test.MINOR_EXPENDING_NETCENTER_CONFIGURATION
MINOR_NETCARD_CONFIGURATION = _hk_struct_test.MINOR_NETCARD_CONFIGURATION
MINOR_DDNS_CONFIGURATION = _hk_struct_test.MINOR_DDNS_CONFIGURATION
MINOR_RS485BUS_CONFIGURATION = _hk_struct_test.MINOR_RS485BUS_CONFIGURATION
MINOR_RS485BUS_RE_REGISTRATION = _hk_struct_test.MINOR_RS485BUS_RE_REGISTRATION
MINOR_REMOTE_OPEN_ELECTRIC_LOCK = _hk_struct_test.MINOR_REMOTE_OPEN_ELECTRIC_LOCK
MINOR_REMOTE_CLOSE_ELECTRIC_LOCK = _hk_struct_test.MINOR_REMOTE_CLOSE_ELECTRIC_LOCK
MINOR_LOCAL_OPEN_ELECTRIC_LOCK = _hk_struct_test.MINOR_LOCAL_OPEN_ELECTRIC_LOCK
MINOR_LOCAL_CLOSE_ELECTRIC_LOCK = _hk_struct_test.MINOR_LOCAL_CLOSE_ELECTRIC_LOCK
MINOR_OPEN_ALARM_LAMP = _hk_struct_test.MINOR_OPEN_ALARM_LAMP
MINOR_CLOSE_ALARM_LAMP = _hk_struct_test.MINOR_CLOSE_ALARM_LAMP
MINOR_TEMPORARY_PASSWORD = _hk_struct_test.MINOR_TEMPORARY_PASSWORD
MINOR_HIDDNS_CONFIG = _hk_struct_test.MINOR_HIDDNS_CONFIG
MINOR_REMOTE_KEYBOARD_UPDATA = _hk_struct_test.MINOR_REMOTE_KEYBOARD_UPDATA
MINOR_ZONE_ADD_DETECTOR = _hk_struct_test.MINOR_ZONE_ADD_DETECTOR
MINOR_ZONE_DELETE_DETECTOR = _hk_struct_test.MINOR_ZONE_DELETE_DETECTOR
MINOR_QUERY_DETECTOR_SIGNAL = _hk_struct_test.MINOR_QUERY_DETECTOR_SIGNAL
MINOR_QUERY_DETECTOR_BATTERY = _hk_struct_test.MINOR_QUERY_DETECTOR_BATTERY
MINOR_SET_DETECTOR_GUARD = _hk_struct_test.MINOR_SET_DETECTOR_GUARD
MINOR_SET_DETECTOR_UNGUARD = _hk_struct_test.MINOR_SET_DETECTOR_UNGUARD
MINOR_WIRELESS_CONFIGURATION = _hk_struct_test.MINOR_WIRELESS_CONFIGURATION
MINOR_OPEN_VOICE = _hk_struct_test.MINOR_OPEN_VOICE
MINOR_CLOSE_VOICE = _hk_struct_test.MINOR_CLOSE_VOICE
MINOR_ENABLE_FUNCTION_KEY = _hk_struct_test.MINOR_ENABLE_FUNCTION_KEY
MINOR_DISABLE_FUNCTION_KEY = _hk_struct_test.MINOR_DISABLE_FUNCTION_KEY
MINOR_READ_CARD = _hk_struct_test.MINOR_READ_CARD
MINOR_START_BROADCAST = _hk_struct_test.MINOR_START_BROADCAST
MINOR_STOP_BROADCAST = _hk_struct_test.MINOR_STOP_BROADCAST
MINOR_REMOTE_ZONE_MODULE_UPGRADE = _hk_struct_test.MINOR_REMOTE_ZONE_MODULE_UPGRADE
MINOR_NETWORK_MODULE_EXTEND = _hk_struct_test.MINOR_NETWORK_MODULE_EXTEND
MINOR_ADD_CONTROLLER = _hk_struct_test.MINOR_ADD_CONTROLLER
MINOR_DELETE_CONTORLLER = _hk_struct_test.MINOR_DELETE_CONTORLLER
MINOR_REMOTE_NETWORKMODULE_UPGRADE = _hk_struct_test.MINOR_REMOTE_NETWORKMODULE_UPGRADE
MINOR_WIRELESS_OUTPUT_ADD = _hk_struct_test.MINOR_WIRELESS_OUTPUT_ADD
MINOR_WIRELESS_OUTPUT_DEL = _hk_struct_test.MINOR_WIRELESS_OUTPUT_DEL
MINOR_WIRELESS_REPEATER_ADD = _hk_struct_test.MINOR_WIRELESS_REPEATER_ADD
MINOR_WIRELESS_REPEATER_DEL = _hk_struct_test.MINOR_WIRELESS_REPEATER_DEL
MINOR_PHONELIST_CFG = _hk_struct_test.MINOR_PHONELIST_CFG
MINOR_RF_SIGNAL_CHECK = _hk_struct_test.MINOR_RF_SIGNAL_CHECK
MINOR_USB_UPGRADE = _hk_struct_test.MINOR_USB_UPGRADE
MINOR_DOOR_TIME_REMINDER_CFG = _hk_struct_test.MINOR_DOOR_TIME_REMINDER_CFG
MINOR_WIRELESS_SIREN_ADD = _hk_struct_test.MINOR_WIRELESS_SIREN_ADD
MINOR_WIRELESS_SIREN_DEL = _hk_struct_test.MINOR_WIRELESS_SIREN_DEL
MINOR_OUT_SCALE_OPEN = _hk_struct_test.MINOR_OUT_SCALE_OPEN
MINOR_OUT_SCALE_CLOSE = _hk_struct_test.MINOR_OUT_SCALE_CLOSE
MINOR_ALARMHOST_4G_MODULS_START = _hk_struct_test.MINOR_ALARMHOST_4G_MODULS_START
MINOR_ALARMHOST_4G_MODULS_STOP = _hk_struct_test.MINOR_ALARMHOST_4G_MODULS_STOP
MINOR_EZVIZ_CLOUD_START = _hk_struct_test.MINOR_EZVIZ_CLOUD_START
MINOR_EZVIZ_CLOUD_STOP = _hk_struct_test.MINOR_EZVIZ_CLOUD_STOP
MINOR_SIPUA_GRID_START = _hk_struct_test.MINOR_SIPUA_GRID_START
MINOR_SIPUA_GRID_STOP = _hk_struct_test.MINOR_SIPUA_GRID_STOP
MINOR_MODBUS_FILE_DOWNLOAD = _hk_struct_test.MINOR_MODBUS_FILE_DOWNLOAD
MINOR_MODBUS_FILE_UPLOAD = _hk_struct_test.MINOR_MODBUS_FILE_UPLOAD
MINOR_RS485_DLL_FILE_DOWNLOAD = _hk_struct_test.MINOR_RS485_DLL_FILE_DOWNLOAD
MINOR_RS485_DLL_FLIE_UPLOAD = _hk_struct_test.MINOR_RS485_DLL_FLIE_UPLOAD
MINOR_TX1_REBOOT = _hk_struct_test.MINOR_TX1_REBOOT
MINOR_LORA_PARAM = _hk_struct_test.MINOR_LORA_PARAM
MINOR_GB28181_PLATE_CFG_PARAM = _hk_struct_test.MINOR_GB28181_PLATE_CFG_PARAM
MINOR_GB28181_SERVER_START = _hk_struct_test.MINOR_GB28181_SERVER_START
MINOR_GB28181_SERVER_STOP = _hk_struct_test.MINOR_GB28181_SERVER_STOP
MINOR_WEB_AUTHENTICATION = _hk_struct_test.MINOR_WEB_AUTHENTICATION
MINOR_SADP_ENABLED = _hk_struct_test.MINOR_SADP_ENABLED
MINOR_HTTPS_ENABLED = _hk_struct_test.MINOR_HTTPS_ENABLED
MINOR_EZVIZ_PARAM_CFG = _hk_struct_test.MINOR_EZVIZ_PARAM_CFG
MINOR_SET_MOTION_DETECTION_CFG = _hk_struct_test.MINOR_SET_MOTION_DETECTION_CFG
MINOR_GET_MOTION_DETECTION_CFG = _hk_struct_test.MINOR_GET_MOTION_DETECTION_CFG
MINOR_SET_SHELTER_ALARM_CFG = _hk_struct_test.MINOR_SET_SHELTER_ALARM_CFG
MINOR_GET_SHELTER_ALARM_CFG = _hk_struct_test.MINOR_GET_SHELTER_ALARM_CFG
MINOR_SET_VIDEO_LOSS_CFG = _hk_struct_test.MINOR_SET_VIDEO_LOSS_CFG
MINOR_GET_VIDEO_LOSS_CFG = _hk_struct_test.MINOR_GET_VIDEO_LOSS_CFG
MINOR_SET_ABNORMAL_CFG = _hk_struct_test.MINOR_SET_ABNORMAL_CFG
MINOR_GET_ABNORMAL_CFG = _hk_struct_test.MINOR_GET_ABNORMAL_CFG
MINOR_SET_ALARM_LINKAGE_CFG = _hk_struct_test.MINOR_SET_ALARM_LINKAGE_CFG
MINOR_GET_ALARM_LINKAGE_CFG = _hk_struct_test.MINOR_GET_ALARM_LINKAGE_CFG
MINOR_SET_NETWORK_CFG = _hk_struct_test.MINOR_SET_NETWORK_CFG
MINOR_GET_NETWORK_CFG = _hk_struct_test.MINOR_GET_NETWORK_CFG
MINOR_SET_VIDEO_MASK_CFG = _hk_struct_test.MINOR_SET_VIDEO_MASK_CFG
MINOR_GET_VIDEO_MASK_CFG = _hk_struct_test.MINOR_GET_VIDEO_MASK_CFG
MINOR_LOCAL_ADD_CAR_INFO = _hk_struct_test.MINOR_LOCAL_ADD_CAR_INFO
MINOR_LOCAL_MOD_CAR_INFO = _hk_struct_test.MINOR_LOCAL_MOD_CAR_INFO
MINOR_LOCAL_DEL_CAR_INFO = _hk_struct_test.MINOR_LOCAL_DEL_CAR_INFO
MINOR_LOCAL_FIND_CAR_INFO = _hk_struct_test.MINOR_LOCAL_FIND_CAR_INFO
MINOR_LOCAL_ADD_MONITOR_INFO = _hk_struct_test.MINOR_LOCAL_ADD_MONITOR_INFO
MINOR_LOCAL_MOD_MONITOR_INFO = _hk_struct_test.MINOR_LOCAL_MOD_MONITOR_INFO
MINOR_LOCAL_DEL_MONITOR_INFO = _hk_struct_test.MINOR_LOCAL_DEL_MONITOR_INFO
MINOR_LOCAL_FIND_MONITOR_INFO = _hk_struct_test.MINOR_LOCAL_FIND_MONITOR_INFO
MINOR_LOCAL_FIND_NORMAL_PASS_INFO = _hk_struct_test.MINOR_LOCAL_FIND_NORMAL_PASS_INFO
MINOR_LOCAL_FIND_ABNORMAL_PASS_INFO = _hk_struct_test.MINOR_LOCAL_FIND_ABNORMAL_PASS_INFO
MINOR_LOCAL_FIND_PEDESTRIAN_PASS_INFO = _hk_struct_test.MINOR_LOCAL_FIND_PEDESTRIAN_PASS_INFO
MINOR_LOCAL_PIC_PREVIEW = _hk_struct_test.MINOR_LOCAL_PIC_PREVIEW
MINOR_LOCAL_SET_GATE_PARM_CFG = _hk_struct_test.MINOR_LOCAL_SET_GATE_PARM_CFG
MINOR_LOCAL_GET_GATE_PARM_CFG = _hk_struct_test.MINOR_LOCAL_GET_GATE_PARM_CFG
MINOR_LOCAL_SET_DATAUPLOAD_PARM_CFG = _hk_struct_test.MINOR_LOCAL_SET_DATAUPLOAD_PARM_CFG
MINOR_LOCAL_GET_DATAUPLOAD_PARM_CFG = _hk_struct_test.MINOR_LOCAL_GET_DATAUPLOAD_PARM_CFG
MINOR_LOCAL_DEVICE_CONTROL = _hk_struct_test.MINOR_LOCAL_DEVICE_CONTROL
MINOR_LOCAL_ADD_EXTERNAL_DEVICE_INFO = _hk_struct_test.MINOR_LOCAL_ADD_EXTERNAL_DEVICE_INFO
MINOR_LOCAL_MOD_EXTERNAL_DEVICE_INFO = _hk_struct_test.MINOR_LOCAL_MOD_EXTERNAL_DEVICE_INFO
MINOR_LOCAL_DEL_EXTERNAL_DEVICE_INFO = _hk_struct_test.MINOR_LOCAL_DEL_EXTERNAL_DEVICE_INFO
MINOR_LOCAL_FIND_EXTERNAL_DEVICE_INFO = _hk_struct_test.MINOR_LOCAL_FIND_EXTERNAL_DEVICE_INFO
MINOR_LOCAL_ADD_CHARGE_RULE = _hk_struct_test.MINOR_LOCAL_ADD_CHARGE_RULE
MINOR_LOCAL_MOD_CHARGE_RULE = _hk_struct_test.MINOR_LOCAL_MOD_CHARGE_RULE
MINOR_LOCAL_DEL_CHARGE_RULE = _hk_struct_test.MINOR_LOCAL_DEL_CHARGE_RULE
MINOR_LOCAL_FIND_CHARGE_RULE = _hk_struct_test.MINOR_LOCAL_FIND_CHARGE_RULE
MINOR_LOCAL_COUNT_NORMAL_CURRENTINFO = _hk_struct_test.MINOR_LOCAL_COUNT_NORMAL_CURRENTINFO
MINOR_LOCAL_EXPORT_NORMAL_CURRENTINFO_REPORT = _hk_struct_test.MINOR_LOCAL_EXPORT_NORMAL_CURRENTINFO_REPORT
MINOR_LOCAL_COUNT_ABNORMAL_CURRENTINFO = _hk_struct_test.MINOR_LOCAL_COUNT_ABNORMAL_CURRENTINFO
MINOR_LOCAL_EXPORT_ABNORMAL_CURRENTINFO_REPORT = _hk_struct_test.MINOR_LOCAL_EXPORT_ABNORMAL_CURRENTINFO_REPORT
MINOR_LOCAL_COUNT_PEDESTRIAN_CURRENTINFO = _hk_struct_test.MINOR_LOCAL_COUNT_PEDESTRIAN_CURRENTINFO
MINOR_LOCAL_EXPORT_PEDESTRIAN_CURRENTINFO_REPORT = _hk_struct_test.MINOR_LOCAL_EXPORT_PEDESTRIAN_CURRENTINFO_REPORT
MINOR_LOCAL_FIND_CAR_CHARGEINFO = _hk_struct_test.MINOR_LOCAL_FIND_CAR_CHARGEINFO
MINOR_LOCAL_COUNT_CAR_CHARGEINFO = _hk_struct_test.MINOR_LOCAL_COUNT_CAR_CHARGEINFO
MINOR_LOCAL_EXPORT_CAR_CHARGEINFO_REPORT = _hk_struct_test.MINOR_LOCAL_EXPORT_CAR_CHARGEINFO_REPORT
MINOR_LOCAL_FIND_SHIFTINFO = _hk_struct_test.MINOR_LOCAL_FIND_SHIFTINFO
MINOR_LOCAL_FIND_CARDINFO = _hk_struct_test.MINOR_LOCAL_FIND_CARDINFO
MINOR_LOCAL_ADD_RELIEF_RULE = _hk_struct_test.MINOR_LOCAL_ADD_RELIEF_RULE
MINOR_LOCAL_MOD_RELIEF_RULE = _hk_struct_test.MINOR_LOCAL_MOD_RELIEF_RULE
MINOR_LOCAL_DEL_RELIEF_RULE = _hk_struct_test.MINOR_LOCAL_DEL_RELIEF_RULE
MINOR_LOCAL_FIND_RELIEF_RULE = _hk_struct_test.MINOR_LOCAL_FIND_RELIEF_RULE
MINOR_LOCAL_GET_ENDETCFG = _hk_struct_test.MINOR_LOCAL_GET_ENDETCFG
MINOR_LOCAL_SET_ENDETCFG = _hk_struct_test.MINOR_LOCAL_SET_ENDETCFG
MINOR_LOCAL_SET_ENDEV_ISSUEDDATA = _hk_struct_test.MINOR_LOCAL_SET_ENDEV_ISSUEDDATA
MINOR_LOCAL_DEL_ENDEV_ISSUEDDATA = _hk_struct_test.MINOR_LOCAL_DEL_ENDEV_ISSUEDDATA
MINOR_REMOTE_DEVICE_CONTROL = _hk_struct_test.MINOR_REMOTE_DEVICE_CONTROL
MINOR_REMOTE_SET_GATE_PARM_CFG = _hk_struct_test.MINOR_REMOTE_SET_GATE_PARM_CFG
MINOR_REMOTE_GET_GATE_PARM_CFG = _hk_struct_test.MINOR_REMOTE_GET_GATE_PARM_CFG
MINOR_REMOTE_SET_DATAUPLOAD_PARM_CFG = _hk_struct_test.MINOR_REMOTE_SET_DATAUPLOAD_PARM_CFG
MINOR_REMOTE_GET_DATAUPLOAD_PARM_CFG = _hk_struct_test.MINOR_REMOTE_GET_DATAUPLOAD_PARM_CFG
MINOR_REMOTE_GET_BASE_INFO = _hk_struct_test.MINOR_REMOTE_GET_BASE_INFO
MINOR_REMOTE_GET_OVERLAP_CFG = _hk_struct_test.MINOR_REMOTE_GET_OVERLAP_CFG
MINOR_REMOTE_SET_OVERLAP_CFG = _hk_struct_test.MINOR_REMOTE_SET_OVERLAP_CFG
MINOR_REMOTE_GET_ROAD_INFO = _hk_struct_test.MINOR_REMOTE_GET_ROAD_INFO
MINOR_REMOTE_START_TRANSCHAN = _hk_struct_test.MINOR_REMOTE_START_TRANSCHAN
MINOR_REMOTE_GET_ECTWORKSTATE = _hk_struct_test.MINOR_REMOTE_GET_ECTWORKSTATE
MINOR_REMOTE_GET_ECTCHANINFO = _hk_struct_test.MINOR_REMOTE_GET_ECTCHANINFO
MINOR_REMOTE_ADD_EXTERNAL_DEVICE_INFO = _hk_struct_test.MINOR_REMOTE_ADD_EXTERNAL_DEVICE_INFO
MINOR_REMOTE_MOD_EXTERNAL_DEVICE_INFO = _hk_struct_test.MINOR_REMOTE_MOD_EXTERNAL_DEVICE_INFO
MINOR_REMOTE_GET_ENDETCFG = _hk_struct_test.MINOR_REMOTE_GET_ENDETCFG
MINOR_REMOTE_SET_ENDETCFG = _hk_struct_test.MINOR_REMOTE_SET_ENDETCFG
MINOR_REMOTE_ENDEV_ISSUEDDATA = _hk_struct_test.MINOR_REMOTE_ENDEV_ISSUEDDATA
MINOR_REMOTE_DEL_ENDEV_ISSUEDDATA = _hk_struct_test.MINOR_REMOTE_DEL_ENDEV_ISSUEDDATA
MINOR_REMOTE_ON_CTRL_LAMP = _hk_struct_test.MINOR_REMOTE_ON_CTRL_LAMP
MINOR_REMOTE_OFF_CTRL_LAMP = _hk_struct_test.MINOR_REMOTE_OFF_CTRL_LAMP
MINOR_SET_VOICE_LEVEL_PARAM = _hk_struct_test.MINOR_SET_VOICE_LEVEL_PARAM
MINOR_SET_VOICE_INTERCOM_PARAM = _hk_struct_test.MINOR_SET_VOICE_INTERCOM_PARAM
MINOR_SET_INTELLIGENT_PARAM = _hk_struct_test.MINOR_SET_INTELLIGENT_PARAM
MINOR_LOCAL_SET_RAID_SPEED = _hk_struct_test.MINOR_LOCAL_SET_RAID_SPEED
MINOR_REMOTE_SET_RAID_SPEED = _hk_struct_test.MINOR_REMOTE_SET_RAID_SPEED
MINOR_REMOTE_CREATE_STORAGE_POOL = _hk_struct_test.MINOR_REMOTE_CREATE_STORAGE_POOL
MINOR_REMOTE_DEL_STORAGE_POOL = _hk_struct_test.MINOR_REMOTE_DEL_STORAGE_POOL
MINOR_REMOTE_DEL_PIC = _hk_struct_test.MINOR_REMOTE_DEL_PIC
MINOR_REMOTE_DEL_RECORD = _hk_struct_test.MINOR_REMOTE_DEL_RECORD
MINOR_REMOTE_CLOUD_ENABLE = _hk_struct_test.MINOR_REMOTE_CLOUD_ENABLE
MINOR_REMOTE_CLOUD_DISABLE = _hk_struct_test.MINOR_REMOTE_CLOUD_DISABLE
MINOR_REMOTE_CLOUD_MODIFY_PARAM = _hk_struct_test.MINOR_REMOTE_CLOUD_MODIFY_PARAM
MINOR_REMOTE_CLOUD_MODIFY_VOLUME = _hk_struct_test.MINOR_REMOTE_CLOUD_MODIFY_VOLUME
MINOR_REMOTE_GET_GB28181_SERVICE_PARAM = _hk_struct_test.MINOR_REMOTE_GET_GB28181_SERVICE_PARAM
MINOR_REMOTE_SET_GB28181_SERVICE_PARAM = _hk_struct_test.MINOR_REMOTE_SET_GB28181_SERVICE_PARAM
MINOR_LOCAL_GET_GB28181_SERVICE_PARAM = _hk_struct_test.MINOR_LOCAL_GET_GB28181_SERVICE_PARAM
MINOR_LOCAL_SET_GB28181_SERVICE_PARAM = _hk_struct_test.MINOR_LOCAL_SET_GB28181_SERVICE_PARAM
MINOR_REMOTE_SET_SIP_SERVER = _hk_struct_test.MINOR_REMOTE_SET_SIP_SERVER
MINOR_LOCAL_SET_SIP_SERVER = _hk_struct_test.MINOR_LOCAL_SET_SIP_SERVER
MINOR_LOCAL_BLACKWHITEFILE_OUTPUT = _hk_struct_test.MINOR_LOCAL_BLACKWHITEFILE_OUTPUT
MINOR_LOCAL_BLACKWHITEFILE_INPUT = _hk_struct_test.MINOR_LOCAL_BLACKWHITEFILE_INPUT
MINOR_REMOTE_BALCKWHITECFGFILE_OUTPUT = _hk_struct_test.MINOR_REMOTE_BALCKWHITECFGFILE_OUTPUT
MINOR_REMOTE_BALCKWHITECFGFILE_INPUT = _hk_struct_test.MINOR_REMOTE_BALCKWHITECFGFILE_INPUT
MINOR_REMOTE_CREATE_MOD_VIEWLIB_SPACE = _hk_struct_test.MINOR_REMOTE_CREATE_MOD_VIEWLIB_SPACE
MINOR_REMOTE_DELETE_VIEWLIB_FILE = _hk_struct_test.MINOR_REMOTE_DELETE_VIEWLIB_FILE
MINOR_REMOTE_DOWNLOAD_VIEWLIB_FILE = _hk_struct_test.MINOR_REMOTE_DOWNLOAD_VIEWLIB_FILE
MINOR_REMOTE_UPLOAD_VIEWLIB_FILE = _hk_struct_test.MINOR_REMOTE_UPLOAD_VIEWLIB_FILE
MINOR_LOCAL_CREATE_MOD_VIEWLIB_SPACE = _hk_struct_test.MINOR_LOCAL_CREATE_MOD_VIEWLIB_SPACE
MINOR_LOCAL_SET_DEVICE_ACTIVE = _hk_struct_test.MINOR_LOCAL_SET_DEVICE_ACTIVE
MINOR_REMOTE_SET_DEVICE_ACTIVE = _hk_struct_test.MINOR_REMOTE_SET_DEVICE_ACTIVE
MINOR_LOCAL_PARA_FACTORY_DEFAULT = _hk_struct_test.MINOR_LOCAL_PARA_FACTORY_DEFAULT
MINOR_REMOTE_PARA_FACTORY_DEFAULT = _hk_struct_test.MINOR_REMOTE_PARA_FACTORY_DEFAULT
MINOR_UPLAOD_STATIC_MATERIAL = _hk_struct_test.MINOR_UPLAOD_STATIC_MATERIAL
MINOR_UPLOAD_DYNAMIC_MATERIAL = _hk_struct_test.MINOR_UPLOAD_DYNAMIC_MATERIAL
MINOR_DELETE_MATERIAL = _hk_struct_test.MINOR_DELETE_MATERIAL
MINOR_DOWNLOAD_STATIC_MATERIAL = _hk_struct_test.MINOR_DOWNLOAD_STATIC_MATERIAL
MINOR_COVER_STATIC_MATERIAL = _hk_struct_test.MINOR_COVER_STATIC_MATERIAL
MINOR_APPROVE_MATERIAL = _hk_struct_test.MINOR_APPROVE_MATERIAL
MINOR_UPLAOD_PROGRAM = _hk_struct_test.MINOR_UPLAOD_PROGRAM
MINOR_DOWNLOAD_PROGRAM = _hk_struct_test.MINOR_DOWNLOAD_PROGRAM
MINOR_DELETE_PROGRAM = _hk_struct_test.MINOR_DELETE_PROGRAM
MINOR_MODIFY_PROGRAM = _hk_struct_test.MINOR_MODIFY_PROGRAM
MINOR_APPROVE_PRAGRAM = _hk_struct_test.MINOR_APPROVE_PRAGRAM
MINOR_UPLAOD_SCHEDULE = _hk_struct_test.MINOR_UPLAOD_SCHEDULE
MINOR_DOWNLOAD_SCHEDULE = _hk_struct_test.MINOR_DOWNLOAD_SCHEDULE
MINOR_DELETE_SCHEDULE = _hk_struct_test.MINOR_DELETE_SCHEDULE
MINOR_MODIFY_SCHEDULE = _hk_struct_test.MINOR_MODIFY_SCHEDULE
MINOR_RELEASE_SCHEDULE = _hk_struct_test.MINOR_RELEASE_SCHEDULE
MINOR_ADD_TERMINAL = _hk_struct_test.MINOR_ADD_TERMINAL
MINOR_DELETE_TERMINAL = _hk_struct_test.MINOR_DELETE_TERMINAL
MINOR_MODIFY_TERMIANL_PARAM = _hk_struct_test.MINOR_MODIFY_TERMIANL_PARAM
MINOR_MODIFY_TERMIANL_PLAY_PARAM = _hk_struct_test.MINOR_MODIFY_TERMIANL_PLAY_PARAM
MINOR_ADD_TERMIANL_GROUP = _hk_struct_test.MINOR_ADD_TERMIANL_GROUP
MINOR_MODIFY_TERMINAL_GROUP_PARAM = _hk_struct_test.MINOR_MODIFY_TERMINAL_GROUP_PARAM
MINOR_DELETE_TERMIANL_GROUP = _hk_struct_test.MINOR_DELETE_TERMIANL_GROUP
MINOR_TERMINAL_PLAY_CONTROL = _hk_struct_test.MINOR_TERMINAL_PLAY_CONTROL
MINOR_TERMINAL_ON_OFF_LINE = _hk_struct_test.MINOR_TERMINAL_ON_OFF_LINE
MINOR_SET_SWITCH_PLAN = _hk_struct_test.MINOR_SET_SWITCH_PLAN
MINOR_SET_VOLUME_PLAN = _hk_struct_test.MINOR_SET_VOLUME_PLAN
MINOR_TERMINAL_SCREENSHOT = _hk_struct_test.MINOR_TERMINAL_SCREENSHOT
MINOR_SYSTEM_TIME_CFG = _hk_struct_test.MINOR_SYSTEM_TIME_CFG
MINOR_ADD_USER_CFG = _hk_struct_test.MINOR_ADD_USER_CFG
MINOR_DEL_USER_CFG = _hk_struct_test.MINOR_DEL_USER_CFG
MINOR_REMOTE_MANAGE_HDD = _hk_struct_test.MINOR_REMOTE_MANAGE_HDD
MINOR_TERMINAL_UPDATE_START = _hk_struct_test.MINOR_TERMINAL_UPDATE_START
MINOR_SVR_RESTORE_DEFAULT_PARAM = _hk_struct_test.MINOR_SVR_RESTORE_DEFAULT_PARAM
MINOR_SVR_REMOTE_RESTORE_FACTORY = _hk_struct_test.MINOR_SVR_REMOTE_RESTORE_FACTORY
MINOR_SVR_REMOTE_REBOOT = _hk_struct_test.MINOR_SVR_REMOTE_REBOOT
MINOR_SVR_MODIFY_NETWORK_PARAM = _hk_struct_test.MINOR_SVR_MODIFY_NETWORK_PARAM
MINOR_SVR_SOFTWARE_UPGRADE = _hk_struct_test.MINOR_SVR_SOFTWARE_UPGRADE
MINOR_BACKUP_DATA = _hk_struct_test.MINOR_BACKUP_DATA
MINOR_TRANSFER_DATA = _hk_struct_test.MINOR_TRANSFER_DATA
MINOR_RESTORE_DATA = _hk_struct_test.MINOR_RESTORE_DATA
MINOR_SET_INPUT_PLAN = _hk_struct_test.MINOR_SET_INPUT_PLAN
MINOR_TERMINAL_ADB = _hk_struct_test.MINOR_TERMINAL_ADB
MINOR_TERMINAL_VOLUME = _hk_struct_test.MINOR_TERMINAL_VOLUME
MINOR_TERMINAL_LOGO = _hk_struct_test.MINOR_TERMINAL_LOGO
MINOR_TERMINAL_DEFAULT_SCHEDULE = _hk_struct_test.MINOR_TERMINAL_DEFAULT_SCHEDULE
MINOR_TERMINAL_PASSWORD = _hk_struct_test.MINOR_TERMINAL_PASSWORD
MINOR_TERMINAL_IP = _hk_struct_test.MINOR_TERMINAL_IP
MINOR_TERMINAL_RELATE_IPC = _hk_struct_test.MINOR_TERMINAL_RELATE_IPC
MINOR_TERMINAL_SERVER = _hk_struct_test.MINOR_TERMINAL_SERVER
MINOR_TERMINAL_SADP = _hk_struct_test.MINOR_TERMINAL_SADP
MINOR_TERMINAL_TIMEZONE = _hk_struct_test.MINOR_TERMINAL_TIMEZONE
MINOR_TERMINAL_TEMP_PROTECT = _hk_struct_test.MINOR_TERMINAL_TEMP_PROTECT
MINOR_ADD_ORGANIZATION = _hk_struct_test.MINOR_ADD_ORGANIZATION
MINOR_DELETE_ORGANIZATION = _hk_struct_test.MINOR_DELETE_ORGANIZATION
MINOR_MODIFY_ORGANIZATION = _hk_struct_test.MINOR_MODIFY_ORGANIZATION
MINOR_WEATHER_FACTORY = _hk_struct_test.MINOR_WEATHER_FACTORY
MINOR_SADP_ENABLE = _hk_struct_test.MINOR_SADP_ENABLE
MINOR_SSH_ENABLE = _hk_struct_test.MINOR_SSH_ENABLE
MINOR_MODIFY_MATERIAL = _hk_struct_test.MINOR_MODIFY_MATERIAL
MINOR_INSERT_CHARACTER = _hk_struct_test.MINOR_INSERT_CHARACTER
MINOR_TERMINAL_BACKLIGHT = _hk_struct_test.MINOR_TERMINAL_BACKLIGHT
MINOR_DOWNLOAD_MATERIAL_THUMBNAIL = _hk_struct_test.MINOR_DOWNLOAD_MATERIAL_THUMBNAIL
MINOR_UPLOAD_PROGRAM_THUMBNAIL = _hk_struct_test.MINOR_UPLOAD_PROGRAM_THUMBNAIL
MINOR_TDOWNLOAD_PROGRAM_THUMBNAIL = _hk_struct_test.MINOR_TDOWNLOAD_PROGRAM_THUMBNAIL
MINOR_BATCH_DELETE_SCHEDULE_PLAN = _hk_struct_test.MINOR_BATCH_DELETE_SCHEDULE_PLAN
MINOR_REPUBLISH = _hk_struct_test.MINOR_REPUBLISH
MINOR_CLEAR_TERMINAL_PLAY_INFO = _hk_struct_test.MINOR_CLEAR_TERMINAL_PLAY_INFO
MINOR_GET_TERMINAL_RESOLUTION = _hk_struct_test.MINOR_GET_TERMINAL_RESOLUTION
MINOR_SET_TERMINAL_RESOLUTION = _hk_struct_test.MINOR_SET_TERMINAL_RESOLUTION
MINOR_GET_BATCH_TERMINAL_UPGRATE_PROGRESS = _hk_struct_test.MINOR_GET_BATCH_TERMINAL_UPGRATE_PROGRESS
MINOR_GET_BATCH_PROGRESS = _hk_struct_test.MINOR_GET_BATCH_PROGRESS
MINOR_GET_TEMPLATE = _hk_struct_test.MINOR_GET_TEMPLATE
MINOR_INIT_TEMPLATE = _hk_struct_test.MINOR_INIT_TEMPLATE
MINOR_GET_TERMINAL_NTP_SERVERS = _hk_struct_test.MINOR_GET_TERMINAL_NTP_SERVERS
MINOR_SET_TERMINAL_NTP_SERVERS = _hk_struct_test.MINOR_SET_TERMINAL_NTP_SERVERS
MINOR_GET_RELEASE_DETAILS = _hk_struct_test.MINOR_GET_RELEASE_DETAILS
MINOR_UPLOAD_TEMPLATE_THUMBNAIL = _hk_struct_test.MINOR_UPLOAD_TEMPLATE_THUMBNAIL
MINOR_DOWNLOAD_TEMPLATE_THUMBNAIL = _hk_struct_test.MINOR_DOWNLOAD_TEMPLATE_THUMBNAIL
MINOR_ADD_TEMPLATE = _hk_struct_test.MINOR_ADD_TEMPLATE
MINOR_DELETE_TEMPLATE = _hk_struct_test.MINOR_DELETE_TEMPLATE
MINOR_MODIFY_TEMPLATE = _hk_struct_test.MINOR_MODIFY_TEMPLATE
MINOR_ADD_SCHEDULE_PLAN = _hk_struct_test.MINOR_ADD_SCHEDULE_PLAN
MINOR_MODIFY_SCHEDULE_PLAN = _hk_struct_test.MINOR_MODIFY_SCHEDULE_PLAN
MINOR_CANCEL_SCHEDULE_RELEASE = _hk_struct_test.MINOR_CANCEL_SCHEDULE_RELEASE
MINOR_GET_SCHEDULE = _hk_struct_test.MINOR_GET_SCHEDULE
MINOR_ADD_INSERT = _hk_struct_test.MINOR_ADD_INSERT
MINOR_CANCEL_INSERT = _hk_struct_test.MINOR_CANCEL_INSERT
MINOR_SWITCH_LANGUAGE = _hk_struct_test.MINOR_SWITCH_LANGUAGE
MINOR_SET_ADMIN_INITIAL_PASSWORD = _hk_struct_test.MINOR_SET_ADMIN_INITIAL_PASSWORD
MINOR_MODIFY_PORT = _hk_struct_test.MINOR_MODIFY_PORT
MINOR_MODIFY_STORAGE_PATH = _hk_struct_test.MINOR_MODIFY_STORAGE_PATH
MINOR_EXIT_PROGRAM = _hk_struct_test.MINOR_EXIT_PROGRAM
MINOR_MODULE_STARTUP_SUCCESS = _hk_struct_test.MINOR_MODULE_STARTUP_SUCCESS
MINOR_APPROVE_SCHEDULE = _hk_struct_test.MINOR_APPROVE_SCHEDULE
MINOR_GENERAL_DATA_SEND = _hk_struct_test.MINOR_GENERAL_DATA_SEND
MINOR_REMOTE_CONFERENCE_CONFIG = _hk_struct_test.MINOR_REMOTE_CONFERENCE_CONFIG
MINOR_REMOTE_TERMINAL_CONFIG = _hk_struct_test.MINOR_REMOTE_TERMINAL_CONFIG
MINOR_REMOTE_GROUP_CONFIG = _hk_struct_test.MINOR_REMOTE_GROUP_CONFIG
MINOR_REMOTE_CONFERENCE_CTRL = _hk_struct_test.MINOR_REMOTE_CONFERENCE_CTRL
MINOR_REMOTE_TERMINAL_CTRL = _hk_struct_test.MINOR_REMOTE_TERMINAL_CTRL
MINOR_LOCAL_RESET_LOGIN_PASSWORD = _hk_struct_test.MINOR_LOCAL_RESET_LOGIN_PASSWORD
MINOR_REMOTE_RESET_LOGIN_PASSWORD = _hk_struct_test.MINOR_REMOTE_RESET_LOGIN_PASSWORD
MINOR_LOCAL_FACE_BASE_CREATE = _hk_struct_test.MINOR_LOCAL_FACE_BASE_CREATE
MINOR_REMOTE_FACE_BASE_CREATE = _hk_struct_test.MINOR_REMOTE_FACE_BASE_CREATE
MINOR_LOCAL_FACE_BASE_MODIFY = _hk_struct_test.MINOR_LOCAL_FACE_BASE_MODIFY
MINOR_REMOTE_FACE_BASE_MODIFY = _hk_struct_test.MINOR_REMOTE_FACE_BASE_MODIFY
MINOR_LOCAL_FACE_BASE_DELETE = _hk_struct_test.MINOR_LOCAL_FACE_BASE_DELETE
MINOR_REMOTE_FACE_BASE_DELETE = _hk_struct_test.MINOR_REMOTE_FACE_BASE_DELETE
MINOR_LOCAL_FACE_DATA_APPEND = _hk_struct_test.MINOR_LOCAL_FACE_DATA_APPEND
MINOR_REMOTE_FACE_DATA_APPEND = _hk_struct_test.MINOR_REMOTE_FACE_DATA_APPEND
MINOR_LOCAL_FACE_DATA_SEARCH = _hk_struct_test.MINOR_LOCAL_FACE_DATA_SEARCH
MINOR_REMOTE_FACE_DATA_SEARCH = _hk_struct_test.MINOR_REMOTE_FACE_DATA_SEARCH
MINOR_LOCAL_FACE_DATA_ANALYSIS = _hk_struct_test.MINOR_LOCAL_FACE_DATA_ANALYSIS
MINOR_REMOTE_FACE_DATA_ANALYSIS = _hk_struct_test.MINOR_REMOTE_FACE_DATA_ANALYSIS
MINOR_LOCAL_FACE_DATA_EDIT = _hk_struct_test.MINOR_LOCAL_FACE_DATA_EDIT
MINOR_REMOTE_FACE_DATA_EDIT = _hk_struct_test.MINOR_REMOTE_FACE_DATA_EDIT
MINOR_LOCAL_FACE_DATA_DELETE = _hk_struct_test.MINOR_LOCAL_FACE_DATA_DELETE
MINOR_REMOTE_FACE_DATA_DELET = _hk_struct_test.MINOR_REMOTE_FACE_DATA_DELET
MINOR_LOCAL_VCA_ANALYSIS_CFG = _hk_struct_test.MINOR_LOCAL_VCA_ANALYSIS_CFG
MINOR_REMOTE_VCA_ANALYSIS_CFG = _hk_struct_test.MINOR_REMOTE_VCA_ANALYSIS_CFG
MINOR_LOCAL_FACE_BASE_IMPORT = _hk_struct_test.MINOR_LOCAL_FACE_BASE_IMPORT
MINOR_LOCAL_FACE_BASE_EXPORT = _hk_struct_test.MINOR_LOCAL_FACE_BASE_EXPORT
MINOR_REMOTE_CLUSTER_MODE_CONFIG = _hk_struct_test.MINOR_REMOTE_CLUSTER_MODE_CONFIG
MINOR_LOCAL_CLUSTER_MODE_CONFIG = _hk_struct_test.MINOR_LOCAL_CLUSTER_MODE_CONFIG
MINOR_REMOTE_CLUSTER_NETWORK_CONFIG = _hk_struct_test.MINOR_REMOTE_CLUSTER_NETWORK_CONFIG
MINOR_LOCAL_CLUSTER_NETWORK_CONFIG = _hk_struct_test.MINOR_LOCAL_CLUSTER_NETWORK_CONFIG
MINOR_REMOTE_CLUSTER_ADD_DEVICE = _hk_struct_test.MINOR_REMOTE_CLUSTER_ADD_DEVICE
MINOR_LOCAL_CLUSTER_ADD_DEVICE = _hk_struct_test.MINOR_LOCAL_CLUSTER_ADD_DEVICE
MINOR_REMOTE_CLUSTER_DEL_DEVICE = _hk_struct_test.MINOR_REMOTE_CLUSTER_DEL_DEVICE
MINOR_LOCAL_CLUSTER_DEL_DEVICE = _hk_struct_test.MINOR_LOCAL_CLUSTER_DEL_DEVICE
MINOR_REMOTE_HFPD_CFG = _hk_struct_test.MINOR_REMOTE_HFPD_CFG
MINOR_REMOTE_FACE_CONTRAST_TASK = _hk_struct_test.MINOR_REMOTE_FACE_CONTRAST_TASK
MINOR_REMOTE_LFPD_CFG = _hk_struct_test.MINOR_REMOTE_LFPD_CFG
MINOR_REMOTE_IOTCFGFILE_INPUT = _hk_struct_test.MINOR_REMOTE_IOTCFGFILE_INPUT
MINOR_REMOTE_IOTCFGFILE_OUTPUT = _hk_struct_test.MINOR_REMOTE_IOTCFGFILE_OUTPUT
MINOR_LOCAL_IOT_ADD = _hk_struct_test.MINOR_LOCAL_IOT_ADD
MINOR_REMOTE_IOT_ADD = _hk_struct_test.MINOR_REMOTE_IOT_ADD
MINOR_LOCAL_IOT_DEL = _hk_struct_test.MINOR_LOCAL_IOT_DEL
MINOR_REMOTE_IOT_DEL = _hk_struct_test.MINOR_REMOTE_IOT_DEL
MINOR_LOCAL_IOT_SET = _hk_struct_test.MINOR_LOCAL_IOT_SET
MINOR_REMOTE_IOT_SET = _hk_struct_test.MINOR_REMOTE_IOT_SET
MINOR_LOCAL_IOTCFGFILE_INPUT = _hk_struct_test.MINOR_LOCAL_IOTCFGFILE_INPUT
MINOR_LOCAL_IOTCFGFILE_OUTPUT = _hk_struct_test.MINOR_LOCAL_IOTCFGFILE_OUTPUT
MINOR_LOCAL_VAD_CFG = _hk_struct_test.MINOR_LOCAL_VAD_CFG
MINOR_REMOTE_VAD_CFG = _hk_struct_test.MINOR_REMOTE_VAD_CFG
MINOR_LOCAL_ADDRESS_FILTER_CONFIG = _hk_struct_test.MINOR_LOCAL_ADDRESS_FILTER_CONFIG
MINOR_REMOTE_ADDRESS_FILTER_CONFIG = _hk_struct_test.MINOR_REMOTE_ADDRESS_FILTER_CONFIG
MINOR_LOCAL_POE_CFG = _hk_struct_test.MINOR_LOCAL_POE_CFG
MINOR_REMOTE_POE_CFG = _hk_struct_test.MINOR_REMOTE_POE_CFG
MINOR_LOCAL_RESET_CHANNEL_PASSWORD = _hk_struct_test.MINOR_LOCAL_RESET_CHANNEL_PASSWORD
MINOR_REMOTE_RESET_CHANNEL_PASSWORD = _hk_struct_test.MINOR_REMOTE_RESET_CHANNEL_PASSWORD
MINOR_LOCAL_SSD_UPGRADE_START = _hk_struct_test.MINOR_LOCAL_SSD_UPGRADE_START
MINOR_LOCAL_SSD_UPGRADE_STOP = _hk_struct_test.MINOR_LOCAL_SSD_UPGRADE_STOP
MINOR_REMOTE_SSD_UPGRADE_START = _hk_struct_test.MINOR_REMOTE_SSD_UPGRADE_START
MINOR_REMOTE_SSD_UPGRADE_STOP = _hk_struct_test.MINOR_REMOTE_SSD_UPGRADE_STOP
MINOR_LOCAL_SSD_FORMAT_START = _hk_struct_test.MINOR_LOCAL_SSD_FORMAT_START
MINOR_LOCAL_SSD_FORMAT_STOP = _hk_struct_test.MINOR_LOCAL_SSD_FORMAT_STOP
MINOR_REMOTE_SSD_FORMAT_START = _hk_struct_test.MINOR_REMOTE_SSD_FORMAT_START
MINOR_REMOTE_SSD_FORMAT_STOP = _hk_struct_test.MINOR_REMOTE_SSD_FORMAT_STOP
MINOR_LOCAL_AUTO_SWITCH_CONFIG = _hk_struct_test.MINOR_LOCAL_AUTO_SWITCH_CONFIG
MINOR_REMOTE_AUTO_SWITCH_CONFIG = _hk_struct_test.MINOR_REMOTE_AUTO_SWITCH_CONFIG
MINOR_LOCAL_SSD_INITIALIZATION_START = _hk_struct_test.MINOR_LOCAL_SSD_INITIALIZATION_START
MINOR_LOCAL_SSD_INITIALIZATION_END = _hk_struct_test.MINOR_LOCAL_SSD_INITIALIZATION_END
MINOR_REMOTE_SSD_INITIALIZATION_START = _hk_struct_test.MINOR_REMOTE_SSD_INITIALIZATION_START
MINOR_REMOTE_SSD_INITIALIZATION_END = _hk_struct_test.MINOR_REMOTE_SSD_INITIALIZATION_END
MINOR_REMOTE_AI_MODEL_ADD = _hk_struct_test.MINOR_REMOTE_AI_MODEL_ADD
MINOR_REMOTE_AI_MODEL_QUERY = _hk_struct_test.MINOR_REMOTE_AI_MODEL_QUERY
MINOR_REMOTE_AI_MODEL_DELETE = _hk_struct_test.MINOR_REMOTE_AI_MODEL_DELETE
MINOR_REMOTE_AI_MODEL_UPDATE = _hk_struct_test.MINOR_REMOTE_AI_MODEL_UPDATE
MINOR_REMOTE_AI_PICTURE_POLLING_TASK_ADD = _hk_struct_test.MINOR_REMOTE_AI_PICTURE_POLLING_TASK_ADD
MINOR_REMOTE_AI_PICTURE_POLLING_TASK_QUERY = _hk_struct_test.MINOR_REMOTE_AI_PICTURE_POLLING_TASK_QUERY
MINOR_REMOTE_AI_PICTURE_POLLING_TASK_DELETE = _hk_struct_test.MINOR_REMOTE_AI_PICTURE_POLLING_TASK_DELETE
MINOR_REMOTE_AI_PICTURE_POLLING_TASK_MODIFY = _hk_struct_test.MINOR_REMOTE_AI_PICTURE_POLLING_TASK_MODIFY
MINOR_REMOTE_AI_VIDEO_POLLING_TASK_ADD = _hk_struct_test.MINOR_REMOTE_AI_VIDEO_POLLING_TASK_ADD
MINOR_REMOTE_AI_VIDEO_POLLING_TASK_QUERY = _hk_struct_test.MINOR_REMOTE_AI_VIDEO_POLLING_TASK_QUERY
MINOR_REMOTE_AI_VIDEO_POLLING_TASK_DELETE = _hk_struct_test.MINOR_REMOTE_AI_VIDEO_POLLING_TASK_DELETE
MINOR_REMOTE_AI_VIDEO_POLLING_TASK_MODIFY = _hk_struct_test.MINOR_REMOTE_AI_VIDEO_POLLING_TASK_MODIFY
MINOR_REMOTE_AI_PICTURE_TASK_ADD = _hk_struct_test.MINOR_REMOTE_AI_PICTURE_TASK_ADD
MINOR_REMOTE_AI_PICTURE_TASK_QUERY = _hk_struct_test.MINOR_REMOTE_AI_PICTURE_TASK_QUERY
MINOR_REMOTE_AI_PICTURE_TASK_DELETE = _hk_struct_test.MINOR_REMOTE_AI_PICTURE_TASK_DELETE
MINOR_REMOTE_AI_PICTURE_TASK_MODIFY = _hk_struct_test.MINOR_REMOTE_AI_PICTURE_TASK_MODIFY
MINOR_REMOTE_AI_VIDEO_TASK_ADD = _hk_struct_test.MINOR_REMOTE_AI_VIDEO_TASK_ADD
MINOR_REMOTE_AI_VIDEO_TASK_QUERY = _hk_struct_test.MINOR_REMOTE_AI_VIDEO_TASK_QUERY
MINOR_REMOTE_AI_VIDEO_TASK_DELETE = _hk_struct_test.MINOR_REMOTE_AI_VIDEO_TASK_DELETE
MINOR_REMOTE_AI_VIDEO_TASK_MODIFY = _hk_struct_test.MINOR_REMOTE_AI_VIDEO_TASK_MODIFY
MINOR_REMOTE_AI_RULE_CONFIG = _hk_struct_test.MINOR_REMOTE_AI_RULE_CONFIG
MINOR_STOP_SOUND = _hk_struct_test.MINOR_STOP_SOUND
MINOR_SELF_CHECK = _hk_struct_test.MINOR_SELF_CHECK
MINOR_DUTY_CHECK = _hk_struct_test.MINOR_DUTY_CHECK
MINOR_SWITCH_SIMPLE_WORKMODE = _hk_struct_test.MINOR_SWITCH_SIMPLE_WORKMODE
MINOR_SWITCH_NORMAL_WORKMODE = _hk_struct_test.MINOR_SWITCH_NORMAL_WORKMODE
MAJOR_INFORMATION = _hk_struct_test.MAJOR_INFORMATION
MINOR_HDD_INFO = _hk_struct_test.MINOR_HDD_INFO
MINOR_SMART_INFO = _hk_struct_test.MINOR_SMART_INFO
MINOR_REC_START = _hk_struct_test.MINOR_REC_START
MINOR_REC_STOP = _hk_struct_test.MINOR_REC_STOP
MINOR_REC_OVERDUE = _hk_struct_test.MINOR_REC_OVERDUE
MINOR_LINK_START = _hk_struct_test.MINOR_LINK_START
MINOR_LINK_STOP = _hk_struct_test.MINOR_LINK_STOP
MINOR_NET_DISK_INFO = _hk_struct_test.MINOR_NET_DISK_INFO
MINOR_RAID_INFO = _hk_struct_test.MINOR_RAID_INFO
MINOR_RUN_STATUS_INFO = _hk_struct_test.MINOR_RUN_STATUS_INFO
MINOR_SPARE_START_BACKUP = _hk_struct_test.MINOR_SPARE_START_BACKUP
MINOR_SPARE_STOP_BACKUP = _hk_struct_test.MINOR_SPARE_STOP_BACKUP
MINOR_SPARE_CLIENT_INFO = _hk_struct_test.MINOR_SPARE_CLIENT_INFO
MINOR_ANR_RECORD_START = _hk_struct_test.MINOR_ANR_RECORD_START
MINOR_ANR_RECORD_END = _hk_struct_test.MINOR_ANR_RECORD_END
MINOR_ANR_ADD_TIME_QUANTUM = _hk_struct_test.MINOR_ANR_ADD_TIME_QUANTUM
MINOR_ANR_DEL_TIME_QUANTUM = _hk_struct_test.MINOR_ANR_DEL_TIME_QUANTUM
MINOR_PIC_REC_START = _hk_struct_test.MINOR_PIC_REC_START
MINOR_PIC_REC_STOP = _hk_struct_test.MINOR_PIC_REC_STOP
MINOR_PIC_REC_OVERDUE = _hk_struct_test.MINOR_PIC_REC_OVERDUE
MINOR_CLIENT_LOGIN = _hk_struct_test.MINOR_CLIENT_LOGIN
MINOR_CLIENT_RELOGIN = _hk_struct_test.MINOR_CLIENT_RELOGIN
MINOR_CLIENT_LOGOUT = _hk_struct_test.MINOR_CLIENT_LOGOUT
MINOR_CLIENT_SYNC_START = _hk_struct_test.MINOR_CLIENT_SYNC_START
MINOR_CLIENT_SYNC_STOP = _hk_struct_test.MINOR_CLIENT_SYNC_STOP
MINOR_CLIENT_SYNC_SUCC = _hk_struct_test.MINOR_CLIENT_SYNC_SUCC
MINOR_CLIENT_SYNC_EXCP = _hk_struct_test.MINOR_CLIENT_SYNC_EXCP
MINOR_GLOBAL_RECORD_ERR_INFO = _hk_struct_test.MINOR_GLOBAL_RECORD_ERR_INFO
MINOR_BUFFER_STATE = _hk_struct_test.MINOR_BUFFER_STATE
MINOR_DISK_ERRORINFO_V2 = _hk_struct_test.MINOR_DISK_ERRORINFO_V2
MINOR_CS_DATA_EXPIRED = _hk_struct_test.MINOR_CS_DATA_EXPIRED
MINOR_PLAT_INFO = _hk_struct_test.MINOR_PLAT_INFO
MINOR_DIAL_STAT = _hk_struct_test.MINOR_DIAL_STAT
MINOR_UNLOCK_RECORD = _hk_struct_test.MINOR_UNLOCK_RECORD
MINOR_VIS_ALARM = _hk_struct_test.MINOR_VIS_ALARM
MINOR_TALK_RECORD = _hk_struct_test.MINOR_TALK_RECORD
MINOR_ACCESSORIES_MESSAGE = _hk_struct_test.MINOR_ACCESSORIES_MESSAGE
MINOR_KMS_EXPAMSION_DISK_INSERT = _hk_struct_test.MINOR_KMS_EXPAMSION_DISK_INSERT
MINOR_IPC_CONNECT = _hk_struct_test.MINOR_IPC_CONNECT
MINOR_INTELLIGENT_BOARD_STATUS = _hk_struct_test.MINOR_INTELLIGENT_BOARD_STATUS
MINOR_IPC_CONNECT_STATUS = _hk_struct_test.MINOR_IPC_CONNECT_STATUS
MINOR_AUTO_TIMING = _hk_struct_test.MINOR_AUTO_TIMING
MINOR_EZVIZ_OPERATION = _hk_struct_test.MINOR_EZVIZ_OPERATION
MINOR_CLUSTER_DEVICE_ONLINE = _hk_struct_test.MINOR_CLUSTER_DEVICE_ONLINE
MINOR_CLUSTER_MGR_SERVICE_STARTUP = _hk_struct_test.MINOR_CLUSTER_MGR_SERVICE_STARTUP
MINOR_CLUSTER_BUSINESS_TRANSFER = _hk_struct_test.MINOR_CLUSTER_BUSINESS_TRANSFER
MINOR_CLUSTER_STATUS = _hk_struct_test.MINOR_CLUSTER_STATUS
MINOR_CLUSTER_CS_STATUS = _hk_struct_test.MINOR_CLUSTER_CS_STATUS
MINOR_CLUSTER_CM_STATUS = _hk_struct_test.MINOR_CLUSTER_CM_STATUS
MINOR_VOICE_START_DETECTED = _hk_struct_test.MINOR_VOICE_START_DETECTED
MINOR_VOICE_END_DETECTED = _hk_struct_test.MINOR_VOICE_END_DETECTED
MINOR_DOUBLE_VERIFICATION_PASS = _hk_struct_test.MINOR_DOUBLE_VERIFICATION_PASS
MINOR_WIRELESS_RUNNING_STATUS = _hk_struct_test.MINOR_WIRELESS_RUNNING_STATUS
MINOR_SYSTEM_DATA_SYNCHRONIZATION = _hk_struct_test.MINOR_SYSTEM_DATA_SYNCHRONIZATION
MINOR_HD_FORMAT_START = _hk_struct_test.MINOR_HD_FORMAT_START
MINOR_HD_FORMAT_STOP = _hk_struct_test.MINOR_HD_FORMAT_STOP
MINOR_LIVE_DETECT_OPEN = _hk_struct_test.MINOR_LIVE_DETECT_OPEN
MINOR_LIVE_DETECT_CLOSE = _hk_struct_test.MINOR_LIVE_DETECT_CLOSE
MINOR_CLEAR_DATA_COLLECTION = _hk_struct_test.MINOR_CLEAR_DATA_COLLECTION
MINOR_DELETE_DATA_COLLECTION = _hk_struct_test.MINOR_DELETE_DATA_COLLECTION
MINOR_EXPORT_DATA_COLLECTION = _hk_struct_test.MINOR_EXPORT_DATA_COLLECTION
MINOR_CARD_LEN_CONFIG = _hk_struct_test.MINOR_CARD_LEN_CONFIG
MINOR_DATA_BASE_INIT_FAILED = _hk_struct_test.MINOR_DATA_BASE_INIT_FAILED
MINOR_DATA_BASE_PATCH_UPDATE = _hk_struct_test.MINOR_DATA_BASE_PATCH_UPDATE
MINOR_PSAM_CARD_INSERT = _hk_struct_test.MINOR_PSAM_CARD_INSERT
MINOR_PSAM_CARD_REMOVE = _hk_struct_test.MINOR_PSAM_CARD_REMOVE
MINOR_HARD_FAULT_REBOOT = _hk_struct_test.MINOR_HARD_FAULT_REBOOT
MINOR_PSAM_CARD_OCP = _hk_struct_test.MINOR_PSAM_CARD_OCP
MINOR_STACK_OVERFLOW = _hk_struct_test.MINOR_STACK_OVERFLOW
MINOR_PARM_CFG = _hk_struct_test.MINOR_PARM_CFG
MAJOR_EVENT = _hk_struct_test.MAJOR_EVENT
MINOR_LEGAL_CARD_PASS = _hk_struct_test.MINOR_LEGAL_CARD_PASS
MINOR_CARD_AND_PSW_PASS = _hk_struct_test.MINOR_CARD_AND_PSW_PASS
MINOR_CARD_AND_PSW_FAIL = _hk_struct_test.MINOR_CARD_AND_PSW_FAIL
MINOR_CARD_AND_PSW_TIMEOUT = _hk_struct_test.MINOR_CARD_AND_PSW_TIMEOUT
MINOR_CARD_AND_PSW_OVER_TIME = _hk_struct_test.MINOR_CARD_AND_PSW_OVER_TIME
MINOR_CARD_NO_RIGHT = _hk_struct_test.MINOR_CARD_NO_RIGHT
MINOR_CARD_INVALID_PERIOD = _hk_struct_test.MINOR_CARD_INVALID_PERIOD
MINOR_CARD_OUT_OF_DATE = _hk_struct_test.MINOR_CARD_OUT_OF_DATE
MINOR_INVALID_CARD = _hk_struct_test.MINOR_INVALID_CARD
MINOR_ANTI_SNEAK_FAIL = _hk_struct_test.MINOR_ANTI_SNEAK_FAIL
MINOR_INTERLOCK_DOOR_NOT_CLOSE = _hk_struct_test.MINOR_INTERLOCK_DOOR_NOT_CLOSE
MINOR_NOT_BELONG_MULTI_GROUP = _hk_struct_test.MINOR_NOT_BELONG_MULTI_GROUP
MINOR_INVALID_MULTI_VERIFY_PERIOD = _hk_struct_test.MINOR_INVALID_MULTI_VERIFY_PERIOD
MINOR_MULTI_VERIFY_SUPER_RIGHT_FAIL = _hk_struct_test.MINOR_MULTI_VERIFY_SUPER_RIGHT_FAIL
MINOR_MULTI_VERIFY_REMOTE_RIGHT_FAIL = _hk_struct_test.MINOR_MULTI_VERIFY_REMOTE_RIGHT_FAIL
MINOR_MULTI_VERIFY_SUCCESS = _hk_struct_test.MINOR_MULTI_VERIFY_SUCCESS
MINOR_LEADER_CARD_OPEN_BEGIN = _hk_struct_test.MINOR_LEADER_CARD_OPEN_BEGIN
MINOR_LEADER_CARD_OPEN_END = _hk_struct_test.MINOR_LEADER_CARD_OPEN_END
MINOR_ALWAYS_OPEN_BEGIN = _hk_struct_test.MINOR_ALWAYS_OPEN_BEGIN
MINOR_ALWAYS_OPEN_END = _hk_struct_test.MINOR_ALWAYS_OPEN_END
MINOR_LOCK_OPEN = _hk_struct_test.MINOR_LOCK_OPEN
MINOR_LOCK_CLOSE = _hk_struct_test.MINOR_LOCK_CLOSE
MINOR_DOOR_BUTTON_PRESS = _hk_struct_test.MINOR_DOOR_BUTTON_PRESS
MINOR_DOOR_BUTTON_RELEASE = _hk_struct_test.MINOR_DOOR_BUTTON_RELEASE
MINOR_DOOR_OPEN_NORMAL = _hk_struct_test.MINOR_DOOR_OPEN_NORMAL
MINOR_DOOR_CLOSE_NORMAL = _hk_struct_test.MINOR_DOOR_CLOSE_NORMAL
MINOR_DOOR_OPEN_ABNORMAL = _hk_struct_test.MINOR_DOOR_OPEN_ABNORMAL
MINOR_DOOR_OPEN_TIMEOUT = _hk_struct_test.MINOR_DOOR_OPEN_TIMEOUT
MINOR_ALARMOUT_ON = _hk_struct_test.MINOR_ALARMOUT_ON
MINOR_ALARMOUT_OFF = _hk_struct_test.MINOR_ALARMOUT_OFF
MINOR_ALWAYS_CLOSE_BEGIN = _hk_struct_test.MINOR_ALWAYS_CLOSE_BEGIN
MINOR_ALWAYS_CLOSE_END = _hk_struct_test.MINOR_ALWAYS_CLOSE_END
MINOR_MULTI_VERIFY_NEED_REMOTE_OPEN = _hk_struct_test.MINOR_MULTI_VERIFY_NEED_REMOTE_OPEN
MINOR_MULTI_VERIFY_SUPERPASSWD_VERIFY_SUCCESS = _hk_struct_test.MINOR_MULTI_VERIFY_SUPERPASSWD_VERIFY_SUCCESS
MINOR_MULTI_VERIFY_REPEAT_VERIFY = _hk_struct_test.MINOR_MULTI_VERIFY_REPEAT_VERIFY
MINOR_MULTI_VERIFY_TIMEOUT = _hk_struct_test.MINOR_MULTI_VERIFY_TIMEOUT
MINOR_DOORBELL_RINGING = _hk_struct_test.MINOR_DOORBELL_RINGING
MINOR_FINGERPRINT_COMPARE_PASS = _hk_struct_test.MINOR_FINGERPRINT_COMPARE_PASS
MINOR_FINGERPRINT_COMPARE_FAIL = _hk_struct_test.MINOR_FINGERPRINT_COMPARE_FAIL
MINOR_CARD_FINGERPRINT_VERIFY_PASS = _hk_struct_test.MINOR_CARD_FINGERPRINT_VERIFY_PASS
MINOR_CARD_FINGERPRINT_VERIFY_FAIL = _hk_struct_test.MINOR_CARD_FINGERPRINT_VERIFY_FAIL
MINOR_CARD_FINGERPRINT_VERIFY_TIMEOUT = _hk_struct_test.MINOR_CARD_FINGERPRINT_VERIFY_TIMEOUT
MINOR_CARD_FINGERPRINT_PASSWD_VERIFY_PASS = _hk_struct_test.MINOR_CARD_FINGERPRINT_PASSWD_VERIFY_PASS
MINOR_CARD_FINGERPRINT_PASSWD_VERIFY_FAIL = _hk_struct_test.MINOR_CARD_FINGERPRINT_PASSWD_VERIFY_FAIL
MINOR_CARD_FINGERPRINT_PASSWD_VERIFY_TIMEOUT = _hk_struct_test.MINOR_CARD_FINGERPRINT_PASSWD_VERIFY_TIMEOUT
MINOR_FINGERPRINT_PASSWD_VERIFY_PASS = _hk_struct_test.MINOR_FINGERPRINT_PASSWD_VERIFY_PASS
MINOR_FINGERPRINT_PASSWD_VERIFY_FAIL = _hk_struct_test.MINOR_FINGERPRINT_PASSWD_VERIFY_FAIL
MINOR_FINGERPRINT_PASSWD_VERIFY_TIMEOUT = _hk_struct_test.MINOR_FINGERPRINT_PASSWD_VERIFY_TIMEOUT
MINOR_FINGERPRINT_INEXISTENCE = _hk_struct_test.MINOR_FINGERPRINT_INEXISTENCE
MINOR_CARD_PLATFORM_VERIFY = _hk_struct_test.MINOR_CARD_PLATFORM_VERIFY
MINOR_CALL_CENTER = _hk_struct_test.MINOR_CALL_CENTER
MINOR_FIRE_RELAY_TURN_ON_DOOR_ALWAYS_OPEN = _hk_struct_test.MINOR_FIRE_RELAY_TURN_ON_DOOR_ALWAYS_OPEN
MINOR_FIRE_RELAY_RECOVER_DOOR_RECOVER_NORMAL = _hk_struct_test.MINOR_FIRE_RELAY_RECOVER_DOOR_RECOVER_NORMAL
MINOR_FACE_AND_FP_VERIFY_PASS = _hk_struct_test.MINOR_FACE_AND_FP_VERIFY_PASS
MINOR_FACE_AND_FP_VERIFY_FAIL = _hk_struct_test.MINOR_FACE_AND_FP_VERIFY_FAIL
MINOR_FACE_AND_FP_VERIFY_TIMEOUT = _hk_struct_test.MINOR_FACE_AND_FP_VERIFY_TIMEOUT
MINOR_FACE_AND_PW_VERIFY_PASS = _hk_struct_test.MINOR_FACE_AND_PW_VERIFY_PASS
MINOR_FACE_AND_PW_VERIFY_FAIL = _hk_struct_test.MINOR_FACE_AND_PW_VERIFY_FAIL
MINOR_FACE_AND_PW_VERIFY_TIMEOUT = _hk_struct_test.MINOR_FACE_AND_PW_VERIFY_TIMEOUT
MINOR_FACE_AND_CARD_VERIFY_PASS = _hk_struct_test.MINOR_FACE_AND_CARD_VERIFY_PASS
MINOR_FACE_AND_CARD_VERIFY_FAIL = _hk_struct_test.MINOR_FACE_AND_CARD_VERIFY_FAIL
MINOR_FACE_AND_CARD_VERIFY_TIMEOUT = _hk_struct_test.MINOR_FACE_AND_CARD_VERIFY_TIMEOUT
MINOR_FACE_AND_PW_AND_FP_VERIFY_PASS = _hk_struct_test.MINOR_FACE_AND_PW_AND_FP_VERIFY_PASS
MINOR_FACE_AND_PW_AND_FP_VERIFY_FAIL = _hk_struct_test.MINOR_FACE_AND_PW_AND_FP_VERIFY_FAIL
MINOR_FACE_AND_PW_AND_FP_VERIFY_TIMEOUT = _hk_struct_test.MINOR_FACE_AND_PW_AND_FP_VERIFY_TIMEOUT
MINOR_FACE_CARD_AND_FP_VERIFY_PASS = _hk_struct_test.MINOR_FACE_CARD_AND_FP_VERIFY_PASS
MINOR_FACE_CARD_AND_FP_VERIFY_FAIL = _hk_struct_test.MINOR_FACE_CARD_AND_FP_VERIFY_FAIL
MINOR_FACE_CARD_AND_FP_VERIFY_TIMEOUT = _hk_struct_test.MINOR_FACE_CARD_AND_FP_VERIFY_TIMEOUT
MINOR_EMPLOYEENO_AND_FP_VERIFY_PASS = _hk_struct_test.MINOR_EMPLOYEENO_AND_FP_VERIFY_PASS
MINOR_EMPLOYEENO_AND_FP_VERIFY_FAIL = _hk_struct_test.MINOR_EMPLOYEENO_AND_FP_VERIFY_FAIL
MINOR_EMPLOYEENO_AND_FP_VERIFY_TIMEOUT = _hk_struct_test.MINOR_EMPLOYEENO_AND_FP_VERIFY_TIMEOUT
MINOR_EMPLOYEENO_AND_FP_AND_PW_VERIFY_PASS = _hk_struct_test.MINOR_EMPLOYEENO_AND_FP_AND_PW_VERIFY_PASS
MINOR_EMPLOYEENO_AND_FP_AND_PW_VERIFY_FAIL = _hk_struct_test.MINOR_EMPLOYEENO_AND_FP_AND_PW_VERIFY_FAIL
MINOR_EMPLOYEENO_AND_FP_AND_PW_VERIFY_TIMEOUT = _hk_struct_test.MINOR_EMPLOYEENO_AND_FP_AND_PW_VERIFY_TIMEOUT
MINOR_FACE_VERIFY_PASS = _hk_struct_test.MINOR_FACE_VERIFY_PASS
MINOR_FACE_VERIFY_FAIL = _hk_struct_test.MINOR_FACE_VERIFY_FAIL
MINOR_EMPLOYEENO_AND_FACE_VERIFY_PASS = _hk_struct_test.MINOR_EMPLOYEENO_AND_FACE_VERIFY_PASS
MINOR_EMPLOYEENO_AND_FACE_VERIFY_FAIL = _hk_struct_test.MINOR_EMPLOYEENO_AND_FACE_VERIFY_FAIL
MINOR_EMPLOYEENO_AND_FACE_VERIFY_TIMEOUT = _hk_struct_test.MINOR_EMPLOYEENO_AND_FACE_VERIFY_TIMEOUT
MINOR_FACE_RECOGNIZE_FAIL = _hk_struct_test.MINOR_FACE_RECOGNIZE_FAIL
MINOR_FIRSTCARD_AUTHORIZE_BEGIN = _hk_struct_test.MINOR_FIRSTCARD_AUTHORIZE_BEGIN
MINOR_FIRSTCARD_AUTHORIZE_END = _hk_struct_test.MINOR_FIRSTCARD_AUTHORIZE_END
MINOR_DOORLOCK_INPUT_SHORT_CIRCUIT = _hk_struct_test.MINOR_DOORLOCK_INPUT_SHORT_CIRCUIT
MINOR_DOORLOCK_INPUT_BROKEN_CIRCUIT = _hk_struct_test.MINOR_DOORLOCK_INPUT_BROKEN_CIRCUIT
MINOR_DOORLOCK_INPUT_EXCEPTION = _hk_struct_test.MINOR_DOORLOCK_INPUT_EXCEPTION
MINOR_DOORCONTACT_INPUT_SHORT_CIRCUIT = _hk_struct_test.MINOR_DOORCONTACT_INPUT_SHORT_CIRCUIT
MINOR_DOORCONTACT_INPUT_BROKEN_CIRCUIT = _hk_struct_test.MINOR_DOORCONTACT_INPUT_BROKEN_CIRCUIT
MINOR_DOORCONTACT_INPUT_EXCEPTION = _hk_struct_test.MINOR_DOORCONTACT_INPUT_EXCEPTION
MINOR_OPENBUTTON_INPUT_SHORT_CIRCUIT = _hk_struct_test.MINOR_OPENBUTTON_INPUT_SHORT_CIRCUIT
MINOR_OPENBUTTON_INPUT_BROKEN_CIRCUIT = _hk_struct_test.MINOR_OPENBUTTON_INPUT_BROKEN_CIRCUIT
MINOR_OPENBUTTON_INPUT_EXCEPTION = _hk_struct_test.MINOR_OPENBUTTON_INPUT_EXCEPTION
MINOR_DOORLOCK_OPEN_EXCEPTION = _hk_struct_test.MINOR_DOORLOCK_OPEN_EXCEPTION
MINOR_DOORLOCK_OPEN_TIMEOUT = _hk_struct_test.MINOR_DOORLOCK_OPEN_TIMEOUT
MINOR_FIRSTCARD_OPEN_WITHOUT_AUTHORIZE = _hk_struct_test.MINOR_FIRSTCARD_OPEN_WITHOUT_AUTHORIZE
MINOR_CALL_LADDER_RELAY_BREAK = _hk_struct_test.MINOR_CALL_LADDER_RELAY_BREAK
MINOR_CALL_LADDER_RELAY_CLOSE = _hk_struct_test.MINOR_CALL_LADDER_RELAY_CLOSE
MINOR_AUTO_KEY_RELAY_BREAK = _hk_struct_test.MINOR_AUTO_KEY_RELAY_BREAK
MINOR_AUTO_KEY_RELAY_CLOSE = _hk_struct_test.MINOR_AUTO_KEY_RELAY_CLOSE
MINOR_KEY_CONTROL_RELAY_BREAK = _hk_struct_test.MINOR_KEY_CONTROL_RELAY_BREAK
MINOR_KEY_CONTROL_RELAY_CLOSE = _hk_struct_test.MINOR_KEY_CONTROL_RELAY_CLOSE
MINOR_EMPLOYEENO_AND_PW_PASS = _hk_struct_test.MINOR_EMPLOYEENO_AND_PW_PASS
MINOR_EMPLOYEENO_AND_PW_FAIL = _hk_struct_test.MINOR_EMPLOYEENO_AND_PW_FAIL
MINOR_EMPLOYEENO_AND_PW_TIMEOUT = _hk_struct_test.MINOR_EMPLOYEENO_AND_PW_TIMEOUT
MINOR_HUMAN_DETECT_FAIL = _hk_struct_test.MINOR_HUMAN_DETECT_FAIL
MINOR_PEOPLE_AND_ID_CARD_COMPARE_PASS = _hk_struct_test.MINOR_PEOPLE_AND_ID_CARD_COMPARE_PASS
MINOR_PEOPLE_AND_ID_CARD_COMPARE_FAIL = _hk_struct_test.MINOR_PEOPLE_AND_ID_CARD_COMPARE_FAIL
MINOR_CERTIFICATE_BLACK_LIST = _hk_struct_test.MINOR_CERTIFICATE_BLACK_LIST
MINOR_LEGAL_MESSAGE = _hk_struct_test.MINOR_LEGAL_MESSAGE
MINOR_ILLEGAL_MESSAGE = _hk_struct_test.MINOR_ILLEGAL_MESSAGE
MINOR_DOOR_OPEN_OR_DORMANT_FAIL = _hk_struct_test.MINOR_DOOR_OPEN_OR_DORMANT_FAIL
MINOR_AUTH_PLAN_DORMANT_FAIL = _hk_struct_test.MINOR_AUTH_PLAN_DORMANT_FAIL
MINOR_CARD_ENCRYPT_VERIFY_FAIL = _hk_struct_test.MINOR_CARD_ENCRYPT_VERIFY_FAIL
MINOR_SUBMARINEBACK_REPLY_FAIL = _hk_struct_test.MINOR_SUBMARINEBACK_REPLY_FAIL
MINOR_DOOR_OPEN_OR_DORMANT_OPEN_FAIL = _hk_struct_test.MINOR_DOOR_OPEN_OR_DORMANT_OPEN_FAIL
MINOR_HEART_BEAT = _hk_struct_test.MINOR_HEART_BEAT
MINOR_DOOR_OPEN_OR_DORMANT_LINKAGE_OPEN_FAIL = _hk_struct_test.MINOR_DOOR_OPEN_OR_DORMANT_LINKAGE_OPEN_FAIL
MINOR_TRAILING = _hk_struct_test.MINOR_TRAILING
MINOR_REVERSE_ACCESS = _hk_struct_test.MINOR_REVERSE_ACCESS
MINOR_FORCE_ACCESS = _hk_struct_test.MINOR_FORCE_ACCESS
MINOR_CLIMBING_OVER_GATE = _hk_struct_test.MINOR_CLIMBING_OVER_GATE
MINOR_PASSING_TIMEOUT = _hk_struct_test.MINOR_PASSING_TIMEOUT
MINOR_INTRUSION_ALARM = _hk_struct_test.MINOR_INTRUSION_ALARM
MINOR_FREE_GATE_PASS_NOT_AUTH = _hk_struct_test.MINOR_FREE_GATE_PASS_NOT_AUTH
MINOR_DROP_ARM_BLOCK = _hk_struct_test.MINOR_DROP_ARM_BLOCK
MINOR_DROP_ARM_BLOCK_RESUME = _hk_struct_test.MINOR_DROP_ARM_BLOCK_RESUME
MINOR_LOCAL_FACE_MODELING_FAIL = _hk_struct_test.MINOR_LOCAL_FACE_MODELING_FAIL
MINOR_STAY_EVENT = _hk_struct_test.MINOR_STAY_EVENT
MINOR_PASSWORD_MISMATCH = _hk_struct_test.MINOR_PASSWORD_MISMATCH
MINOR_EMPLOYEE_NO_NOT_EXIST = _hk_struct_test.MINOR_EMPLOYEE_NO_NOT_EXIST
MINOR_COMBINED_VERIFY_PASS = _hk_struct_test.MINOR_COMBINED_VERIFY_PASS
MINOR_COMBINED_VERIFY_TIMEOUT = _hk_struct_test.MINOR_COMBINED_VERIFY_TIMEOUT
MINOR_VERIFY_MODE_MISMATCH = _hk_struct_test.MINOR_VERIFY_MODE_MISMATCH
MINOR_PASSPORT_VERIFY_FAIL = _hk_struct_test.MINOR_PASSPORT_VERIFY_FAIL
MINOR_INFORMAL_MIFARE_CARD_VERIFY_FAIL = _hk_struct_test.MINOR_INFORMAL_MIFARE_CARD_VERIFY_FAIL
MINOR_CPU_CARD_ENCRYPT_VERIFY_FAIL = _hk_struct_test.MINOR_CPU_CARD_ENCRYPT_VERIFY_FAIL
MINOR_NFC_DISABLE_VERIFY_FAIL = _hk_struct_test.MINOR_NFC_DISABLE_VERIFY_FAIL
MINOR_LORA_MODULE_ONLINE = _hk_struct_test.MINOR_LORA_MODULE_ONLINE
MINOR_LORA_MODULE_OFFLINE = _hk_struct_test.MINOR_LORA_MODULE_OFFLINE
MINOR_MQTT_STATUS = _hk_struct_test.MINOR_MQTT_STATUS
MINOR_EM_CARD_RECOGNIZE_NOT_ENABLED = _hk_struct_test.MINOR_EM_CARD_RECOGNIZE_NOT_ENABLED
MINOR_M1_CARD_RECOGNIZE_NOT_ENABLED = _hk_struct_test.MINOR_M1_CARD_RECOGNIZE_NOT_ENABLED
MINOR_CPU_CARD_RECOGNIZE_NOT_ENABLED = _hk_struct_test.MINOR_CPU_CARD_RECOGNIZE_NOT_ENABLED
MINOR_ID_CARD_RECOGNIZE_NOT_ENABLED = _hk_struct_test.MINOR_ID_CARD_RECOGNIZE_NOT_ENABLED
MINOR_CARD_SET_SECRET_KEY_FAIL = _hk_struct_test.MINOR_CARD_SET_SECRET_KEY_FAIL
MINOR_LOCAL_UPGRADE_FAIL = _hk_struct_test.MINOR_LOCAL_UPGRADE_FAIL
MINOR_REMOTE_UPGRADE_FAIL = _hk_struct_test.MINOR_REMOTE_UPGRADE_FAIL
MINOR_REMOTE_EXTEND_MODULE_UPGRADE_SUCC = _hk_struct_test.MINOR_REMOTE_EXTEND_MODULE_UPGRADE_SUCC
MINOR_REMOTE_EXTEND_MODULE_UPGRADE_FAIL = _hk_struct_test.MINOR_REMOTE_EXTEND_MODULE_UPGRADE_FAIL
MINOR_REMOTE_FINGER_PRINT_MODULE_UPGRADE_SUCC = _hk_struct_test.MINOR_REMOTE_FINGER_PRINT_MODULE_UPGRADE_SUCC
MINOR_REMOTE_FINGER_PRINT_MODULE_UPGRADE_FAIL = _hk_struct_test.MINOR_REMOTE_FINGER_PRINT_MODULE_UPGRADE_FAIL
MINOR_EVENT_CUSTOM1 = _hk_struct_test.MINOR_EVENT_CUSTOM1
MINOR_EVENT_CUSTOM2 = _hk_struct_test.MINOR_EVENT_CUSTOM2
MINOR_EVENT_CUSTOM3 = _hk_struct_test.MINOR_EVENT_CUSTOM3
MINOR_EVENT_CUSTOM4 = _hk_struct_test.MINOR_EVENT_CUSTOM4
MINOR_EVENT_CUSTOM5 = _hk_struct_test.MINOR_EVENT_CUSTOM5
MINOR_EVENT_CUSTOM6 = _hk_struct_test.MINOR_EVENT_CUSTOM6
MINOR_EVENT_CUSTOM7 = _hk_struct_test.MINOR_EVENT_CUSTOM7
MINOR_EVENT_CUSTOM8 = _hk_struct_test.MINOR_EVENT_CUSTOM8
MINOR_EVENT_CUSTOM9 = _hk_struct_test.MINOR_EVENT_CUSTOM9
MINOR_EVENT_CUSTOM10 = _hk_struct_test.MINOR_EVENT_CUSTOM10
MINOR_EVENT_CUSTOM11 = _hk_struct_test.MINOR_EVENT_CUSTOM11
MINOR_EVENT_CUSTOM12 = _hk_struct_test.MINOR_EVENT_CUSTOM12
MINOR_EVENT_CUSTOM13 = _hk_struct_test.MINOR_EVENT_CUSTOM13
MINOR_EVENT_CUSTOM14 = _hk_struct_test.MINOR_EVENT_CUSTOM14
MINOR_EVENT_CUSTOM15 = _hk_struct_test.MINOR_EVENT_CUSTOM15
MINOR_EVENT_CUSTOM16 = _hk_struct_test.MINOR_EVENT_CUSTOM16
MINOR_EVENT_CUSTOM17 = _hk_struct_test.MINOR_EVENT_CUSTOM17
MINOR_EVENT_CUSTOM18 = _hk_struct_test.MINOR_EVENT_CUSTOM18
MINOR_EVENT_CUSTOM19 = _hk_struct_test.MINOR_EVENT_CUSTOM19
MINOR_EVENT_CUSTOM20 = _hk_struct_test.MINOR_EVENT_CUSTOM20
MINOR_EVENT_CUSTOM21 = _hk_struct_test.MINOR_EVENT_CUSTOM21
MINOR_EVENT_CUSTOM22 = _hk_struct_test.MINOR_EVENT_CUSTOM22
MINOR_EVENT_CUSTOM23 = _hk_struct_test.MINOR_EVENT_CUSTOM23
MINOR_EVENT_CUSTOM24 = _hk_struct_test.MINOR_EVENT_CUSTOM24
MINOR_EVENT_CUSTOM25 = _hk_struct_test.MINOR_EVENT_CUSTOM25
MINOR_EVENT_CUSTOM26 = _hk_struct_test.MINOR_EVENT_CUSTOM26
MINOR_EVENT_CUSTOM27 = _hk_struct_test.MINOR_EVENT_CUSTOM27
MINOR_EVENT_CUSTOM28 = _hk_struct_test.MINOR_EVENT_CUSTOM28
MINOR_EVENT_CUSTOM29 = _hk_struct_test.MINOR_EVENT_CUSTOM29
MINOR_EVENT_CUSTOM30 = _hk_struct_test.MINOR_EVENT_CUSTOM30
MINOR_EVENT_CUSTOM31 = _hk_struct_test.MINOR_EVENT_CUSTOM31
MINOR_EVENT_CUSTOM32 = _hk_struct_test.MINOR_EVENT_CUSTOM32
MINOR_EVENT_CUSTOM33 = _hk_struct_test.MINOR_EVENT_CUSTOM33
MINOR_EVENT_CUSTOM34 = _hk_struct_test.MINOR_EVENT_CUSTOM34
MINOR_EVENT_CUSTOM35 = _hk_struct_test.MINOR_EVENT_CUSTOM35
MINOR_EVENT_CUSTOM36 = _hk_struct_test.MINOR_EVENT_CUSTOM36
MINOR_EVENT_CUSTOM37 = _hk_struct_test.MINOR_EVENT_CUSTOM37
MINOR_EVENT_CUSTOM38 = _hk_struct_test.MINOR_EVENT_CUSTOM38
MINOR_EVENT_CUSTOM39 = _hk_struct_test.MINOR_EVENT_CUSTOM39
MINOR_EVENT_CUSTOM40 = _hk_struct_test.MINOR_EVENT_CUSTOM40
MINOR_EVENT_CUSTOM41 = _hk_struct_test.MINOR_EVENT_CUSTOM41
MINOR_EVENT_CUSTOM42 = _hk_struct_test.MINOR_EVENT_CUSTOM42
MINOR_EVENT_CUSTOM43 = _hk_struct_test.MINOR_EVENT_CUSTOM43
MINOR_EVENT_CUSTOM44 = _hk_struct_test.MINOR_EVENT_CUSTOM44
MINOR_EVENT_CUSTOM45 = _hk_struct_test.MINOR_EVENT_CUSTOM45
MINOR_EVENT_CUSTOM46 = _hk_struct_test.MINOR_EVENT_CUSTOM46
MINOR_EVENT_CUSTOM47 = _hk_struct_test.MINOR_EVENT_CUSTOM47
MINOR_EVENT_CUSTOM48 = _hk_struct_test.MINOR_EVENT_CUSTOM48
MINOR_EVENT_CUSTOM49 = _hk_struct_test.MINOR_EVENT_CUSTOM49
MINOR_EVENT_CUSTOM50 = _hk_struct_test.MINOR_EVENT_CUSTOM50
MINOR_EVENT_CUSTOM51 = _hk_struct_test.MINOR_EVENT_CUSTOM51
MINOR_EVENT_CUSTOM52 = _hk_struct_test.MINOR_EVENT_CUSTOM52
MINOR_EVENT_CUSTOM53 = _hk_struct_test.MINOR_EVENT_CUSTOM53
MINOR_EVENT_CUSTOM54 = _hk_struct_test.MINOR_EVENT_CUSTOM54
MINOR_EVENT_CUSTOM55 = _hk_struct_test.MINOR_EVENT_CUSTOM55
MINOR_EVENT_CUSTOM56 = _hk_struct_test.MINOR_EVENT_CUSTOM56
MINOR_EVENT_CUSTOM57 = _hk_struct_test.MINOR_EVENT_CUSTOM57
MINOR_EVENT_CUSTOM58 = _hk_struct_test.MINOR_EVENT_CUSTOM58
MINOR_EVENT_CUSTOM59 = _hk_struct_test.MINOR_EVENT_CUSTOM59
MINOR_EVENT_CUSTOM60 = _hk_struct_test.MINOR_EVENT_CUSTOM60
MINOR_EVENT_CUSTOM61 = _hk_struct_test.MINOR_EVENT_CUSTOM61
MINOR_EVENT_CUSTOM62 = _hk_struct_test.MINOR_EVENT_CUSTOM62
MINOR_EVENT_CUSTOM63 = _hk_struct_test.MINOR_EVENT_CUSTOM63
MINOR_EVENT_CUSTOM64 = _hk_struct_test.MINOR_EVENT_CUSTOM64
MINOR_LOCK_FINGER_OPEN_DOOR = _hk_struct_test.MINOR_LOCK_FINGER_OPEN_DOOR
MINOR_LOCK_PASSWORD_OPEN_DOOR = _hk_struct_test.MINOR_LOCK_PASSWORD_OPEN_DOOR
MINOR_LOCK_CARD_OPEN_DOOR = _hk_struct_test.MINOR_LOCK_CARD_OPEN_DOOR
MINOR_LOCK_CENTER_OPEN_DOOR = _hk_struct_test.MINOR_LOCK_CENTER_OPEN_DOOR
MINOR_LOCK_APP_OPEN_DOOR = _hk_struct_test.MINOR_LOCK_APP_OPEN_DOOR
MINOR_LOCK_KEY_OPEN_DOOR = _hk_struct_test.MINOR_LOCK_KEY_OPEN_DOOR
MINOR_LOCK_REMOTE_DEVICE_OPEN_DOOR = _hk_struct_test.MINOR_LOCK_REMOTE_DEVICE_OPEN_DOOR
MINOR_LOCK_TMP_PASSWORD_OPEN_DOOR = _hk_struct_test.MINOR_LOCK_TMP_PASSWORD_OPEN_DOOR
MINOR_LOCK_BLUETOOTH_OPEN_DOOR = _hk_struct_test.MINOR_LOCK_BLUETOOTH_OPEN_DOOR
MINOR_LOCK_MULTI_OPEN_DOOR = _hk_struct_test.MINOR_LOCK_MULTI_OPEN_DOOR
MINOR_ALARMHOST_SCHOOLTIME_IRGI_B = _hk_struct_test.MINOR_ALARMHOST_SCHOOLTIME_IRGI_B
MINOR_ALARMHOST_SCHOOLTIME_SDK = _hk_struct_test.MINOR_ALARMHOST_SCHOOLTIME_SDK
MINOR_ALARMHOST_SCHOOLTIME_SELFTEST = _hk_struct_test.MINOR_ALARMHOST_SCHOOLTIME_SELFTEST
MINOR_ALARMHOST_SUBSYSTEM_ABNORMALINSERT = _hk_struct_test.MINOR_ALARMHOST_SUBSYSTEM_ABNORMALINSERT
MINOR_ALARMHOST_SUBSYSTEM_ABNORMALPULLOUT = _hk_struct_test.MINOR_ALARMHOST_SUBSYSTEM_ABNORMALPULLOUT
MINOR_ALARMHOST_AUTO_ARM = _hk_struct_test.MINOR_ALARMHOST_AUTO_ARM
MINOR_ALARMHOST_AUTO_DISARM = _hk_struct_test.MINOR_ALARMHOST_AUTO_DISARM
MINOR_ALARMHOST_TIME_TIGGER_ON = _hk_struct_test.MINOR_ALARMHOST_TIME_TIGGER_ON
MINOR_ALARMHOST_TIME_TIGGER_OFF = _hk_struct_test.MINOR_ALARMHOST_TIME_TIGGER_OFF
MINOR_ALARMHOST_AUTO_ARM_FAILD = _hk_struct_test.MINOR_ALARMHOST_AUTO_ARM_FAILD
MINOR_ALARMHOST_AUTO_DISARM_FAILD = _hk_struct_test.MINOR_ALARMHOST_AUTO_DISARM_FAILD
MINOR_ALARMHOST_TIME_TIGGER_ON_FAILD = _hk_struct_test.MINOR_ALARMHOST_TIME_TIGGER_ON_FAILD
MINOR_ALARMHOST_TIME_TIGGER_OFF_FAILD = _hk_struct_test.MINOR_ALARMHOST_TIME_TIGGER_OFF_FAILD
MINOR_ALARMHOST_MANDATORY_ALARM = _hk_struct_test.MINOR_ALARMHOST_MANDATORY_ALARM
MINOR_ALARMHOST_KEYPAD_LOCKED = _hk_struct_test.MINOR_ALARMHOST_KEYPAD_LOCKED
MINOR_ALARMHOST_USB_INSERT = _hk_struct_test.MINOR_ALARMHOST_USB_INSERT
MINOR_ALARMHOST_USB_PULLOUT = _hk_struct_test.MINOR_ALARMHOST_USB_PULLOUT
MINOR_ALARMHOST_4G_MODULS_ONLINE = _hk_struct_test.MINOR_ALARMHOST_4G_MODULS_ONLINE
MINOR_ALARMHOST_4G_MODULS_OFFLINE = _hk_struct_test.MINOR_ALARMHOST_4G_MODULS_OFFLINE
MINOR_EZVIZ_CLOUD_ONLINE = _hk_struct_test.MINOR_EZVIZ_CLOUD_ONLINE
MINOR_EZVIZ_CLOUD_OFFLINE = _hk_struct_test.MINOR_EZVIZ_CLOUD_OFFLINE
MINOR_SIPUA_GRID_ONLINE = _hk_struct_test.MINOR_SIPUA_GRID_ONLINE
MINOR_SIPUA_GRID_OFFLINE = _hk_struct_test.MINOR_SIPUA_GRID_OFFLINE
MINOR_INTERNET_ACCESS_CONNECTED = _hk_struct_test.MINOR_INTERNET_ACCESS_CONNECTED
MINOR_INTERNET_ACCESS_BREAK = _hk_struct_test.MINOR_INTERNET_ACCESS_BREAK
MINOR_WIRELESS_CONNECTED = _hk_struct_test.MINOR_WIRELESS_CONNECTED
MINOR_WIRELESS_BREAK = _hk_struct_test.MINOR_WIRELESS_BREAK
MINOR_PORT_LINK_DOWN = _hk_struct_test.MINOR_PORT_LINK_DOWN
MINOR_PORT_LINK_UP = _hk_struct_test.MINOR_PORT_LINK_UP
MINOR_POE_PORT_POWER_ON = _hk_struct_test.MINOR_POE_PORT_POWER_ON
MINOR_POE_PORT_POWER_OFF = _hk_struct_test.MINOR_POE_PORT_POWER_OFF
MINOR_POE_TOTAL_POWER_MAX = _hk_struct_test.MINOR_POE_TOTAL_POWER_MAX
MINNOR_POE_TOTAL_POWER_RESUME = _hk_struct_test.MINNOR_POE_TOTAL_POWER_RESUME
MAJOR_ALARMHOST_ALARM = _hk_struct_test.MAJOR_ALARMHOST_ALARM
MAJOR_ALARMHOST_EXCEPTION = _hk_struct_test.MAJOR_ALARMHOST_EXCEPTION
MAJOR_ALARMHOST_OPERATION = _hk_struct_test.MAJOR_ALARMHOST_OPERATION
MAJ0R_ALARMHOST_EVENT = _hk_struct_test.MAJ0R_ALARMHOST_EVENT
MINOR_SHORT_CIRCUIT = _hk_struct_test.MINOR_SHORT_CIRCUIT
MINOR_BROKEN_CIRCUIT = _hk_struct_test.MINOR_BROKEN_CIRCUIT
MINOR_ALARM_RESET = _hk_struct_test.MINOR_ALARM_RESET
MINOR_ALARM_NORMAL = _hk_struct_test.MINOR_ALARM_NORMAL
MINOR_PASSWORD_ERROR = _hk_struct_test.MINOR_PASSWORD_ERROR
MINOR_ID_CARD_ILLEGALLY = _hk_struct_test.MINOR_ID_CARD_ILLEGALLY
MINOR_KEYPAD_REMOVE = _hk_struct_test.MINOR_KEYPAD_REMOVE
MINOR_KEYPAD_REMOVE_RESTORE = _hk_struct_test.MINOR_KEYPAD_REMOVE_RESTORE
MINOR_DEV_REMOVE = _hk_struct_test.MINOR_DEV_REMOVE
MINOR_DEV_REMOVE_RESTORE = _hk_struct_test.MINOR_DEV_REMOVE_RESTORE
MINOR_BELOW_ALARM_LIMIT1 = _hk_struct_test.MINOR_BELOW_ALARM_LIMIT1
MINOR_BELOW_ALARM_LIMIT2 = _hk_struct_test.MINOR_BELOW_ALARM_LIMIT2
MINOR_BELOW_ALARM_LIMIT3 = _hk_struct_test.MINOR_BELOW_ALARM_LIMIT3
MINOR_BELOW_ALARM_LIMIT4 = _hk_struct_test.MINOR_BELOW_ALARM_LIMIT4
MINOR_ABOVE_ALARM_LIMIT1 = _hk_struct_test.MINOR_ABOVE_ALARM_LIMIT1
MINOR_ABOVE_ALARM_LIMIT2 = _hk_struct_test.MINOR_ABOVE_ALARM_LIMIT2
MINOR_ABOVE_ALARM_LIMIT3 = _hk_struct_test.MINOR_ABOVE_ALARM_LIMIT3
MINOR_ABOVE_ALARM_LIMIT4 = _hk_struct_test.MINOR_ABOVE_ALARM_LIMIT4
MINOR_URGENCYBTN_ON = _hk_struct_test.MINOR_URGENCYBTN_ON
MINOR_URGENCYBTN_OFF = _hk_struct_test.MINOR_URGENCYBTN_OFF
MINOR_VIRTUAL_DEFENCE_BANDIT = _hk_struct_test.MINOR_VIRTUAL_DEFENCE_BANDIT
MINOR_VIRTUAL_DEFENCE_FIRE = _hk_struct_test.MINOR_VIRTUAL_DEFENCE_FIRE
MINOR_VIRTUAL_DEFENCE_URGENT = _hk_struct_test.MINOR_VIRTUAL_DEFENCE_URGENT
MINOR_ALARMHOST_MOTDET_START = _hk_struct_test.MINOR_ALARMHOST_MOTDET_START
MINOR_ALARMHOST_MOTDET_STOP = _hk_struct_test.MINOR_ALARMHOST_MOTDET_STOP
MINOR_ALARMHOST_HIDE_ALARM_START = _hk_struct_test.MINOR_ALARMHOST_HIDE_ALARM_START
MINOR_ALARMHOST_HIDE_ALARM_STOP = _hk_struct_test.MINOR_ALARMHOST_HIDE_ALARM_STOP
MINOR_ALARMHOST_UPS_ALARM = _hk_struct_test.MINOR_ALARMHOST_UPS_ALARM
MINOR_ALARMHOST_ELECTRICITY_METER_ALARM = _hk_struct_test.MINOR_ALARMHOST_ELECTRICITY_METER_ALARM
MINOR_ALARMHOST_SWITCH_POWER_ALARM = _hk_struct_test.MINOR_ALARMHOST_SWITCH_POWER_ALARM
MINOR_ALARMHOST_GAS_DETECT_SYS_ALARM = _hk_struct_test.MINOR_ALARMHOST_GAS_DETECT_SYS_ALARM
MINOR_ALARMHOST_TRANSFORMER_TEMPRATURE_ALARM = _hk_struct_test.MINOR_ALARMHOST_TRANSFORMER_TEMPRATURE_ALARM
MINOR_ALARMHOST_TEMP_HUMI_ALARM = _hk_struct_test.MINOR_ALARMHOST_TEMP_HUMI_ALARM
MINOR_ALARMHOST_UPS_ALARM_RESTORE = _hk_struct_test.MINOR_ALARMHOST_UPS_ALARM_RESTORE
MINOR_ALARMHOST_ELECTRICITY_METER_ALARM_RESTORE = _hk_struct_test.MINOR_ALARMHOST_ELECTRICITY_METER_ALARM_RESTORE
MINOR_ALARMHOST_SWITCH_POWER_ALARM_RESTORE = _hk_struct_test.MINOR_ALARMHOST_SWITCH_POWER_ALARM_RESTORE
MINOR_ALARMHOST_GAS_DETECT_SYS_ALARM_RESTORE = _hk_struct_test.MINOR_ALARMHOST_GAS_DETECT_SYS_ALARM_RESTORE
MINOR_ALARMHOST_TRANSFORMER_TEMPRATURE_ALARM_RESTORE = _hk_struct_test.MINOR_ALARMHOST_TRANSFORMER_TEMPRATURE_ALARM_RESTORE
MINOR_ALARMHOST_TEMP_HUMI_ALARM_RESTORE = _hk_struct_test.MINOR_ALARMHOST_TEMP_HUMI_ALARM_RESTORE
MINOR_ALARMHOST_WATER_LEVEL_SENSOR_ALARM = _hk_struct_test.MINOR_ALARMHOST_WATER_LEVEL_SENSOR_ALARM
MINOR_ALARMHOST_WATER_LEVEL_SENSOR_ALARM_RESTORE = _hk_struct_test.MINOR_ALARMHOST_WATER_LEVEL_SENSOR_ALARM_RESTORE
MINOR_ALARMHOST_DUST_NOISE_ALARM = _hk_struct_test.MINOR_ALARMHOST_DUST_NOISE_ALARM
MINOR_ALARMHOST_DUST_NOISE_ALARM_RESTORE = _hk_struct_test.MINOR_ALARMHOST_DUST_NOISE_ALARM_RESTORE
MINOR_ALARMHOST_ENVIRONMENTAL_LOGGER_ALARM = _hk_struct_test.MINOR_ALARMHOST_ENVIRONMENTAL_LOGGER_ALARM
MINOR_ALARMHOST_ENVIRONMENTAL_LOGGER_ALARM_RESTORE = _hk_struct_test.MINOR_ALARMHOST_ENVIRONMENTAL_LOGGER_ALARM_RESTORE
MINOR_ALARMHOST_TRIGGER_TAMPER = _hk_struct_test.MINOR_ALARMHOST_TRIGGER_TAMPER
MINOR_ALARMHOST_TRIGGER_TAMPER_RESTORE = _hk_struct_test.MINOR_ALARMHOST_TRIGGER_TAMPER_RESTORE
MINOR_ALARMHOST_EMERGENCY_CALL_HELP_ALARM = _hk_struct_test.MINOR_ALARMHOST_EMERGENCY_CALL_HELP_ALARM
MINOR_ALARMHOST_EMERGENCY_CALL_HELP_ALARM_RESTORE = _hk_struct_test.MINOR_ALARMHOST_EMERGENCY_CALL_HELP_ALARM_RESTORE
MINOR_ALARMHOST_CONSULTING_ALARM = _hk_struct_test.MINOR_ALARMHOST_CONSULTING_ALARM
MINOR_ALARMHOST_CONSULTING_ALARM_RESTORE = _hk_struct_test.MINOR_ALARMHOST_CONSULTING_ALARM_RESTORE
MINOR_ZONE_MODULE_REMOVE = _hk_struct_test.MINOR_ZONE_MODULE_REMOVE
MINOR_ZONE_MODULE_RESET = _hk_struct_test.MINOR_ZONE_MODULE_RESET
MINOR_ALARM_WIND_SPEED_ALARM = _hk_struct_test.MINOR_ALARM_WIND_SPEED_ALARM
MINOR_ALARM_WIND_SPEED_ALARM_RESTORE = _hk_struct_test.MINOR_ALARM_WIND_SPEED_ALARM_RESTORE
MINOR_ALARM_GENERATE_OUTPUT_ALARM = _hk_struct_test.MINOR_ALARM_GENERATE_OUTPUT_ALARM
MINOR_ALARM_GENERATE_OUTPUT_RESTORE = _hk_struct_test.MINOR_ALARM_GENERATE_OUTPUT_RESTORE
MINOR_ALARM_SOAK_ALARM = _hk_struct_test.MINOR_ALARM_SOAK_ALARM
MINOR_ALARM_SOAK_ALARM_RESTORE = _hk_struct_test.MINOR_ALARM_SOAK_ALARM_RESTORE
MINOR_ALARM_SOLAR_POWER_ALARM = _hk_struct_test.MINOR_ALARM_SOLAR_POWER_ALARM
MINOR_ALARM_SOLAR_POWER_ALARM_RESTORE = _hk_struct_test.MINOR_ALARM_SOLAR_POWER_ALARM_RESTORE
MINOR_ALARM_SF6_ALARM = _hk_struct_test.MINOR_ALARM_SF6_ALARM
MINOR_ALARM_SF6_ALARM_RESTORE = _hk_struct_test.MINOR_ALARM_SF6_ALARM_RESTORE
MINOR_ALARM_WEIGHT_ALARM = _hk_struct_test.MINOR_ALARM_WEIGHT_ALARM
MINOR_ALARM_WEIGHT_ALARM_RESTORE = _hk_struct_test.MINOR_ALARM_WEIGHT_ALARM_RESTORE
MINOR_ALARM_WEATHER_ALARM = _hk_struct_test.MINOR_ALARM_WEATHER_ALARM
MINOR_ALARM_WEATHER_ALARM_RESTORE = _hk_struct_test.MINOR_ALARM_WEATHER_ALARM_RESTORE
MINOR_ALARM_FUEL_GAS_ALARM = _hk_struct_test.MINOR_ALARM_FUEL_GAS_ALARM
MINOR_ALARM_FUEL_GAS_ALARM_RESTORE = _hk_struct_test.MINOR_ALARM_FUEL_GAS_ALARM_RESTORE
MINOR_ALARM_FIRE_ALARM = _hk_struct_test.MINOR_ALARM_FIRE_ALARM
MINOR_ALARM_FIRE_ALARM_RESTORE = _hk_struct_test.MINOR_ALARM_FIRE_ALARM_RESTORE
MINOR_WIRELESS_OUTPUT_MODULE_REMOVE = _hk_struct_test.MINOR_WIRELESS_OUTPUT_MODULE_REMOVE
MINOR_WIRELESS_OUTPUT_MODULE_RESET = _hk_struct_test.MINOR_WIRELESS_OUTPUT_MODULE_RESET
MINOR_WIRELESS_REPEATER_MODULE_REMOVE = _hk_struct_test.MINOR_WIRELESS_REPEATER_MODULE_REMOVE
MINOR_WIRELESS_REPEATER_MODULE_RESET = _hk_struct_test.MINOR_WIRELESS_REPEATER_MODULE_RESET
MINOR_WIRELESS_SIREN_MODULE_REMOVE = _hk_struct_test.MINOR_WIRELESS_SIREN_MODULE_REMOVE
MINOR_WIRELESS_SIREN_MODULE_RESET = _hk_struct_test.MINOR_WIRELESS_SIREN_MODULE_RESET
MINOR_SOUND_INTENSITY_RISE = _hk_struct_test.MINOR_SOUND_INTENSITY_RISE
MINOR_SOUND_INTENSITY_RISE_RESET = _hk_struct_test.MINOR_SOUND_INTENSITY_RISE_RESET
MINOR_SOUND_INTENSITY_DROP = _hk_struct_test.MINOR_SOUND_INTENSITY_DROP
MINOR_SOUND_INTENSITY_DROP_RESET = _hk_struct_test.MINOR_SOUND_INTENSITY_DROP_RESET
MINOR_AUDIO_INPUT_EXCEPTION = _hk_struct_test.MINOR_AUDIO_INPUT_EXCEPTION
MINOR_AUDIO_INPUT_EXCEPTION_RESET = _hk_struct_test.MINOR_AUDIO_INPUT_EXCEPTION_RESET
MINOR_POWER_ON = _hk_struct_test.MINOR_POWER_ON
MINOR_POWER_OFF = _hk_struct_test.MINOR_POWER_OFF
MINOR_WDT_RESET = _hk_struct_test.MINOR_WDT_RESET
MINOR_LOW_BATTERY_VOLTAGE = _hk_struct_test.MINOR_LOW_BATTERY_VOLTAGE
MINOR_AC_LOSS = _hk_struct_test.MINOR_AC_LOSS
MINOR_AC_RESTORE = _hk_struct_test.MINOR_AC_RESTORE
MINOR_RTC_EXCEPTION = _hk_struct_test.MINOR_RTC_EXCEPTION
MINOR_NETWORK_CONNECT_FAILURE = _hk_struct_test.MINOR_NETWORK_CONNECT_FAILURE
MINOR_NETWORK_CONNECT_RESTORE = _hk_struct_test.MINOR_NETWORK_CONNECT_RESTORE
MINOR_TEL_LINE_CONNECT_FAILURE = _hk_struct_test.MINOR_TEL_LINE_CONNECT_FAILURE
MINOR_TEL_LINE_CONNECT_RESTORE = _hk_struct_test.MINOR_TEL_LINE_CONNECT_RESTORE
MINOR_EXPANDER_BUS_LOSS = _hk_struct_test.MINOR_EXPANDER_BUS_LOSS
MINOR_EXPANDER_BUS_RESTORE = _hk_struct_test.MINOR_EXPANDER_BUS_RESTORE
MINOR_KEYPAD_BUS_LOSS = _hk_struct_test.MINOR_KEYPAD_BUS_LOSS
MINOR_KEYPAD_BUS_RESTORE = _hk_struct_test.MINOR_KEYPAD_BUS_RESTORE
MINOR_SENSOR_FAILURE = _hk_struct_test.MINOR_SENSOR_FAILURE
MINOR_SENSOR_RESTORE = _hk_struct_test.MINOR_SENSOR_RESTORE
MINOR_RS485_CONNECT_FAILURE = _hk_struct_test.MINOR_RS485_CONNECT_FAILURE
MINOR_RS485_CONNECT_RESTORE = _hk_struct_test.MINOR_RS485_CONNECT_RESTORE
MINOR_BATTERT_VOLTAGE_RESTORE = _hk_struct_test.MINOR_BATTERT_VOLTAGE_RESTORE
MINOR_WIRED_NETWORK_ABNORMAL = _hk_struct_test.MINOR_WIRED_NETWORK_ABNORMAL
MINOR_WIRED_NETWORK_RESTORE = _hk_struct_test.MINOR_WIRED_NETWORK_RESTORE
MINOR_GPRS_ABNORMAL = _hk_struct_test.MINOR_GPRS_ABNORMAL
MINOR_GPRS_RESTORE = _hk_struct_test.MINOR_GPRS_RESTORE
MINOR_3G_ABNORMAL = _hk_struct_test.MINOR_3G_ABNORMAL
MINOR_3G_RESTORE = _hk_struct_test.MINOR_3G_RESTORE
MINOR_SIM_CARD_ABNORMAL = _hk_struct_test.MINOR_SIM_CARD_ABNORMAL
MINOR_SIM_CARD_RESTORE = _hk_struct_test.MINOR_SIM_CARD_RESTORE
MINOR_ALARMHOST_VI_LOST = _hk_struct_test.MINOR_ALARMHOST_VI_LOST
MINOR_ALARMHOST_ILLEGAL_ACCESS = _hk_struct_test.MINOR_ALARMHOST_ILLEGAL_ACCESS
MINOR_ALARMHOST_HD_FULL = _hk_struct_test.MINOR_ALARMHOST_HD_FULL
MINOR_ALARMHOST_HD_ERROR = _hk_struct_test.MINOR_ALARMHOST_HD_ERROR
MINOR_ALARMHOST_DCD_LOST = _hk_struct_test.MINOR_ALARMHOST_DCD_LOST
MINOR_ALARMHOST_IP_CONFLICT = _hk_struct_test.MINOR_ALARMHOST_IP_CONFLICT
MINOR_ALARMHOST_NET_BROKEN = _hk_struct_test.MINOR_ALARMHOST_NET_BROKEN
MINOR_ALARMHOST_REC_ERROR = _hk_struct_test.MINOR_ALARMHOST_REC_ERROR
MINOR_ALARMHOST_VI_EXCEPTION = _hk_struct_test.MINOR_ALARMHOST_VI_EXCEPTION
MINOR_ALARMHOST_FORMAT_HDD_ERROR = _hk_struct_test.MINOR_ALARMHOST_FORMAT_HDD_ERROR
MINOR_ALARMHOST_USB_ERROR = _hk_struct_test.MINOR_ALARMHOST_USB_ERROR
MINOR_ALARMHOST_USB_RESTORE = _hk_struct_test.MINOR_ALARMHOST_USB_RESTORE
MINOR_ALARMHOST_PRINT_ERROR = _hk_struct_test.MINOR_ALARMHOST_PRINT_ERROR
MINOR_ALARMHOST_PRINT_RESTORE = _hk_struct_test.MINOR_ALARMHOST_PRINT_RESTORE
MINOR_SUBSYSTEM_COMMUNICATION_ERROR = _hk_struct_test.MINOR_SUBSYSTEM_COMMUNICATION_ERROR
MINOR_ALARMHOST_IPC_NO_LINK = _hk_struct_test.MINOR_ALARMHOST_IPC_NO_LINK
MINOR_ALARMHOST_IPC_IP_CONFLICT = _hk_struct_test.MINOR_ALARMHOST_IPC_IP_CONFLICT
MINOR_ALARMHOST_VI_MISMATCH = _hk_struct_test.MINOR_ALARMHOST_VI_MISMATCH
MINOR_ALARMHOST_MCU_RESTART = _hk_struct_test.MINOR_ALARMHOST_MCU_RESTART
MINOR_ALARMHOST_GPRS_MODULE_FAULT = _hk_struct_test.MINOR_ALARMHOST_GPRS_MODULE_FAULT
MINOR_ALARMHOST_TELEPHONE_MODULE_FAULT = _hk_struct_test.MINOR_ALARMHOST_TELEPHONE_MODULE_FAULT
MINOR_ALARMHOST_WIFI_ABNORMAL = _hk_struct_test.MINOR_ALARMHOST_WIFI_ABNORMAL
MINOR_ALARMHOST_WIFI_RESTORE = _hk_struct_test.MINOR_ALARMHOST_WIFI_RESTORE
MINOR_ALARMHOST_RF_ABNORMAL = _hk_struct_test.MINOR_ALARMHOST_RF_ABNORMAL
MINOR_ALARMHOST_RF_RESTORE = _hk_struct_test.MINOR_ALARMHOST_RF_RESTORE
MINOR_ALARMHOST_DETECTOR_ONLINE = _hk_struct_test.MINOR_ALARMHOST_DETECTOR_ONLINE
MINOR_ALARMHOST_DETECTOR_OFFLINE = _hk_struct_test.MINOR_ALARMHOST_DETECTOR_OFFLINE
MINOR_ALARMHOST_DETECTOR_BATTERY_NORMAL = _hk_struct_test.MINOR_ALARMHOST_DETECTOR_BATTERY_NORMAL
MINOR_ALARMHOST_DETECTOR_BATTERY_LOW = _hk_struct_test.MINOR_ALARMHOST_DETECTOR_BATTERY_LOW
MINOR_ALARMHOST_DATA_TRAFFIC_OVERFLOW = _hk_struct_test.MINOR_ALARMHOST_DATA_TRAFFIC_OVERFLOW
MINOR_ZONE_MODULE_LOSS = _hk_struct_test.MINOR_ZONE_MODULE_LOSS
MINOR_ZONE_MODULE_RESTORE = _hk_struct_test.MINOR_ZONE_MODULE_RESTORE
MINOR_ALARMHOST_WIRELESS_OUTPUT_LOSS = _hk_struct_test.MINOR_ALARMHOST_WIRELESS_OUTPUT_LOSS
MINOR_ALARMHOST_WIRELESS_OUTPUT_RESTORE = _hk_struct_test.MINOR_ALARMHOST_WIRELESS_OUTPUT_RESTORE
MINOR_ALARMHOST_WIRELESS_REPEATER_LOSS = _hk_struct_test.MINOR_ALARMHOST_WIRELESS_REPEATER_LOSS
MINOR_ALARMHOST_WIRELESS_REPEATER_RESTORE = _hk_struct_test.MINOR_ALARMHOST_WIRELESS_REPEATER_RESTORE
MINOR_TRIGGER_MODULE_LOSS = _hk_struct_test.MINOR_TRIGGER_MODULE_LOSS
MINOR_TRIGGER_MODULE_RESTORE = _hk_struct_test.MINOR_TRIGGER_MODULE_RESTORE
MINOR_WIRELESS_SIREN_LOSS = _hk_struct_test.MINOR_WIRELESS_SIREN_LOSS
MINOR_WIRELESS_SIREN_RESTORE = _hk_struct_test.MINOR_WIRELESS_SIREN_RESTORE
MINOR_ALARMHOST_WIRELESS_RS485_LOSS = _hk_struct_test.MINOR_ALARMHOST_WIRELESS_RS485_LOSS
MINOR_ALARMHOST_WIRELESS_RS485_RESTORE = _hk_struct_test.MINOR_ALARMHOST_WIRELESS_RS485_RESTORE
MINOR_GUARD = _hk_struct_test.MINOR_GUARD
MINOR_UNGUARD = _hk_struct_test.MINOR_UNGUARD
MINOR_BYPASS = _hk_struct_test.MINOR_BYPASS
MINOR_DURESS_ACCESS = _hk_struct_test.MINOR_DURESS_ACCESS
MINOR_ALARMHOST_LOCAL_REBOOT = _hk_struct_test.MINOR_ALARMHOST_LOCAL_REBOOT
MINOR_ALARMHOST_REMOTE_REBOOT = _hk_struct_test.MINOR_ALARMHOST_REMOTE_REBOOT
MINOR_ALARMHOST_LOCAL_UPGRADE = _hk_struct_test.MINOR_ALARMHOST_LOCAL_UPGRADE
MINOR_ALARMHOST_REMOTE_UPGRADE = _hk_struct_test.MINOR_ALARMHOST_REMOTE_UPGRADE
MINOR_RECOVERY_DEFAULT_PARAM = _hk_struct_test.MINOR_RECOVERY_DEFAULT_PARAM
MINOR_ALARM_OUTPUT = _hk_struct_test.MINOR_ALARM_OUTPUT
MINOR_ACCESS_OPEN = _hk_struct_test.MINOR_ACCESS_OPEN
MINOR_ACCESS_CLOSE = _hk_struct_test.MINOR_ACCESS_CLOSE
MINOR_SIREN_OPEN = _hk_struct_test.MINOR_SIREN_OPEN
MINOR_SIREN_CLOSE = _hk_struct_test.MINOR_SIREN_CLOSE
MINOR_MOD_ZONE_CONFIG = _hk_struct_test.MINOR_MOD_ZONE_CONFIG
MINOR_MOD_ALARMOUT_CONIFG = _hk_struct_test.MINOR_MOD_ALARMOUT_CONIFG
MINOR_MOD_ANALOG_CONFIG = _hk_struct_test.MINOR_MOD_ANALOG_CONFIG
MINOR_RS485_CONFIG = _hk_struct_test.MINOR_RS485_CONFIG
MINOR_PHONE_CONFIG = _hk_struct_test.MINOR_PHONE_CONFIG
MINOR_ADD_ADMIN = _hk_struct_test.MINOR_ADD_ADMIN
MINOR_MOD_ADMIN_PARAM = _hk_struct_test.MINOR_MOD_ADMIN_PARAM
MINOR_DEL_ADMIN = _hk_struct_test.MINOR_DEL_ADMIN
MINOR_ADD_NETUSER = _hk_struct_test.MINOR_ADD_NETUSER
MINOR_MOD_NETUSER_PARAM = _hk_struct_test.MINOR_MOD_NETUSER_PARAM
MINOR_DEL_NETUSER = _hk_struct_test.MINOR_DEL_NETUSER
MINOR_ADD_OPERATORUSER = _hk_struct_test.MINOR_ADD_OPERATORUSER
MINOR_MOD_OPERATORUSER_PW = _hk_struct_test.MINOR_MOD_OPERATORUSER_PW
MINOR_DEL_OPERATORUSER = _hk_struct_test.MINOR_DEL_OPERATORUSER
MINOR_ADD_KEYPADUSER = _hk_struct_test.MINOR_ADD_KEYPADUSER
MINOR_DEL_KEYPADUSER = _hk_struct_test.MINOR_DEL_KEYPADUSER
MINOR_REMOTEUSER_LOGIN = _hk_struct_test.MINOR_REMOTEUSER_LOGIN
MINOR_REMOTEUSER_LOGOUT = _hk_struct_test.MINOR_REMOTEUSER_LOGOUT
MINOR_REMOTE_GUARD = _hk_struct_test.MINOR_REMOTE_GUARD
MINOR_REMOTE_UNGUARD = _hk_struct_test.MINOR_REMOTE_UNGUARD
MINOR_MOD_HOST_CONFIG = _hk_struct_test.MINOR_MOD_HOST_CONFIG
MINOR_RESTORE_BYPASS = _hk_struct_test.MINOR_RESTORE_BYPASS
MINOR_ALARMOUT_OPEN = _hk_struct_test.MINOR_ALARMOUT_OPEN
MINOR_ALARMOUT_CLOSE = _hk_struct_test.MINOR_ALARMOUT_CLOSE
MINOR_MOD_SUBSYSTEM_PARAM = _hk_struct_test.MINOR_MOD_SUBSYSTEM_PARAM
MINOR_GROUP_BYPASS = _hk_struct_test.MINOR_GROUP_BYPASS
MINOR_RESTORE_GROUP_BYPASS = _hk_struct_test.MINOR_RESTORE_GROUP_BYPASS
MINOR_MOD_GRPS_PARAM = _hk_struct_test.MINOR_MOD_GRPS_PARAM
MINOR_MOD_NET_REPORT_PARAM = _hk_struct_test.MINOR_MOD_NET_REPORT_PARAM
MINOR_MOD_REPORT_MOD = _hk_struct_test.MINOR_MOD_REPORT_MOD
MINOR_MOD_GATEWAY_PARAM = _hk_struct_test.MINOR_MOD_GATEWAY_PARAM
MINOR_ALARMHOST_REMOTE_START_REC = _hk_struct_test.MINOR_ALARMHOST_REMOTE_START_REC
MINOR_ALARMHOST_REMOTE_STOP_REC = _hk_struct_test.MINOR_ALARMHOST_REMOTE_STOP_REC
MINOR_ALARMHOST_START_TRANS_CHAN = _hk_struct_test.MINOR_ALARMHOST_START_TRANS_CHAN
MINOR_ALARMHOST_STOP_TRANS_CHAN = _hk_struct_test.MINOR_ALARMHOST_STOP_TRANS_CHAN
MINOR_ALARMHOST_START_VT = _hk_struct_test.MINOR_ALARMHOST_START_VT
MINOR_ALARMHOST_STOP_VTM = _hk_struct_test.MINOR_ALARMHOST_STOP_VTM
MINOR_ALARMHOST_REMOTE_PLAYBYFILE = _hk_struct_test.MINOR_ALARMHOST_REMOTE_PLAYBYFILE
MINOR_ALARMHOST_REMOTE_PLAYBYTIME = _hk_struct_test.MINOR_ALARMHOST_REMOTE_PLAYBYTIME
MINOR_ALARMHOST_REMOTE_PTZCTRL = _hk_struct_test.MINOR_ALARMHOST_REMOTE_PTZCTRL
MINOR_ALARMHOST_REMOTE_FORMAT_HDD = _hk_struct_test.MINOR_ALARMHOST_REMOTE_FORMAT_HDD
MINOR_ALARMHOST_REMOTE_LOCKFILE = _hk_struct_test.MINOR_ALARMHOST_REMOTE_LOCKFILE
MINOR_ALARMHOST_REMOTE_UNLOCKFILE = _hk_struct_test.MINOR_ALARMHOST_REMOTE_UNLOCKFILE
MINOR_ALARMHOST_REMOTE_CFGFILE_OUTPUT = _hk_struct_test.MINOR_ALARMHOST_REMOTE_CFGFILE_OUTPUT
MINOR_ALARMHOST_REMOTE_CFGFILE_INTPUT = _hk_struct_test.MINOR_ALARMHOST_REMOTE_CFGFILE_INTPUT
MINOR_ALARMHOST_REMOTE_RECFILE_OUTPUT = _hk_struct_test.MINOR_ALARMHOST_REMOTE_RECFILE_OUTPUT
MINOR_ALARMHOST_STAY_ARM = _hk_struct_test.MINOR_ALARMHOST_STAY_ARM
MINOR_ALARMHOST_QUICK_ARM = _hk_struct_test.MINOR_ALARMHOST_QUICK_ARM
MINOR_ALARMHOST_AUTOMATIC_ARM = _hk_struct_test.MINOR_ALARMHOST_AUTOMATIC_ARM
MINOR_ALARMHOST_AUTOMATIC_DISARM = _hk_struct_test.MINOR_ALARMHOST_AUTOMATIC_DISARM
MINOR_ALARMHOST_KEYSWITCH_ARM = _hk_struct_test.MINOR_ALARMHOST_KEYSWITCH_ARM
MINOR_ALARMHOST_KEYSWITCH_DISARM = _hk_struct_test.MINOR_ALARMHOST_KEYSWITCH_DISARM
MINOR_ALARMHOST_CLEAR_ALARM = _hk_struct_test.MINOR_ALARMHOST_CLEAR_ALARM
MINOR_ALARMHOST_MOD_FAULT_CFG = _hk_struct_test.MINOR_ALARMHOST_MOD_FAULT_CFG
MINOR_ALARMHOST_MOD_EVENT_TRIGGER_ALARMOUT_CFG = _hk_struct_test.MINOR_ALARMHOST_MOD_EVENT_TRIGGER_ALARMOUT_CFG
MINOR_ALARMHOST_SEARCH_EXTERNAL_MODULE = _hk_struct_test.MINOR_ALARMHOST_SEARCH_EXTERNAL_MODULE
MINOR_ALARMHOST_REGISTER_EXTERNAL_MODULE = _hk_struct_test.MINOR_ALARMHOST_REGISTER_EXTERNAL_MODULE
MINOR_ALARMHOST_CLOSE_KEYBOARD_ALARM = _hk_struct_test.MINOR_ALARMHOST_CLOSE_KEYBOARD_ALARM
MINOR_ALARMHOST_MOD_3G_PARAM = _hk_struct_test.MINOR_ALARMHOST_MOD_3G_PARAM
MINOR_ALARMHOST_MOD_PRINT_PARAM = _hk_struct_test.MINOR_ALARMHOST_MOD_PRINT_PARAM
MINOR_SD_CARD_FORMAT = _hk_struct_test.MINOR_SD_CARD_FORMAT
MINOR_SUBSYSTEM_UPGRADE = _hk_struct_test.MINOR_SUBSYSTEM_UPGRADE
MINOR_ALARMHOST_PLAN_ARM_CFG = _hk_struct_test.MINOR_ALARMHOST_PLAN_ARM_CFG
MINOR_ALARMHOST_PHONE_ARM = _hk_struct_test.MINOR_ALARMHOST_PHONE_ARM
MINOR_ALARMHOST_PHONE_STAY_ARM = _hk_struct_test.MINOR_ALARMHOST_PHONE_STAY_ARM
MINOR_ALARMHOST_PHONE_QUICK_ARM = _hk_struct_test.MINOR_ALARMHOST_PHONE_QUICK_ARM
MINOR_ALARMHOST_PHONE_DISARM = _hk_struct_test.MINOR_ALARMHOST_PHONE_DISARM
MINOR_ALARMHOST_PHONE_CLEAR_ALARM = _hk_struct_test.MINOR_ALARMHOST_PHONE_CLEAR_ALARM
MINOR_ALARMHOST_WHITELIST_CFG = _hk_struct_test.MINOR_ALARMHOST_WHITELIST_CFG
MINOR_ALARMHOST_TIME_TRIGGER_CFG = _hk_struct_test.MINOR_ALARMHOST_TIME_TRIGGER_CFG
MINOR_ALARMHOST_CAPTRUE_CFG = _hk_struct_test.MINOR_ALARMHOST_CAPTRUE_CFG
MINOR_ALARMHOST_TAMPER_CFG = _hk_struct_test.MINOR_ALARMHOST_TAMPER_CFG
MINOR_ALARMHOST_REMOTE_KEYPAD_UPGRADE = _hk_struct_test.MINOR_ALARMHOST_REMOTE_KEYPAD_UPGRADE
MINOR_ALARMHOST_ONETOUCH_AWAY_ARMING = _hk_struct_test.MINOR_ALARMHOST_ONETOUCH_AWAY_ARMING
MINOR_ALARMHOST_ONETOUCH_STAY_ARMING = _hk_struct_test.MINOR_ALARMHOST_ONETOUCH_STAY_ARMING
MINOR_ALARMHOST_SINGLE_PARTITION_ARMING_OR_DISARMING = _hk_struct_test.MINOR_ALARMHOST_SINGLE_PARTITION_ARMING_OR_DISARMING
MINOR_ALARMHOST_CARD_CONFIGURATION = _hk_struct_test.MINOR_ALARMHOST_CARD_CONFIGURATION
MINOR_ALARMHOST_CARD_ARMING_OR_DISARMING = _hk_struct_test.MINOR_ALARMHOST_CARD_ARMING_OR_DISARMING
MINOR_ALARMHOST_EXPENDING_NETCENTER_CONFIGURATION = _hk_struct_test.MINOR_ALARMHOST_EXPENDING_NETCENTER_CONFIGURATION
MINOR_ALARMHOST_NETCARD_CONFIGURATION = _hk_struct_test.MINOR_ALARMHOST_NETCARD_CONFIGURATION
MINOR_ALARMHOST_DDNS_CONFIGURATION = _hk_struct_test.MINOR_ALARMHOST_DDNS_CONFIGURATION
MINOR_ALARMHOST_RS485BUS_CONFIGURATION = _hk_struct_test.MINOR_ALARMHOST_RS485BUS_CONFIGURATION
MINOR_ALARMHOST_RS485BUS_RE_REGISTRATION = _hk_struct_test.MINOR_ALARMHOST_RS485BUS_RE_REGISTRATION
MINOR_ALARMHOST_REMOTE_OPEN_ELECTRIC_LOCK = _hk_struct_test.MINOR_ALARMHOST_REMOTE_OPEN_ELECTRIC_LOCK
MINOR_ALARMHOST_REMOTE_CLOSE_ELECTRIC_LOCK = _hk_struct_test.MINOR_ALARMHOST_REMOTE_CLOSE_ELECTRIC_LOCK
MINOR_ALARMHOST_LOCAL_OPEN_ELECTRIC_LOCK = _hk_struct_test.MINOR_ALARMHOST_LOCAL_OPEN_ELECTRIC_LOCK
MINOR_ALARMHOST_LOCAL_CLOSE_ELECTRIC_LOCK = _hk_struct_test.MINOR_ALARMHOST_LOCAL_CLOSE_ELECTRIC_LOCK
MINOR_ALARMHOST_OPEN_ALARM_LAMP = _hk_struct_test.MINOR_ALARMHOST_OPEN_ALARM_LAMP
MINOR_ALARMHOST_CLOSE_ALARM_LAMP = _hk_struct_test.MINOR_ALARMHOST_CLOSE_ALARM_LAMP
MINOR_ALARMHOST_TEMPORARY_PASSWORD = _hk_struct_test.MINOR_ALARMHOST_TEMPORARY_PASSWORD
MINOR_ALARMHOST_ONEKEY_AWAY_ARM = _hk_struct_test.MINOR_ALARMHOST_ONEKEY_AWAY_ARM
MINOR_ALARMHOST_ONEKEY_STAY_ARM = _hk_struct_test.MINOR_ALARMHOST_ONEKEY_STAY_ARM
MINOR_ALARMHOST_SINGLE_ZONE_ARM = _hk_struct_test.MINOR_ALARMHOST_SINGLE_ZONE_ARM
MINOR_ALARMHOST_SINGLE_ZONE_DISARM = _hk_struct_test.MINOR_ALARMHOST_SINGLE_ZONE_DISARM
MINOR_ALARMHOST_HIDDNS_CONFIG = _hk_struct_test.MINOR_ALARMHOST_HIDDNS_CONFIG
MINOR_ALARMHOST_REMOTE_KEYBOARD_UPDATA = _hk_struct_test.MINOR_ALARMHOST_REMOTE_KEYBOARD_UPDATA
MINOR_ALARMHOST_ZONE_ADD_DETECTOR = _hk_struct_test.MINOR_ALARMHOST_ZONE_ADD_DETECTOR
MINOR_ALARMHOST_ZONE_DELETE_DETECTOR = _hk_struct_test.MINOR_ALARMHOST_ZONE_DELETE_DETECTOR
MINOR_ALARMHOST_QUERY_DETECTOR_SIGNAL = _hk_struct_test.MINOR_ALARMHOST_QUERY_DETECTOR_SIGNAL
MINOR_ALARMHOST_QUERY_DETECTOR_BATTERY = _hk_struct_test.MINOR_ALARMHOST_QUERY_DETECTOR_BATTERY
MINOR_ALARMHOST_SET_DETECTOR_GUARD = _hk_struct_test.MINOR_ALARMHOST_SET_DETECTOR_GUARD
MINOR_ALARMHOST_SET_DETECTOR_UNGUARD = _hk_struct_test.MINOR_ALARMHOST_SET_DETECTOR_UNGUARD
MINOR_ALARMHOST_SET_WIFI_PARAMETER = _hk_struct_test.MINOR_ALARMHOST_SET_WIFI_PARAMETER
MINOR_ALARMHOST_OPEN_VOICE = _hk_struct_test.MINOR_ALARMHOST_OPEN_VOICE
MINOR_ALARMHOST_CLOSE_VOICE = _hk_struct_test.MINOR_ALARMHOST_CLOSE_VOICE
MINOR_ALARMHOST_ENABLE_FUNCTION_KEY = _hk_struct_test.MINOR_ALARMHOST_ENABLE_FUNCTION_KEY
MINOR_ALARMHOST_DISABLE_FUNCTION_KEY = _hk_struct_test.MINOR_ALARMHOST_DISABLE_FUNCTION_KEY
MINOR_ALARMHOST_READ_CARD = _hk_struct_test.MINOR_ALARMHOST_READ_CARD
MINOR_ALARMHOST_START_BROADCAST = _hk_struct_test.MINOR_ALARMHOST_START_BROADCAST
MINOR_ALARMHOST_STOP_BROADCAST = _hk_struct_test.MINOR_ALARMHOST_STOP_BROADCAST
MINOR_ALARMHOST_REMOTE_ZONE_MODULE_UPGRADE = _hk_struct_test.MINOR_ALARMHOST_REMOTE_ZONE_MODULE_UPGRADE
MINOR_ALARMHOST_NETWORK_MODULE_EXTEND = _hk_struct_test.MINOR_ALARMHOST_NETWORK_MODULE_EXTEND
MINOR_ALARMHOST_ADD_CONTROLLER = _hk_struct_test.MINOR_ALARMHOST_ADD_CONTROLLER
MINOR_ALARMHOST_DELETE_CONTORLLER = _hk_struct_test.MINOR_ALARMHOST_DELETE_CONTORLLER
MINOR_ALARMHOST_REMOTE_NETWORKMODULE_UPGRADE = _hk_struct_test.MINOR_ALARMHOST_REMOTE_NETWORKMODULE_UPGRADE
MINOR_ALARMHOST_WIRELESS_OUTPUT_ADD = _hk_struct_test.MINOR_ALARMHOST_WIRELESS_OUTPUT_ADD
MINOR_ALARMHOST_WIRELESS_OUTPUT_DEL = _hk_struct_test.MINOR_ALARMHOST_WIRELESS_OUTPUT_DEL
MINOR_ALARMHOST_WIRELESS_REPEATER_ADD = _hk_struct_test.MINOR_ALARMHOST_WIRELESS_REPEATER_ADD
MINOR_ALARMHOST_WIRELESS_REPEATER_DEL = _hk_struct_test.MINOR_ALARMHOST_WIRELESS_REPEATER_DEL
MINOR_ALARMHOST_PHONELIST_CFG = _hk_struct_test.MINOR_ALARMHOST_PHONELIST_CFG
MINOR_ALARMHOST_RF_SIGNAL_CHECK = _hk_struct_test.MINOR_ALARMHOST_RF_SIGNAL_CHECK
MINOR_ALARMHOST_USB_UPGRADE = _hk_struct_test.MINOR_ALARMHOST_USB_UPGRADE
MINOR_ALARMHOST_DOOR_TIME_REMINDER_CFG = _hk_struct_test.MINOR_ALARMHOST_DOOR_TIME_REMINDER_CFG
MINOR_ALARMHOST_WIRELESS_SIREN_ADD = _hk_struct_test.MINOR_ALARMHOST_WIRELESS_SIREN_ADD
MINOR_ALARMHOST_WIRELESS_SIREN_DEL = _hk_struct_test.MINOR_ALARMHOST_WIRELESS_SIREN_DEL
MINOR_ALARMHOST_OUT_SCALE_OPEN = _hk_struct_test.MINOR_ALARMHOST_OUT_SCALE_OPEN
MINOR_ALARMHOST_OUT_SCALE_CLOSE = _hk_struct_test.MINOR_ALARMHOST_OUT_SCALE_CLOSE
MINOR_ALARMHOST_LOCAL_SET_DEVICE_ACTIVE = _hk_struct_test.MINOR_ALARMHOST_LOCAL_SET_DEVICE_ACTIVE
MINOR_ALARMHOST_REMOTE_SET_DEVICE_ACTIVE = _hk_struct_test.MINOR_ALARMHOST_REMOTE_SET_DEVICE_ACTIVE
MINOR_ALARMHOST_LOCAL_PARA_FACTORY_DEFAULT = _hk_struct_test.MINOR_ALARMHOST_LOCAL_PARA_FACTORY_DEFAULT
MINOR_ALARMHOST_REMOTE_PARA_FACTORY_DEFAULT = _hk_struct_test.MINOR_ALARMHOST_REMOTE_PARA_FACTORY_DEFAULT
MINOR_ADD_IPC = _hk_struct_test.MINOR_ADD_IPC
MINOR_MODIFY_IPC = _hk_struct_test.MINOR_MODIFY_IPC
MINOR_DELETE_IPC = _hk_struct_test.MINOR_DELETE_IPC
MINOR_SYS_CHECK_START = _hk_struct_test.MINOR_SYS_CHECK_START
MINOR_SYS_CHECK_STOP = _hk_struct_test.MINOR_SYS_CHECK_STOP
MINOR_SYS_CHECK_FINISH = _hk_struct_test.MINOR_SYS_CHECK_FINISH
MINOR_SCHOOLTIME_IRGI_B = _hk_struct_test.MINOR_SCHOOLTIME_IRGI_B
MINOR_SCHOOLTIME_SDK = _hk_struct_test.MINOR_SCHOOLTIME_SDK
MINOR_SCHOOLTIME_SELFTEST = _hk_struct_test.MINOR_SCHOOLTIME_SELFTEST
MINOR_SUBSYSTEM_ABNORMALINSERT = _hk_struct_test.MINOR_SUBSYSTEM_ABNORMALINSERT
MINOR_SUBSYSTEM_ABNORMALPULLOUT = _hk_struct_test.MINOR_SUBSYSTEM_ABNORMALPULLOUT
MINOR_AUTO_ARM = _hk_struct_test.MINOR_AUTO_ARM
MINOR_AUTO_DISARM = _hk_struct_test.MINOR_AUTO_DISARM
MINOR_TIME_TIGGER_ON = _hk_struct_test.MINOR_TIME_TIGGER_ON
MINOR_TIME_TIGGER_OFF = _hk_struct_test.MINOR_TIME_TIGGER_OFF
MINOR_AUTO_ARM_FAILD = _hk_struct_test.MINOR_AUTO_ARM_FAILD
MINOR_AUTO_DISARM_FAILD = _hk_struct_test.MINOR_AUTO_DISARM_FAILD
MINOR_TIME_TIGGER_ON_FAILD = _hk_struct_test.MINOR_TIME_TIGGER_ON_FAILD
MINOR_TIME_TIGGER_OFF_FAILD = _hk_struct_test.MINOR_TIME_TIGGER_OFF_FAILD
MINOR_MANDATORY_ALARM = _hk_struct_test.MINOR_MANDATORY_ALARM
MINOR_KEYPAD_LOCKED = _hk_struct_test.MINOR_KEYPAD_LOCKED
MINOR_USB_INSERT = _hk_struct_test.MINOR_USB_INSERT
MINOR_USB_PULLOUT = _hk_struct_test.MINOR_USB_PULLOUT
PARA_VIDEOOUT = _hk_struct_test.PARA_VIDEOOUT
PARA_IMAGE = _hk_struct_test.PARA_IMAGE
PARA_ENCODE = _hk_struct_test.PARA_ENCODE
PARA_NETWORK = _hk_struct_test.PARA_NETWORK
PARA_ALARM = _hk_struct_test.PARA_ALARM
PARA_EXCEPTION = _hk_struct_test.PARA_EXCEPTION
PARA_DECODER = _hk_struct_test.PARA_DECODER
PARA_RS232 = _hk_struct_test.PARA_RS232
PARA_PREVIEW = _hk_struct_test.PARA_PREVIEW
PARA_SECURITY = _hk_struct_test.PARA_SECURITY
PARA_DATETIME = _hk_struct_test.PARA_DATETIME
PARA_FRAMETYPE = _hk_struct_test.PARA_FRAMETYPE
PARA_DETECTION = _hk_struct_test.PARA_DETECTION
PARA_VCA_RULE = _hk_struct_test.PARA_VCA_RULE
PARA_VCA_CTRL = _hk_struct_test.PARA_VCA_CTRL
PARA_VCA_PLATE = _hk_struct_test.PARA_VCA_PLATE
PARA_CODESPLITTER = _hk_struct_test.PARA_CODESPLITTER
PARA_RS485 = _hk_struct_test.PARA_RS485
PARA_DEVICE = _hk_struct_test.PARA_DEVICE
PARA_HARDDISK = _hk_struct_test.PARA_HARDDISK
PARA_AUTOBOOT = _hk_struct_test.PARA_AUTOBOOT
PARA_HOLIDAY = _hk_struct_test.PARA_HOLIDAY
PARA_IPC = _hk_struct_test.PARA_IPC
NET_DVR_FILE_SUCCESS = _hk_struct_test.NET_DVR_FILE_SUCCESS
NET_DVR_FILE_NOFIND = _hk_struct_test.NET_DVR_FILE_NOFIND
NET_DVR_ISFINDING = _hk_struct_test.NET_DVR_ISFINDING
NET_DVR_NOMOREFILE = _hk_struct_test.NET_DVR_NOMOREFILE
NET_DVR_FILE_EXCEPTION = _hk_struct_test.NET_DVR_FILE_EXCEPTION
COMM_ALARM = _hk_struct_test.COMM_ALARM
COMM_ALARM_RULE = _hk_struct_test.COMM_ALARM_RULE
COMM_ALARM_PDC = _hk_struct_test.COMM_ALARM_PDC
COMM_ALARM_VIDEOPLATFORM = _hk_struct_test.COMM_ALARM_VIDEOPLATFORM
COMM_ALARM_ALARMHOST = _hk_struct_test.COMM_ALARM_ALARMHOST
COMM_ALARM_FACE = _hk_struct_test.COMM_ALARM_FACE
COMM_RULE_INFO_UPLOAD = _hk_struct_test.COMM_RULE_INFO_UPLOAD
COMM_ALARM_AID = _hk_struct_test.COMM_ALARM_AID
COMM_ALARM_TPS = _hk_struct_test.COMM_ALARM_TPS
COMM_UPLOAD_FACESNAP_RESULT = _hk_struct_test.COMM_UPLOAD_FACESNAP_RESULT
COMM_ALARM_TFS = _hk_struct_test.COMM_ALARM_TFS
COMM_ALARM_TPS_V41 = _hk_struct_test.COMM_ALARM_TPS_V41
COMM_ALARM_AID_V41 = _hk_struct_test.COMM_ALARM_AID_V41
COMM_ALARM_VQD_EX = _hk_struct_test.COMM_ALARM_VQD_EX
COMM_ALARM_NOTIFICATION_REPORT = _hk_struct_test.COMM_ALARM_NOTIFICATION_REPORT
COMM_SENSOR_VALUE_UPLOAD = _hk_struct_test.COMM_SENSOR_VALUE_UPLOAD
COMM_SENSOR_ALARM = _hk_struct_test.COMM_SENSOR_ALARM
COMM_SWITCH_ALARM = _hk_struct_test.COMM_SWITCH_ALARM
COMM_ALARMHOST_EXCEPTION = _hk_struct_test.COMM_ALARMHOST_EXCEPTION
COMM_ALARMHOST_OPERATEEVENT_ALARM = _hk_struct_test.COMM_ALARMHOST_OPERATEEVENT_ALARM
COMM_ALARMHOST_SAFETYCABINSTATE = _hk_struct_test.COMM_ALARMHOST_SAFETYCABINSTATE
COMM_ALARMHOST_ALARMOUTSTATUS = _hk_struct_test.COMM_ALARMHOST_ALARMOUTSTATUS
COMM_ALARMHOST_CID_ALARM = _hk_struct_test.COMM_ALARMHOST_CID_ALARM
COMM_ALARMHOST_EXTERNAL_DEVICE_ALARM = _hk_struct_test.COMM_ALARMHOST_EXTERNAL_DEVICE_ALARM
COMM_ALARMHOST_DATA_UPLOAD = _hk_struct_test.COMM_ALARMHOST_DATA_UPLOAD
COMM_FACECAPTURE_STATISTICS_RESULT = _hk_struct_test.COMM_FACECAPTURE_STATISTICS_RESULT
COMM_ALARM_WIRELESS_INFO = _hk_struct_test.COMM_ALARM_WIRELESS_INFO
COMM_SCENECHANGE_DETECTION_UPLOAD = _hk_struct_test.COMM_SCENECHANGE_DETECTION_UPLOAD
COMM_CROSSLINE_ALARM = _hk_struct_test.COMM_CROSSLINE_ALARM
COMM_UPLOAD_VIDEO_INTERCOM_EVENT = _hk_struct_test.COMM_UPLOAD_VIDEO_INTERCOM_EVENT
COMM_ALARM_VIDEO_INTERCOM = _hk_struct_test.COMM_ALARM_VIDEO_INTERCOM
COMM_UPLOAD_NOTICE_DATA = _hk_struct_test.COMM_UPLOAD_NOTICE_DATA
COMM_ALARM_AUDIOEXCEPTION = _hk_struct_test.COMM_ALARM_AUDIOEXCEPTION
COMM_ALARM_DEFOCUS = _hk_struct_test.COMM_ALARM_DEFOCUS
COMM_ALARM_BUTTON_DOWN_EXCEPTION = _hk_struct_test.COMM_ALARM_BUTTON_DOWN_EXCEPTION
COMM_ALARM_ALARMGPS = _hk_struct_test.COMM_ALARM_ALARMGPS
COMM_TRADEINFO = _hk_struct_test.COMM_TRADEINFO
COMM_UPLOAD_PLATE_RESULT = _hk_struct_test.COMM_UPLOAD_PLATE_RESULT
COMM_ITC_STATUS_DETECT_RESULT = _hk_struct_test.COMM_ITC_STATUS_DETECT_RESULT
COMM_IPC_AUXALARM_RESULT = _hk_struct_test.COMM_IPC_AUXALARM_RESULT
COMM_UPLOAD_PICTUREINFO = _hk_struct_test.COMM_UPLOAD_PICTUREINFO
COMM_SNAP_MATCH_ALARM = _hk_struct_test.COMM_SNAP_MATCH_ALARM
COMM_ITS_PLATE_RESULT = _hk_struct_test.COMM_ITS_PLATE_RESULT
COMM_ITS_TRAFFIC_COLLECT = _hk_struct_test.COMM_ITS_TRAFFIC_COLLECT
COMM_ITS_GATE_VEHICLE = _hk_struct_test.COMM_ITS_GATE_VEHICLE
COMM_ITS_GATE_FACE = _hk_struct_test.COMM_ITS_GATE_FACE
COMM_ITS_GATE_COSTITEM = _hk_struct_test.COMM_ITS_GATE_COSTITEM
COMM_ITS_GATE_HANDOVER = _hk_struct_test.COMM_ITS_GATE_HANDOVER
COMM_ITS_PARK_VEHICLE = _hk_struct_test.COMM_ITS_PARK_VEHICLE
COMM_ITS_BLACKLIST_ALARM = _hk_struct_test.COMM_ITS_BLACKLIST_ALARM
COMM_VEHICLE_CONTROL_LIST_DSALARM = _hk_struct_test.COMM_VEHICLE_CONTROL_LIST_DSALARM
COMM_VEHICLE_CONTROL_ALARM = _hk_struct_test.COMM_VEHICLE_CONTROL_ALARM
COMM_FIRE_ALARM = _hk_struct_test.COMM_FIRE_ALARM
COMM_ITS_GATE_ALARMINFO = _hk_struct_test.COMM_ITS_GATE_ALARMINFO
COMM_VEHICLE_RECOG_RESULT = _hk_struct_test.COMM_VEHICLE_RECOG_RESULT
COMM_PLATE_RESULT_V50 = _hk_struct_test.COMM_PLATE_RESULT_V50
COMM_GATE_CHARGEINFO_UPLOAD = _hk_struct_test.COMM_GATE_CHARGEINFO_UPLOAD
COMM_TME_VEHICLE_INDENTIFICATION = _hk_struct_test.COMM_TME_VEHICLE_INDENTIFICATION
COMM_GATE_CARDINFO_UPLOAD = _hk_struct_test.COMM_GATE_CARDINFO_UPLOAD
COMM_LOADING_DOCK_OPERATEINFO = _hk_struct_test.COMM_LOADING_DOCK_OPERATEINFO
COMM_ALARM_SENSORINFO_UPLOAD = _hk_struct_test.COMM_ALARM_SENSORINFO_UPLOAD
COMM_ALARM_CAPTURE_UPLOAD = _hk_struct_test.COMM_ALARM_CAPTURE_UPLOAD
COMM_ITS_RADARINFO = _hk_struct_test.COMM_ITS_RADARINFO
COMM_SIGNAL_LAMP_ABNORMAL = _hk_struct_test.COMM_SIGNAL_LAMP_ABNORMAL
COMM_ALARM_TPS_REAL_TIME = _hk_struct_test.COMM_ALARM_TPS_REAL_TIME
COMM_ALARM_TPS_STATISTICS = _hk_struct_test.COMM_ALARM_TPS_STATISTICS
COMM_ALARM_V30 = _hk_struct_test.COMM_ALARM_V30
COMM_IPCCFG = _hk_struct_test.COMM_IPCCFG
COMM_IPCCFG_V31 = _hk_struct_test.COMM_IPCCFG_V31
COMM_IPCCFG_V40 = _hk_struct_test.COMM_IPCCFG_V40
COMM_ALARM_DEVICE = _hk_struct_test.COMM_ALARM_DEVICE
COMM_ALARM_CVR = _hk_struct_test.COMM_ALARM_CVR
COMM_ALARM_HOT_SPARE = _hk_struct_test.COMM_ALARM_HOT_SPARE
COMM_ALARM_V40 = _hk_struct_test.COMM_ALARM_V40
COMM_UPLOAD_HEATMAP_RESULT = _hk_struct_test.COMM_UPLOAD_HEATMAP_RESULT
COMM_ALARM_DEVICE_V40 = _hk_struct_test.COMM_ALARM_DEVICE_V40
COMM_ALARM_FACE_DETECTION = _hk_struct_test.COMM_ALARM_FACE_DETECTION
COMM_ALARM_TARGET_LEFT_REGION = _hk_struct_test.COMM_ALARM_TARGET_LEFT_REGION
COMM_GISINFO_UPLOAD = _hk_struct_test.COMM_GISINFO_UPLOAD
COMM_VANDALPROOF_ALARM = _hk_struct_test.COMM_VANDALPROOF_ALARM
COMM_PEOPLE_DETECTION_UPLOAD = _hk_struct_test.COMM_PEOPLE_DETECTION_UPLOAD
COMM_ALARM_STORAGE_DETECTION = _hk_struct_test.COMM_ALARM_STORAGE_DETECTION
COMM_MVM_REGISTER = _hk_struct_test.COMM_MVM_REGISTER
COMM_MVM_STATUS_INFO = _hk_struct_test.COMM_MVM_STATUS_INFO
COMM_UPLOAD_HEATMAP_RESULT_PDC = _hk_struct_test.COMM_UPLOAD_HEATMAP_RESULT_PDC
COMM_UPLOAD_HEATMAP_RESULT_DURATION = _hk_struct_test.COMM_UPLOAD_HEATMAP_RESULT_DURATION
COMM_UPLOAD_HEATMAP_RESULT_INTERSECTION = _hk_struct_test.COMM_UPLOAD_HEATMAP_RESULT_INTERSECTION
COMM_UPLOAD_AIOP_VIDEO = _hk_struct_test.COMM_UPLOAD_AIOP_VIDEO
COMM_UPLOAD_AIOP_PICTURE = _hk_struct_test.COMM_UPLOAD_AIOP_PICTURE
COMM_UPLOAD_AIOP_POLLING_SNAP = _hk_struct_test.COMM_UPLOAD_AIOP_POLLING_SNAP
COMM_UPLOAD_AIOP_POLLING_VIDEO = _hk_struct_test.COMM_UPLOAD_AIOP_POLLING_VIDEO
COMM_ITS_ROAD_EXCEPTION = _hk_struct_test.COMM_ITS_ROAD_EXCEPTION
COMM_ITS_EXTERNAL_CONTROL_ALARM = _hk_struct_test.COMM_ITS_EXTERNAL_CONTROL_ALARM
COMM_ALARM_SHIPSDETECTION = _hk_struct_test.COMM_ALARM_SHIPSDETECTION
COMM_VCA_DBD_ALARM = _hk_struct_test.COMM_VCA_DBD_ALARM
COMM_VCA_ADAS_ALARM = _hk_struct_test.COMM_VCA_ADAS_ALARM
COMM_VEH_REALTIME_INFO = _hk_struct_test.COMM_VEH_REALTIME_INFO
COMM_FIREDETECTION_ALARM = _hk_struct_test.COMM_FIREDETECTION_ALARM
COMM_ALARM_DENSEFOGDETECTION = _hk_struct_test.COMM_ALARM_DENSEFOGDETECTION
COMM_VCA_ALARM = _hk_struct_test.COMM_VCA_ALARM
COMM_FACE_THERMOMETRY_ALARM = _hk_struct_test.COMM_FACE_THERMOMETRY_ALARM
COMM_TAPE_ARCHIVE_ALARM = _hk_struct_test.COMM_TAPE_ARCHIVE_ALARM
COMM_SCREEN_ALARM = _hk_struct_test.COMM_SCREEN_ALARM
COMM_DVCS_STATE_ALARM = _hk_struct_test.COMM_DVCS_STATE_ALARM
COMM_ALARM_ACS = _hk_struct_test.COMM_ALARM_ACS
COMM_ALARM_FIBER_CONVERT = _hk_struct_test.COMM_ALARM_FIBER_CONVERT
COMM_ALARM_SWITCH_CONVERT = _hk_struct_test.COMM_ALARM_SWITCH_CONVERT
COMM_ALARM_DEC_VCA = _hk_struct_test.COMM_ALARM_DEC_VCA
COMM_ALARM_LCD = _hk_struct_test.COMM_ALARM_LCD
COMM_CONFERENCE_CALL_ALARM = _hk_struct_test.COMM_CONFERENCE_CALL_ALARM
COMM_ALARM_WALL_CONFERNECE = _hk_struct_test.COMM_ALARM_WALL_CONFERNECE
COMM_DIAGNOSIS_UPLOAD = _hk_struct_test.COMM_DIAGNOSIS_UPLOAD
COMM_HIGH_DENSITY_UPLOAD = _hk_struct_test.COMM_HIGH_DENSITY_UPLOAD
COMM_ID_INFO_ALARM = _hk_struct_test.COMM_ID_INFO_ALARM
COMM_PASSNUM_INFO_ALARM = _hk_struct_test.COMM_PASSNUM_INFO_ALARM
COMM_PASSPORT_ALARM = _hk_struct_test.COMM_PASSPORT_ALARM
COMM_THERMOMETRY_DIFF_ALARM = _hk_struct_test.COMM_THERMOMETRY_DIFF_ALARM
COMM_THERMOMETRY_ALARM = _hk_struct_test.COMM_THERMOMETRY_ALARM
COMM_PANORAMIC_LINKAGE_ALARM = _hk_struct_test.COMM_PANORAMIC_LINKAGE_ALARM
COMM_TAG_INFO_ALARM = _hk_struct_test.COMM_TAG_INFO_ALARM
COMM_ALARM_VQD = _hk_struct_test.COMM_ALARM_VQD
COMM_PUSH_UPDATE_RECORD_INFO = _hk_struct_test.COMM_PUSH_UPDATE_RECORD_INFO
COMM_SWITCH_LAMP_ALARM = _hk_struct_test.COMM_SWITCH_LAMP_ALARM
COMM_INQUEST_ALARM = _hk_struct_test.COMM_INQUEST_ALARM
COMM_VIDEO_PARKING_POLE_ALARM = _hk_struct_test.COMM_VIDEO_PARKING_POLE_ALARM
COMM_GPS_STATUS_ALARM = _hk_struct_test.COMM_GPS_STATUS_ALARM
COMM_BASE_STATION_INFO_ALARM = _hk_struct_test.COMM_BASE_STATION_INFO_ALARM
COMM_ALARM_SUBSCRIBE_EVENT = _hk_struct_test.COMM_ALARM_SUBSCRIBE_EVENT
COMM_FACESNAP_RAWDATA_ALARM = _hk_struct_test.COMM_FACESNAP_RAWDATA_ALARM
COMM_CLUSTER_ALARM = _hk_struct_test.COMM_CLUSTER_ALARM
COMM_ISAPI_ALARM = _hk_struct_test.COMM_ISAPI_ALARM
COMM_FRAMES_PEOPLE_COUNTING_ALARM = _hk_struct_test.COMM_FRAMES_PEOPLE_COUNTING_ALARM
COMM_SIGN_ABNORMAL_ALARM = _hk_struct_test.COMM_SIGN_ABNORMAL_ALARM
COMM_HFPD_ALARM = _hk_struct_test.COMM_HFPD_ALARM
COMM_HCU_ALARM = _hk_struct_test.COMM_HCU_ALARM
COMM_DEV_STATUS_CHANGED = _hk_struct_test.COMM_DEV_STATUS_CHANGED
EXCEPTION_EXCHANGE = _hk_struct_test.EXCEPTION_EXCHANGE
EXCEPTION_AUDIOEXCHANGE = _hk_struct_test.EXCEPTION_AUDIOEXCHANGE
EXCEPTION_ALARM = _hk_struct_test.EXCEPTION_ALARM
EXCEPTION_PREVIEW = _hk_struct_test.EXCEPTION_PREVIEW
EXCEPTION_SERIAL = _hk_struct_test.EXCEPTION_SERIAL
EXCEPTION_RECONNECT = _hk_struct_test.EXCEPTION_RECONNECT
EXCEPTION_ALARMRECONNECT = _hk_struct_test.EXCEPTION_ALARMRECONNECT
EXCEPTION_SERIALRECONNECT = _hk_struct_test.EXCEPTION_SERIALRECONNECT
SERIAL_RECONNECTSUCCESS = _hk_struct_test.SERIAL_RECONNECTSUCCESS
EXCEPTION_PLAYBACK = _hk_struct_test.EXCEPTION_PLAYBACK
EXCEPTION_DISKFMT = _hk_struct_test.EXCEPTION_DISKFMT
EXCEPTION_PASSIVEDECODE = _hk_struct_test.EXCEPTION_PASSIVEDECODE
EXCEPTION_EMAILTEST = _hk_struct_test.EXCEPTION_EMAILTEST
EXCEPTION_BACKUP = _hk_struct_test.EXCEPTION_BACKUP
PREVIEW_RECONNECTSUCCESS = _hk_struct_test.PREVIEW_RECONNECTSUCCESS
ALARM_RECONNECTSUCCESS = _hk_struct_test.ALARM_RECONNECTSUCCESS
RESUME_EXCHANGE = _hk_struct_test.RESUME_EXCHANGE
NETWORK_FLOWTEST_EXCEPTION = _hk_struct_test.NETWORK_FLOWTEST_EXCEPTION
EXCEPTION_PICPREVIEWRECONNECT = _hk_struct_test.EXCEPTION_PICPREVIEWRECONNECT
PICPREVIEW_RECONNECTSUCCESS = _hk_struct_test.PICPREVIEW_RECONNECTSUCCESS
EXCEPTION_PICPREVIEW = _hk_struct_test.EXCEPTION_PICPREVIEW
EXCEPTION_MAX_ALARM_INFO = _hk_struct_test.EXCEPTION_MAX_ALARM_INFO
EXCEPTION_LOST_ALARM = _hk_struct_test.EXCEPTION_LOST_ALARM
EXCEPTION_PASSIVETRANSRECONNECT = _hk_struct_test.EXCEPTION_PASSIVETRANSRECONNECT
PASSIVETRANS_RECONNECTSUCCESS = _hk_struct_test.PASSIVETRANS_RECONNECTSUCCESS
EXCEPTION_PASSIVETRANS = _hk_struct_test.EXCEPTION_PASSIVETRANS
SUCCESS_PUSHDEVLOGON = _hk_struct_test.SUCCESS_PUSHDEVLOGON
EXCEPTION_RELOGIN = _hk_struct_test.EXCEPTION_RELOGIN
RELOGIN_SUCCESS = _hk_struct_test.RELOGIN_SUCCESS
EXCEPTION_PASSIVEDECODE_RECONNNECT = _hk_struct_test.EXCEPTION_PASSIVEDECODE_RECONNNECT
EXCEPTION_CLUSTER_CS_ARMFAILED = _hk_struct_test.EXCEPTION_CLUSTER_CS_ARMFAILED
EXCEPTION_RELOGIN_FAILED = _hk_struct_test.EXCEPTION_RELOGIN_FAILED
EXCEPTION_PREVIEW_RECONNECT_CLOSED = _hk_struct_test.EXCEPTION_PREVIEW_RECONNECT_CLOSED
EXCEPTION_ALARM_RECONNECT_CLOSED = _hk_struct_test.EXCEPTION_ALARM_RECONNECT_CLOSED
EXCEPTION_SERIAL_RECONNECT_CLOSED = _hk_struct_test.EXCEPTION_SERIAL_RECONNECT_CLOSED
EXCEPTION_PIC_RECONNECT_CLOSED = _hk_struct_test.EXCEPTION_PIC_RECONNECT_CLOSED
EXCEPTION_PASSIVE_DECODE_RECONNECT_CLOSED = _hk_struct_test.EXCEPTION_PASSIVE_DECODE_RECONNECT_CLOSED
EXCEPTION_PASSIVE_TRANS_RECONNECT_CLOSED = _hk_struct_test.EXCEPTION_PASSIVE_TRANS_RECONNECT_CLOSED
EXCEPTION_VIDEO_DOWNLOAD = _hk_struct_test.EXCEPTION_VIDEO_DOWNLOAD
NET_DVR_SYSHEAD = _hk_struct_test.NET_DVR_SYSHEAD
NET_DVR_STREAMDATA = _hk_struct_test.NET_DVR_STREAMDATA
NET_DVR_AUDIOSTREAMDATA = _hk_struct_test.NET_DVR_AUDIOSTREAMDATA
NET_DVR_STD_VIDEODATA = _hk_struct_test.NET_DVR_STD_VIDEODATA
NET_DVR_STD_AUDIODATA = _hk_struct_test.NET_DVR_STD_AUDIODATA
NET_DVR_SDP = _hk_struct_test.NET_DVR_SDP
NET_DVR_CHANGE_FORWARD = _hk_struct_test.NET_DVR_CHANGE_FORWARD
NET_DVR_CHANGE_REVERSE = _hk_struct_test.NET_DVR_CHANGE_REVERSE
NET_DVR_PLAYBACK_ALLFILEEND = _hk_struct_test.NET_DVR_PLAYBACK_ALLFILEEND
NET_DVR_VOD_DRAW_FRAME = _hk_struct_test.NET_DVR_VOD_DRAW_FRAME
NET_DVR_VOD_DRAW_DATA = _hk_struct_test.NET_DVR_VOD_DRAW_DATA
NET_DVR_PRIVATE_DATA = _hk_struct_test.NET_DVR_PRIVATE_DATA
DVR = _hk_struct_test.DVR
ATMDVR = _hk_struct_test.ATMDVR
DVS = _hk_struct_test.DVS
DEC = _hk_struct_test.DEC
ENC_DEC = _hk_struct_test.ENC_DEC
DVR_HC = _hk_struct_test.DVR_HC
DVR_HT = _hk_struct_test.DVR_HT
DVR_HF = _hk_struct_test.DVR_HF
DVR_HS = _hk_struct_test.DVR_HS
DVR_HTS = _hk_struct_test.DVR_HTS
DVR_HB = _hk_struct_test.DVR_HB
DVR_HCS = _hk_struct_test.DVR_HCS
DVS_A = _hk_struct_test.DVS_A
DVR_HC_S = _hk_struct_test.DVR_HC_S
DVR_HT_S = _hk_struct_test.DVR_HT_S
DVR_HF_S = _hk_struct_test.DVR_HF_S
DVR_HS_S = _hk_struct_test.DVR_HS_S
ATMDVR_S = _hk_struct_test.ATMDVR_S
DVR_7000H = _hk_struct_test.DVR_7000H
DEC_MAT = _hk_struct_test.DEC_MAT
DVR_MOBILE = _hk_struct_test.DVR_MOBILE
DVR_HD_S = _hk_struct_test.DVR_HD_S
DVR_HD_SL = _hk_struct_test.DVR_HD_SL
DVR_HC_SL = _hk_struct_test.DVR_HC_SL
DVR_HS_ST = _hk_struct_test.DVR_HS_ST
DVS_HW = _hk_struct_test.DVS_HW
DS630X_D = _hk_struct_test.DS630X_D
DS640X_HD = _hk_struct_test.DS640X_HD
DS610X_D = _hk_struct_test.DS610X_D
IPCAM = _hk_struct_test.IPCAM
MEGA_IPCAM = _hk_struct_test.MEGA_IPCAM
IPCAM_X62MF = _hk_struct_test.IPCAM_X62MF
ITCCAM = _hk_struct_test.ITCCAM
IVS_IPCAM = _hk_struct_test.IVS_IPCAM
ZOOMCAM = _hk_struct_test.ZOOMCAM
IPDOME = _hk_struct_test.IPDOME
IPDOME_MEGA200 = _hk_struct_test.IPDOME_MEGA200
IPDOME_MEGA130 = _hk_struct_test.IPDOME_MEGA130
IPDOME_AI = _hk_struct_test.IPDOME_AI
TII_IPCAM = _hk_struct_test.TII_IPCAM
IPTC_DOME = _hk_struct_test.IPTC_DOME
DS_2DP_Z = _hk_struct_test.DS_2DP_Z
DS_2DP = _hk_struct_test.DS_2DP
ITS_WMS = _hk_struct_test.ITS_WMS
IPMOD = _hk_struct_test.IPMOD
TRAFFIC_YTDOME = _hk_struct_test.TRAFFIC_YTDOME
TRAFFIC_RDDOME = _hk_struct_test.TRAFFIC_RDDOME
IDS6501_HF_P = _hk_struct_test.IDS6501_HF_P
IDS6101_HF_A = _hk_struct_test.IDS6101_HF_A
IDS6002_HF_B = _hk_struct_test.IDS6002_HF_B
IDS6101_HF_B = _hk_struct_test.IDS6101_HF_B
IDS52XX = _hk_struct_test.IDS52XX
IDS90XX = _hk_struct_test.IDS90XX
IDS8104_AHL_S_HX = _hk_struct_test.IDS8104_AHL_S_HX
IDS8104_AHL_S_H = _hk_struct_test.IDS8104_AHL_S_H
IDS91XX = _hk_struct_test.IDS91XX
IIP_CAM_B = _hk_struct_test.IIP_CAM_B
IIP_CAM_F = _hk_struct_test.IIP_CAM_F
DS71XX_H = _hk_struct_test.DS71XX_H
DS72XX_H_S = _hk_struct_test.DS72XX_H_S
DS73XX_H_S = _hk_struct_test.DS73XX_H_S
DS72XX_HF_S = _hk_struct_test.DS72XX_HF_S
DS73XX_HFI_S = _hk_struct_test.DS73XX_HFI_S
DS76XX_H_S = _hk_struct_test.DS76XX_H_S
DS76XX_N_S = _hk_struct_test.DS76XX_N_S
DS_TP3200_EC = _hk_struct_test.DS_TP3200_EC
DS81XX_HS_S = _hk_struct_test.DS81XX_HS_S
DS81XX_HL_S = _hk_struct_test.DS81XX_HL_S
DS81XX_HC_S = _hk_struct_test.DS81XX_HC_S
DS81XX_HD_S = _hk_struct_test.DS81XX_HD_S
DS81XX_HE_S = _hk_struct_test.DS81XX_HE_S
DS81XX_HF_S = _hk_struct_test.DS81XX_HF_S
DS81XX_AH_S = _hk_struct_test.DS81XX_AH_S
DS81XX_AHF_S = _hk_struct_test.DS81XX_AHF_S
DS90XX_HF_S = _hk_struct_test.DS90XX_HF_S
DS91XX_HF_S = _hk_struct_test.DS91XX_HF_S
DS91XX_HD_S = _hk_struct_test.DS91XX_HD_S
IDS90XX_A = _hk_struct_test.IDS90XX_A
IDS91XX_A = _hk_struct_test.IDS91XX_A
DS95XX_N_S = _hk_struct_test.DS95XX_N_S
DS96XX_N_SH = _hk_struct_test.DS96XX_N_SH
DS90XX_HF_SH = _hk_struct_test.DS90XX_HF_SH
DS91XX_HF_SH = _hk_struct_test.DS91XX_HF_SH
DS_B10_XY = _hk_struct_test.DS_B10_XY
DS_6504HF_B10 = _hk_struct_test.DS_6504HF_B10
DS_6504D_B10 = _hk_struct_test.DS_6504D_B10
DS_1832_B10 = _hk_struct_test.DS_1832_B10
DS_6401HFH_B10 = _hk_struct_test.DS_6401HFH_B10
DS_65XXHC = _hk_struct_test.DS_65XXHC
DS_65XXHC_S = _hk_struct_test.DS_65XXHC_S
DS_65XXHF = _hk_struct_test.DS_65XXHF
DS_65XXHF_S = _hk_struct_test.DS_65XXHF_S
DS_6500HF_B = _hk_struct_test.DS_6500HF_B
IVMS_6200_C = _hk_struct_test.IVMS_6200_C
IVMS_6200_B = _hk_struct_test.IVMS_6200_B
DS_72XXHV_ST15 = _hk_struct_test.DS_72XXHV_ST15
DS_72XXHV_ST20 = _hk_struct_test.DS_72XXHV_ST20
IVMS_6200_T = _hk_struct_test.IVMS_6200_T
IVMS_6200_BP = _hk_struct_test.IVMS_6200_BP
DS_81XXHC_ST = _hk_struct_test.DS_81XXHC_ST
DS_81XXHS_ST = _hk_struct_test.DS_81XXHS_ST
DS_81XXAH_ST = _hk_struct_test.DS_81XXAH_ST
DS_81XXAHF_ST = _hk_struct_test.DS_81XXAHF_ST
DS_66XXDVS = _hk_struct_test.DS_66XXDVS
DS_1964_B10 = _hk_struct_test.DS_1964_B10
DS_B10N04_IN = _hk_struct_test.DS_B10N04_IN
DS_B10N04_OUT = _hk_struct_test.DS_B10N04_OUT
DS_B10N04_INTEL = _hk_struct_test.DS_B10N04_INTEL
DS_6408HFH_B10E_RM = _hk_struct_test.DS_6408HFH_B10E_RM
DS_B10N64F1_RTM = _hk_struct_test.DS_B10N64F1_RTM
DS_B10N64F1D_RTM = _hk_struct_test.DS_B10N64F1D_RTM
DS_B10_SDS = _hk_struct_test.DS_B10_SDS
DS_B10_DS = _hk_struct_test.DS_B10_DS
DS_6401HFH_B10V = _hk_struct_test.DS_6401HFH_B10V
DS_6504D_B10B = _hk_struct_test.DS_6504D_B10B
DS_6504D_B10H = _hk_struct_test.DS_6504D_B10H
DS_6504D_B10V = _hk_struct_test.DS_6504D_B10V
DS_6408HFH_B10S = _hk_struct_test.DS_6408HFH_B10S
DS_18XX_N = _hk_struct_test.DS_18XX_N
DS_6504HF_B10F_CLASS = _hk_struct_test.DS_6504HF_B10F_CLASS
DS_18XX_PTZ = _hk_struct_test.DS_18XX_PTZ
DS_19AXX = _hk_struct_test.DS_19AXX
DS_19BXX = _hk_struct_test.DS_19BXX
DS_19CXX = _hk_struct_test.DS_19CXX
DS_19DXX = _hk_struct_test.DS_19DXX
DS_19XX = _hk_struct_test.DS_19XX
DS_19SXX = _hk_struct_test.DS_19SXX
DS_1HXX = _hk_struct_test.DS_1HXX
DS_PWXX = _hk_struct_test.DS_PWXX
DS_PMXX = _hk_struct_test.DS_PMXX
DS_19DXX_S = _hk_struct_test.DS_19DXX_S
DS_PWAXX = _hk_struct_test.DS_PWAXX
DS_PHAXX = _hk_struct_test.DS_PHAXX
DS_C10H = _hk_struct_test.DS_C10H
DS_C10N_BI = _hk_struct_test.DS_C10N_BI
DS_C10N_DI = _hk_struct_test.DS_C10N_DI
DS_C10N_SI = _hk_struct_test.DS_C10N_SI
DS_C10N_DO = _hk_struct_test.DS_C10N_DO
DS_C10N_SERVER = _hk_struct_test.DS_C10N_SERVER
IDS_8104_AHFL_S_H = _hk_struct_test.IDS_8104_AHFL_S_H
IDS_65XX_HF_A = _hk_struct_test.IDS_65XX_HF_A
IDS90XX_HF_RH = _hk_struct_test.IDS90XX_HF_RH
IDS91XX_HF_RH = _hk_struct_test.IDS91XX_HF_RH
IDS_65XX_HF_B = _hk_struct_test.IDS_65XX_HF_B
IDS_65XX_HF_P = _hk_struct_test.IDS_65XX_HF_P
IVMS_6200_F = _hk_struct_test.IVMS_6200_F
IVMS_6200_A = _hk_struct_test.IVMS_6200_A
IVMS_6200_F_S = _hk_struct_test.IVMS_6200_F_S
DS90XX_HF_RH = _hk_struct_test.DS90XX_HF_RH
DS91XX_HF_RH = _hk_struct_test.DS91XX_HF_RH
DS78XX_S = _hk_struct_test.DS78XX_S
DS81XXHW_S = _hk_struct_test.DS81XXHW_S
DS81XXHW_ST = _hk_struct_test.DS81XXHW_ST
DS91XXHW_ST = _hk_struct_test.DS91XXHW_ST
DS91XX_ST = _hk_struct_test.DS91XX_ST
DS81XX_ST = _hk_struct_test.DS81XX_ST
DS81XXHX_ST = _hk_struct_test.DS81XXHX_ST
DS73XXHX_ST = _hk_struct_test.DS73XXHX_ST
DS81XX_SH = _hk_struct_test.DS81XX_SH
DS81XX_SN = _hk_struct_test.DS81XX_SN
DS96XXN_ST = _hk_struct_test.DS96XXN_ST
DS86XXN_ST = _hk_struct_test.DS86XXN_ST
DS80XXHF_ST = _hk_struct_test.DS80XXHF_ST
DS90XXHF_ST = _hk_struct_test.DS90XXHF_ST
DS76XXN_ST = _hk_struct_test.DS76XXN_ST
DS_9664N_RX = _hk_struct_test.DS_9664N_RX
ENCODER_SERVER = _hk_struct_test.ENCODER_SERVER
DECODER_SERVER = _hk_struct_test.DECODER_SERVER
PCNVR_SERVER = _hk_struct_test.PCNVR_SERVER
CVR_SERVER = _hk_struct_test.CVR_SERVER
DS_91XXHFH_ST = _hk_struct_test.DS_91XXHFH_ST
DS_66XXHFH = _hk_struct_test.DS_66XXHFH
TRAFFIC_TS_SERVER = _hk_struct_test.TRAFFIC_TS_SERVER
TRAFFIC_VAR = _hk_struct_test.TRAFFIC_VAR
IPCALL = _hk_struct_test.IPCALL
SAN_SERVER = _hk_struct_test.SAN_SERVER
DS_B11_M_CLASS = _hk_struct_test.DS_B11_M_CLASS
DS_B12_M_CLASS = _hk_struct_test.DS_B12_M_CLASS
DS_6504HF_B11_CLASS = _hk_struct_test.DS_6504HF_B11_CLASS
DS_6504HF_B12_CLASS = _hk_struct_test.DS_6504HF_B12_CLASS
DS_6401HFH_B11V_CLASS = _hk_struct_test.DS_6401HFH_B11V_CLASS
DS_6401HFH_B12V_CLASS = _hk_struct_test.DS_6401HFH_B12V_CLASS
DS_6408HFH_B11S_CLASS = _hk_struct_test.DS_6408HFH_B11S_CLASS
DS_6408HFH_B12S_CLASS = _hk_struct_test.DS_6408HFH_B12S_CLASS
DS_6504D_B11H_CLASS = _hk_struct_test.DS_6504D_B11H_CLASS
DS_6504D_B11B_CLASS = _hk_struct_test.DS_6504D_B11B_CLASS
DS_6504D_B12B_CLASS = _hk_struct_test.DS_6504D_B12B_CLASS
DS_6504D_B11V_CLASS = _hk_struct_test.DS_6504D_B11V_CLASS
DS_6504D_B12V_CLASS = _hk_struct_test.DS_6504D_B12V_CLASS
DS_6401HFH_B10R_CLASS = _hk_struct_test.DS_6401HFH_B10R_CLASS
DS_6401HFH_B10D_CLASS = _hk_struct_test.DS_6401HFH_B10D_CLASS
DS_6401HFH_B10H_CLASS = _hk_struct_test.DS_6401HFH_B10H_CLASS
DS_6401HFH_B11R_CLASS = _hk_struct_test.DS_6401HFH_B11R_CLASS
DS_6401HFH_B11D_CLASS = _hk_struct_test.DS_6401HFH_B11D_CLASS
DS_6401HFH_B11H_CLASS = _hk_struct_test.DS_6401HFH_B11H_CLASS
DS_6401HFH_B12R_CLASS = _hk_struct_test.DS_6401HFH_B12R_CLASS
DS_6401HFH_B12D_CLASS = _hk_struct_test.DS_6401HFH_B12D_CLASS
DS_6401HFH_B12H_CLASS = _hk_struct_test.DS_6401HFH_B12H_CLASS
DS_65XXD_B10Ex_CLASS = _hk_struct_test.DS_65XXD_B10Ex_CLASS
DS_6516HW_B10_CLASS = _hk_struct_test.DS_6516HW_B10_CLASS
DS_6401HFH_B10F_RX_CLASS = _hk_struct_test.DS_6401HFH_B10F_RX_CLASS
DS_6502HW_B10F_RX_CLASS = _hk_struct_test.DS_6502HW_B10F_RX_CLASS
DS_6504D_B11Ex_CLASS = _hk_struct_test.DS_6504D_B11Ex_CLASS
DS_6504D_B12Ex_CLASS = _hk_struct_test.DS_6504D_B12Ex_CLASS
DS_6512_B11_CLASS = _hk_struct_test.DS_6512_B11_CLASS
DS_6512_B12_CLASS = _hk_struct_test.DS_6512_B12_CLASS
DS_6504D_B10H_CLASS = _hk_struct_test.DS_6504D_B10H_CLASS
DS_65XXT_B10_CLASS = _hk_struct_test.DS_65XXT_B10_CLASS
DS_65XXD_B10_CLASS = _hk_struct_test.DS_65XXD_B10_CLASS
DS_IVMSE_B10X_CLASS = _hk_struct_test.DS_IVMSE_B10X_CLASS
DS_6532D_B10ES_CLASS = _hk_struct_test.DS_6532D_B10ES_CLASS
DS_6508HFH_B10ES_CLASS = _hk_struct_test.DS_6508HFH_B10ES_CLASS
DS_82NCG_CLASS = _hk_struct_test.DS_82NCG_CLASS
DS_82VAG_CLASS = _hk_struct_test.DS_82VAG_CLASS
DS_1802XXF_B10_CLASS = _hk_struct_test.DS_1802XXF_B10_CLASS
iDS_6504_B10EVAC_CLASS = _hk_struct_test.iDS_6504_B10EVAC_CLASS
iDS_6504_B10EDEC_CLASS = _hk_struct_test.iDS_6504_B10EDEC_CLASS
DS_6402HFH_B10EV_CLASS = _hk_struct_test.DS_6402HFH_B10EV_CLASS
DS_6402HFH_B10ED_CLASS = _hk_struct_test.DS_6402HFH_B10ED_CLASS
DS_6402HFH_B10EH_CLASS = _hk_struct_test.DS_6402HFH_B10EH_CLASS
DS_6404HFH_B10T_RX_CLASS = _hk_struct_test.DS_6404HFH_B10T_RX_CLASS
DS_6504D_AIO_CLASS = _hk_struct_test.DS_6504D_AIO_CLASS
DS_IVMST_B10_CLASS = _hk_struct_test.DS_IVMST_B10_CLASS
DS_6402_AIO_CLASS = _hk_struct_test.DS_6402_AIO_CLASS
DS_iVMSE_AIO_CLASS = _hk_struct_test.DS_iVMSE_AIO_CLASS
DS_AIO_M_CLASS = _hk_struct_test.DS_AIO_M_CLASS
DS_6508HF_B10E_CLASS = _hk_struct_test.DS_6508HF_B10E_CLASS
DS_6404HFH_B10ES_CLASS = _hk_struct_test.DS_6404HFH_B10ES_CLASS
DS_6402HFH_B10ER_CLASS = _hk_struct_test.DS_6402HFH_B10ER_CLASS
DS_6404HFH_B10T_RM_CLASS = _hk_struct_test.DS_6404HFH_B10T_RM_CLASS
DS_6516D_B10EB_CLASS = _hk_struct_test.DS_6516D_B10EB_CLASS
DS_6516D_B10ES_CLASS = _hk_struct_test.DS_6516D_B10ES_CLASS
DS_6508D_B10FH_CLASS = _hk_struct_test.DS_6508D_B10FH_CLASS
DS_6508D_B10FD_CLASS = _hk_struct_test.DS_6508D_B10FD_CLASS
DS_6508D_B10FV_CLASS = _hk_struct_test.DS_6508D_B10FV_CLASS
DS_6508_B11E_CLASS = _hk_struct_test.DS_6508_B11E_CLASS
DS_6402_B11ES_CLASS = _hk_struct_test.DS_6402_B11ES_CLASS
DS_6402_B11EV_CLASS = _hk_struct_test.DS_6402_B11EV_CLASS
DS_6402_B11ER_CLASS = _hk_struct_test.DS_6402_B11ER_CLASS
DS_6402_B11ED_CLASS = _hk_struct_test.DS_6402_B11ED_CLASS
DS_6402_B11EH_CLASS = _hk_struct_test.DS_6402_B11EH_CLASS
DS_6516D_B11EB_CLASS = _hk_struct_test.DS_6516D_B11EB_CLASS
DS_6516D_B11ES_CLASS = _hk_struct_test.DS_6516D_B11ES_CLASS
DS_6508_B12E_CLASS = _hk_struct_test.DS_6508_B12E_CLASS
DS_6402_B12ES_CLASS = _hk_struct_test.DS_6402_B12ES_CLASS
DS_6402_B12EV_CLASS = _hk_struct_test.DS_6402_B12EV_CLASS
DS_6402_B12ER_CLASS = _hk_struct_test.DS_6402_B12ER_CLASS
DS_6402_B12ED_CLASS = _hk_struct_test.DS_6402_B12ED_CLASS
DS_6402_B12EH_CLASS = _hk_struct_test.DS_6402_B12EH_CLASS
DS_6516D_B12EB_CLASS = _hk_struct_test.DS_6516D_B12EB_CLASS
DS_iVMSE_AIO_8100x_CLASS = _hk_struct_test.DS_iVMSE_AIO_8100x_CLASS
DS_iVMSE_AIO_87x_CLASS = _hk_struct_test.DS_iVMSE_AIO_87x_CLASS
DS_6532D_B11ES_CLASS = _hk_struct_test.DS_6532D_B11ES_CLASS
DS_6532D_B12ES_CLASS = _hk_struct_test.DS_6532D_B12ES_CLASS
DS_B20_MSU_NP = _hk_struct_test.DS_B20_MSU_NP
DS_6416HFH_B20S = _hk_struct_test.DS_6416HFH_B20S
DS_6416HFH_B20_RM = _hk_struct_test.DS_6416HFH_B20_RM
DS_6564D_B20D = _hk_struct_test.DS_6564D_B20D
DS_6564D_B20H = _hk_struct_test.DS_6564D_B20H
DS_6564D_B20V = _hk_struct_test.DS_6564D_B20V
DS_B20_6516D_DEV_CLASS = _hk_struct_test.DS_B20_6516D_DEV_CLASS
DS_6408HFH_B20V = _hk_struct_test.DS_6408HFH_B20V
DS_MMC_B20_CLASS = _hk_struct_test.DS_MMC_B20_CLASS
DS_CARD_CHIP_B20_CLASS = _hk_struct_test.DS_CARD_CHIP_B20_CLASS
DS_6564D_B20B_DEV_CLASS = _hk_struct_test.DS_6564D_B20B_DEV_CLASS
DS_6564D_B20S_DEV_CLASS = _hk_struct_test.DS_6564D_B20S_DEV_CLASS
DS_6532HF_B20B_DEV_CLASS = _hk_struct_test.DS_6532HF_B20B_DEV_CLASS
DS_6408HFH_B20D_DEV_CLASS = _hk_struct_test.DS_6408HFH_B20D_DEV_CLASS
DS_6408HFH_B20H_DEV_CLASS = _hk_struct_test.DS_6408HFH_B20H_DEV_CLASS
DS_IVMSE_B20_CLASS = _hk_struct_test.DS_IVMSE_B20_CLASS
DS_6402HFH_B20Y_DEV_CLASS = _hk_struct_test.DS_6402HFH_B20Y_DEV_CLASS
DS_6508HW_B20_DEV_CLASS = _hk_struct_test.DS_6508HW_B20_DEV_CLASS
DS_B20N128Fx_B20_DEV_CLASS = _hk_struct_test.DS_B20N128Fx_B20_DEV_CLASS
DS_AIO_MCU_NP_DEV_CLASS = _hk_struct_test.DS_AIO_MCU_NP_DEV_CLASS
DS_6402_AIO_EV_DEV_CLASS = _hk_struct_test.DS_6402_AIO_EV_DEV_CLASS
DS_6508D_AIO_EV_DEV_CLASS = _hk_struct_test.DS_6508D_AIO_EV_DEV_CLASS
DS_6508D_AIO_ED_DEV_CLASS = _hk_struct_test.DS_6508D_AIO_ED_DEV_CLASS
DS_6508D_AIO_EH_DEV_CLASS = _hk_struct_test.DS_6508D_AIO_EH_DEV_CLASS
DS_6508HD_B20F_DEV_CLASS = _hk_struct_test.DS_6508HD_B20F_DEV_CLASS
DS_6402HFH_B20ES_DEV_CLASS = _hk_struct_test.DS_6402HFH_B20ES_DEV_CLASS
DS_6532D_B20_DEV_CLASS = _hk_struct_test.DS_6532D_B20_DEV_CLASS
DS_IVMST_B20_DEV_CLASS = _hk_struct_test.DS_IVMST_B20_DEV_CLASS
DS_6416HFH_B20DD_DEV_CLASS = _hk_struct_test.DS_6416HFH_B20DD_DEV_CLASS
DS_6441VS_B20_DEV_CLASS = _hk_struct_test.DS_6441VS_B20_DEV_CLASS
DS_6404HFH_B20T_CLASS = _hk_struct_test.DS_6404HFH_B20T_CLASS
DS_FS22_B20_DEV_CLASS = _hk_struct_test.DS_FS22_B20_DEV_CLASS
DS_IVMSE_B20UH_DEV_CLASS = _hk_struct_test.DS_IVMSE_B20UH_DEV_CLASS
IDS_6524J_B20_DEV_CLASS = _hk_struct_test.IDS_6524J_B20_DEV_CLASS
IDS_6532B_B20_DEV_CLASS = _hk_struct_test.IDS_6532B_B20_DEV_CLASS
DS_6404HFH_B20Fx_DEV_CLASS = _hk_struct_test.DS_6404HFH_B20Fx_DEV_CLASS
DS_N128x_B20Fy_CLASS = _hk_struct_test.DS_N128x_B20Fy_CLASS
DS_181600F_B20_CLASS = _hk_struct_test.DS_181600F_B20_CLASS
DS_6904UD_B20H_CLASS = _hk_struct_test.DS_6904UD_B20H_CLASS
DS_B21_MCU_NP_CLASS = _hk_struct_test.DS_B21_MCU_NP_CLASS
DS_B21_S10_x_CLASS = _hk_struct_test.DS_B21_S10_x_CLASS
DS_6402HFH_B21D_CLASS = _hk_struct_test.DS_6402HFH_B21D_CLASS
DS_6508HD_B21D_CLASS = _hk_struct_test.DS_6508HD_B21D_CLASS
DS_iVMSE_B21HW_CLASS = _hk_struct_test.DS_iVMSE_B21HW_CLASS
DS_C10S = _hk_struct_test.DS_C10S
DS_C10N_SDI = _hk_struct_test.DS_C10N_SDI
DS_C10N_BIW = _hk_struct_test.DS_C10N_BIW
DS_C10N_DON = _hk_struct_test.DS_C10N_DON
DS_C10N_TVI = _hk_struct_test.DS_C10N_TVI
DS_C10N_DI2 = _hk_struct_test.DS_C10N_DI2
DS_C10N_AUDIO_OUT = _hk_struct_test.DS_C10N_AUDIO_OUT
DS_C10N_AUDIO_IN = _hk_struct_test.DS_C10N_AUDIO_IN
DS_C20N = _hk_struct_test.DS_C20N
DS_C20N_BNC = _hk_struct_test.DS_C20N_BNC
DS_C20N_DVI = _hk_struct_test.DS_C20N_DVI
DS_C20N_DP = _hk_struct_test.DS_C20N_DP
DS_C20N_OUT = _hk_struct_test.DS_C20N_OUT
DS_C20N_VWMS = _hk_struct_test.DS_C20N_VWMS
DS_C20N_DI2 = _hk_struct_test.DS_C20N_DI2
DS_C20N_DO2 = _hk_struct_test.DS_C20N_DO2
DS_C20N_UHDI = _hk_struct_test.DS_C20N_UHDI
DS_C20N_YI2 = _hk_struct_test.DS_C20N_YI2
DS_C12N_VWMS = _hk_struct_test.DS_C12N_VWMS
DS_C12N_DO = _hk_struct_test.DS_C12N_DO
DS_C12N_HOE = _hk_struct_test.DS_C12N_HOE
DS_C20N_HI2 = _hk_struct_test.DS_C20N_HI2
DS_C20N_VI2 = _hk_struct_test.DS_C20N_VI2
DS_C20N_SI2 = _hk_struct_test.DS_C20N_SI2
DS_C20N_HO2 = _hk_struct_test.DS_C20N_HO2
DS_C20N_S24G = _hk_struct_test.DS_C20N_S24G
DS_C20N_S24X = _hk_struct_test.DS_C20N_S24X
DS_C12A_0104H = _hk_struct_test.DS_C12A_0104H
DS_D1HXX = _hk_struct_test.DS_D1HXX
ELEVATO_BRIDGE = _hk_struct_test.ELEVATO_BRIDGE
DS_3WF01S_5NG_M = _hk_struct_test.DS_3WF01S_5NG_M
DS_3WF0EC_2N_D = _hk_struct_test.DS_3WF0EC_2N_D
DS_3WF0EC_5ACT = _hk_struct_test.DS_3WF0EC_5ACT
DS_3WF03S_5AC = _hk_struct_test.DS_3WF03S_5AC
DS_3WF0ES_5AC_H = _hk_struct_test.DS_3WF0ES_5AC_H
DS_19M00_MN = _hk_struct_test.DS_19M00_MN
DS_KH8302_A = _hk_struct_test.DS_KH8302_A
DS_KD8101_2 = _hk_struct_test.DS_KD8101_2
DS_KM8301 = _hk_struct_test.DS_KM8301
DS_KVXXXX_XX = _hk_struct_test.DS_KVXXXX_XX
DS_LHPM1D_C = _hk_struct_test.DS_LHPM1D_C
DS_KAM03 = _hk_struct_test.DS_KAM03
DS64XXHD_T = _hk_struct_test.DS64XXHD_T
DS_65XXD = _hk_struct_test.DS_65XXD
DS63XXD_T = _hk_struct_test.DS63XXD_T
SCE_SERVER = _hk_struct_test.SCE_SERVER
DS_64XXHD_S = _hk_struct_test.DS_64XXHD_S
DS_68XXT = _hk_struct_test.DS_68XXT
DS_65XXD_T = _hk_struct_test.DS_65XXD_T
DS_65XXHD_T = _hk_struct_test.DS_65XXHD_T
DS_69XXUD = _hk_struct_test.DS_69XXUD
DS_65XXUD = _hk_struct_test.DS_65XXUD
DS_65XXUD_L = _hk_struct_test.DS_65XXUD_L
DS_65XXUD_T = _hk_struct_test.DS_65XXUD_T
DS_69XXHD = _hk_struct_test.DS_69XXHD
DS_D20XX = _hk_struct_test.DS_D20XX
DS_C50S = _hk_struct_test.DS_C50S
DS_D50XX = _hk_struct_test.DS_D50XX
DS_D40 = _hk_struct_test.DS_D40
DS_65VMXX = _hk_struct_test.DS_65VMXX
DS_65VTXX = _hk_struct_test.DS_65VTXX
DS_65VTA = _hk_struct_test.DS_65VTA
DS_65VT_RX = _hk_struct_test.DS_65VT_RX
DS_65VM_MCU_NP = _hk_struct_test.DS_65VM_MCU_NP
DS_65VT0010 = _hk_struct_test.DS_65VT0010
DS_65VM_MCU = _hk_struct_test.DS_65VM_MCU
DS_65VM_MPC = _hk_struct_test.DS_65VM_MPC
DS_65VT2XXYR_SF = _hk_struct_test.DS_65VT2XXYR_SF
DS_65VT0XXY = _hk_struct_test.DS_65VT0XXY
DS_65VT0010Z = _hk_struct_test.DS_65VT0010Z
DS_65VT0050Z = _hk_struct_test.DS_65VT0050Z
DS_65VS0XXXS = _hk_struct_test.DS_65VS0XXXS
DS_65VS0XXXM = _hk_struct_test.DS_65VS0XXXM
DS_65VM00XX_X = _hk_struct_test.DS_65VM00XX_X
DS_CS_SERVER = _hk_struct_test.DS_CS_SERVER
DS_68GAP_MCU = _hk_struct_test.DS_68GAP_MCU
DS_K260X = _hk_struct_test.DS_K260X
DS_K1TXXX = _hk_struct_test.DS_K1TXXX
DS_K280X = _hk_struct_test.DS_K280X
DS_K1T80X = _hk_struct_test.DS_K1T80X
RAC_6X00 = _hk_struct_test.RAC_6X00
DS_K2602_AX = _hk_struct_test.DS_K2602_AX
DS_K1T803F = _hk_struct_test.DS_K1T803F
DS_K2700 = _hk_struct_test.DS_K2700
DS_K270X = _hk_struct_test.DS_K270X
DS_K1T500S = _hk_struct_test.DS_K1T500S
DS_K1A801F = _hk_struct_test.DS_K1A801F
DS_K1T600X = _hk_struct_test.DS_K1T600X
DS_K22X = _hk_struct_test.DS_K22X
DS_K2M0016AX = _hk_struct_test.DS_K2M0016AX
DS_K2602S_AX = _hk_struct_test.DS_K2602S_AX
DS_K560XX = _hk_struct_test.DS_K560XX
DS_K260X_E = _hk_struct_test.DS_K260X_E
DS_K5603X = _hk_struct_test.DS_K5603X
DS_K3M200X = _hk_struct_test.DS_K3M200X
DS_K3M100X = _hk_struct_test.DS_K3M100X
DS_K1T8101XT = _hk_struct_test.DS_K1T8101XT
DS_K1T8101XX = _hk_struct_test.DS_K1T8101XX
DS_K5604 = _hk_struct_test.DS_K5604
DS_K1T607XXXX = _hk_struct_test.DS_K1T607XXXX
DS_K1A850X = _hk_struct_test.DS_K1A850X
DS_K1T800X = _hk_struct_test.DS_K1T800X
DS_K1T610XXXX = _hk_struct_test.DS_K1T610XXXX
DS_K1T8115X = _hk_struct_test.DS_K1T8115X
DS_K1T815LC_M = _hk_struct_test.DS_K1T815LC_M
DS_K1T606M_Z = _hk_struct_test.DS_K1T606M_Z
DS_K5607_XXX = _hk_struct_test.DS_K5607_XXX
DS_K1T950MX = _hk_struct_test.DS_K1T950MX
DS_K1T331XX = _hk_struct_test.DS_K1T331XX
DS_K1T671T = _hk_struct_test.DS_K1T671T
DS_K1T671 = _hk_struct_test.DS_K1T671
DS_K5671 = _hk_struct_test.DS_K5671
DS_K1T640 = _hk_struct_test.DS_K1T640
DS_K1A802A = _hk_struct_test.DS_K1A802A
DS_6800M = _hk_struct_test.DS_6800M
DS_68NTH = _hk_struct_test.DS_68NTH
DS_D60S = _hk_struct_test.DS_D60S
DS_D10 = _hk_struct_test.DS_D10
DS_3K0X_NM = _hk_struct_test.DS_3K0X_NM
DS_3E2328 = _hk_struct_test.DS_3E2328
DS_3E1528 = _hk_struct_test.DS_3E1528
SCREEN_LINK_SERVER = _hk_struct_test.SCREEN_LINK_SERVER
DS_D51OPSXX = _hk_struct_test.DS_D51OPSXX
IP_PTSYS_MEGA200 = _hk_struct_test.IP_PTSYS_MEGA200
IPCAM_FISHEYE = _hk_struct_test.IPCAM_FISHEYE
IPCAM_FISHEYE_E = _hk_struct_test.IPCAM_FISHEYE_E
IPCAM_BINOCULAR = _hk_struct_test.IPCAM_BINOCULAR
IPCAM_365 = _hk_struct_test.IPCAM_365
IPCAM_R0 = _hk_struct_test.IPCAM_R0
IPCAM_R1 = _hk_struct_test.IPCAM_R1
IPCAM_R2 = _hk_struct_test.IPCAM_R2
IPCAM_R3 = _hk_struct_test.IPCAM_R3
IPCAM_R4 = _hk_struct_test.IPCAM_R4
IPDOME_365 = _hk_struct_test.IPDOME_365
IPDOME_R0 = _hk_struct_test.IPDOME_R0
IPDOME_R1 = _hk_struct_test.IPDOME_R1
IPDOME_R2 = _hk_struct_test.IPDOME_R2
IPDOME_R3 = _hk_struct_test.IPDOME_R3
IPDOME_R4 = _hk_struct_test.IPDOME_R4
ITCCAM_R3 = _hk_struct_test.ITCCAM_R3
UAV_S = _hk_struct_test.UAV_S
TRAFFIC_ECT = _hk_struct_test.TRAFFIC_ECT
TRAFFIC_PARKING_SERVER = _hk_struct_test.TRAFFIC_PARKING_SERVER
TRAFFIC_TME = _hk_struct_test.TRAFFIC_TME
DS90XXHW_ST = _hk_struct_test.DS90XXHW_ST
DS72XXHX_SH = _hk_struct_test.DS72XXHX_SH
DS_92XX_HF_ST = _hk_struct_test.DS_92XX_HF_ST
DS_91XX_HF_XT = _hk_struct_test.DS_91XX_HF_XT
DS_90XX_HF_XT = _hk_struct_test.DS_90XX_HF_XT
DS_73XXHX_SH = _hk_struct_test.DS_73XXHX_SH
DS_72XXHFH_ST = _hk_struct_test.DS_72XXHFH_ST
DS_67XXHF_SATA = _hk_struct_test.DS_67XXHF_SATA
DS_67XXHW = _hk_struct_test.DS_67XXHW
DS_67XXHW_SATA = _hk_struct_test.DS_67XXHW_SATA
DS_67XXHF = _hk_struct_test.DS_67XXHF
DS_72XXHF_SV = _hk_struct_test.DS_72XXHF_SV
DS_72XXHW_SV = _hk_struct_test.DS_72XXHW_SV
DS_81XXHX_SH = _hk_struct_test.DS_81XXHX_SH
DS_71XXHX_SL = _hk_struct_test.DS_71XXHX_SL
DS_76XXH_ST = _hk_struct_test.DS_76XXH_ST
DS_73XXHFH_ST = _hk_struct_test.DS_73XXHFH_ST
DS_81XXHFH_ST = _hk_struct_test.DS_81XXHFH_ST
DS_72XXHFH_SL = _hk_struct_test.DS_72XXHFH_SL
DS_FDXXCGA_FLT = _hk_struct_test.DS_FDXXCGA_FLT
IDS_91XX_HF_ST_A = _hk_struct_test.IDS_91XX_HF_ST_A
IDS_91XX_HF_ST_B = _hk_struct_test.IDS_91XX_HF_ST_B
IDS_90XX_HF_ST_A = _hk_struct_test.IDS_90XX_HF_ST_A
IDS_90XX_HF_ST_B = _hk_struct_test.IDS_90XX_HF_ST_B
IDS_81XX_HF_ST_A = _hk_struct_test.IDS_81XX_HF_ST_A
IDS_81XX_HF_ST_B = _hk_struct_test.IDS_81XX_HF_ST_B
IDS_80XX_HF_ST_A = _hk_struct_test.IDS_80XX_HF_ST_A
IDS_80XX_HF_ST_B = _hk_struct_test.IDS_80XX_HF_ST_B
IDS_8104_AHFL_ST = _hk_struct_test.IDS_8104_AHFL_ST
IDS_2CD6812F_C = _hk_struct_test.IDS_2CD6812F_C
DS_77XXN_ST = _hk_struct_test.DS_77XXN_ST
DS_95XX_N_ST = _hk_struct_test.DS_95XX_N_ST
DS_85XX_N_ST = _hk_struct_test.DS_85XX_N_ST
DS_96XX_N_XT = _hk_struct_test.DS_96XX_N_XT
DS_76XX_N_SE = _hk_struct_test.DS_76XX_N_SE
DS_86XXSN_SX = _hk_struct_test.DS_86XXSN_SX
DS_71XXN_SL = _hk_struct_test.DS_71XXN_SL
CS_N1_1XX = _hk_struct_test.CS_N1_1XX
DS_71XXN_SN = _hk_struct_test.DS_71XXN_SN
CS_N1_2XX = _hk_struct_test.CS_N1_2XX
DS_76XX_N_SHT = _hk_struct_test.DS_76XX_N_SHT
DS_96XXX_N_E = _hk_struct_test.DS_96XXX_N_E
DS_76XXN_EX = _hk_struct_test.DS_76XXN_EX
DS_77XXN_E4 = _hk_struct_test.DS_77XXN_E4
DS_86XXN_E8 = _hk_struct_test.DS_86XXN_E8
DS_9616N_H8 = _hk_struct_test.DS_9616N_H8
DS_72XXHX_EX_GXY = _hk_struct_test.DS_72XXHX_EX_GXY
DS_76XXN_EX_GXY = _hk_struct_test.DS_76XXN_EX_GXY
DS_72XXHXH_SH_21 = _hk_struct_test.DS_72XXHXH_SH_21
DS_72XXHXH_SH_31 = _hk_struct_test.DS_72XXHXH_SH_31
DS_73XXHXH_SH_31 = _hk_struct_test.DS_73XXHXH_SH_31
DS_81XXHXH_SH_31 = _hk_struct_test.DS_81XXHXH_SH_31
DS_71XXHXH_SH_21 = _hk_struct_test.DS_71XXHXH_SH_21
DS_71XXHXH_SH_31 = _hk_struct_test.DS_71XXHXH_SH_31
DS_NBXX_N_E1_X = _hk_struct_test.DS_NBXX_N_E1_X
DS_96XXN_FX = _hk_struct_test.DS_96XXN_FX
DS_86XXN_FX = _hk_struct_test.DS_86XXN_FX
DS_96XXXN_HX = _hk_struct_test.DS_96XXXN_HX
DS_86XXN_I = _hk_struct_test.DS_86XXN_I
DS_77XX_N_I = _hk_struct_test.DS_77XX_N_I
DS_76XX_N_I = _hk_struct_test.DS_76XX_N_I
DS_78XX_N_I = _hk_struct_test.DS_78XX_N_I
DS_96XXXN_IX = _hk_struct_test.DS_96XXXN_IX
DS_90XXHXH_XT = _hk_struct_test.DS_90XXHXH_XT
PCNVR_IVMS_4200 = _hk_struct_test.PCNVR_IVMS_4200
IVMS_6200_TP = _hk_struct_test.IVMS_6200_TP
IVMS_6200_TF = _hk_struct_test.IVMS_6200_TF
IVMS_6200_D = _hk_struct_test.IVMS_6200_D
IDS_81XXAHW_ST = _hk_struct_test.IDS_81XXAHW_ST
IDS_81XXAHW_SP = _hk_struct_test.IDS_81XXAHW_SP
IDS_81XXAHWL_ST = _hk_struct_test.IDS_81XXAHWL_ST
IDS_81XXAHWL_SP = _hk_struct_test.IDS_81XXAHWL_SP
IDS_9616N_H8 = _hk_struct_test.IDS_9616N_H8
IVMS_6200_SMD = _hk_struct_test.IVMS_6200_SMD
DS_81XXAHW_ST = _hk_struct_test.DS_81XXAHW_ST
DS_81XXAHW_SP = _hk_struct_test.DS_81XXAHW_SP
DS_81XXAHWL_ST = _hk_struct_test.DS_81XXAHWL_ST
DS_81XXAHWL_SP = _hk_struct_test.DS_81XXAHWL_SP
DS_81XXAHGH_E4 = _hk_struct_test.DS_81XXAHGH_E4
DS_6904UD_AIOE_H_CLASS = _hk_struct_test.DS_6904UD_AIOE_H_CLASS
DS_6402HFH_B21B_CLASS = _hk_struct_test.DS_6402HFH_B21B_CLASS
DS_6902UD_B21H_CLASS = _hk_struct_test.DS_6902UD_B21H_CLASS
DS_6902UD_B21D_CLASS = _hk_struct_test.DS_6902UD_B21D_CLASS
DS_6902UD_B21V_CLASS = _hk_struct_test.DS_6902UD_B21V_CLASS
DS_6904UD_B20D_CLASS = _hk_struct_test.DS_6904UD_B20D_CLASS
DS_6904UD_B20V_CLASS = _hk_struct_test.DS_6904UD_B20V_CLASS
DS_AIOH_MCU_NP = _hk_struct_test.DS_AIOH_MCU_NP
DS_6404HFH_AIOH_D = _hk_struct_test.DS_6404HFH_AIOH_D
DS_6908UD_AIOH_D = _hk_struct_test.DS_6908UD_AIOH_D
DS_6908UD_AIOH_H = _hk_struct_test.DS_6908UD_AIOH_H
DS_69XXUD_B = _hk_struct_test.DS_69XXUD_B
DS_6404HFH_I = _hk_struct_test.DS_6404HFH_I
DS_6904UD_O = _hk_struct_test.DS_6904UD_O
DS_C12L_0204H = _hk_struct_test.DS_C12L_0204H
DS_Y10_MCU = _hk_struct_test.DS_Y10_MCU
DS_Y10_SW1 = _hk_struct_test.DS_Y10_SW1
DS_6516UD_Y10D = _hk_struct_test.DS_6516UD_Y10D
DS_6532UD_Y10D = _hk_struct_test.DS_6532UD_Y10D
DS_6E2724_Y10 = _hk_struct_test.DS_6E2724_Y10
DS_68SAA_AA_Y10 = _hk_struct_test.DS_68SAA_AA_Y10
DS_68SBA_AA_Y10 = _hk_struct_test.DS_68SBA_AA_Y10
DS_68SCA_AA_Y10 = _hk_struct_test.DS_68SCA_AA_Y10
DS_68GPU_A1_Y10 = _hk_struct_test.DS_68GPU_A1_Y10
DS_CPU_SERVER = _hk_struct_test.DS_CPU_SERVER
DS_GPU_SERVER = _hk_struct_test.DS_GPU_SERVER
DS_BIGDATA_SERVER = _hk_struct_test.DS_BIGDATA_SERVER
DS_B80_MCU = _hk_struct_test.DS_B80_MCU
DS_B80_SW = _hk_struct_test.DS_B80_SW
DS_B80_SR_01 = _hk_struct_test.DS_B80_SR_01
DS_B80_AI04 = _hk_struct_test.DS_B80_AI04
DS_B80_ST = _hk_struct_test.DS_B80_ST
DS_B80_D04 = _hk_struct_test.DS_B80_D04
DS_3LGCX = _hk_struct_test.DS_3LGCX
DS_3LGRX = _hk_struct_test.DS_3LGRX
DS_3LGT4 = _hk_struct_test.DS_3LGT4
DS_3LGT40_N = _hk_struct_test.DS_3LGT40_N
DS_3E11XX = _hk_struct_test.DS_3E11XX
DS_3E13XX = _hk_struct_test.DS_3E13XX
DS_3E15XX = _hk_struct_test.DS_3E15XX
DS_3E11XXP = _hk_struct_test.DS_3E11XXP
DS_3E13XXP = _hk_struct_test.DS_3E13XXP
DS_3E15XXP = _hk_struct_test.DS_3E15XXP
DS_3D01R_NM = _hk_struct_test.DS_3D01R_NM
DS_3D01T_NM = _hk_struct_test.DS_3D01T_NM
DS_3K02_RNM = _hk_struct_test.DS_3K02_RNM
IDS_90XX_HXH_XX_S = _hk_struct_test.IDS_90XX_HXH_XX_S
IDS_90XX_HXH_XX_FA = _hk_struct_test.IDS_90XX_HXH_XX_FA
DS_81XX_SHXL_K4 = _hk_struct_test.DS_81XX_SHXL_K4
DS_8116THFHL_F4 = _hk_struct_test.DS_8116THFHL_F4
DS_81XXAHQ_E4 = _hk_struct_test.DS_81XXAHQ_E4
IDS_81XXAHQ_E4 = _hk_struct_test.IDS_81XXAHQ_E4
IDS_86XX_NX_A = _hk_struct_test.IDS_86XX_NX_A
IDS_96XX_NX_S = _hk_struct_test.IDS_96XX_NX_S
IDS_96XX_NX_V = _hk_struct_test.IDS_96XX_NX_V
IDS_96XX_NX_FA = _hk_struct_test.IDS_96XX_NX_FA
IDS_86XX_NX_IX_B = _hk_struct_test.IDS_86XX_NX_IX_B
IDS_67XX_NX_S_X = _hk_struct_test.IDS_67XX_NX_S_X
IDS_ECDXX_HE = _hk_struct_test.IDS_ECDXX_HE
IDS_ECDXX_HT = _hk_struct_test.IDS_ECDXX_HT
IDS_ECDXX_E = _hk_struct_test.IDS_ECDXX_E
IDS_EPTXX_HF = _hk_struct_test.IDS_EPTXX_HF
DS_2CD69XXX_I = _hk_struct_test.DS_2CD69XXX_I
DS_TRIXX = _hk_struct_test.DS_TRIXX
DS_K1F600_D6EXX = _hk_struct_test.DS_K1F600_D6EXX
DS_K1T341 = _hk_struct_test.DS_K1T341
DS_K1T641XXX = _hk_struct_test.DS_K1T641XXX
DS_K1T642XXX = _hk_struct_test.DS_K1T642XXX
DS_K1T601 = _hk_struct_test.DS_K1T601
DS_K1T672XXX = _hk_struct_test.DS_K1T672XXX
DS_K56A0X = _hk_struct_test.DS_K56A0X
DS_IEXX_E_J = _hk_struct_test.DS_IEXX_E_J
IDS_67XX_NX_A = _hk_struct_test.IDS_67XX_NX_A
IDS_67XX_NX_L = _hk_struct_test.IDS_67XX_NX_L
IDS_ENIXX_XHE = _hk_struct_test.IDS_ENIXX_XHE
IDS_67XX_NX_V = _hk_struct_test.IDS_67XX_NX_V
IDS_67XX_NX_B = _hk_struct_test.IDS_67XX_NX_B
DS_IE63XX_E_FA = _hk_struct_test.DS_IE63XX_E_FA
DS_DS_GPKIA = _hk_struct_test.DS_DS_GPKIA
DS_DS_PURE = _hk_struct_test.DS_DS_PURE
DS_DS_FS = _hk_struct_test.DS_DS_FS
DS_DS_FD = _hk_struct_test.DS_DS_FD
DS_DS_BLADE = _hk_struct_test.DS_DS_BLADE
DS_DS_HMCP = _hk_struct_test.DS_DS_HMCP
DS_LNX_RF = _hk_struct_test.DS_LNX_RF
DS_PA_RADAR = _hk_struct_test.DS_PA_RADAR
DS_PERIMETER_RADAR = _hk_struct_test.DS_PERIMETER_RADAR
DS_SECURITY_RADAR = _hk_struct_test.DS_SECURITY_RADAR
DS_N1104X = _hk_struct_test.DS_N1104X
DS_N1103X = _hk_struct_test.DS_N1103X
NP_FSC201 = _hk_struct_test.NP_FSC201
NP_FDC240 = _hk_struct_test.NP_FDC240
DS_N1107 = _hk_struct_test.DS_N1107
NP_FAXXX = _hk_struct_test.NP_FAXXX
NP_ST204_X = _hk_struct_test.NP_ST204_X
DEV_CLASS_DVR = _hk_struct_test.DEV_CLASS_DVR
DEV_CLASS_INTERROGATION = _hk_struct_test.DEV_CLASS_INTERROGATION
DEV_CLASS_SIMPLE_TRAIL = _hk_struct_test.DEV_CLASS_SIMPLE_TRAIL
DEV_CLASS_TRAIL = _hk_struct_test.DEV_CLASS_TRAIL
DEV_CLASS_RECORD_PLAY = _hk_struct_test.DEV_CLASS_RECORD_PLAY
DEV_CLASS_ATM = _hk_struct_test.DEV_CLASS_ATM
DEV_CLASS_DVS = _hk_struct_test.DEV_CLASS_DVS
DEV_CLASS_NVR = _hk_struct_test.DEV_CLASS_NVR
DEV_CLASS_GUN = _hk_struct_test.DEV_CLASS_GUN
DEV_CLASS_BALL = _hk_struct_test.DEV_CLASS_BALL
DEV_CLASS_SNAP = _hk_struct_test.DEV_CLASS_SNAP
DEV_CLASS_INTELLI_TILT = _hk_struct_test.DEV_CLASS_INTELLI_TILT
DEV_CLASS_FISH_EYE = _hk_struct_test.DEV_CLASS_FISH_EYE
DEV_CLASS_2DP_Z = _hk_struct_test.DEV_CLASS_2DP_Z
DEV_CLASS_2DP = _hk_struct_test.DEV_CLASS_2DP
DEV_CLASS_PT = _hk_struct_test.DEV_CLASS_PT
DEV_CLASS_TRI = _hk_struct_test.DEV_CLASS_TRI
DEV_CLASS_CVR = _hk_struct_test.DEV_CLASS_CVR
DEV_CLASS_B20 = _hk_struct_test.DEV_CLASS_B20
DEV_CLASS_B10 = _hk_struct_test.DEV_CLASS_B10
DEV_CLASS_DECODER = _hk_struct_test.DEV_CLASS_DECODER
DEV_CLASS_MATRIXMANAGEDEVICE = _hk_struct_test.DEV_CLASS_MATRIXMANAGEDEVICE
DEV_CLASS_OTICAL = _hk_struct_test.DEV_CLASS_OTICAL
DEV_CLASS_CODESPITTER = _hk_struct_test.DEV_CLASS_CODESPITTER
DEV_CLASS_ALARMHOST = _hk_struct_test.DEV_CLASS_ALARMHOST
DEV_CLASS_MOVING_RING = _hk_struct_test.DEV_CLASS_MOVING_RING
DEV_CLASS_CVCS = _hk_struct_test.DEV_CLASS_CVCS
DEV_CLASS_DVCS = _hk_struct_test.DEV_CLASS_DVCS
DEV_CLASS_TRANSCODER = _hk_struct_test.DEV_CLASS_TRANSCODER
DEV_CLASS_LCD_SCREEN = _hk_struct_test.DEV_CLASS_LCD_SCREEN
DEV_CLASS_LED_SCREEN = _hk_struct_test.DEV_CLASS_LED_SCREEN
DEV_CLASS_MATRIX = _hk_struct_test.DEV_CLASS_MATRIX
DEV_CLASS_CONFERENCE_SYSTEM = _hk_struct_test.DEV_CLASS_CONFERENCE_SYSTEM
DEV_CLASS_INFORMATION_RELEASE_EQUIPMENT = _hk_struct_test.DEV_CLASS_INFORMATION_RELEASE_EQUIPMENT
DEV_CLASS_NET_GAP = _hk_struct_test.DEV_CLASS_NET_GAP
DEV_CLASS_MERGE = _hk_struct_test.DEV_CLASS_MERGE
DEV_CLASS_REAR_PROJECTION = _hk_struct_test.DEV_CLASS_REAR_PROJECTION
DEV_CLASS_SWITCH = _hk_struct_test.DEV_CLASS_SWITCH
DEV_CLASS_FIBER_CONVERTER = _hk_struct_test.DEV_CLASS_FIBER_CONVERTER
DEV_CLASS_SCREEN_SERVER = _hk_struct_test.DEV_CLASS_SCREEN_SERVER
DEV_CLASS_SCE_SERVER = _hk_struct_test.DEV_CLASS_SCE_SERVER
DEV_CLASS_WIRELESS_TRANS = _hk_struct_test.DEV_CLASS_WIRELESS_TRANS
DEV_CLASS_Y10_SERIES = _hk_struct_test.DEV_CLASS_Y10_SERIES
DEV_CLASS_SAFETY_MAVHINE = _hk_struct_test.DEV_CLASS_SAFETY_MAVHINE
DEV_CLASS_IOTGATEWAY = _hk_struct_test.DEV_CLASS_IOTGATEWAY
DEV_CLASS_VIDEO_ALARM_HOST = _hk_struct_test.DEV_CLASS_VIDEO_ALARM_HOST
DEV_CLASS_NET_ALARM_HOST = _hk_struct_test.DEV_CLASS_NET_ALARM_HOST
DEV_CLASS_ONE_KEY_ALARM = _hk_struct_test.DEV_CLASS_ONE_KEY_ALARM
DEV_CLASS_WIRELESS_ALARM_HOST = _hk_struct_test.DEV_CLASS_WIRELESS_ALARM_HOST
DEV_CLASS_ALARM_MODULE = _hk_struct_test.DEV_CLASS_ALARM_MODULE
DEV_CLASS_HOME_ALARM_HOST = _hk_struct_test.DEV_CLASS_HOME_ALARM_HOST
DEV_CLASS_HYBRID_ALARM_HOST = _hk_struct_test.DEV_CLASS_HYBRID_ALARM_HOST
DEV_CLASS_ACCESS_CONTROL = _hk_struct_test.DEV_CLASS_ACCESS_CONTROL
DEV_CLASS_VIDEO_INTERCOM = _hk_struct_test.DEV_CLASS_VIDEO_INTERCOM
DEV_CLASS_UMMANNED_AERIAL_VEHICLE = _hk_struct_test.DEV_CLASS_UMMANNED_AERIAL_VEHICLE
DEV_CLASS_MOBILE = _hk_struct_test.DEV_CLASS_MOBILE
DEV_CLASS_MOBILE_VEHICLE = _hk_struct_test.DEV_CLASS_MOBILE_VEHICLE
DEV_CLASS_INTELLIGENT_ANALYZER = _hk_struct_test.DEV_CLASS_INTELLIGENT_ANALYZER
DEV_CLASS_INTELLIGENT_TRAFFIC_SERVER = _hk_struct_test.DEV_CLASS_INTELLIGENT_TRAFFIC_SERVER
DS_TP2200_EC = _hk_struct_test.DS_TP2200_EC
DEV_CLASS_NVS = _hk_struct_test.DEV_CLASS_NVS
DS_TRI21A_1_P = _hk_struct_test.DS_TRI21A_1_P
DS_CLASS_FA = _hk_struct_test.DS_CLASS_FA
DS_CLASS_PURE = _hk_struct_test.DS_CLASS_PURE
DS_CLASS_FS = _hk_struct_test.DS_CLASS_FS
DS_CLASS_FD = _hk_struct_test.DS_CLASS_FD
DS_CLASS_HAWK = _hk_struct_test.DS_CLASS_HAWK
DS_CLASS_BLADE = _hk_struct_test.DS_CLASS_BLADE
DS_CLASS_HMCP = _hk_struct_test.DS_CLASS_HMCP
DEV_CLASS_SMART_LOCK = _hk_struct_test.DEV_CLASS_SMART_LOCK
DEV_CLASS_RADAR = _hk_struct_test.DEV_CLASS_RADAR
DEV_CLASS_FIRE_CONTROL = _hk_struct_test.DEV_CLASS_FIRE_CONTROL
DEV_CLASS_SECURITY_CHECK = _hk_struct_test.DEV_CLASS_SECURITY_CHECK
iDS_PT = _hk_struct_test.iDS_PT
DEV_CLASS_DEFAULT = _hk_struct_test.DEV_CLASS_DEFAULT
DEVICE_SOFTHARDWARE_ABILITY = _hk_struct_test.DEVICE_SOFTHARDWARE_ABILITY
DEVICE_NETWORK_ABILITY = _hk_struct_test.DEVICE_NETWORK_ABILITY
DEVICE_ENCODE_ALL_ABILITY = _hk_struct_test.DEVICE_ENCODE_ALL_ABILITY
DEVICE_ENCODE_CURRENT = _hk_struct_test.DEVICE_ENCODE_CURRENT
IPC_FRONT_PARAMETER = _hk_struct_test.IPC_FRONT_PARAMETER
IPC_UPGRADE_DESCRIPTION = _hk_struct_test.IPC_UPGRADE_DESCRIPTION
DEVICE_RAID_ABILITY = _hk_struct_test.DEVICE_RAID_ABILITY
DEVICE_ENCODE_ALL_ABILITY_V20 = _hk_struct_test.DEVICE_ENCODE_ALL_ABILITY_V20
IPC_FRONT_PARAMETER_V20 = _hk_struct_test.IPC_FRONT_PARAMETER_V20
DEVICE_ALARM_ABILITY = _hk_struct_test.DEVICE_ALARM_ABILITY
DEVICE_DYNCHAN_ABILITY = _hk_struct_test.DEVICE_DYNCHAN_ABILITY
DEVICE_USER_ABILITY = _hk_struct_test.DEVICE_USER_ABILITY
DEVICE_NETAPP_ABILITY = _hk_struct_test.DEVICE_NETAPP_ABILITY
DEVICE_VIDEOPIC_ABILITY = _hk_struct_test.DEVICE_VIDEOPIC_ABILITY
DEVICE_JPEG_CAP_ABILITY = _hk_struct_test.DEVICE_JPEG_CAP_ABILITY
DEVICE_SERIAL_ABILITY = _hk_struct_test.DEVICE_SERIAL_ABILITY
DEVICE_ABILITY_INFO = _hk_struct_test.DEVICE_ABILITY_INFO
STREAM_ABILITY = _hk_struct_test.STREAM_ABILITY
SYSTEM_MANAGEMENT_ABILITY = _hk_struct_test.SYSTEM_MANAGEMENT_ABILITY
IP_VIEW_DEV_ABILITY = _hk_struct_test.IP_VIEW_DEV_ABILITY
VCA_DEV_ABILITY = _hk_struct_test.VCA_DEV_ABILITY
VCA_CHAN_ABILITY = _hk_struct_test.VCA_CHAN_ABILITY
TRANSFER_ABILITY = _hk_struct_test.TRANSFER_ABILITY
MATRIXDECODER_ABILITY = _hk_struct_test.MATRIXDECODER_ABILITY
VIDEOPLATFORM_ABILITY = _hk_struct_test.VIDEOPLATFORM_ABILITY
VIDEOPLATFORM_SBUCODESYSTEM_ABILITY = _hk_struct_test.VIDEOPLATFORM_SBUCODESYSTEM_ABILITY
WALL_ABILITY = _hk_struct_test.WALL_ABILITY
MATRIX_ABILITY = _hk_struct_test.MATRIX_ABILITY
DECODECARD_ABILITY = _hk_struct_test.DECODECARD_ABILITY
VIDEOPLATFORM_ABILITY_V40 = _hk_struct_test.VIDEOPLATFORM_ABILITY_V40
MATRIXMANAGEDEVICE_ABILITY = _hk_struct_test.MATRIXMANAGEDEVICE_ABILITY
MATRIXDECODER_ABILITY_V41 = _hk_struct_test.MATRIXDECODER_ABILITY_V41
DECODER_ABILITY = _hk_struct_test.DECODER_ABILITY
DECODECARD_ABILITY_V41 = _hk_struct_test.DECODECARD_ABILITY_V41
CODECARD_ABILITY = _hk_struct_test.CODECARD_ABILITY
SNAPCAMERA_ABILITY = _hk_struct_test.SNAPCAMERA_ABILITY
ITC_TRIGGER_MODE_ABILITY = _hk_struct_test.ITC_TRIGGER_MODE_ABILITY
COMPRESSIONCFG_ABILITY = _hk_struct_test.COMPRESSIONCFG_ABILITY
COMPRESSION_LIMIT = _hk_struct_test.COMPRESSION_LIMIT
PIC_CAPTURE_ABILITY = _hk_struct_test.PIC_CAPTURE_ABILITY
ALARMHOST_ABILITY = _hk_struct_test.ALARMHOST_ABILITY
IT_DEVICE_ABILITY = _hk_struct_test.IT_DEVICE_ABILITY
SCREENCONTROL_ABILITY = _hk_struct_test.SCREENCONTROL_ABILITY
SCREENSERVER_ABILITY = _hk_struct_test.SCREENSERVER_ABILITY
FISHEYE_ABILITY = _hk_struct_test.FISHEYE_ABILITY
LCD_SCREEN_ABILITY = _hk_struct_test.LCD_SCREEN_ABILITY
ACS_ABILITY = _hk_struct_test.ACS_ABILITY
MERGEDEV_ABILITY = _hk_struct_test.MERGEDEV_ABILITY
CAM_FUSION_ABILITY = _hk_struct_test.CAM_FUSION_ABILITY
OPTICAL_DEV_ACCESS_ABILITY = _hk_struct_test.OPTICAL_DEV_ACCESS_ABILITY
NET_RING_ABILITY = _hk_struct_test.NET_RING_ABILITY
LED_ABILITY = _hk_struct_test.LED_ABILITY
PUBLISHDEV_ABILITY = _hk_struct_test.PUBLISHDEV_ABILITY
SCREEN_EXCHANGE_ABILITY = _hk_struct_test.SCREEN_EXCHANGE_ABILITY
REMOTE_NETMGR_FOT_ABILITY = _hk_struct_test.REMOTE_NETMGR_FOT_ABILITY
EXCEPTION_MAJOR_MAINBOARD_BOOT = _hk_struct_test.EXCEPTION_MAJOR_MAINBOARD_BOOT
EXCEPTION_MINOR_PCIE_SCAN = _hk_struct_test.EXCEPTION_MINOR_PCIE_SCAN
EXCEPTION_MINOR_DOWNLOAD_SUBBOARD = _hk_struct_test.EXCEPTION_MINOR_DOWNLOAD_SUBBOARD
EXCEPTION_MAJOR_SUBBOARD_BOOT = _hk_struct_test.EXCEPTION_MAJOR_SUBBOARD_BOOT
EXCEPTION_MINOR_INEXISTENCE = _hk_struct_test.EXCEPTION_MINOR_INEXISTENCE
EXCEPTION_MINOR_UBOOT_DOWNLOAD = _hk_struct_test.EXCEPTION_MINOR_UBOOT_DOWNLOAD
EXCEPTION_MINOR_UBOOT_INIT = _hk_struct_test.EXCEPTION_MINOR_UBOOT_INIT
EXCEPTION_MINOR_ROOTFS_DOWNLOAD = _hk_struct_test.EXCEPTION_MINOR_ROOTFS_DOWNLOAD
EXCEPTION_MINOR_UIMAGE_DOWNLOAD = _hk_struct_test.EXCEPTION_MINOR_UIMAGE_DOWNLOAD
EXCEPTION_MINOR_UBOOT_SETBOOTFLAG = _hk_struct_test.EXCEPTION_MINOR_UBOOT_SETBOOTFLAG
EXCEPTION_MINOR_ROOTFS_BOOT_SUBBOARD = _hk_struct_test.EXCEPTION_MINOR_ROOTFS_BOOT_SUBBOARD
EXCEPTION_MINOR_NEED_FILE_FINISH = _hk_struct_test.EXCEPTION_MINOR_NEED_FILE_FINISH
EXCEPTION_MAJOR_SUBBOARD_HARDWARE = _hk_struct_test.EXCEPTION_MAJOR_SUBBOARD_HARDWARE
EXCEPTION_MINOR_AD = _hk_struct_test.EXCEPTION_MINOR_AD
EXCEPTION_MINOR_DA = _hk_struct_test.EXCEPTION_MINOR_DA
EXCEPTION_MINOR_TIMER = _hk_struct_test.EXCEPTION_MINOR_TIMER
EXCEPTION_MAJOR_FPGA = _hk_struct_test.EXCEPTION_MAJOR_FPGA
EXCEPTION_MINOR_IDLE = _hk_struct_test.EXCEPTION_MINOR_IDLE
EXCEPTION_MINOR_LANE = _hk_struct_test.EXCEPTION_MINOR_LANE
EXCEPTION_MINOR_REGISTER_ALL_F = _hk_struct_test.EXCEPTION_MINOR_REGISTER_ALL_F
EXCEPTION_MINOR_MEMORY_INIT_FAIL = _hk_struct_test.EXCEPTION_MINOR_MEMORY_INIT_FAIL
EXCEPTION_MAJOR_DSP = _hk_struct_test.EXCEPTION_MAJOR_DSP
EXCEPTION_MAJOR_ARM = _hk_struct_test.EXCEPTION_MAJOR_ARM
EXCEPTION_MAJOR_BACKBOARD = _hk_struct_test.EXCEPTION_MAJOR_BACKBOARD
EXCEPTION_MINOR_BLACKBOARD_TYPE = _hk_struct_test.EXCEPTION_MINOR_BLACKBOARD_TYPE
EXCEPTION_MINOR_SERDES = _hk_struct_test.EXCEPTION_MINOR_SERDES
EXCEPTION_MINOR_CLOCK = _hk_struct_test.EXCEPTION_MINOR_CLOCK
EXCEPTION_MINOR_SYNCH = _hk_struct_test.EXCEPTION_MINOR_SYNCH
EXCEPTION_MAJOR_SUBBOARD_NET = _hk_struct_test.EXCEPTION_MAJOR_SUBBOARD_NET
EXCEPTION_MINOR_IP_CONFLICT = _hk_struct_test.EXCEPTION_MINOR_IP_CONFLICT
EXCEPTION_MINOR_DISCONNECT = _hk_struct_test.EXCEPTION_MINOR_DISCONNECT
MAX_FIRE_ALARM_ZONE = _hk_struct_test.MAX_FIRE_ALARM_ZONE
MAX_FIRE_ALARM_POINT_ZONE = _hk_struct_test.MAX_FIRE_ALARM_POINT_ZONE
ENUM_MEM_CHAR_ENCODE_ERR = _hk_struct_test.ENUM_MEM_CHAR_ENCODE_ERR
ENUM_MEM_CHAR_ENCODE_NO = _hk_struct_test.ENUM_MEM_CHAR_ENCODE_NO
ENUM_MEM_CHAR_ENCODE_CN = _hk_struct_test.ENUM_MEM_CHAR_ENCODE_CN
ENUM_MEM_CHAR_ENCODE_GBK = _hk_struct_test.ENUM_MEM_CHAR_ENCODE_GBK
ENUM_MEM_CHAR_ENCODE_BIG5 = _hk_struct_test.ENUM_MEM_CHAR_ENCODE_BIG5
ENUM_MEM_CHAR_ENCODE_JP = _hk_struct_test.ENUM_MEM_CHAR_ENCODE_JP
ENUM_MEM_CHAR_ENCODE_KR = _hk_struct_test.ENUM_MEM_CHAR_ENCODE_KR
ENUM_MEM_CHAR_ENCODE_UTF8 = _hk_struct_test.ENUM_MEM_CHAR_ENCODE_UTF8
ENUM_MEM_CHAR_ENCODE_ISO8859_1 = _hk_struct_test.ENUM_MEM_CHAR_ENCODE_ISO8859_1
ENUM_MEM_CHAR_ENCODE_UNICODE = _hk_struct_test.ENUM_MEM_CHAR_ENCODE_UNICODE
class NET_DVR_TIME(_object):
    """Proxy of C++ NET_DVR_TIME class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_TIME, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_TIME, name)
    __repr__ = _swig_repr
    __swig_setmethods__["dwYear"] = _hk_struct_test.NET_DVR_TIME_dwYear_set
    __swig_getmethods__["dwYear"] = _hk_struct_test.NET_DVR_TIME_dwYear_get
    if _newclass:
        dwYear = _swig_property(_hk_struct_test.NET_DVR_TIME_dwYear_get, _hk_struct_test.NET_DVR_TIME_dwYear_set)
    __swig_setmethods__["dwMonth"] = _hk_struct_test.NET_DVR_TIME_dwMonth_set
    __swig_getmethods__["dwMonth"] = _hk_struct_test.NET_DVR_TIME_dwMonth_get
    if _newclass:
        dwMonth = _swig_property(_hk_struct_test.NET_DVR_TIME_dwMonth_get, _hk_struct_test.NET_DVR_TIME_dwMonth_set)
    __swig_setmethods__["dwDay"] = _hk_struct_test.NET_DVR_TIME_dwDay_set
    __swig_getmethods__["dwDay"] = _hk_struct_test.NET_DVR_TIME_dwDay_get
    if _newclass:
        dwDay = _swig_property(_hk_struct_test.NET_DVR_TIME_dwDay_get, _hk_struct_test.NET_DVR_TIME_dwDay_set)
    __swig_setmethods__["dwHour"] = _hk_struct_test.NET_DVR_TIME_dwHour_set
    __swig_getmethods__["dwHour"] = _hk_struct_test.NET_DVR_TIME_dwHour_get
    if _newclass:
        dwHour = _swig_property(_hk_struct_test.NET_DVR_TIME_dwHour_get, _hk_struct_test.NET_DVR_TIME_dwHour_set)
    __swig_setmethods__["dwMinute"] = _hk_struct_test.NET_DVR_TIME_dwMinute_set
    __swig_getmethods__["dwMinute"] = _hk_struct_test.NET_DVR_TIME_dwMinute_get
    if _newclass:
        dwMinute = _swig_property(_hk_struct_test.NET_DVR_TIME_dwMinute_get, _hk_struct_test.NET_DVR_TIME_dwMinute_set)
    __swig_setmethods__["dwSecond"] = _hk_struct_test.NET_DVR_TIME_dwSecond_set
    __swig_getmethods__["dwSecond"] = _hk_struct_test.NET_DVR_TIME_dwSecond_get
    if _newclass:
        dwSecond = _swig_property(_hk_struct_test.NET_DVR_TIME_dwSecond_get, _hk_struct_test.NET_DVR_TIME_dwSecond_set)

    def __init__(self):
        """__init__(NET_DVR_TIME self) -> NET_DVR_TIME"""
        this = _hk_struct_test.new_NET_DVR_TIME()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_TIME
    __del__ = lambda self: None
NET_DVR_TIME_swigregister = _hk_struct_test.NET_DVR_TIME_swigregister
NET_DVR_TIME_swigregister(NET_DVR_TIME)

class NET_DVR_TIME_V30(_object):
    """Proxy of C++ tagNET_DVR_TIME_V30 class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_TIME_V30, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_TIME_V30, name)
    __repr__ = _swig_repr
    __swig_setmethods__["wYear"] = _hk_struct_test.NET_DVR_TIME_V30_wYear_set
    __swig_getmethods__["wYear"] = _hk_struct_test.NET_DVR_TIME_V30_wYear_get
    if _newclass:
        wYear = _swig_property(_hk_struct_test.NET_DVR_TIME_V30_wYear_get, _hk_struct_test.NET_DVR_TIME_V30_wYear_set)
    __swig_setmethods__["byMonth"] = _hk_struct_test.NET_DVR_TIME_V30_byMonth_set
    __swig_getmethods__["byMonth"] = _hk_struct_test.NET_DVR_TIME_V30_byMonth_get
    if _newclass:
        byMonth = _swig_property(_hk_struct_test.NET_DVR_TIME_V30_byMonth_get, _hk_struct_test.NET_DVR_TIME_V30_byMonth_set)
    __swig_setmethods__["byDay"] = _hk_struct_test.NET_DVR_TIME_V30_byDay_set
    __swig_getmethods__["byDay"] = _hk_struct_test.NET_DVR_TIME_V30_byDay_get
    if _newclass:
        byDay = _swig_property(_hk_struct_test.NET_DVR_TIME_V30_byDay_get, _hk_struct_test.NET_DVR_TIME_V30_byDay_set)
    __swig_setmethods__["byHour"] = _hk_struct_test.NET_DVR_TIME_V30_byHour_set
    __swig_getmethods__["byHour"] = _hk_struct_test.NET_DVR_TIME_V30_byHour_get
    if _newclass:
        byHour = _swig_property(_hk_struct_test.NET_DVR_TIME_V30_byHour_get, _hk_struct_test.NET_DVR_TIME_V30_byHour_set)
    __swig_setmethods__["byMinute"] = _hk_struct_test.NET_DVR_TIME_V30_byMinute_set
    __swig_getmethods__["byMinute"] = _hk_struct_test.NET_DVR_TIME_V30_byMinute_get
    if _newclass:
        byMinute = _swig_property(_hk_struct_test.NET_DVR_TIME_V30_byMinute_get, _hk_struct_test.NET_DVR_TIME_V30_byMinute_set)
    __swig_setmethods__["bySecond"] = _hk_struct_test.NET_DVR_TIME_V30_bySecond_set
    __swig_getmethods__["bySecond"] = _hk_struct_test.NET_DVR_TIME_V30_bySecond_get
    if _newclass:
        bySecond = _swig_property(_hk_struct_test.NET_DVR_TIME_V30_bySecond_get, _hk_struct_test.NET_DVR_TIME_V30_bySecond_set)
    __swig_setmethods__["byISO8601"] = _hk_struct_test.NET_DVR_TIME_V30_byISO8601_set
    __swig_getmethods__["byISO8601"] = _hk_struct_test.NET_DVR_TIME_V30_byISO8601_get
    if _newclass:
        byISO8601 = _swig_property(_hk_struct_test.NET_DVR_TIME_V30_byISO8601_get, _hk_struct_test.NET_DVR_TIME_V30_byISO8601_set)
    __swig_setmethods__["wMilliSec"] = _hk_struct_test.NET_DVR_TIME_V30_wMilliSec_set
    __swig_getmethods__["wMilliSec"] = _hk_struct_test.NET_DVR_TIME_V30_wMilliSec_get
    if _newclass:
        wMilliSec = _swig_property(_hk_struct_test.NET_DVR_TIME_V30_wMilliSec_get, _hk_struct_test.NET_DVR_TIME_V30_wMilliSec_set)
    __swig_setmethods__["cTimeDifferenceH"] = _hk_struct_test.NET_DVR_TIME_V30_cTimeDifferenceH_set
    __swig_getmethods__["cTimeDifferenceH"] = _hk_struct_test.NET_DVR_TIME_V30_cTimeDifferenceH_get
    if _newclass:
        cTimeDifferenceH = _swig_property(_hk_struct_test.NET_DVR_TIME_V30_cTimeDifferenceH_get, _hk_struct_test.NET_DVR_TIME_V30_cTimeDifferenceH_set)
    __swig_setmethods__["cTimeDifferenceM"] = _hk_struct_test.NET_DVR_TIME_V30_cTimeDifferenceM_set
    __swig_getmethods__["cTimeDifferenceM"] = _hk_struct_test.NET_DVR_TIME_V30_cTimeDifferenceM_get
    if _newclass:
        cTimeDifferenceM = _swig_property(_hk_struct_test.NET_DVR_TIME_V30_cTimeDifferenceM_get, _hk_struct_test.NET_DVR_TIME_V30_cTimeDifferenceM_set)

    def __init__(self):
        """__init__(tagNET_DVR_TIME_V30 self) -> NET_DVR_TIME_V30"""
        this = _hk_struct_test.new_NET_DVR_TIME_V30()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_TIME_V30
    __del__ = lambda self: None
NET_DVR_TIME_V30_swigregister = _hk_struct_test.NET_DVR_TIME_V30_swigregister
NET_DVR_TIME_V30_swigregister(NET_DVR_TIME_V30)

class NET_DVR_TIME_SEARCH(_object):
    """Proxy of C++ tagNET_DVR_TIME_SEARCH class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_TIME_SEARCH, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_TIME_SEARCH, name)
    __repr__ = _swig_repr
    __swig_setmethods__["wYear"] = _hk_struct_test.NET_DVR_TIME_SEARCH_wYear_set
    __swig_getmethods__["wYear"] = _hk_struct_test.NET_DVR_TIME_SEARCH_wYear_get
    if _newclass:
        wYear = _swig_property(_hk_struct_test.NET_DVR_TIME_SEARCH_wYear_get, _hk_struct_test.NET_DVR_TIME_SEARCH_wYear_set)
    __swig_setmethods__["byMonth"] = _hk_struct_test.NET_DVR_TIME_SEARCH_byMonth_set
    __swig_getmethods__["byMonth"] = _hk_struct_test.NET_DVR_TIME_SEARCH_byMonth_get
    if _newclass:
        byMonth = _swig_property(_hk_struct_test.NET_DVR_TIME_SEARCH_byMonth_get, _hk_struct_test.NET_DVR_TIME_SEARCH_byMonth_set)
    __swig_setmethods__["byDay"] = _hk_struct_test.NET_DVR_TIME_SEARCH_byDay_set
    __swig_getmethods__["byDay"] = _hk_struct_test.NET_DVR_TIME_SEARCH_byDay_get
    if _newclass:
        byDay = _swig_property(_hk_struct_test.NET_DVR_TIME_SEARCH_byDay_get, _hk_struct_test.NET_DVR_TIME_SEARCH_byDay_set)
    __swig_setmethods__["byHour"] = _hk_struct_test.NET_DVR_TIME_SEARCH_byHour_set
    __swig_getmethods__["byHour"] = _hk_struct_test.NET_DVR_TIME_SEARCH_byHour_get
    if _newclass:
        byHour = _swig_property(_hk_struct_test.NET_DVR_TIME_SEARCH_byHour_get, _hk_struct_test.NET_DVR_TIME_SEARCH_byHour_set)
    __swig_setmethods__["byMinute"] = _hk_struct_test.NET_DVR_TIME_SEARCH_byMinute_set
    __swig_getmethods__["byMinute"] = _hk_struct_test.NET_DVR_TIME_SEARCH_byMinute_get
    if _newclass:
        byMinute = _swig_property(_hk_struct_test.NET_DVR_TIME_SEARCH_byMinute_get, _hk_struct_test.NET_DVR_TIME_SEARCH_byMinute_set)
    __swig_setmethods__["bySecond"] = _hk_struct_test.NET_DVR_TIME_SEARCH_bySecond_set
    __swig_getmethods__["bySecond"] = _hk_struct_test.NET_DVR_TIME_SEARCH_bySecond_get
    if _newclass:
        bySecond = _swig_property(_hk_struct_test.NET_DVR_TIME_SEARCH_bySecond_get, _hk_struct_test.NET_DVR_TIME_SEARCH_bySecond_set)
    __swig_setmethods__["cTimeDifferenceH"] = _hk_struct_test.NET_DVR_TIME_SEARCH_cTimeDifferenceH_set
    __swig_getmethods__["cTimeDifferenceH"] = _hk_struct_test.NET_DVR_TIME_SEARCH_cTimeDifferenceH_get
    if _newclass:
        cTimeDifferenceH = _swig_property(_hk_struct_test.NET_DVR_TIME_SEARCH_cTimeDifferenceH_get, _hk_struct_test.NET_DVR_TIME_SEARCH_cTimeDifferenceH_set)
    __swig_setmethods__["cTimeDifferenceM"] = _hk_struct_test.NET_DVR_TIME_SEARCH_cTimeDifferenceM_set
    __swig_getmethods__["cTimeDifferenceM"] = _hk_struct_test.NET_DVR_TIME_SEARCH_cTimeDifferenceM_get
    if _newclass:
        cTimeDifferenceM = _swig_property(_hk_struct_test.NET_DVR_TIME_SEARCH_cTimeDifferenceM_get, _hk_struct_test.NET_DVR_TIME_SEARCH_cTimeDifferenceM_set)
    __swig_setmethods__["byLocalOrUTC"] = _hk_struct_test.NET_DVR_TIME_SEARCH_byLocalOrUTC_set
    __swig_getmethods__["byLocalOrUTC"] = _hk_struct_test.NET_DVR_TIME_SEARCH_byLocalOrUTC_get
    if _newclass:
        byLocalOrUTC = _swig_property(_hk_struct_test.NET_DVR_TIME_SEARCH_byLocalOrUTC_get, _hk_struct_test.NET_DVR_TIME_SEARCH_byLocalOrUTC_set)
    __swig_setmethods__["wMillisecond"] = _hk_struct_test.NET_DVR_TIME_SEARCH_wMillisecond_set
    __swig_getmethods__["wMillisecond"] = _hk_struct_test.NET_DVR_TIME_SEARCH_wMillisecond_get
    if _newclass:
        wMillisecond = _swig_property(_hk_struct_test.NET_DVR_TIME_SEARCH_wMillisecond_get, _hk_struct_test.NET_DVR_TIME_SEARCH_wMillisecond_set)

    def __init__(self):
        """__init__(tagNET_DVR_TIME_SEARCH self) -> NET_DVR_TIME_SEARCH"""
        this = _hk_struct_test.new_NET_DVR_TIME_SEARCH()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_TIME_SEARCH
    __del__ = lambda self: None
NET_DVR_TIME_SEARCH_swigregister = _hk_struct_test.NET_DVR_TIME_SEARCH_swigregister
NET_DVR_TIME_SEARCH_swigregister(NET_DVR_TIME_SEARCH)

class NET_DVR_TIME_SEARCH_COND(_object):
    """Proxy of C++ tagNET_DVR_TIME_SEARCH_COND class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_TIME_SEARCH_COND, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_TIME_SEARCH_COND, name)
    __repr__ = _swig_repr
    __swig_setmethods__["wYear"] = _hk_struct_test.NET_DVR_TIME_SEARCH_COND_wYear_set
    __swig_getmethods__["wYear"] = _hk_struct_test.NET_DVR_TIME_SEARCH_COND_wYear_get
    if _newclass:
        wYear = _swig_property(_hk_struct_test.NET_DVR_TIME_SEARCH_COND_wYear_get, _hk_struct_test.NET_DVR_TIME_SEARCH_COND_wYear_set)
    __swig_setmethods__["byMonth"] = _hk_struct_test.NET_DVR_TIME_SEARCH_COND_byMonth_set
    __swig_getmethods__["byMonth"] = _hk_struct_test.NET_DVR_TIME_SEARCH_COND_byMonth_get
    if _newclass:
        byMonth = _swig_property(_hk_struct_test.NET_DVR_TIME_SEARCH_COND_byMonth_get, _hk_struct_test.NET_DVR_TIME_SEARCH_COND_byMonth_set)
    __swig_setmethods__["byDay"] = _hk_struct_test.NET_DVR_TIME_SEARCH_COND_byDay_set
    __swig_getmethods__["byDay"] = _hk_struct_test.NET_DVR_TIME_SEARCH_COND_byDay_get
    if _newclass:
        byDay = _swig_property(_hk_struct_test.NET_DVR_TIME_SEARCH_COND_byDay_get, _hk_struct_test.NET_DVR_TIME_SEARCH_COND_byDay_set)
    __swig_setmethods__["byHour"] = _hk_struct_test.NET_DVR_TIME_SEARCH_COND_byHour_set
    __swig_getmethods__["byHour"] = _hk_struct_test.NET_DVR_TIME_SEARCH_COND_byHour_get
    if _newclass:
        byHour = _swig_property(_hk_struct_test.NET_DVR_TIME_SEARCH_COND_byHour_get, _hk_struct_test.NET_DVR_TIME_SEARCH_COND_byHour_set)
    __swig_setmethods__["byMinute"] = _hk_struct_test.NET_DVR_TIME_SEARCH_COND_byMinute_set
    __swig_getmethods__["byMinute"] = _hk_struct_test.NET_DVR_TIME_SEARCH_COND_byMinute_get
    if _newclass:
        byMinute = _swig_property(_hk_struct_test.NET_DVR_TIME_SEARCH_COND_byMinute_get, _hk_struct_test.NET_DVR_TIME_SEARCH_COND_byMinute_set)
    __swig_setmethods__["bySecond"] = _hk_struct_test.NET_DVR_TIME_SEARCH_COND_bySecond_set
    __swig_getmethods__["bySecond"] = _hk_struct_test.NET_DVR_TIME_SEARCH_COND_bySecond_get
    if _newclass:
        bySecond = _swig_property(_hk_struct_test.NET_DVR_TIME_SEARCH_COND_bySecond_get, _hk_struct_test.NET_DVR_TIME_SEARCH_COND_bySecond_set)
    __swig_setmethods__["byLocalOrUTC"] = _hk_struct_test.NET_DVR_TIME_SEARCH_COND_byLocalOrUTC_set
    __swig_getmethods__["byLocalOrUTC"] = _hk_struct_test.NET_DVR_TIME_SEARCH_COND_byLocalOrUTC_get
    if _newclass:
        byLocalOrUTC = _swig_property(_hk_struct_test.NET_DVR_TIME_SEARCH_COND_byLocalOrUTC_get, _hk_struct_test.NET_DVR_TIME_SEARCH_COND_byLocalOrUTC_set)
    __swig_setmethods__["wMillisecond"] = _hk_struct_test.NET_DVR_TIME_SEARCH_COND_wMillisecond_set
    __swig_getmethods__["wMillisecond"] = _hk_struct_test.NET_DVR_TIME_SEARCH_COND_wMillisecond_get
    if _newclass:
        wMillisecond = _swig_property(_hk_struct_test.NET_DVR_TIME_SEARCH_COND_wMillisecond_get, _hk_struct_test.NET_DVR_TIME_SEARCH_COND_wMillisecond_set)
    __swig_setmethods__["cTimeDifferenceH"] = _hk_struct_test.NET_DVR_TIME_SEARCH_COND_cTimeDifferenceH_set
    __swig_getmethods__["cTimeDifferenceH"] = _hk_struct_test.NET_DVR_TIME_SEARCH_COND_cTimeDifferenceH_get
    if _newclass:
        cTimeDifferenceH = _swig_property(_hk_struct_test.NET_DVR_TIME_SEARCH_COND_cTimeDifferenceH_get, _hk_struct_test.NET_DVR_TIME_SEARCH_COND_cTimeDifferenceH_set)
    __swig_setmethods__["cTimeDifferenceM"] = _hk_struct_test.NET_DVR_TIME_SEARCH_COND_cTimeDifferenceM_set
    __swig_getmethods__["cTimeDifferenceM"] = _hk_struct_test.NET_DVR_TIME_SEARCH_COND_cTimeDifferenceM_get
    if _newclass:
        cTimeDifferenceM = _swig_property(_hk_struct_test.NET_DVR_TIME_SEARCH_COND_cTimeDifferenceM_get, _hk_struct_test.NET_DVR_TIME_SEARCH_COND_cTimeDifferenceM_set)

    def __init__(self):
        """__init__(tagNET_DVR_TIME_SEARCH_COND self) -> NET_DVR_TIME_SEARCH_COND"""
        this = _hk_struct_test.new_NET_DVR_TIME_SEARCH_COND()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_TIME_SEARCH_COND
    __del__ = lambda self: None
NET_DVR_TIME_SEARCH_COND_swigregister = _hk_struct_test.NET_DVR_TIME_SEARCH_COND_swigregister
NET_DVR_TIME_SEARCH_COND_swigregister(NET_DVR_TIME_SEARCH_COND)

class NET_DVR_TIME_V50(_object):
    """Proxy of C++ tagNET_DVR_TIME_V50 class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_TIME_V50, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_TIME_V50, name)
    __repr__ = _swig_repr
    __swig_setmethods__["wYear"] = _hk_struct_test.NET_DVR_TIME_V50_wYear_set
    __swig_getmethods__["wYear"] = _hk_struct_test.NET_DVR_TIME_V50_wYear_get
    if _newclass:
        wYear = _swig_property(_hk_struct_test.NET_DVR_TIME_V50_wYear_get, _hk_struct_test.NET_DVR_TIME_V50_wYear_set)
    __swig_setmethods__["byMonth"] = _hk_struct_test.NET_DVR_TIME_V50_byMonth_set
    __swig_getmethods__["byMonth"] = _hk_struct_test.NET_DVR_TIME_V50_byMonth_get
    if _newclass:
        byMonth = _swig_property(_hk_struct_test.NET_DVR_TIME_V50_byMonth_get, _hk_struct_test.NET_DVR_TIME_V50_byMonth_set)
    __swig_setmethods__["byDay"] = _hk_struct_test.NET_DVR_TIME_V50_byDay_set
    __swig_getmethods__["byDay"] = _hk_struct_test.NET_DVR_TIME_V50_byDay_get
    if _newclass:
        byDay = _swig_property(_hk_struct_test.NET_DVR_TIME_V50_byDay_get, _hk_struct_test.NET_DVR_TIME_V50_byDay_set)
    __swig_setmethods__["byHour"] = _hk_struct_test.NET_DVR_TIME_V50_byHour_set
    __swig_getmethods__["byHour"] = _hk_struct_test.NET_DVR_TIME_V50_byHour_get
    if _newclass:
        byHour = _swig_property(_hk_struct_test.NET_DVR_TIME_V50_byHour_get, _hk_struct_test.NET_DVR_TIME_V50_byHour_set)
    __swig_setmethods__["byMinute"] = _hk_struct_test.NET_DVR_TIME_V50_byMinute_set
    __swig_getmethods__["byMinute"] = _hk_struct_test.NET_DVR_TIME_V50_byMinute_get
    if _newclass:
        byMinute = _swig_property(_hk_struct_test.NET_DVR_TIME_V50_byMinute_get, _hk_struct_test.NET_DVR_TIME_V50_byMinute_set)
    __swig_setmethods__["bySecond"] = _hk_struct_test.NET_DVR_TIME_V50_bySecond_set
    __swig_getmethods__["bySecond"] = _hk_struct_test.NET_DVR_TIME_V50_bySecond_get
    if _newclass:
        bySecond = _swig_property(_hk_struct_test.NET_DVR_TIME_V50_bySecond_get, _hk_struct_test.NET_DVR_TIME_V50_bySecond_set)
    __swig_setmethods__["byISO8601"] = _hk_struct_test.NET_DVR_TIME_V50_byISO8601_set
    __swig_getmethods__["byISO8601"] = _hk_struct_test.NET_DVR_TIME_V50_byISO8601_get
    if _newclass:
        byISO8601 = _swig_property(_hk_struct_test.NET_DVR_TIME_V50_byISO8601_get, _hk_struct_test.NET_DVR_TIME_V50_byISO8601_set)
    __swig_setmethods__["wMillisecond"] = _hk_struct_test.NET_DVR_TIME_V50_wMillisecond_set
    __swig_getmethods__["wMillisecond"] = _hk_struct_test.NET_DVR_TIME_V50_wMillisecond_get
    if _newclass:
        wMillisecond = _swig_property(_hk_struct_test.NET_DVR_TIME_V50_wMillisecond_get, _hk_struct_test.NET_DVR_TIME_V50_wMillisecond_set)
    __swig_setmethods__["cTimeDifferenceH"] = _hk_struct_test.NET_DVR_TIME_V50_cTimeDifferenceH_set
    __swig_getmethods__["cTimeDifferenceH"] = _hk_struct_test.NET_DVR_TIME_V50_cTimeDifferenceH_get
    if _newclass:
        cTimeDifferenceH = _swig_property(_hk_struct_test.NET_DVR_TIME_V50_cTimeDifferenceH_get, _hk_struct_test.NET_DVR_TIME_V50_cTimeDifferenceH_set)
    __swig_setmethods__["cTimeDifferenceM"] = _hk_struct_test.NET_DVR_TIME_V50_cTimeDifferenceM_set
    __swig_getmethods__["cTimeDifferenceM"] = _hk_struct_test.NET_DVR_TIME_V50_cTimeDifferenceM_get
    if _newclass:
        cTimeDifferenceM = _swig_property(_hk_struct_test.NET_DVR_TIME_V50_cTimeDifferenceM_get, _hk_struct_test.NET_DVR_TIME_V50_cTimeDifferenceM_set)

    def __init__(self):
        """__init__(tagNET_DVR_TIME_V50 self) -> NET_DVR_TIME_V50"""
        this = _hk_struct_test.new_NET_DVR_TIME_V50()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_TIME_V50
    __del__ = lambda self: None
NET_DVR_TIME_V50_swigregister = _hk_struct_test.NET_DVR_TIME_V50_swigregister
NET_DVR_TIME_V50_swigregister(NET_DVR_TIME_V50)

class NET_DVR_CALIBRATE_TIME(_object):
    """Proxy of C++ tagNET_DVR_CALIBRATE_TIME class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_CALIBRATE_TIME, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_CALIBRATE_TIME, name)
    __repr__ = _swig_repr
    __swig_setmethods__["dwSize"] = _hk_struct_test.NET_DVR_CALIBRATE_TIME_dwSize_set
    __swig_getmethods__["dwSize"] = _hk_struct_test.NET_DVR_CALIBRATE_TIME_dwSize_get
    if _newclass:
        dwSize = _swig_property(_hk_struct_test.NET_DVR_CALIBRATE_TIME_dwSize_get, _hk_struct_test.NET_DVR_CALIBRATE_TIME_dwSize_set)
    __swig_setmethods__["struTime"] = _hk_struct_test.NET_DVR_CALIBRATE_TIME_struTime_set
    __swig_getmethods__["struTime"] = _hk_struct_test.NET_DVR_CALIBRATE_TIME_struTime_get
    if _newclass:
        struTime = _swig_property(_hk_struct_test.NET_DVR_CALIBRATE_TIME_struTime_get, _hk_struct_test.NET_DVR_CALIBRATE_TIME_struTime_set)
    __swig_setmethods__["wMilliSec"] = _hk_struct_test.NET_DVR_CALIBRATE_TIME_wMilliSec_set
    __swig_getmethods__["wMilliSec"] = _hk_struct_test.NET_DVR_CALIBRATE_TIME_wMilliSec_get
    if _newclass:
        wMilliSec = _swig_property(_hk_struct_test.NET_DVR_CALIBRATE_TIME_wMilliSec_get, _hk_struct_test.NET_DVR_CALIBRATE_TIME_wMilliSec_set)
    __swig_setmethods__["byRes"] = _hk_struct_test.NET_DVR_CALIBRATE_TIME_byRes_set
    __swig_getmethods__["byRes"] = _hk_struct_test.NET_DVR_CALIBRATE_TIME_byRes_get
    if _newclass:
        byRes = _swig_property(_hk_struct_test.NET_DVR_CALIBRATE_TIME_byRes_get, _hk_struct_test.NET_DVR_CALIBRATE_TIME_byRes_set)

    def __init__(self):
        """__init__(tagNET_DVR_CALIBRATE_TIME self) -> NET_DVR_CALIBRATE_TIME"""
        this = _hk_struct_test.new_NET_DVR_CALIBRATE_TIME()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_CALIBRATE_TIME
    __del__ = lambda self: None
NET_DVR_CALIBRATE_TIME_swigregister = _hk_struct_test.NET_DVR_CALIBRATE_TIME_swigregister
NET_DVR_CALIBRATE_TIME_swigregister(NET_DVR_CALIBRATE_TIME)

MAX_TIMESIGN_LEN = _hk_struct_test.MAX_TIMESIGN_LEN
class NET_DVR_TIMESIGN_CFG(_object):
    """Proxy of C++ tagNET_DVR_TIMESIGN_CFG class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_TIMESIGN_CFG, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_TIMESIGN_CFG, name)
    __repr__ = _swig_repr
    __swig_setmethods__["dwSize"] = _hk_struct_test.NET_DVR_TIMESIGN_CFG_dwSize_set
    __swig_getmethods__["dwSize"] = _hk_struct_test.NET_DVR_TIMESIGN_CFG_dwSize_get
    if _newclass:
        dwSize = _swig_property(_hk_struct_test.NET_DVR_TIMESIGN_CFG_dwSize_get, _hk_struct_test.NET_DVR_TIMESIGN_CFG_dwSize_set)
    __swig_setmethods__["byCustomSetTimeSign"] = _hk_struct_test.NET_DVR_TIMESIGN_CFG_byCustomSetTimeSign_set
    __swig_getmethods__["byCustomSetTimeSign"] = _hk_struct_test.NET_DVR_TIMESIGN_CFG_byCustomSetTimeSign_get
    if _newclass:
        byCustomSetTimeSign = _swig_property(_hk_struct_test.NET_DVR_TIMESIGN_CFG_byCustomSetTimeSign_get, _hk_struct_test.NET_DVR_TIMESIGN_CFG_byCustomSetTimeSign_set)
    __swig_setmethods__["byRes"] = _hk_struct_test.NET_DVR_TIMESIGN_CFG_byRes_set
    __swig_getmethods__["byRes"] = _hk_struct_test.NET_DVR_TIMESIGN_CFG_byRes_get
    if _newclass:
        byRes = _swig_property(_hk_struct_test.NET_DVR_TIMESIGN_CFG_byRes_get, _hk_struct_test.NET_DVR_TIMESIGN_CFG_byRes_set)

    def __init__(self):
        """__init__(tagNET_DVR_TIMESIGN_CFG self) -> NET_DVR_TIMESIGN_CFG"""
        this = _hk_struct_test.new_NET_DVR_TIMESIGN_CFG()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_TIMESIGN_CFG
    __del__ = lambda self: None
NET_DVR_TIMESIGN_CFG_swigregister = _hk_struct_test.NET_DVR_TIMESIGN_CFG_swigregister
NET_DVR_TIMESIGN_CFG_swigregister(NET_DVR_TIMESIGN_CFG)

class NET_DVR_TIME_EX(_object):
    """Proxy of C++ tagNET_DVR_TIME_EX class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_TIME_EX, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_TIME_EX, name)
    __repr__ = _swig_repr
    __swig_setmethods__["wYear"] = _hk_struct_test.NET_DVR_TIME_EX_wYear_set
    __swig_getmethods__["wYear"] = _hk_struct_test.NET_DVR_TIME_EX_wYear_get
    if _newclass:
        wYear = _swig_property(_hk_struct_test.NET_DVR_TIME_EX_wYear_get, _hk_struct_test.NET_DVR_TIME_EX_wYear_set)
    __swig_setmethods__["byMonth"] = _hk_struct_test.NET_DVR_TIME_EX_byMonth_set
    __swig_getmethods__["byMonth"] = _hk_struct_test.NET_DVR_TIME_EX_byMonth_get
    if _newclass:
        byMonth = _swig_property(_hk_struct_test.NET_DVR_TIME_EX_byMonth_get, _hk_struct_test.NET_DVR_TIME_EX_byMonth_set)
    __swig_setmethods__["byDay"] = _hk_struct_test.NET_DVR_TIME_EX_byDay_set
    __swig_getmethods__["byDay"] = _hk_struct_test.NET_DVR_TIME_EX_byDay_get
    if _newclass:
        byDay = _swig_property(_hk_struct_test.NET_DVR_TIME_EX_byDay_get, _hk_struct_test.NET_DVR_TIME_EX_byDay_set)
    __swig_setmethods__["byHour"] = _hk_struct_test.NET_DVR_TIME_EX_byHour_set
    __swig_getmethods__["byHour"] = _hk_struct_test.NET_DVR_TIME_EX_byHour_get
    if _newclass:
        byHour = _swig_property(_hk_struct_test.NET_DVR_TIME_EX_byHour_get, _hk_struct_test.NET_DVR_TIME_EX_byHour_set)
    __swig_setmethods__["byMinute"] = _hk_struct_test.NET_DVR_TIME_EX_byMinute_set
    __swig_getmethods__["byMinute"] = _hk_struct_test.NET_DVR_TIME_EX_byMinute_get
    if _newclass:
        byMinute = _swig_property(_hk_struct_test.NET_DVR_TIME_EX_byMinute_get, _hk_struct_test.NET_DVR_TIME_EX_byMinute_set)
    __swig_setmethods__["bySecond"] = _hk_struct_test.NET_DVR_TIME_EX_bySecond_set
    __swig_getmethods__["bySecond"] = _hk_struct_test.NET_DVR_TIME_EX_bySecond_get
    if _newclass:
        bySecond = _swig_property(_hk_struct_test.NET_DVR_TIME_EX_bySecond_get, _hk_struct_test.NET_DVR_TIME_EX_bySecond_set)
    __swig_setmethods__["byRes"] = _hk_struct_test.NET_DVR_TIME_EX_byRes_set
    __swig_getmethods__["byRes"] = _hk_struct_test.NET_DVR_TIME_EX_byRes_get
    if _newclass:
        byRes = _swig_property(_hk_struct_test.NET_DVR_TIME_EX_byRes_get, _hk_struct_test.NET_DVR_TIME_EX_byRes_set)

    def __init__(self):
        """__init__(tagNET_DVR_TIME_EX self) -> NET_DVR_TIME_EX"""
        this = _hk_struct_test.new_NET_DVR_TIME_EX()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_TIME_EX
    __del__ = lambda self: None
NET_DVR_TIME_EX_swigregister = _hk_struct_test.NET_DVR_TIME_EX_swigregister
NET_DVR_TIME_EX_swigregister(NET_DVR_TIME_EX)

class NET_DVR_SCHEDTIME(_object):
    """Proxy of C++ NET_DVR_SCHEDTIME class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_SCHEDTIME, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_SCHEDTIME, name)
    __repr__ = _swig_repr
    __swig_setmethods__["byStartHour"] = _hk_struct_test.NET_DVR_SCHEDTIME_byStartHour_set
    __swig_getmethods__["byStartHour"] = _hk_struct_test.NET_DVR_SCHEDTIME_byStartHour_get
    if _newclass:
        byStartHour = _swig_property(_hk_struct_test.NET_DVR_SCHEDTIME_byStartHour_get, _hk_struct_test.NET_DVR_SCHEDTIME_byStartHour_set)
    __swig_setmethods__["byStartMin"] = _hk_struct_test.NET_DVR_SCHEDTIME_byStartMin_set
    __swig_getmethods__["byStartMin"] = _hk_struct_test.NET_DVR_SCHEDTIME_byStartMin_get
    if _newclass:
        byStartMin = _swig_property(_hk_struct_test.NET_DVR_SCHEDTIME_byStartMin_get, _hk_struct_test.NET_DVR_SCHEDTIME_byStartMin_set)
    __swig_setmethods__["byStopHour"] = _hk_struct_test.NET_DVR_SCHEDTIME_byStopHour_set
    __swig_getmethods__["byStopHour"] = _hk_struct_test.NET_DVR_SCHEDTIME_byStopHour_get
    if _newclass:
        byStopHour = _swig_property(_hk_struct_test.NET_DVR_SCHEDTIME_byStopHour_get, _hk_struct_test.NET_DVR_SCHEDTIME_byStopHour_set)
    __swig_setmethods__["byStopMin"] = _hk_struct_test.NET_DVR_SCHEDTIME_byStopMin_set
    __swig_getmethods__["byStopMin"] = _hk_struct_test.NET_DVR_SCHEDTIME_byStopMin_get
    if _newclass:
        byStopMin = _swig_property(_hk_struct_test.NET_DVR_SCHEDTIME_byStopMin_get, _hk_struct_test.NET_DVR_SCHEDTIME_byStopMin_set)

    def __init__(self):
        """__init__(NET_DVR_SCHEDTIME self) -> NET_DVR_SCHEDTIME"""
        this = _hk_struct_test.new_NET_DVR_SCHEDTIME()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_SCHEDTIME
    __del__ = lambda self: None
NET_DVR_SCHEDTIME_swigregister = _hk_struct_test.NET_DVR_SCHEDTIME_swigregister
NET_DVR_SCHEDTIME_swigregister(NET_DVR_SCHEDTIME)

NOACTION = _hk_struct_test.NOACTION
WARNONMONITOR = _hk_struct_test.WARNONMONITOR
WARNONAUDIOOUT = _hk_struct_test.WARNONAUDIOOUT
UPTOCENTER = _hk_struct_test.UPTOCENTER
TRIGGERALARMOUT = _hk_struct_test.TRIGGERALARMOUT
TRIGGERCATPIC = _hk_struct_test.TRIGGERCATPIC
SEND_PIC_FTP = _hk_struct_test.SEND_PIC_FTP
class NET_DVR_STRUCTHEAD(_object):
    """Proxy of C++ tagNET_DVR_STRUCTHEAD class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_STRUCTHEAD, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_STRUCTHEAD, name)
    __repr__ = _swig_repr
    __swig_setmethods__["wLength"] = _hk_struct_test.NET_DVR_STRUCTHEAD_wLength_set
    __swig_getmethods__["wLength"] = _hk_struct_test.NET_DVR_STRUCTHEAD_wLength_get
    if _newclass:
        wLength = _swig_property(_hk_struct_test.NET_DVR_STRUCTHEAD_wLength_get, _hk_struct_test.NET_DVR_STRUCTHEAD_wLength_set)
    __swig_setmethods__["byVersion"] = _hk_struct_test.NET_DVR_STRUCTHEAD_byVersion_set
    __swig_getmethods__["byVersion"] = _hk_struct_test.NET_DVR_STRUCTHEAD_byVersion_get
    if _newclass:
        byVersion = _swig_property(_hk_struct_test.NET_DVR_STRUCTHEAD_byVersion_get, _hk_struct_test.NET_DVR_STRUCTHEAD_byVersion_set)
    __swig_setmethods__["byRes"] = _hk_struct_test.NET_DVR_STRUCTHEAD_byRes_set
    __swig_getmethods__["byRes"] = _hk_struct_test.NET_DVR_STRUCTHEAD_byRes_get
    if _newclass:
        byRes = _swig_property(_hk_struct_test.NET_DVR_STRUCTHEAD_byRes_get, _hk_struct_test.NET_DVR_STRUCTHEAD_byRes_set)

    def __init__(self):
        """__init__(tagNET_DVR_STRUCTHEAD self) -> NET_DVR_STRUCTHEAD"""
        this = _hk_struct_test.new_NET_DVR_STRUCTHEAD()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_STRUCTHEAD
    __del__ = lambda self: None
NET_DVR_STRUCTHEAD_swigregister = _hk_struct_test.NET_DVR_STRUCTHEAD_swigregister
NET_DVR_STRUCTHEAD_swigregister(NET_DVR_STRUCTHEAD)

class NET_DVR_HANDLEEXCEPTION_V41(_object):
    """Proxy of C++ tagNET_DVR_HANDLEEXCEPTION_V41 class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_HANDLEEXCEPTION_V41, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_HANDLEEXCEPTION_V41, name)
    __repr__ = _swig_repr
    __swig_setmethods__["dwHandleType"] = _hk_struct_test.NET_DVR_HANDLEEXCEPTION_V41_dwHandleType_set
    __swig_getmethods__["dwHandleType"] = _hk_struct_test.NET_DVR_HANDLEEXCEPTION_V41_dwHandleType_get
    if _newclass:
        dwHandleType = _swig_property(_hk_struct_test.NET_DVR_HANDLEEXCEPTION_V41_dwHandleType_get, _hk_struct_test.NET_DVR_HANDLEEXCEPTION_V41_dwHandleType_set)
    __swig_setmethods__["dwMaxRelAlarmOutChanNum"] = _hk_struct_test.NET_DVR_HANDLEEXCEPTION_V41_dwMaxRelAlarmOutChanNum_set
    __swig_getmethods__["dwMaxRelAlarmOutChanNum"] = _hk_struct_test.NET_DVR_HANDLEEXCEPTION_V41_dwMaxRelAlarmOutChanNum_get
    if _newclass:
        dwMaxRelAlarmOutChanNum = _swig_property(_hk_struct_test.NET_DVR_HANDLEEXCEPTION_V41_dwMaxRelAlarmOutChanNum_get, _hk_struct_test.NET_DVR_HANDLEEXCEPTION_V41_dwMaxRelAlarmOutChanNum_set)
    __swig_setmethods__["dwRelAlarmOut"] = _hk_struct_test.NET_DVR_HANDLEEXCEPTION_V41_dwRelAlarmOut_set
    __swig_getmethods__["dwRelAlarmOut"] = _hk_struct_test.NET_DVR_HANDLEEXCEPTION_V41_dwRelAlarmOut_get
    if _newclass:
        dwRelAlarmOut = _swig_property(_hk_struct_test.NET_DVR_HANDLEEXCEPTION_V41_dwRelAlarmOut_get, _hk_struct_test.NET_DVR_HANDLEEXCEPTION_V41_dwRelAlarmOut_set)
    __swig_setmethods__["byRes"] = _hk_struct_test.NET_DVR_HANDLEEXCEPTION_V41_byRes_set
    __swig_getmethods__["byRes"] = _hk_struct_test.NET_DVR_HANDLEEXCEPTION_V41_byRes_get
    if _newclass:
        byRes = _swig_property(_hk_struct_test.NET_DVR_HANDLEEXCEPTION_V41_byRes_get, _hk_struct_test.NET_DVR_HANDLEEXCEPTION_V41_byRes_set)

    def __init__(self):
        """__init__(tagNET_DVR_HANDLEEXCEPTION_V41 self) -> NET_DVR_HANDLEEXCEPTION_V41"""
        this = _hk_struct_test.new_NET_DVR_HANDLEEXCEPTION_V41()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_HANDLEEXCEPTION_V41
    __del__ = lambda self: None
NET_DVR_HANDLEEXCEPTION_V41_swigregister = _hk_struct_test.NET_DVR_HANDLEEXCEPTION_V41_swigregister
NET_DVR_HANDLEEXCEPTION_V41_swigregister(NET_DVR_HANDLEEXCEPTION_V41)

class NET_DVR_HANDLEEXCEPTION_V40(_object):
    """Proxy of C++ tagNET_DVR_HANDLEEXCEPTION_V40 class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_HANDLEEXCEPTION_V40, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_HANDLEEXCEPTION_V40, name)
    __repr__ = _swig_repr
    __swig_setmethods__["dwHandleType"] = _hk_struct_test.NET_DVR_HANDLEEXCEPTION_V40_dwHandleType_set
    __swig_getmethods__["dwHandleType"] = _hk_struct_test.NET_DVR_HANDLEEXCEPTION_V40_dwHandleType_get
    if _newclass:
        dwHandleType = _swig_property(_hk_struct_test.NET_DVR_HANDLEEXCEPTION_V40_dwHandleType_get, _hk_struct_test.NET_DVR_HANDLEEXCEPTION_V40_dwHandleType_set)
    __swig_setmethods__["dwMaxRelAlarmOutChanNum"] = _hk_struct_test.NET_DVR_HANDLEEXCEPTION_V40_dwMaxRelAlarmOutChanNum_set
    __swig_getmethods__["dwMaxRelAlarmOutChanNum"] = _hk_struct_test.NET_DVR_HANDLEEXCEPTION_V40_dwMaxRelAlarmOutChanNum_get
    if _newclass:
        dwMaxRelAlarmOutChanNum = _swig_property(_hk_struct_test.NET_DVR_HANDLEEXCEPTION_V40_dwMaxRelAlarmOutChanNum_get, _hk_struct_test.NET_DVR_HANDLEEXCEPTION_V40_dwMaxRelAlarmOutChanNum_set)
    __swig_setmethods__["dwRelAlarmOutChanNum"] = _hk_struct_test.NET_DVR_HANDLEEXCEPTION_V40_dwRelAlarmOutChanNum_set
    __swig_getmethods__["dwRelAlarmOutChanNum"] = _hk_struct_test.NET_DVR_HANDLEEXCEPTION_V40_dwRelAlarmOutChanNum_get
    if _newclass:
        dwRelAlarmOutChanNum = _swig_property(_hk_struct_test.NET_DVR_HANDLEEXCEPTION_V40_dwRelAlarmOutChanNum_get, _hk_struct_test.NET_DVR_HANDLEEXCEPTION_V40_dwRelAlarmOutChanNum_set)
    __swig_setmethods__["dwRelAlarmOut"] = _hk_struct_test.NET_DVR_HANDLEEXCEPTION_V40_dwRelAlarmOut_set
    __swig_getmethods__["dwRelAlarmOut"] = _hk_struct_test.NET_DVR_HANDLEEXCEPTION_V40_dwRelAlarmOut_get
    if _newclass:
        dwRelAlarmOut = _swig_property(_hk_struct_test.NET_DVR_HANDLEEXCEPTION_V40_dwRelAlarmOut_get, _hk_struct_test.NET_DVR_HANDLEEXCEPTION_V40_dwRelAlarmOut_set)
    __swig_setmethods__["byWhiteLightDurationTime"] = _hk_struct_test.NET_DVR_HANDLEEXCEPTION_V40_byWhiteLightDurationTime_set
    __swig_getmethods__["byWhiteLightDurationTime"] = _hk_struct_test.NET_DVR_HANDLEEXCEPTION_V40_byWhiteLightDurationTime_get
    if _newclass:
        byWhiteLightDurationTime = _swig_property(_hk_struct_test.NET_DVR_HANDLEEXCEPTION_V40_byWhiteLightDurationTime_get, _hk_struct_test.NET_DVR_HANDLEEXCEPTION_V40_byWhiteLightDurationTime_set)
    __swig_setmethods__["byBrightness"] = _hk_struct_test.NET_DVR_HANDLEEXCEPTION_V40_byBrightness_set
    __swig_getmethods__["byBrightness"] = _hk_struct_test.NET_DVR_HANDLEEXCEPTION_V40_byBrightness_get
    if _newclass:
        byBrightness = _swig_property(_hk_struct_test.NET_DVR_HANDLEEXCEPTION_V40_byBrightness_get, _hk_struct_test.NET_DVR_HANDLEEXCEPTION_V40_byBrightness_set)
    __swig_setmethods__["byAudioType"] = _hk_struct_test.NET_DVR_HANDLEEXCEPTION_V40_byAudioType_set
    __swig_getmethods__["byAudioType"] = _hk_struct_test.NET_DVR_HANDLEEXCEPTION_V40_byAudioType_get
    if _newclass:
        byAudioType = _swig_property(_hk_struct_test.NET_DVR_HANDLEEXCEPTION_V40_byAudioType_get, _hk_struct_test.NET_DVR_HANDLEEXCEPTION_V40_byAudioType_set)
    __swig_setmethods__["byTimes"] = _hk_struct_test.NET_DVR_HANDLEEXCEPTION_V40_byTimes_set
    __swig_getmethods__["byTimes"] = _hk_struct_test.NET_DVR_HANDLEEXCEPTION_V40_byTimes_get
    if _newclass:
        byTimes = _swig_property(_hk_struct_test.NET_DVR_HANDLEEXCEPTION_V40_byTimes_get, _hk_struct_test.NET_DVR_HANDLEEXCEPTION_V40_byTimes_set)
    __swig_setmethods__["byRes"] = _hk_struct_test.NET_DVR_HANDLEEXCEPTION_V40_byRes_set
    __swig_getmethods__["byRes"] = _hk_struct_test.NET_DVR_HANDLEEXCEPTION_V40_byRes_get
    if _newclass:
        byRes = _swig_property(_hk_struct_test.NET_DVR_HANDLEEXCEPTION_V40_byRes_get, _hk_struct_test.NET_DVR_HANDLEEXCEPTION_V40_byRes_set)

    def __init__(self):
        """__init__(tagNET_DVR_HANDLEEXCEPTION_V40 self) -> NET_DVR_HANDLEEXCEPTION_V40"""
        this = _hk_struct_test.new_NET_DVR_HANDLEEXCEPTION_V40()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_HANDLEEXCEPTION_V40
    __del__ = lambda self: None
NET_DVR_HANDLEEXCEPTION_V40_swigregister = _hk_struct_test.NET_DVR_HANDLEEXCEPTION_V40_swigregister
NET_DVR_HANDLEEXCEPTION_V40_swigregister(NET_DVR_HANDLEEXCEPTION_V40)

class NET_DVR_HANDLEEXCEPTION_V30(_object):
    """Proxy of C++ NET_DVR_HANDLEEXCEPTION_V30 class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_HANDLEEXCEPTION_V30, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_HANDLEEXCEPTION_V30, name)
    __repr__ = _swig_repr
    __swig_setmethods__["dwHandleType"] = _hk_struct_test.NET_DVR_HANDLEEXCEPTION_V30_dwHandleType_set
    __swig_getmethods__["dwHandleType"] = _hk_struct_test.NET_DVR_HANDLEEXCEPTION_V30_dwHandleType_get
    if _newclass:
        dwHandleType = _swig_property(_hk_struct_test.NET_DVR_HANDLEEXCEPTION_V30_dwHandleType_get, _hk_struct_test.NET_DVR_HANDLEEXCEPTION_V30_dwHandleType_set)
    __swig_setmethods__["byRelAlarmOut"] = _hk_struct_test.NET_DVR_HANDLEEXCEPTION_V30_byRelAlarmOut_set
    __swig_getmethods__["byRelAlarmOut"] = _hk_struct_test.NET_DVR_HANDLEEXCEPTION_V30_byRelAlarmOut_get
    if _newclass:
        byRelAlarmOut = _swig_property(_hk_struct_test.NET_DVR_HANDLEEXCEPTION_V30_byRelAlarmOut_get, _hk_struct_test.NET_DVR_HANDLEEXCEPTION_V30_byRelAlarmOut_set)

    def __init__(self):
        """__init__(NET_DVR_HANDLEEXCEPTION_V30 self) -> NET_DVR_HANDLEEXCEPTION_V30"""
        this = _hk_struct_test.new_NET_DVR_HANDLEEXCEPTION_V30()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_HANDLEEXCEPTION_V30
    __del__ = lambda self: None
NET_DVR_HANDLEEXCEPTION_V30_swigregister = _hk_struct_test.NET_DVR_HANDLEEXCEPTION_V30_swigregister
NET_DVR_HANDLEEXCEPTION_V30_swigregister(NET_DVR_HANDLEEXCEPTION_V30)

class NET_DVR_HANDLEEXCEPTION(_object):
    """Proxy of C++ NET_DVR_HANDLEEXCEPTION class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_HANDLEEXCEPTION, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_HANDLEEXCEPTION, name)
    __repr__ = _swig_repr
    __swig_setmethods__["dwHandleType"] = _hk_struct_test.NET_DVR_HANDLEEXCEPTION_dwHandleType_set
    __swig_getmethods__["dwHandleType"] = _hk_struct_test.NET_DVR_HANDLEEXCEPTION_dwHandleType_get
    if _newclass:
        dwHandleType = _swig_property(_hk_struct_test.NET_DVR_HANDLEEXCEPTION_dwHandleType_get, _hk_struct_test.NET_DVR_HANDLEEXCEPTION_dwHandleType_set)
    __swig_setmethods__["byRelAlarmOut"] = _hk_struct_test.NET_DVR_HANDLEEXCEPTION_byRelAlarmOut_set
    __swig_getmethods__["byRelAlarmOut"] = _hk_struct_test.NET_DVR_HANDLEEXCEPTION_byRelAlarmOut_get
    if _newclass:
        byRelAlarmOut = _swig_property(_hk_struct_test.NET_DVR_HANDLEEXCEPTION_byRelAlarmOut_get, _hk_struct_test.NET_DVR_HANDLEEXCEPTION_byRelAlarmOut_set)

    def __init__(self):
        """__init__(NET_DVR_HANDLEEXCEPTION self) -> NET_DVR_HANDLEEXCEPTION"""
        this = _hk_struct_test.new_NET_DVR_HANDLEEXCEPTION()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_HANDLEEXCEPTION
    __del__ = lambda self: None
NET_DVR_HANDLEEXCEPTION_swigregister = _hk_struct_test.NET_DVR_HANDLEEXCEPTION_swigregister
NET_DVR_HANDLEEXCEPTION_swigregister(NET_DVR_HANDLEEXCEPTION)

class NET_DVR_DEVICECFG(_object):
    """Proxy of C++ NET_DVR_DEVICECFG class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_DEVICECFG, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_DEVICECFG, name)
    __repr__ = _swig_repr
    __swig_setmethods__["dwSize"] = _hk_struct_test.NET_DVR_DEVICECFG_dwSize_set
    __swig_getmethods__["dwSize"] = _hk_struct_test.NET_DVR_DEVICECFG_dwSize_get
    if _newclass:
        dwSize = _swig_property(_hk_struct_test.NET_DVR_DEVICECFG_dwSize_get, _hk_struct_test.NET_DVR_DEVICECFG_dwSize_set)
    __swig_setmethods__["sDVRName"] = _hk_struct_test.NET_DVR_DEVICECFG_sDVRName_set
    __swig_getmethods__["sDVRName"] = _hk_struct_test.NET_DVR_DEVICECFG_sDVRName_get
    if _newclass:
        sDVRName = _swig_property(_hk_struct_test.NET_DVR_DEVICECFG_sDVRName_get, _hk_struct_test.NET_DVR_DEVICECFG_sDVRName_set)
    __swig_setmethods__["dwDVRID"] = _hk_struct_test.NET_DVR_DEVICECFG_dwDVRID_set
    __swig_getmethods__["dwDVRID"] = _hk_struct_test.NET_DVR_DEVICECFG_dwDVRID_get
    if _newclass:
        dwDVRID = _swig_property(_hk_struct_test.NET_DVR_DEVICECFG_dwDVRID_get, _hk_struct_test.NET_DVR_DEVICECFG_dwDVRID_set)
    __swig_setmethods__["dwRecycleRecord"] = _hk_struct_test.NET_DVR_DEVICECFG_dwRecycleRecord_set
    __swig_getmethods__["dwRecycleRecord"] = _hk_struct_test.NET_DVR_DEVICECFG_dwRecycleRecord_get
    if _newclass:
        dwRecycleRecord = _swig_property(_hk_struct_test.NET_DVR_DEVICECFG_dwRecycleRecord_get, _hk_struct_test.NET_DVR_DEVICECFG_dwRecycleRecord_set)
    __swig_setmethods__["sSerialNumber"] = _hk_struct_test.NET_DVR_DEVICECFG_sSerialNumber_set
    __swig_getmethods__["sSerialNumber"] = _hk_struct_test.NET_DVR_DEVICECFG_sSerialNumber_get
    if _newclass:
        sSerialNumber = _swig_property(_hk_struct_test.NET_DVR_DEVICECFG_sSerialNumber_get, _hk_struct_test.NET_DVR_DEVICECFG_sSerialNumber_set)
    __swig_setmethods__["dwSoftwareVersion"] = _hk_struct_test.NET_DVR_DEVICECFG_dwSoftwareVersion_set
    __swig_getmethods__["dwSoftwareVersion"] = _hk_struct_test.NET_DVR_DEVICECFG_dwSoftwareVersion_get
    if _newclass:
        dwSoftwareVersion = _swig_property(_hk_struct_test.NET_DVR_DEVICECFG_dwSoftwareVersion_get, _hk_struct_test.NET_DVR_DEVICECFG_dwSoftwareVersion_set)
    __swig_setmethods__["dwSoftwareBuildDate"] = _hk_struct_test.NET_DVR_DEVICECFG_dwSoftwareBuildDate_set
    __swig_getmethods__["dwSoftwareBuildDate"] = _hk_struct_test.NET_DVR_DEVICECFG_dwSoftwareBuildDate_get
    if _newclass:
        dwSoftwareBuildDate = _swig_property(_hk_struct_test.NET_DVR_DEVICECFG_dwSoftwareBuildDate_get, _hk_struct_test.NET_DVR_DEVICECFG_dwSoftwareBuildDate_set)
    __swig_setmethods__["dwDSPSoftwareVersion"] = _hk_struct_test.NET_DVR_DEVICECFG_dwDSPSoftwareVersion_set
    __swig_getmethods__["dwDSPSoftwareVersion"] = _hk_struct_test.NET_DVR_DEVICECFG_dwDSPSoftwareVersion_get
    if _newclass:
        dwDSPSoftwareVersion = _swig_property(_hk_struct_test.NET_DVR_DEVICECFG_dwDSPSoftwareVersion_get, _hk_struct_test.NET_DVR_DEVICECFG_dwDSPSoftwareVersion_set)
    __swig_setmethods__["dwDSPSoftwareBuildDate"] = _hk_struct_test.NET_DVR_DEVICECFG_dwDSPSoftwareBuildDate_set
    __swig_getmethods__["dwDSPSoftwareBuildDate"] = _hk_struct_test.NET_DVR_DEVICECFG_dwDSPSoftwareBuildDate_get
    if _newclass:
        dwDSPSoftwareBuildDate = _swig_property(_hk_struct_test.NET_DVR_DEVICECFG_dwDSPSoftwareBuildDate_get, _hk_struct_test.NET_DVR_DEVICECFG_dwDSPSoftwareBuildDate_set)
    __swig_setmethods__["dwPanelVersion"] = _hk_struct_test.NET_DVR_DEVICECFG_dwPanelVersion_set
    __swig_getmethods__["dwPanelVersion"] = _hk_struct_test.NET_DVR_DEVICECFG_dwPanelVersion_get
    if _newclass:
        dwPanelVersion = _swig_property(_hk_struct_test.NET_DVR_DEVICECFG_dwPanelVersion_get, _hk_struct_test.NET_DVR_DEVICECFG_dwPanelVersion_set)
    __swig_setmethods__["dwHardwareVersion"] = _hk_struct_test.NET_DVR_DEVICECFG_dwHardwareVersion_set
    __swig_getmethods__["dwHardwareVersion"] = _hk_struct_test.NET_DVR_DEVICECFG_dwHardwareVersion_get
    if _newclass:
        dwHardwareVersion = _swig_property(_hk_struct_test.NET_DVR_DEVICECFG_dwHardwareVersion_get, _hk_struct_test.NET_DVR_DEVICECFG_dwHardwareVersion_set)
    __swig_setmethods__["byAlarmInPortNum"] = _hk_struct_test.NET_DVR_DEVICECFG_byAlarmInPortNum_set
    __swig_getmethods__["byAlarmInPortNum"] = _hk_struct_test.NET_DVR_DEVICECFG_byAlarmInPortNum_get
    if _newclass:
        byAlarmInPortNum = _swig_property(_hk_struct_test.NET_DVR_DEVICECFG_byAlarmInPortNum_get, _hk_struct_test.NET_DVR_DEVICECFG_byAlarmInPortNum_set)
    __swig_setmethods__["byAlarmOutPortNum"] = _hk_struct_test.NET_DVR_DEVICECFG_byAlarmOutPortNum_set
    __swig_getmethods__["byAlarmOutPortNum"] = _hk_struct_test.NET_DVR_DEVICECFG_byAlarmOutPortNum_get
    if _newclass:
        byAlarmOutPortNum = _swig_property(_hk_struct_test.NET_DVR_DEVICECFG_byAlarmOutPortNum_get, _hk_struct_test.NET_DVR_DEVICECFG_byAlarmOutPortNum_set)
    __swig_setmethods__["byRS232Num"] = _hk_struct_test.NET_DVR_DEVICECFG_byRS232Num_set
    __swig_getmethods__["byRS232Num"] = _hk_struct_test.NET_DVR_DEVICECFG_byRS232Num_get
    if _newclass:
        byRS232Num = _swig_property(_hk_struct_test.NET_DVR_DEVICECFG_byRS232Num_get, _hk_struct_test.NET_DVR_DEVICECFG_byRS232Num_set)
    __swig_setmethods__["byRS485Num"] = _hk_struct_test.NET_DVR_DEVICECFG_byRS485Num_set
    __swig_getmethods__["byRS485Num"] = _hk_struct_test.NET_DVR_DEVICECFG_byRS485Num_get
    if _newclass:
        byRS485Num = _swig_property(_hk_struct_test.NET_DVR_DEVICECFG_byRS485Num_get, _hk_struct_test.NET_DVR_DEVICECFG_byRS485Num_set)
    __swig_setmethods__["byNetworkPortNum"] = _hk_struct_test.NET_DVR_DEVICECFG_byNetworkPortNum_set
    __swig_getmethods__["byNetworkPortNum"] = _hk_struct_test.NET_DVR_DEVICECFG_byNetworkPortNum_get
    if _newclass:
        byNetworkPortNum = _swig_property(_hk_struct_test.NET_DVR_DEVICECFG_byNetworkPortNum_get, _hk_struct_test.NET_DVR_DEVICECFG_byNetworkPortNum_set)
    __swig_setmethods__["byDiskCtrlNum"] = _hk_struct_test.NET_DVR_DEVICECFG_byDiskCtrlNum_set
    __swig_getmethods__["byDiskCtrlNum"] = _hk_struct_test.NET_DVR_DEVICECFG_byDiskCtrlNum_get
    if _newclass:
        byDiskCtrlNum = _swig_property(_hk_struct_test.NET_DVR_DEVICECFG_byDiskCtrlNum_get, _hk_struct_test.NET_DVR_DEVICECFG_byDiskCtrlNum_set)
    __swig_setmethods__["byDiskNum"] = _hk_struct_test.NET_DVR_DEVICECFG_byDiskNum_set
    __swig_getmethods__["byDiskNum"] = _hk_struct_test.NET_DVR_DEVICECFG_byDiskNum_get
    if _newclass:
        byDiskNum = _swig_property(_hk_struct_test.NET_DVR_DEVICECFG_byDiskNum_get, _hk_struct_test.NET_DVR_DEVICECFG_byDiskNum_set)
    __swig_setmethods__["byDVRType"] = _hk_struct_test.NET_DVR_DEVICECFG_byDVRType_set
    __swig_getmethods__["byDVRType"] = _hk_struct_test.NET_DVR_DEVICECFG_byDVRType_get
    if _newclass:
        byDVRType = _swig_property(_hk_struct_test.NET_DVR_DEVICECFG_byDVRType_get, _hk_struct_test.NET_DVR_DEVICECFG_byDVRType_set)
    __swig_setmethods__["byChanNum"] = _hk_struct_test.NET_DVR_DEVICECFG_byChanNum_set
    __swig_getmethods__["byChanNum"] = _hk_struct_test.NET_DVR_DEVICECFG_byChanNum_get
    if _newclass:
        byChanNum = _swig_property(_hk_struct_test.NET_DVR_DEVICECFG_byChanNum_get, _hk_struct_test.NET_DVR_DEVICECFG_byChanNum_set)
    __swig_setmethods__["byStartChan"] = _hk_struct_test.NET_DVR_DEVICECFG_byStartChan_set
    __swig_getmethods__["byStartChan"] = _hk_struct_test.NET_DVR_DEVICECFG_byStartChan_get
    if _newclass:
        byStartChan = _swig_property(_hk_struct_test.NET_DVR_DEVICECFG_byStartChan_get, _hk_struct_test.NET_DVR_DEVICECFG_byStartChan_set)
    __swig_setmethods__["byDecordChans"] = _hk_struct_test.NET_DVR_DEVICECFG_byDecordChans_set
    __swig_getmethods__["byDecordChans"] = _hk_struct_test.NET_DVR_DEVICECFG_byDecordChans_get
    if _newclass:
        byDecordChans = _swig_property(_hk_struct_test.NET_DVR_DEVICECFG_byDecordChans_get, _hk_struct_test.NET_DVR_DEVICECFG_byDecordChans_set)
    __swig_setmethods__["byVGANum"] = _hk_struct_test.NET_DVR_DEVICECFG_byVGANum_set
    __swig_getmethods__["byVGANum"] = _hk_struct_test.NET_DVR_DEVICECFG_byVGANum_get
    if _newclass:
        byVGANum = _swig_property(_hk_struct_test.NET_DVR_DEVICECFG_byVGANum_get, _hk_struct_test.NET_DVR_DEVICECFG_byVGANum_set)
    __swig_setmethods__["byUSBNum"] = _hk_struct_test.NET_DVR_DEVICECFG_byUSBNum_set
    __swig_getmethods__["byUSBNum"] = _hk_struct_test.NET_DVR_DEVICECFG_byUSBNum_get
    if _newclass:
        byUSBNum = _swig_property(_hk_struct_test.NET_DVR_DEVICECFG_byUSBNum_get, _hk_struct_test.NET_DVR_DEVICECFG_byUSBNum_set)
    __swig_setmethods__["byAuxoutNum"] = _hk_struct_test.NET_DVR_DEVICECFG_byAuxoutNum_set
    __swig_getmethods__["byAuxoutNum"] = _hk_struct_test.NET_DVR_DEVICECFG_byAuxoutNum_get
    if _newclass:
        byAuxoutNum = _swig_property(_hk_struct_test.NET_DVR_DEVICECFG_byAuxoutNum_get, _hk_struct_test.NET_DVR_DEVICECFG_byAuxoutNum_set)
    __swig_setmethods__["byAudioNum"] = _hk_struct_test.NET_DVR_DEVICECFG_byAudioNum_set
    __swig_getmethods__["byAudioNum"] = _hk_struct_test.NET_DVR_DEVICECFG_byAudioNum_get
    if _newclass:
        byAudioNum = _swig_property(_hk_struct_test.NET_DVR_DEVICECFG_byAudioNum_get, _hk_struct_test.NET_DVR_DEVICECFG_byAudioNum_set)
    __swig_setmethods__["byIPChanNum"] = _hk_struct_test.NET_DVR_DEVICECFG_byIPChanNum_set
    __swig_getmethods__["byIPChanNum"] = _hk_struct_test.NET_DVR_DEVICECFG_byIPChanNum_get
    if _newclass:
        byIPChanNum = _swig_property(_hk_struct_test.NET_DVR_DEVICECFG_byIPChanNum_get, _hk_struct_test.NET_DVR_DEVICECFG_byIPChanNum_set)

    def __init__(self):
        """__init__(NET_DVR_DEVICECFG self) -> NET_DVR_DEVICECFG"""
        this = _hk_struct_test.new_NET_DVR_DEVICECFG()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_DEVICECFG
    __del__ = lambda self: None
NET_DVR_DEVICECFG_swigregister = _hk_struct_test.NET_DVR_DEVICECFG_swigregister
NET_DVR_DEVICECFG_swigregister(NET_DVR_DEVICECFG)

class NET_DVR_IPADDR(_object):
    """Proxy of C++ NET_DVR_IPADDR class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_IPADDR, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_IPADDR, name)
    __repr__ = _swig_repr
    __swig_setmethods__["sIpV4"] = _hk_struct_test.NET_DVR_IPADDR_sIpV4_set
    __swig_getmethods__["sIpV4"] = _hk_struct_test.NET_DVR_IPADDR_sIpV4_get
    if _newclass:
        sIpV4 = _swig_property(_hk_struct_test.NET_DVR_IPADDR_sIpV4_get, _hk_struct_test.NET_DVR_IPADDR_sIpV4_set)
    __swig_setmethods__["byIPv6"] = _hk_struct_test.NET_DVR_IPADDR_byIPv6_set
    __swig_getmethods__["byIPv6"] = _hk_struct_test.NET_DVR_IPADDR_byIPv6_get
    if _newclass:
        byIPv6 = _swig_property(_hk_struct_test.NET_DVR_IPADDR_byIPv6_get, _hk_struct_test.NET_DVR_IPADDR_byIPv6_set)

    def __init__(self):
        """__init__(NET_DVR_IPADDR self) -> NET_DVR_IPADDR"""
        this = _hk_struct_test.new_NET_DVR_IPADDR()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_IPADDR
    __del__ = lambda self: None
NET_DVR_IPADDR_swigregister = _hk_struct_test.NET_DVR_IPADDR_swigregister
NET_DVR_IPADDR_swigregister(NET_DVR_IPADDR)

class NET_DVR_ADDRESS(_object):
    """Proxy of C++ tagNET_DVR_ADDRESS class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_ADDRESS, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_ADDRESS, name)
    __repr__ = _swig_repr
    __swig_setmethods__["struIP"] = _hk_struct_test.NET_DVR_ADDRESS_struIP_set
    __swig_getmethods__["struIP"] = _hk_struct_test.NET_DVR_ADDRESS_struIP_get
    if _newclass:
        struIP = _swig_property(_hk_struct_test.NET_DVR_ADDRESS_struIP_get, _hk_struct_test.NET_DVR_ADDRESS_struIP_set)
    __swig_setmethods__["wPort"] = _hk_struct_test.NET_DVR_ADDRESS_wPort_set
    __swig_getmethods__["wPort"] = _hk_struct_test.NET_DVR_ADDRESS_wPort_get
    if _newclass:
        wPort = _swig_property(_hk_struct_test.NET_DVR_ADDRESS_wPort_get, _hk_struct_test.NET_DVR_ADDRESS_wPort_set)
    __swig_setmethods__["byRes"] = _hk_struct_test.NET_DVR_ADDRESS_byRes_set
    __swig_getmethods__["byRes"] = _hk_struct_test.NET_DVR_ADDRESS_byRes_get
    if _newclass:
        byRes = _swig_property(_hk_struct_test.NET_DVR_ADDRESS_byRes_get, _hk_struct_test.NET_DVR_ADDRESS_byRes_set)

    def __init__(self):
        """__init__(tagNET_DVR_ADDRESS self) -> NET_DVR_ADDRESS"""
        this = _hk_struct_test.new_NET_DVR_ADDRESS()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_ADDRESS
    __del__ = lambda self: None
NET_DVR_ADDRESS_swigregister = _hk_struct_test.NET_DVR_ADDRESS_swigregister
NET_DVR_ADDRESS_swigregister(NET_DVR_ADDRESS)

class NET_DVR_ETHERNET_V30(_object):
    """Proxy of C++ NET_DVR_ETHERNET_V30 class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_ETHERNET_V30, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_ETHERNET_V30, name)
    __repr__ = _swig_repr
    __swig_setmethods__["struDVRIP"] = _hk_struct_test.NET_DVR_ETHERNET_V30_struDVRIP_set
    __swig_getmethods__["struDVRIP"] = _hk_struct_test.NET_DVR_ETHERNET_V30_struDVRIP_get
    if _newclass:
        struDVRIP = _swig_property(_hk_struct_test.NET_DVR_ETHERNET_V30_struDVRIP_get, _hk_struct_test.NET_DVR_ETHERNET_V30_struDVRIP_set)
    __swig_setmethods__["struDVRIPMask"] = _hk_struct_test.NET_DVR_ETHERNET_V30_struDVRIPMask_set
    __swig_getmethods__["struDVRIPMask"] = _hk_struct_test.NET_DVR_ETHERNET_V30_struDVRIPMask_get
    if _newclass:
        struDVRIPMask = _swig_property(_hk_struct_test.NET_DVR_ETHERNET_V30_struDVRIPMask_get, _hk_struct_test.NET_DVR_ETHERNET_V30_struDVRIPMask_set)
    __swig_setmethods__["dwNetInterface"] = _hk_struct_test.NET_DVR_ETHERNET_V30_dwNetInterface_set
    __swig_getmethods__["dwNetInterface"] = _hk_struct_test.NET_DVR_ETHERNET_V30_dwNetInterface_get
    if _newclass:
        dwNetInterface = _swig_property(_hk_struct_test.NET_DVR_ETHERNET_V30_dwNetInterface_get, _hk_struct_test.NET_DVR_ETHERNET_V30_dwNetInterface_set)
    __swig_setmethods__["wDVRPort"] = _hk_struct_test.NET_DVR_ETHERNET_V30_wDVRPort_set
    __swig_getmethods__["wDVRPort"] = _hk_struct_test.NET_DVR_ETHERNET_V30_wDVRPort_get
    if _newclass:
        wDVRPort = _swig_property(_hk_struct_test.NET_DVR_ETHERNET_V30_wDVRPort_get, _hk_struct_test.NET_DVR_ETHERNET_V30_wDVRPort_set)
    __swig_setmethods__["wMTU"] = _hk_struct_test.NET_DVR_ETHERNET_V30_wMTU_set
    __swig_getmethods__["wMTU"] = _hk_struct_test.NET_DVR_ETHERNET_V30_wMTU_get
    if _newclass:
        wMTU = _swig_property(_hk_struct_test.NET_DVR_ETHERNET_V30_wMTU_get, _hk_struct_test.NET_DVR_ETHERNET_V30_wMTU_set)
    __swig_setmethods__["byMACAddr"] = _hk_struct_test.NET_DVR_ETHERNET_V30_byMACAddr_set
    __swig_getmethods__["byMACAddr"] = _hk_struct_test.NET_DVR_ETHERNET_V30_byMACAddr_get
    if _newclass:
        byMACAddr = _swig_property(_hk_struct_test.NET_DVR_ETHERNET_V30_byMACAddr_get, _hk_struct_test.NET_DVR_ETHERNET_V30_byMACAddr_set)
    __swig_setmethods__["byEthernetPortNo"] = _hk_struct_test.NET_DVR_ETHERNET_V30_byEthernetPortNo_set
    __swig_getmethods__["byEthernetPortNo"] = _hk_struct_test.NET_DVR_ETHERNET_V30_byEthernetPortNo_get
    if _newclass:
        byEthernetPortNo = _swig_property(_hk_struct_test.NET_DVR_ETHERNET_V30_byEthernetPortNo_get, _hk_struct_test.NET_DVR_ETHERNET_V30_byEthernetPortNo_set)
    __swig_setmethods__["byRes"] = _hk_struct_test.NET_DVR_ETHERNET_V30_byRes_set
    __swig_getmethods__["byRes"] = _hk_struct_test.NET_DVR_ETHERNET_V30_byRes_get
    if _newclass:
        byRes = _swig_property(_hk_struct_test.NET_DVR_ETHERNET_V30_byRes_get, _hk_struct_test.NET_DVR_ETHERNET_V30_byRes_set)

    def __init__(self):
        """__init__(NET_DVR_ETHERNET_V30 self) -> NET_DVR_ETHERNET_V30"""
        this = _hk_struct_test.new_NET_DVR_ETHERNET_V30()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_ETHERNET_V30
    __del__ = lambda self: None
NET_DVR_ETHERNET_V30_swigregister = _hk_struct_test.NET_DVR_ETHERNET_V30_swigregister
NET_DVR_ETHERNET_V30_swigregister(NET_DVR_ETHERNET_V30)

class NET_DVR_ETHERNET(_object):
    """Proxy of C++ NET_DVR_ETHERNET class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_ETHERNET, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_ETHERNET, name)
    __repr__ = _swig_repr
    __swig_setmethods__["sDVRIP"] = _hk_struct_test.NET_DVR_ETHERNET_sDVRIP_set
    __swig_getmethods__["sDVRIP"] = _hk_struct_test.NET_DVR_ETHERNET_sDVRIP_get
    if _newclass:
        sDVRIP = _swig_property(_hk_struct_test.NET_DVR_ETHERNET_sDVRIP_get, _hk_struct_test.NET_DVR_ETHERNET_sDVRIP_set)
    __swig_setmethods__["sDVRIPMask"] = _hk_struct_test.NET_DVR_ETHERNET_sDVRIPMask_set
    __swig_getmethods__["sDVRIPMask"] = _hk_struct_test.NET_DVR_ETHERNET_sDVRIPMask_get
    if _newclass:
        sDVRIPMask = _swig_property(_hk_struct_test.NET_DVR_ETHERNET_sDVRIPMask_get, _hk_struct_test.NET_DVR_ETHERNET_sDVRIPMask_set)
    __swig_setmethods__["dwNetInterface"] = _hk_struct_test.NET_DVR_ETHERNET_dwNetInterface_set
    __swig_getmethods__["dwNetInterface"] = _hk_struct_test.NET_DVR_ETHERNET_dwNetInterface_get
    if _newclass:
        dwNetInterface = _swig_property(_hk_struct_test.NET_DVR_ETHERNET_dwNetInterface_get, _hk_struct_test.NET_DVR_ETHERNET_dwNetInterface_set)
    __swig_setmethods__["wDVRPort"] = _hk_struct_test.NET_DVR_ETHERNET_wDVRPort_set
    __swig_getmethods__["wDVRPort"] = _hk_struct_test.NET_DVR_ETHERNET_wDVRPort_get
    if _newclass:
        wDVRPort = _swig_property(_hk_struct_test.NET_DVR_ETHERNET_wDVRPort_get, _hk_struct_test.NET_DVR_ETHERNET_wDVRPort_set)
    __swig_setmethods__["byMACAddr"] = _hk_struct_test.NET_DVR_ETHERNET_byMACAddr_set
    __swig_getmethods__["byMACAddr"] = _hk_struct_test.NET_DVR_ETHERNET_byMACAddr_get
    if _newclass:
        byMACAddr = _swig_property(_hk_struct_test.NET_DVR_ETHERNET_byMACAddr_get, _hk_struct_test.NET_DVR_ETHERNET_byMACAddr_set)

    def __init__(self):
        """__init__(NET_DVR_ETHERNET self) -> NET_DVR_ETHERNET"""
        this = _hk_struct_test.new_NET_DVR_ETHERNET()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_ETHERNET
    __del__ = lambda self: None
NET_DVR_ETHERNET_swigregister = _hk_struct_test.NET_DVR_ETHERNET_swigregister
NET_DVR_ETHERNET_swigregister(NET_DVR_ETHERNET)

class NET_DVR_PPPOECFG(_object):
    """Proxy of C++ NET_DVR_PPPOECFG class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_PPPOECFG, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_PPPOECFG, name)
    __repr__ = _swig_repr
    __swig_setmethods__["dwPPPOE"] = _hk_struct_test.NET_DVR_PPPOECFG_dwPPPOE_set
    __swig_getmethods__["dwPPPOE"] = _hk_struct_test.NET_DVR_PPPOECFG_dwPPPOE_get
    if _newclass:
        dwPPPOE = _swig_property(_hk_struct_test.NET_DVR_PPPOECFG_dwPPPOE_get, _hk_struct_test.NET_DVR_PPPOECFG_dwPPPOE_set)
    __swig_setmethods__["sPPPoEUser"] = _hk_struct_test.NET_DVR_PPPOECFG_sPPPoEUser_set
    __swig_getmethods__["sPPPoEUser"] = _hk_struct_test.NET_DVR_PPPOECFG_sPPPoEUser_get
    if _newclass:
        sPPPoEUser = _swig_property(_hk_struct_test.NET_DVR_PPPOECFG_sPPPoEUser_get, _hk_struct_test.NET_DVR_PPPOECFG_sPPPoEUser_set)
    __swig_setmethods__["sPPPoEPassword"] = _hk_struct_test.NET_DVR_PPPOECFG_sPPPoEPassword_set
    __swig_getmethods__["sPPPoEPassword"] = _hk_struct_test.NET_DVR_PPPOECFG_sPPPoEPassword_get
    if _newclass:
        sPPPoEPassword = _swig_property(_hk_struct_test.NET_DVR_PPPOECFG_sPPPoEPassword_get, _hk_struct_test.NET_DVR_PPPOECFG_sPPPoEPassword_set)
    __swig_setmethods__["struPPPoEIP"] = _hk_struct_test.NET_DVR_PPPOECFG_struPPPoEIP_set
    __swig_getmethods__["struPPPoEIP"] = _hk_struct_test.NET_DVR_PPPOECFG_struPPPoEIP_get
    if _newclass:
        struPPPoEIP = _swig_property(_hk_struct_test.NET_DVR_PPPOECFG_struPPPoEIP_get, _hk_struct_test.NET_DVR_PPPOECFG_struPPPoEIP_set)

    def __init__(self):
        """__init__(NET_DVR_PPPOECFG self) -> NET_DVR_PPPOECFG"""
        this = _hk_struct_test.new_NET_DVR_PPPOECFG()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_PPPOECFG
    __del__ = lambda self: None
NET_DVR_PPPOECFG_swigregister = _hk_struct_test.NET_DVR_PPPOECFG_swigregister
NET_DVR_PPPOECFG_swigregister(NET_DVR_PPPOECFG)

class NET_DVR_NETCFG_V30(_object):
    """Proxy of C++ NET_DVR_NETCFG_V30 class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_NETCFG_V30, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_NETCFG_V30, name)
    __repr__ = _swig_repr
    __swig_setmethods__["dwSize"] = _hk_struct_test.NET_DVR_NETCFG_V30_dwSize_set
    __swig_getmethods__["dwSize"] = _hk_struct_test.NET_DVR_NETCFG_V30_dwSize_get
    if _newclass:
        dwSize = _swig_property(_hk_struct_test.NET_DVR_NETCFG_V30_dwSize_get, _hk_struct_test.NET_DVR_NETCFG_V30_dwSize_set)
    __swig_setmethods__["struEtherNet"] = _hk_struct_test.NET_DVR_NETCFG_V30_struEtherNet_set
    __swig_getmethods__["struEtherNet"] = _hk_struct_test.NET_DVR_NETCFG_V30_struEtherNet_get
    if _newclass:
        struEtherNet = _swig_property(_hk_struct_test.NET_DVR_NETCFG_V30_struEtherNet_get, _hk_struct_test.NET_DVR_NETCFG_V30_struEtherNet_set)
    __swig_setmethods__["struRes1"] = _hk_struct_test.NET_DVR_NETCFG_V30_struRes1_set
    __swig_getmethods__["struRes1"] = _hk_struct_test.NET_DVR_NETCFG_V30_struRes1_get
    if _newclass:
        struRes1 = _swig_property(_hk_struct_test.NET_DVR_NETCFG_V30_struRes1_get, _hk_struct_test.NET_DVR_NETCFG_V30_struRes1_set)
    __swig_setmethods__["struAlarmHostIpAddr"] = _hk_struct_test.NET_DVR_NETCFG_V30_struAlarmHostIpAddr_set
    __swig_getmethods__["struAlarmHostIpAddr"] = _hk_struct_test.NET_DVR_NETCFG_V30_struAlarmHostIpAddr_get
    if _newclass:
        struAlarmHostIpAddr = _swig_property(_hk_struct_test.NET_DVR_NETCFG_V30_struAlarmHostIpAddr_get, _hk_struct_test.NET_DVR_NETCFG_V30_struAlarmHostIpAddr_set)
    __swig_setmethods__["byRes2"] = _hk_struct_test.NET_DVR_NETCFG_V30_byRes2_set
    __swig_getmethods__["byRes2"] = _hk_struct_test.NET_DVR_NETCFG_V30_byRes2_get
    if _newclass:
        byRes2 = _swig_property(_hk_struct_test.NET_DVR_NETCFG_V30_byRes2_get, _hk_struct_test.NET_DVR_NETCFG_V30_byRes2_set)
    __swig_setmethods__["wAlarmHostIpPort"] = _hk_struct_test.NET_DVR_NETCFG_V30_wAlarmHostIpPort_set
    __swig_getmethods__["wAlarmHostIpPort"] = _hk_struct_test.NET_DVR_NETCFG_V30_wAlarmHostIpPort_get
    if _newclass:
        wAlarmHostIpPort = _swig_property(_hk_struct_test.NET_DVR_NETCFG_V30_wAlarmHostIpPort_get, _hk_struct_test.NET_DVR_NETCFG_V30_wAlarmHostIpPort_set)
    __swig_setmethods__["byUseDhcp"] = _hk_struct_test.NET_DVR_NETCFG_V30_byUseDhcp_set
    __swig_getmethods__["byUseDhcp"] = _hk_struct_test.NET_DVR_NETCFG_V30_byUseDhcp_get
    if _newclass:
        byUseDhcp = _swig_property(_hk_struct_test.NET_DVR_NETCFG_V30_byUseDhcp_get, _hk_struct_test.NET_DVR_NETCFG_V30_byUseDhcp_set)
    __swig_setmethods__["byIPv6Mode"] = _hk_struct_test.NET_DVR_NETCFG_V30_byIPv6Mode_set
    __swig_getmethods__["byIPv6Mode"] = _hk_struct_test.NET_DVR_NETCFG_V30_byIPv6Mode_get
    if _newclass:
        byIPv6Mode = _swig_property(_hk_struct_test.NET_DVR_NETCFG_V30_byIPv6Mode_get, _hk_struct_test.NET_DVR_NETCFG_V30_byIPv6Mode_set)
    __swig_setmethods__["struDnsServer1IpAddr"] = _hk_struct_test.NET_DVR_NETCFG_V30_struDnsServer1IpAddr_set
    __swig_getmethods__["struDnsServer1IpAddr"] = _hk_struct_test.NET_DVR_NETCFG_V30_struDnsServer1IpAddr_get
    if _newclass:
        struDnsServer1IpAddr = _swig_property(_hk_struct_test.NET_DVR_NETCFG_V30_struDnsServer1IpAddr_get, _hk_struct_test.NET_DVR_NETCFG_V30_struDnsServer1IpAddr_set)
    __swig_setmethods__["struDnsServer2IpAddr"] = _hk_struct_test.NET_DVR_NETCFG_V30_struDnsServer2IpAddr_set
    __swig_getmethods__["struDnsServer2IpAddr"] = _hk_struct_test.NET_DVR_NETCFG_V30_struDnsServer2IpAddr_get
    if _newclass:
        struDnsServer2IpAddr = _swig_property(_hk_struct_test.NET_DVR_NETCFG_V30_struDnsServer2IpAddr_get, _hk_struct_test.NET_DVR_NETCFG_V30_struDnsServer2IpAddr_set)
    __swig_setmethods__["byIpResolver"] = _hk_struct_test.NET_DVR_NETCFG_V30_byIpResolver_set
    __swig_getmethods__["byIpResolver"] = _hk_struct_test.NET_DVR_NETCFG_V30_byIpResolver_get
    if _newclass:
        byIpResolver = _swig_property(_hk_struct_test.NET_DVR_NETCFG_V30_byIpResolver_get, _hk_struct_test.NET_DVR_NETCFG_V30_byIpResolver_set)
    __swig_setmethods__["wIpResolverPort"] = _hk_struct_test.NET_DVR_NETCFG_V30_wIpResolverPort_set
    __swig_getmethods__["wIpResolverPort"] = _hk_struct_test.NET_DVR_NETCFG_V30_wIpResolverPort_get
    if _newclass:
        wIpResolverPort = _swig_property(_hk_struct_test.NET_DVR_NETCFG_V30_wIpResolverPort_get, _hk_struct_test.NET_DVR_NETCFG_V30_wIpResolverPort_set)
    __swig_setmethods__["wHttpPortNo"] = _hk_struct_test.NET_DVR_NETCFG_V30_wHttpPortNo_set
    __swig_getmethods__["wHttpPortNo"] = _hk_struct_test.NET_DVR_NETCFG_V30_wHttpPortNo_get
    if _newclass:
        wHttpPortNo = _swig_property(_hk_struct_test.NET_DVR_NETCFG_V30_wHttpPortNo_get, _hk_struct_test.NET_DVR_NETCFG_V30_wHttpPortNo_set)
    __swig_setmethods__["struMulticastIpAddr"] = _hk_struct_test.NET_DVR_NETCFG_V30_struMulticastIpAddr_set
    __swig_getmethods__["struMulticastIpAddr"] = _hk_struct_test.NET_DVR_NETCFG_V30_struMulticastIpAddr_get
    if _newclass:
        struMulticastIpAddr = _swig_property(_hk_struct_test.NET_DVR_NETCFG_V30_struMulticastIpAddr_get, _hk_struct_test.NET_DVR_NETCFG_V30_struMulticastIpAddr_set)
    __swig_setmethods__["struGatewayIpAddr"] = _hk_struct_test.NET_DVR_NETCFG_V30_struGatewayIpAddr_set
    __swig_getmethods__["struGatewayIpAddr"] = _hk_struct_test.NET_DVR_NETCFG_V30_struGatewayIpAddr_get
    if _newclass:
        struGatewayIpAddr = _swig_property(_hk_struct_test.NET_DVR_NETCFG_V30_struGatewayIpAddr_get, _hk_struct_test.NET_DVR_NETCFG_V30_struGatewayIpAddr_set)
    __swig_setmethods__["struPPPoE"] = _hk_struct_test.NET_DVR_NETCFG_V30_struPPPoE_set
    __swig_getmethods__["struPPPoE"] = _hk_struct_test.NET_DVR_NETCFG_V30_struPPPoE_get
    if _newclass:
        struPPPoE = _swig_property(_hk_struct_test.NET_DVR_NETCFG_V30_struPPPoE_get, _hk_struct_test.NET_DVR_NETCFG_V30_struPPPoE_set)
    __swig_setmethods__["byEnablePrivateMulticastDiscovery"] = _hk_struct_test.NET_DVR_NETCFG_V30_byEnablePrivateMulticastDiscovery_set
    __swig_getmethods__["byEnablePrivateMulticastDiscovery"] = _hk_struct_test.NET_DVR_NETCFG_V30_byEnablePrivateMulticastDiscovery_get
    if _newclass:
        byEnablePrivateMulticastDiscovery = _swig_property(_hk_struct_test.NET_DVR_NETCFG_V30_byEnablePrivateMulticastDiscovery_get, _hk_struct_test.NET_DVR_NETCFG_V30_byEnablePrivateMulticastDiscovery_set)
    __swig_setmethods__["byEnableOnvifMulticastDiscovery"] = _hk_struct_test.NET_DVR_NETCFG_V30_byEnableOnvifMulticastDiscovery_set
    __swig_getmethods__["byEnableOnvifMulticastDiscovery"] = _hk_struct_test.NET_DVR_NETCFG_V30_byEnableOnvifMulticastDiscovery_get
    if _newclass:
        byEnableOnvifMulticastDiscovery = _swig_property(_hk_struct_test.NET_DVR_NETCFG_V30_byEnableOnvifMulticastDiscovery_get, _hk_struct_test.NET_DVR_NETCFG_V30_byEnableOnvifMulticastDiscovery_set)
    __swig_setmethods__["byEnableDNS"] = _hk_struct_test.NET_DVR_NETCFG_V30_byEnableDNS_set
    __swig_getmethods__["byEnableDNS"] = _hk_struct_test.NET_DVR_NETCFG_V30_byEnableDNS_get
    if _newclass:
        byEnableDNS = _swig_property(_hk_struct_test.NET_DVR_NETCFG_V30_byEnableDNS_get, _hk_struct_test.NET_DVR_NETCFG_V30_byEnableDNS_set)
    __swig_setmethods__["byRes"] = _hk_struct_test.NET_DVR_NETCFG_V30_byRes_set
    __swig_getmethods__["byRes"] = _hk_struct_test.NET_DVR_NETCFG_V30_byRes_get
    if _newclass:
        byRes = _swig_property(_hk_struct_test.NET_DVR_NETCFG_V30_byRes_get, _hk_struct_test.NET_DVR_NETCFG_V30_byRes_set)

    def __init__(self):
        """__init__(NET_DVR_NETCFG_V30 self) -> NET_DVR_NETCFG_V30"""
        this = _hk_struct_test.new_NET_DVR_NETCFG_V30()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_NETCFG_V30
    __del__ = lambda self: None
NET_DVR_NETCFG_V30_swigregister = _hk_struct_test.NET_DVR_NETCFG_V30_swigregister
NET_DVR_NETCFG_V30_swigregister(NET_DVR_NETCFG_V30)

class NET_DVR_ETHERNET_MULTI(_object):
    """Proxy of C++ NET_DVR_ETHERNET_MULTI class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_ETHERNET_MULTI, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_ETHERNET_MULTI, name)
    __repr__ = _swig_repr
    __swig_setmethods__["struDVRIP"] = _hk_struct_test.NET_DVR_ETHERNET_MULTI_struDVRIP_set
    __swig_getmethods__["struDVRIP"] = _hk_struct_test.NET_DVR_ETHERNET_MULTI_struDVRIP_get
    if _newclass:
        struDVRIP = _swig_property(_hk_struct_test.NET_DVR_ETHERNET_MULTI_struDVRIP_get, _hk_struct_test.NET_DVR_ETHERNET_MULTI_struDVRIP_set)
    __swig_setmethods__["struDVRIPMask"] = _hk_struct_test.NET_DVR_ETHERNET_MULTI_struDVRIPMask_set
    __swig_getmethods__["struDVRIPMask"] = _hk_struct_test.NET_DVR_ETHERNET_MULTI_struDVRIPMask_get
    if _newclass:
        struDVRIPMask = _swig_property(_hk_struct_test.NET_DVR_ETHERNET_MULTI_struDVRIPMask_get, _hk_struct_test.NET_DVR_ETHERNET_MULTI_struDVRIPMask_set)
    __swig_setmethods__["dwNetInterface"] = _hk_struct_test.NET_DVR_ETHERNET_MULTI_dwNetInterface_set
    __swig_getmethods__["dwNetInterface"] = _hk_struct_test.NET_DVR_ETHERNET_MULTI_dwNetInterface_get
    if _newclass:
        dwNetInterface = _swig_property(_hk_struct_test.NET_DVR_ETHERNET_MULTI_dwNetInterface_get, _hk_struct_test.NET_DVR_ETHERNET_MULTI_dwNetInterface_set)
    __swig_setmethods__["byCardType"] = _hk_struct_test.NET_DVR_ETHERNET_MULTI_byCardType_set
    __swig_getmethods__["byCardType"] = _hk_struct_test.NET_DVR_ETHERNET_MULTI_byCardType_get
    if _newclass:
        byCardType = _swig_property(_hk_struct_test.NET_DVR_ETHERNET_MULTI_byCardType_get, _hk_struct_test.NET_DVR_ETHERNET_MULTI_byCardType_set)
    __swig_setmethods__["byEnableDNS"] = _hk_struct_test.NET_DVR_ETHERNET_MULTI_byEnableDNS_set
    __swig_getmethods__["byEnableDNS"] = _hk_struct_test.NET_DVR_ETHERNET_MULTI_byEnableDNS_get
    if _newclass:
        byEnableDNS = _swig_property(_hk_struct_test.NET_DVR_ETHERNET_MULTI_byEnableDNS_get, _hk_struct_test.NET_DVR_ETHERNET_MULTI_byEnableDNS_set)
    __swig_setmethods__["wMTU"] = _hk_struct_test.NET_DVR_ETHERNET_MULTI_wMTU_set
    __swig_getmethods__["wMTU"] = _hk_struct_test.NET_DVR_ETHERNET_MULTI_wMTU_get
    if _newclass:
        wMTU = _swig_property(_hk_struct_test.NET_DVR_ETHERNET_MULTI_wMTU_get, _hk_struct_test.NET_DVR_ETHERNET_MULTI_wMTU_set)
    __swig_setmethods__["byMACAddr"] = _hk_struct_test.NET_DVR_ETHERNET_MULTI_byMACAddr_set
    __swig_getmethods__["byMACAddr"] = _hk_struct_test.NET_DVR_ETHERNET_MULTI_byMACAddr_get
    if _newclass:
        byMACAddr = _swig_property(_hk_struct_test.NET_DVR_ETHERNET_MULTI_byMACAddr_get, _hk_struct_test.NET_DVR_ETHERNET_MULTI_byMACAddr_set)
    __swig_setmethods__["byEthernetPortNo"] = _hk_struct_test.NET_DVR_ETHERNET_MULTI_byEthernetPortNo_set
    __swig_getmethods__["byEthernetPortNo"] = _hk_struct_test.NET_DVR_ETHERNET_MULTI_byEthernetPortNo_get
    if _newclass:
        byEthernetPortNo = _swig_property(_hk_struct_test.NET_DVR_ETHERNET_MULTI_byEthernetPortNo_get, _hk_struct_test.NET_DVR_ETHERNET_MULTI_byEthernetPortNo_set)
    __swig_setmethods__["bySilkScreen"] = _hk_struct_test.NET_DVR_ETHERNET_MULTI_bySilkScreen_set
    __swig_getmethods__["bySilkScreen"] = _hk_struct_test.NET_DVR_ETHERNET_MULTI_bySilkScreen_get
    if _newclass:
        bySilkScreen = _swig_property(_hk_struct_test.NET_DVR_ETHERNET_MULTI_bySilkScreen_get, _hk_struct_test.NET_DVR_ETHERNET_MULTI_bySilkScreen_set)
    __swig_setmethods__["byUseDhcp"] = _hk_struct_test.NET_DVR_ETHERNET_MULTI_byUseDhcp_set
    __swig_getmethods__["byUseDhcp"] = _hk_struct_test.NET_DVR_ETHERNET_MULTI_byUseDhcp_get
    if _newclass:
        byUseDhcp = _swig_property(_hk_struct_test.NET_DVR_ETHERNET_MULTI_byUseDhcp_get, _hk_struct_test.NET_DVR_ETHERNET_MULTI_byUseDhcp_set)
    __swig_setmethods__["byRes3"] = _hk_struct_test.NET_DVR_ETHERNET_MULTI_byRes3_set
    __swig_getmethods__["byRes3"] = _hk_struct_test.NET_DVR_ETHERNET_MULTI_byRes3_get
    if _newclass:
        byRes3 = _swig_property(_hk_struct_test.NET_DVR_ETHERNET_MULTI_byRes3_get, _hk_struct_test.NET_DVR_ETHERNET_MULTI_byRes3_set)
    __swig_setmethods__["struGatewayIpAddr"] = _hk_struct_test.NET_DVR_ETHERNET_MULTI_struGatewayIpAddr_set
    __swig_getmethods__["struGatewayIpAddr"] = _hk_struct_test.NET_DVR_ETHERNET_MULTI_struGatewayIpAddr_get
    if _newclass:
        struGatewayIpAddr = _swig_property(_hk_struct_test.NET_DVR_ETHERNET_MULTI_struGatewayIpAddr_get, _hk_struct_test.NET_DVR_ETHERNET_MULTI_struGatewayIpAddr_set)
    __swig_setmethods__["struDnsServer1IpAddr"] = _hk_struct_test.NET_DVR_ETHERNET_MULTI_struDnsServer1IpAddr_set
    __swig_getmethods__["struDnsServer1IpAddr"] = _hk_struct_test.NET_DVR_ETHERNET_MULTI_struDnsServer1IpAddr_get
    if _newclass:
        struDnsServer1IpAddr = _swig_property(_hk_struct_test.NET_DVR_ETHERNET_MULTI_struDnsServer1IpAddr_get, _hk_struct_test.NET_DVR_ETHERNET_MULTI_struDnsServer1IpAddr_set)
    __swig_setmethods__["struDnsServer2IpAddr"] = _hk_struct_test.NET_DVR_ETHERNET_MULTI_struDnsServer2IpAddr_set
    __swig_getmethods__["struDnsServer2IpAddr"] = _hk_struct_test.NET_DVR_ETHERNET_MULTI_struDnsServer2IpAddr_get
    if _newclass:
        struDnsServer2IpAddr = _swig_property(_hk_struct_test.NET_DVR_ETHERNET_MULTI_struDnsServer2IpAddr_get, _hk_struct_test.NET_DVR_ETHERNET_MULTI_struDnsServer2IpAddr_set)

    def __init__(self):
        """__init__(NET_DVR_ETHERNET_MULTI self) -> NET_DVR_ETHERNET_MULTI"""
        this = _hk_struct_test.new_NET_DVR_ETHERNET_MULTI()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_ETHERNET_MULTI
    __del__ = lambda self: None
NET_DVR_ETHERNET_MULTI_swigregister = _hk_struct_test.NET_DVR_ETHERNET_MULTI_swigregister
NET_DVR_ETHERNET_MULTI_swigregister(NET_DVR_ETHERNET_MULTI)

class NET_DVR_NETCFG_MULTI(_object):
    """Proxy of C++ NET_DVR_NETCFG_MULTI class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_NETCFG_MULTI, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_NETCFG_MULTI, name)
    __repr__ = _swig_repr
    __swig_setmethods__["dwSize"] = _hk_struct_test.NET_DVR_NETCFG_MULTI_dwSize_set
    __swig_getmethods__["dwSize"] = _hk_struct_test.NET_DVR_NETCFG_MULTI_dwSize_get
    if _newclass:
        dwSize = _swig_property(_hk_struct_test.NET_DVR_NETCFG_MULTI_dwSize_get, _hk_struct_test.NET_DVR_NETCFG_MULTI_dwSize_set)
    __swig_setmethods__["byDefaultRoute"] = _hk_struct_test.NET_DVR_NETCFG_MULTI_byDefaultRoute_set
    __swig_getmethods__["byDefaultRoute"] = _hk_struct_test.NET_DVR_NETCFG_MULTI_byDefaultRoute_get
    if _newclass:
        byDefaultRoute = _swig_property(_hk_struct_test.NET_DVR_NETCFG_MULTI_byDefaultRoute_get, _hk_struct_test.NET_DVR_NETCFG_MULTI_byDefaultRoute_set)
    __swig_setmethods__["byNetworkCardNum"] = _hk_struct_test.NET_DVR_NETCFG_MULTI_byNetworkCardNum_set
    __swig_getmethods__["byNetworkCardNum"] = _hk_struct_test.NET_DVR_NETCFG_MULTI_byNetworkCardNum_get
    if _newclass:
        byNetworkCardNum = _swig_property(_hk_struct_test.NET_DVR_NETCFG_MULTI_byNetworkCardNum_get, _hk_struct_test.NET_DVR_NETCFG_MULTI_byNetworkCardNum_set)
    __swig_setmethods__["byWorkMode"] = _hk_struct_test.NET_DVR_NETCFG_MULTI_byWorkMode_set
    __swig_getmethods__["byWorkMode"] = _hk_struct_test.NET_DVR_NETCFG_MULTI_byWorkMode_get
    if _newclass:
        byWorkMode = _swig_property(_hk_struct_test.NET_DVR_NETCFG_MULTI_byWorkMode_get, _hk_struct_test.NET_DVR_NETCFG_MULTI_byWorkMode_set)
    __swig_setmethods__["byRes"] = _hk_struct_test.NET_DVR_NETCFG_MULTI_byRes_set
    __swig_getmethods__["byRes"] = _hk_struct_test.NET_DVR_NETCFG_MULTI_byRes_get
    if _newclass:
        byRes = _swig_property(_hk_struct_test.NET_DVR_NETCFG_MULTI_byRes_get, _hk_struct_test.NET_DVR_NETCFG_MULTI_byRes_set)
    __swig_setmethods__["struEtherNet"] = _hk_struct_test.NET_DVR_NETCFG_MULTI_struEtherNet_set
    __swig_getmethods__["struEtherNet"] = _hk_struct_test.NET_DVR_NETCFG_MULTI_struEtherNet_get
    if _newclass:
        struEtherNet = _swig_property(_hk_struct_test.NET_DVR_NETCFG_MULTI_struEtherNet_get, _hk_struct_test.NET_DVR_NETCFG_MULTI_struEtherNet_set)
    __swig_setmethods__["struManageHost1IpAddr"] = _hk_struct_test.NET_DVR_NETCFG_MULTI_struManageHost1IpAddr_set
    __swig_getmethods__["struManageHost1IpAddr"] = _hk_struct_test.NET_DVR_NETCFG_MULTI_struManageHost1IpAddr_get
    if _newclass:
        struManageHost1IpAddr = _swig_property(_hk_struct_test.NET_DVR_NETCFG_MULTI_struManageHost1IpAddr_get, _hk_struct_test.NET_DVR_NETCFG_MULTI_struManageHost1IpAddr_set)
    __swig_setmethods__["struManageHost2IpAddr"] = _hk_struct_test.NET_DVR_NETCFG_MULTI_struManageHost2IpAddr_set
    __swig_getmethods__["struManageHost2IpAddr"] = _hk_struct_test.NET_DVR_NETCFG_MULTI_struManageHost2IpAddr_get
    if _newclass:
        struManageHost2IpAddr = _swig_property(_hk_struct_test.NET_DVR_NETCFG_MULTI_struManageHost2IpAddr_get, _hk_struct_test.NET_DVR_NETCFG_MULTI_struManageHost2IpAddr_set)
    __swig_setmethods__["struAlarmHostIpAddr"] = _hk_struct_test.NET_DVR_NETCFG_MULTI_struAlarmHostIpAddr_set
    __swig_getmethods__["struAlarmHostIpAddr"] = _hk_struct_test.NET_DVR_NETCFG_MULTI_struAlarmHostIpAddr_get
    if _newclass:
        struAlarmHostIpAddr = _swig_property(_hk_struct_test.NET_DVR_NETCFG_MULTI_struAlarmHostIpAddr_get, _hk_struct_test.NET_DVR_NETCFG_MULTI_struAlarmHostIpAddr_set)
    __swig_setmethods__["wManageHost1Port"] = _hk_struct_test.NET_DVR_NETCFG_MULTI_wManageHost1Port_set
    __swig_getmethods__["wManageHost1Port"] = _hk_struct_test.NET_DVR_NETCFG_MULTI_wManageHost1Port_get
    if _newclass:
        wManageHost1Port = _swig_property(_hk_struct_test.NET_DVR_NETCFG_MULTI_wManageHost1Port_get, _hk_struct_test.NET_DVR_NETCFG_MULTI_wManageHost1Port_set)
    __swig_setmethods__["wManageHost2Port"] = _hk_struct_test.NET_DVR_NETCFG_MULTI_wManageHost2Port_set
    __swig_getmethods__["wManageHost2Port"] = _hk_struct_test.NET_DVR_NETCFG_MULTI_wManageHost2Port_get
    if _newclass:
        wManageHost2Port = _swig_property(_hk_struct_test.NET_DVR_NETCFG_MULTI_wManageHost2Port_get, _hk_struct_test.NET_DVR_NETCFG_MULTI_wManageHost2Port_set)
    __swig_setmethods__["wAlarmHostIpPort"] = _hk_struct_test.NET_DVR_NETCFG_MULTI_wAlarmHostIpPort_set
    __swig_getmethods__["wAlarmHostIpPort"] = _hk_struct_test.NET_DVR_NETCFG_MULTI_wAlarmHostIpPort_get
    if _newclass:
        wAlarmHostIpPort = _swig_property(_hk_struct_test.NET_DVR_NETCFG_MULTI_wAlarmHostIpPort_get, _hk_struct_test.NET_DVR_NETCFG_MULTI_wAlarmHostIpPort_set)
    __swig_setmethods__["byIpResolver"] = _hk_struct_test.NET_DVR_NETCFG_MULTI_byIpResolver_set
    __swig_getmethods__["byIpResolver"] = _hk_struct_test.NET_DVR_NETCFG_MULTI_byIpResolver_get
    if _newclass:
        byIpResolver = _swig_property(_hk_struct_test.NET_DVR_NETCFG_MULTI_byIpResolver_get, _hk_struct_test.NET_DVR_NETCFG_MULTI_byIpResolver_set)
    __swig_setmethods__["wIpResolverPort"] = _hk_struct_test.NET_DVR_NETCFG_MULTI_wIpResolverPort_set
    __swig_getmethods__["wIpResolverPort"] = _hk_struct_test.NET_DVR_NETCFG_MULTI_wIpResolverPort_get
    if _newclass:
        wIpResolverPort = _swig_property(_hk_struct_test.NET_DVR_NETCFG_MULTI_wIpResolverPort_get, _hk_struct_test.NET_DVR_NETCFG_MULTI_wIpResolverPort_set)
    __swig_setmethods__["wDvrPort"] = _hk_struct_test.NET_DVR_NETCFG_MULTI_wDvrPort_set
    __swig_getmethods__["wDvrPort"] = _hk_struct_test.NET_DVR_NETCFG_MULTI_wDvrPort_get
    if _newclass:
        wDvrPort = _swig_property(_hk_struct_test.NET_DVR_NETCFG_MULTI_wDvrPort_get, _hk_struct_test.NET_DVR_NETCFG_MULTI_wDvrPort_set)
    __swig_setmethods__["wHttpPortNo"] = _hk_struct_test.NET_DVR_NETCFG_MULTI_wHttpPortNo_set
    __swig_getmethods__["wHttpPortNo"] = _hk_struct_test.NET_DVR_NETCFG_MULTI_wHttpPortNo_get
    if _newclass:
        wHttpPortNo = _swig_property(_hk_struct_test.NET_DVR_NETCFG_MULTI_wHttpPortNo_get, _hk_struct_test.NET_DVR_NETCFG_MULTI_wHttpPortNo_set)
    __swig_setmethods__["wDvrPort2"] = _hk_struct_test.NET_DVR_NETCFG_MULTI_wDvrPort2_set
    __swig_getmethods__["wDvrPort2"] = _hk_struct_test.NET_DVR_NETCFG_MULTI_wDvrPort2_get
    if _newclass:
        wDvrPort2 = _swig_property(_hk_struct_test.NET_DVR_NETCFG_MULTI_wDvrPort2_get, _hk_struct_test.NET_DVR_NETCFG_MULTI_wDvrPort2_set)
    __swig_setmethods__["byRes2"] = _hk_struct_test.NET_DVR_NETCFG_MULTI_byRes2_set
    __swig_getmethods__["byRes2"] = _hk_struct_test.NET_DVR_NETCFG_MULTI_byRes2_get
    if _newclass:
        byRes2 = _swig_property(_hk_struct_test.NET_DVR_NETCFG_MULTI_byRes2_get, _hk_struct_test.NET_DVR_NETCFG_MULTI_byRes2_set)
    __swig_setmethods__["struMulticastIpAddr"] = _hk_struct_test.NET_DVR_NETCFG_MULTI_struMulticastIpAddr_set
    __swig_getmethods__["struMulticastIpAddr"] = _hk_struct_test.NET_DVR_NETCFG_MULTI_struMulticastIpAddr_get
    if _newclass:
        struMulticastIpAddr = _swig_property(_hk_struct_test.NET_DVR_NETCFG_MULTI_struMulticastIpAddr_get, _hk_struct_test.NET_DVR_NETCFG_MULTI_struMulticastIpAddr_set)
    __swig_setmethods__["struPPPoE"] = _hk_struct_test.NET_DVR_NETCFG_MULTI_struPPPoE_set
    __swig_getmethods__["struPPPoE"] = _hk_struct_test.NET_DVR_NETCFG_MULTI_struPPPoE_get
    if _newclass:
        struPPPoE = _swig_property(_hk_struct_test.NET_DVR_NETCFG_MULTI_struPPPoE_get, _hk_struct_test.NET_DVR_NETCFG_MULTI_struPPPoE_set)
    __swig_setmethods__["byRes3"] = _hk_struct_test.NET_DVR_NETCFG_MULTI_byRes3_set
    __swig_getmethods__["byRes3"] = _hk_struct_test.NET_DVR_NETCFG_MULTI_byRes3_get
    if _newclass:
        byRes3 = _swig_property(_hk_struct_test.NET_DVR_NETCFG_MULTI_byRes3_get, _hk_struct_test.NET_DVR_NETCFG_MULTI_byRes3_set)

    def __init__(self):
        """__init__(NET_DVR_NETCFG_MULTI self) -> NET_DVR_NETCFG_MULTI"""
        this = _hk_struct_test.new_NET_DVR_NETCFG_MULTI()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_NETCFG_MULTI
    __del__ = lambda self: None
NET_DVR_NETCFG_MULTI_swigregister = _hk_struct_test.NET_DVR_NETCFG_MULTI_swigregister
NET_DVR_NETCFG_MULTI_swigregister(NET_DVR_NETCFG_MULTI)

class NET_DVR_NETCFG(_object):
    """Proxy of C++ NET_DVR_NETCFG class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_NETCFG, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_NETCFG, name)
    __repr__ = _swig_repr
    __swig_setmethods__["dwSize"] = _hk_struct_test.NET_DVR_NETCFG_dwSize_set
    __swig_getmethods__["dwSize"] = _hk_struct_test.NET_DVR_NETCFG_dwSize_get
    if _newclass:
        dwSize = _swig_property(_hk_struct_test.NET_DVR_NETCFG_dwSize_get, _hk_struct_test.NET_DVR_NETCFG_dwSize_set)
    __swig_setmethods__["struEtherNet"] = _hk_struct_test.NET_DVR_NETCFG_struEtherNet_set
    __swig_getmethods__["struEtherNet"] = _hk_struct_test.NET_DVR_NETCFG_struEtherNet_get
    if _newclass:
        struEtherNet = _swig_property(_hk_struct_test.NET_DVR_NETCFG_struEtherNet_get, _hk_struct_test.NET_DVR_NETCFG_struEtherNet_set)
    __swig_setmethods__["sManageHostIP"] = _hk_struct_test.NET_DVR_NETCFG_sManageHostIP_set
    __swig_getmethods__["sManageHostIP"] = _hk_struct_test.NET_DVR_NETCFG_sManageHostIP_get
    if _newclass:
        sManageHostIP = _swig_property(_hk_struct_test.NET_DVR_NETCFG_sManageHostIP_get, _hk_struct_test.NET_DVR_NETCFG_sManageHostIP_set)
    __swig_setmethods__["wManageHostPort"] = _hk_struct_test.NET_DVR_NETCFG_wManageHostPort_set
    __swig_getmethods__["wManageHostPort"] = _hk_struct_test.NET_DVR_NETCFG_wManageHostPort_get
    if _newclass:
        wManageHostPort = _swig_property(_hk_struct_test.NET_DVR_NETCFG_wManageHostPort_get, _hk_struct_test.NET_DVR_NETCFG_wManageHostPort_set)
    __swig_setmethods__["sIPServerIP"] = _hk_struct_test.NET_DVR_NETCFG_sIPServerIP_set
    __swig_getmethods__["sIPServerIP"] = _hk_struct_test.NET_DVR_NETCFG_sIPServerIP_get
    if _newclass:
        sIPServerIP = _swig_property(_hk_struct_test.NET_DVR_NETCFG_sIPServerIP_get, _hk_struct_test.NET_DVR_NETCFG_sIPServerIP_set)
    __swig_setmethods__["sMultiCastIP"] = _hk_struct_test.NET_DVR_NETCFG_sMultiCastIP_set
    __swig_getmethods__["sMultiCastIP"] = _hk_struct_test.NET_DVR_NETCFG_sMultiCastIP_get
    if _newclass:
        sMultiCastIP = _swig_property(_hk_struct_test.NET_DVR_NETCFG_sMultiCastIP_get, _hk_struct_test.NET_DVR_NETCFG_sMultiCastIP_set)
    __swig_setmethods__["sGatewayIP"] = _hk_struct_test.NET_DVR_NETCFG_sGatewayIP_set
    __swig_getmethods__["sGatewayIP"] = _hk_struct_test.NET_DVR_NETCFG_sGatewayIP_get
    if _newclass:
        sGatewayIP = _swig_property(_hk_struct_test.NET_DVR_NETCFG_sGatewayIP_get, _hk_struct_test.NET_DVR_NETCFG_sGatewayIP_set)
    __swig_setmethods__["sNFSIP"] = _hk_struct_test.NET_DVR_NETCFG_sNFSIP_set
    __swig_getmethods__["sNFSIP"] = _hk_struct_test.NET_DVR_NETCFG_sNFSIP_get
    if _newclass:
        sNFSIP = _swig_property(_hk_struct_test.NET_DVR_NETCFG_sNFSIP_get, _hk_struct_test.NET_DVR_NETCFG_sNFSIP_set)
    __swig_setmethods__["sNFSDirectory"] = _hk_struct_test.NET_DVR_NETCFG_sNFSDirectory_set
    __swig_getmethods__["sNFSDirectory"] = _hk_struct_test.NET_DVR_NETCFG_sNFSDirectory_get
    if _newclass:
        sNFSDirectory = _swig_property(_hk_struct_test.NET_DVR_NETCFG_sNFSDirectory_get, _hk_struct_test.NET_DVR_NETCFG_sNFSDirectory_set)
    __swig_setmethods__["dwPPPOE"] = _hk_struct_test.NET_DVR_NETCFG_dwPPPOE_set
    __swig_getmethods__["dwPPPOE"] = _hk_struct_test.NET_DVR_NETCFG_dwPPPOE_get
    if _newclass:
        dwPPPOE = _swig_property(_hk_struct_test.NET_DVR_NETCFG_dwPPPOE_get, _hk_struct_test.NET_DVR_NETCFG_dwPPPOE_set)
    __swig_setmethods__["sPPPoEUser"] = _hk_struct_test.NET_DVR_NETCFG_sPPPoEUser_set
    __swig_getmethods__["sPPPoEUser"] = _hk_struct_test.NET_DVR_NETCFG_sPPPoEUser_get
    if _newclass:
        sPPPoEUser = _swig_property(_hk_struct_test.NET_DVR_NETCFG_sPPPoEUser_get, _hk_struct_test.NET_DVR_NETCFG_sPPPoEUser_set)
    __swig_setmethods__["sPPPoEPassword"] = _hk_struct_test.NET_DVR_NETCFG_sPPPoEPassword_set
    __swig_getmethods__["sPPPoEPassword"] = _hk_struct_test.NET_DVR_NETCFG_sPPPoEPassword_get
    if _newclass:
        sPPPoEPassword = _swig_property(_hk_struct_test.NET_DVR_NETCFG_sPPPoEPassword_get, _hk_struct_test.NET_DVR_NETCFG_sPPPoEPassword_set)
    __swig_setmethods__["sPPPoEIP"] = _hk_struct_test.NET_DVR_NETCFG_sPPPoEIP_set
    __swig_getmethods__["sPPPoEIP"] = _hk_struct_test.NET_DVR_NETCFG_sPPPoEIP_get
    if _newclass:
        sPPPoEIP = _swig_property(_hk_struct_test.NET_DVR_NETCFG_sPPPoEIP_get, _hk_struct_test.NET_DVR_NETCFG_sPPPoEIP_set)
    __swig_setmethods__["wHttpPort"] = _hk_struct_test.NET_DVR_NETCFG_wHttpPort_set
    __swig_getmethods__["wHttpPort"] = _hk_struct_test.NET_DVR_NETCFG_wHttpPort_get
    if _newclass:
        wHttpPort = _swig_property(_hk_struct_test.NET_DVR_NETCFG_wHttpPort_get, _hk_struct_test.NET_DVR_NETCFG_wHttpPort_set)

    def __init__(self):
        """__init__(NET_DVR_NETCFG self) -> NET_DVR_NETCFG"""
        this = _hk_struct_test.new_NET_DVR_NETCFG()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_NETCFG
    __del__ = lambda self: None
NET_DVR_NETCFG_swigregister = _hk_struct_test.NET_DVR_NETCFG_swigregister
NET_DVR_NETCFG_swigregister(NET_DVR_NETCFG)

class NET_DVR_NETCFG_V50(_object):
    """Proxy of C++ tagNET_DVR_NETCFG_V50 class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_NETCFG_V50, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_NETCFG_V50, name)
    __repr__ = _swig_repr
    __swig_setmethods__["dwSize"] = _hk_struct_test.NET_DVR_NETCFG_V50_dwSize_set
    __swig_getmethods__["dwSize"] = _hk_struct_test.NET_DVR_NETCFG_V50_dwSize_get
    if _newclass:
        dwSize = _swig_property(_hk_struct_test.NET_DVR_NETCFG_V50_dwSize_get, _hk_struct_test.NET_DVR_NETCFG_V50_dwSize_set)
    __swig_setmethods__["struEtherNet"] = _hk_struct_test.NET_DVR_NETCFG_V50_struEtherNet_set
    __swig_getmethods__["struEtherNet"] = _hk_struct_test.NET_DVR_NETCFG_V50_struEtherNet_get
    if _newclass:
        struEtherNet = _swig_property(_hk_struct_test.NET_DVR_NETCFG_V50_struEtherNet_get, _hk_struct_test.NET_DVR_NETCFG_V50_struEtherNet_set)
    __swig_setmethods__["struRes1"] = _hk_struct_test.NET_DVR_NETCFG_V50_struRes1_set
    __swig_getmethods__["struRes1"] = _hk_struct_test.NET_DVR_NETCFG_V50_struRes1_get
    if _newclass:
        struRes1 = _swig_property(_hk_struct_test.NET_DVR_NETCFG_V50_struRes1_get, _hk_struct_test.NET_DVR_NETCFG_V50_struRes1_set)
    __swig_setmethods__["struAlarmHostIpAddr"] = _hk_struct_test.NET_DVR_NETCFG_V50_struAlarmHostIpAddr_set
    __swig_getmethods__["struAlarmHostIpAddr"] = _hk_struct_test.NET_DVR_NETCFG_V50_struAlarmHostIpAddr_get
    if _newclass:
        struAlarmHostIpAddr = _swig_property(_hk_struct_test.NET_DVR_NETCFG_V50_struAlarmHostIpAddr_get, _hk_struct_test.NET_DVR_NETCFG_V50_struAlarmHostIpAddr_set)
    __swig_setmethods__["byRes2"] = _hk_struct_test.NET_DVR_NETCFG_V50_byRes2_set
    __swig_getmethods__["byRes2"] = _hk_struct_test.NET_DVR_NETCFG_V50_byRes2_get
    if _newclass:
        byRes2 = _swig_property(_hk_struct_test.NET_DVR_NETCFG_V50_byRes2_get, _hk_struct_test.NET_DVR_NETCFG_V50_byRes2_set)
    __swig_setmethods__["wAlarmHostIpPort"] = _hk_struct_test.NET_DVR_NETCFG_V50_wAlarmHostIpPort_set
    __swig_getmethods__["wAlarmHostIpPort"] = _hk_struct_test.NET_DVR_NETCFG_V50_wAlarmHostIpPort_get
    if _newclass:
        wAlarmHostIpPort = _swig_property(_hk_struct_test.NET_DVR_NETCFG_V50_wAlarmHostIpPort_get, _hk_struct_test.NET_DVR_NETCFG_V50_wAlarmHostIpPort_set)
    __swig_setmethods__["byUseDhcp"] = _hk_struct_test.NET_DVR_NETCFG_V50_byUseDhcp_set
    __swig_getmethods__["byUseDhcp"] = _hk_struct_test.NET_DVR_NETCFG_V50_byUseDhcp_get
    if _newclass:
        byUseDhcp = _swig_property(_hk_struct_test.NET_DVR_NETCFG_V50_byUseDhcp_get, _hk_struct_test.NET_DVR_NETCFG_V50_byUseDhcp_set)
    __swig_setmethods__["byIPv6Mode"] = _hk_struct_test.NET_DVR_NETCFG_V50_byIPv6Mode_set
    __swig_getmethods__["byIPv6Mode"] = _hk_struct_test.NET_DVR_NETCFG_V50_byIPv6Mode_get
    if _newclass:
        byIPv6Mode = _swig_property(_hk_struct_test.NET_DVR_NETCFG_V50_byIPv6Mode_get, _hk_struct_test.NET_DVR_NETCFG_V50_byIPv6Mode_set)
    __swig_setmethods__["struDnsServer1IpAddr"] = _hk_struct_test.NET_DVR_NETCFG_V50_struDnsServer1IpAddr_set
    __swig_getmethods__["struDnsServer1IpAddr"] = _hk_struct_test.NET_DVR_NETCFG_V50_struDnsServer1IpAddr_get
    if _newclass:
        struDnsServer1IpAddr = _swig_property(_hk_struct_test.NET_DVR_NETCFG_V50_struDnsServer1IpAddr_get, _hk_struct_test.NET_DVR_NETCFG_V50_struDnsServer1IpAddr_set)
    __swig_setmethods__["struDnsServer2IpAddr"] = _hk_struct_test.NET_DVR_NETCFG_V50_struDnsServer2IpAddr_set
    __swig_getmethods__["struDnsServer2IpAddr"] = _hk_struct_test.NET_DVR_NETCFG_V50_struDnsServer2IpAddr_get
    if _newclass:
        struDnsServer2IpAddr = _swig_property(_hk_struct_test.NET_DVR_NETCFG_V50_struDnsServer2IpAddr_get, _hk_struct_test.NET_DVR_NETCFG_V50_struDnsServer2IpAddr_set)
    __swig_setmethods__["byIpResolver"] = _hk_struct_test.NET_DVR_NETCFG_V50_byIpResolver_set
    __swig_getmethods__["byIpResolver"] = _hk_struct_test.NET_DVR_NETCFG_V50_byIpResolver_get
    if _newclass:
        byIpResolver = _swig_property(_hk_struct_test.NET_DVR_NETCFG_V50_byIpResolver_get, _hk_struct_test.NET_DVR_NETCFG_V50_byIpResolver_set)
    __swig_setmethods__["wIpResolverPort"] = _hk_struct_test.NET_DVR_NETCFG_V50_wIpResolverPort_set
    __swig_getmethods__["wIpResolverPort"] = _hk_struct_test.NET_DVR_NETCFG_V50_wIpResolverPort_get
    if _newclass:
        wIpResolverPort = _swig_property(_hk_struct_test.NET_DVR_NETCFG_V50_wIpResolverPort_get, _hk_struct_test.NET_DVR_NETCFG_V50_wIpResolverPort_set)
    __swig_setmethods__["wHttpPortNo"] = _hk_struct_test.NET_DVR_NETCFG_V50_wHttpPortNo_set
    __swig_getmethods__["wHttpPortNo"] = _hk_struct_test.NET_DVR_NETCFG_V50_wHttpPortNo_get
    if _newclass:
        wHttpPortNo = _swig_property(_hk_struct_test.NET_DVR_NETCFG_V50_wHttpPortNo_get, _hk_struct_test.NET_DVR_NETCFG_V50_wHttpPortNo_set)
    __swig_setmethods__["struMulticastIpAddr"] = _hk_struct_test.NET_DVR_NETCFG_V50_struMulticastIpAddr_set
    __swig_getmethods__["struMulticastIpAddr"] = _hk_struct_test.NET_DVR_NETCFG_V50_struMulticastIpAddr_get
    if _newclass:
        struMulticastIpAddr = _swig_property(_hk_struct_test.NET_DVR_NETCFG_V50_struMulticastIpAddr_get, _hk_struct_test.NET_DVR_NETCFG_V50_struMulticastIpAddr_set)
    __swig_setmethods__["struGatewayIpAddr"] = _hk_struct_test.NET_DVR_NETCFG_V50_struGatewayIpAddr_set
    __swig_getmethods__["struGatewayIpAddr"] = _hk_struct_test.NET_DVR_NETCFG_V50_struGatewayIpAddr_get
    if _newclass:
        struGatewayIpAddr = _swig_property(_hk_struct_test.NET_DVR_NETCFG_V50_struGatewayIpAddr_get, _hk_struct_test.NET_DVR_NETCFG_V50_struGatewayIpAddr_set)
    __swig_setmethods__["struPPPoE"] = _hk_struct_test.NET_DVR_NETCFG_V50_struPPPoE_set
    __swig_getmethods__["struPPPoE"] = _hk_struct_test.NET_DVR_NETCFG_V50_struPPPoE_get
    if _newclass:
        struPPPoE = _swig_property(_hk_struct_test.NET_DVR_NETCFG_V50_struPPPoE_get, _hk_struct_test.NET_DVR_NETCFG_V50_struPPPoE_set)
    __swig_setmethods__["byEnablePrivateMulticastDiscovery"] = _hk_struct_test.NET_DVR_NETCFG_V50_byEnablePrivateMulticastDiscovery_set
    __swig_getmethods__["byEnablePrivateMulticastDiscovery"] = _hk_struct_test.NET_DVR_NETCFG_V50_byEnablePrivateMulticastDiscovery_get
    if _newclass:
        byEnablePrivateMulticastDiscovery = _swig_property(_hk_struct_test.NET_DVR_NETCFG_V50_byEnablePrivateMulticastDiscovery_get, _hk_struct_test.NET_DVR_NETCFG_V50_byEnablePrivateMulticastDiscovery_set)
    __swig_setmethods__["byEnableOnvifMulticastDiscovery"] = _hk_struct_test.NET_DVR_NETCFG_V50_byEnableOnvifMulticastDiscovery_set
    __swig_getmethods__["byEnableOnvifMulticastDiscovery"] = _hk_struct_test.NET_DVR_NETCFG_V50_byEnableOnvifMulticastDiscovery_get
    if _newclass:
        byEnableOnvifMulticastDiscovery = _swig_property(_hk_struct_test.NET_DVR_NETCFG_V50_byEnableOnvifMulticastDiscovery_get, _hk_struct_test.NET_DVR_NETCFG_V50_byEnableOnvifMulticastDiscovery_set)
    __swig_setmethods__["wAlarmHost2IpPort"] = _hk_struct_test.NET_DVR_NETCFG_V50_wAlarmHost2IpPort_set
    __swig_getmethods__["wAlarmHost2IpPort"] = _hk_struct_test.NET_DVR_NETCFG_V50_wAlarmHost2IpPort_get
    if _newclass:
        wAlarmHost2IpPort = _swig_property(_hk_struct_test.NET_DVR_NETCFG_V50_wAlarmHost2IpPort_get, _hk_struct_test.NET_DVR_NETCFG_V50_wAlarmHost2IpPort_set)
    __swig_setmethods__["struAlarmHost2IpAddr"] = _hk_struct_test.NET_DVR_NETCFG_V50_struAlarmHost2IpAddr_set
    __swig_getmethods__["struAlarmHost2IpAddr"] = _hk_struct_test.NET_DVR_NETCFG_V50_struAlarmHost2IpAddr_get
    if _newclass:
        struAlarmHost2IpAddr = _swig_property(_hk_struct_test.NET_DVR_NETCFG_V50_struAlarmHost2IpAddr_get, _hk_struct_test.NET_DVR_NETCFG_V50_struAlarmHost2IpAddr_set)
    __swig_setmethods__["byEnableDNS"] = _hk_struct_test.NET_DVR_NETCFG_V50_byEnableDNS_set
    __swig_getmethods__["byEnableDNS"] = _hk_struct_test.NET_DVR_NETCFG_V50_byEnableDNS_get
    if _newclass:
        byEnableDNS = _swig_property(_hk_struct_test.NET_DVR_NETCFG_V50_byEnableDNS_get, _hk_struct_test.NET_DVR_NETCFG_V50_byEnableDNS_set)
    __swig_setmethods__["byRes"] = _hk_struct_test.NET_DVR_NETCFG_V50_byRes_set
    __swig_getmethods__["byRes"] = _hk_struct_test.NET_DVR_NETCFG_V50_byRes_get
    if _newclass:
        byRes = _swig_property(_hk_struct_test.NET_DVR_NETCFG_V50_byRes_get, _hk_struct_test.NET_DVR_NETCFG_V50_byRes_set)

    def __init__(self):
        """__init__(tagNET_DVR_NETCFG_V50 self) -> NET_DVR_NETCFG_V50"""
        this = _hk_struct_test.new_NET_DVR_NETCFG_V50()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_NETCFG_V50
    __del__ = lambda self: None
NET_DVR_NETCFG_V50_swigregister = _hk_struct_test.NET_DVR_NETCFG_V50_swigregister
NET_DVR_NETCFG_V50_swigregister(NET_DVR_NETCFG_V50)

class NET_DVR_SIP_CFG(_object):
    """Proxy of C++ tagNET_DVR_SIP_CFG class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_SIP_CFG, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_SIP_CFG, name)
    __repr__ = _swig_repr
    __swig_setmethods__["dwSize"] = _hk_struct_test.NET_DVR_SIP_CFG_dwSize_set
    __swig_getmethods__["dwSize"] = _hk_struct_test.NET_DVR_SIP_CFG_dwSize_get
    if _newclass:
        dwSize = _swig_property(_hk_struct_test.NET_DVR_SIP_CFG_dwSize_get, _hk_struct_test.NET_DVR_SIP_CFG_dwSize_set)
    __swig_setmethods__["byEnableAutoLogin"] = _hk_struct_test.NET_DVR_SIP_CFG_byEnableAutoLogin_set
    __swig_getmethods__["byEnableAutoLogin"] = _hk_struct_test.NET_DVR_SIP_CFG_byEnableAutoLogin_get
    if _newclass:
        byEnableAutoLogin = _swig_property(_hk_struct_test.NET_DVR_SIP_CFG_byEnableAutoLogin_get, _hk_struct_test.NET_DVR_SIP_CFG_byEnableAutoLogin_set)
    __swig_setmethods__["byLoginStatus"] = _hk_struct_test.NET_DVR_SIP_CFG_byLoginStatus_set
    __swig_getmethods__["byLoginStatus"] = _hk_struct_test.NET_DVR_SIP_CFG_byLoginStatus_get
    if _newclass:
        byLoginStatus = _swig_property(_hk_struct_test.NET_DVR_SIP_CFG_byLoginStatus_get, _hk_struct_test.NET_DVR_SIP_CFG_byLoginStatus_set)
    __swig_setmethods__["byRes1"] = _hk_struct_test.NET_DVR_SIP_CFG_byRes1_set
    __swig_getmethods__["byRes1"] = _hk_struct_test.NET_DVR_SIP_CFG_byRes1_get
    if _newclass:
        byRes1 = _swig_property(_hk_struct_test.NET_DVR_SIP_CFG_byRes1_get, _hk_struct_test.NET_DVR_SIP_CFG_byRes1_set)
    __swig_setmethods__["stuServerIP"] = _hk_struct_test.NET_DVR_SIP_CFG_stuServerIP_set
    __swig_getmethods__["stuServerIP"] = _hk_struct_test.NET_DVR_SIP_CFG_stuServerIP_get
    if _newclass:
        stuServerIP = _swig_property(_hk_struct_test.NET_DVR_SIP_CFG_stuServerIP_get, _hk_struct_test.NET_DVR_SIP_CFG_stuServerIP_set)
    __swig_setmethods__["wServerPort"] = _hk_struct_test.NET_DVR_SIP_CFG_wServerPort_set
    __swig_getmethods__["wServerPort"] = _hk_struct_test.NET_DVR_SIP_CFG_wServerPort_get
    if _newclass:
        wServerPort = _swig_property(_hk_struct_test.NET_DVR_SIP_CFG_wServerPort_get, _hk_struct_test.NET_DVR_SIP_CFG_wServerPort_set)
    __swig_setmethods__["byRes2"] = _hk_struct_test.NET_DVR_SIP_CFG_byRes2_set
    __swig_getmethods__["byRes2"] = _hk_struct_test.NET_DVR_SIP_CFG_byRes2_get
    if _newclass:
        byRes2 = _swig_property(_hk_struct_test.NET_DVR_SIP_CFG_byRes2_get, _hk_struct_test.NET_DVR_SIP_CFG_byRes2_set)
    __swig_setmethods__["byUserName"] = _hk_struct_test.NET_DVR_SIP_CFG_byUserName_set
    __swig_getmethods__["byUserName"] = _hk_struct_test.NET_DVR_SIP_CFG_byUserName_get
    if _newclass:
        byUserName = _swig_property(_hk_struct_test.NET_DVR_SIP_CFG_byUserName_get, _hk_struct_test.NET_DVR_SIP_CFG_byUserName_set)
    __swig_setmethods__["byPassWord"] = _hk_struct_test.NET_DVR_SIP_CFG_byPassWord_set
    __swig_getmethods__["byPassWord"] = _hk_struct_test.NET_DVR_SIP_CFG_byPassWord_get
    if _newclass:
        byPassWord = _swig_property(_hk_struct_test.NET_DVR_SIP_CFG_byPassWord_get, _hk_struct_test.NET_DVR_SIP_CFG_byPassWord_set)
    __swig_setmethods__["byLocalNo"] = _hk_struct_test.NET_DVR_SIP_CFG_byLocalNo_set
    __swig_getmethods__["byLocalNo"] = _hk_struct_test.NET_DVR_SIP_CFG_byLocalNo_get
    if _newclass:
        byLocalNo = _swig_property(_hk_struct_test.NET_DVR_SIP_CFG_byLocalNo_get, _hk_struct_test.NET_DVR_SIP_CFG_byLocalNo_set)
    __swig_setmethods__["byDispalyName"] = _hk_struct_test.NET_DVR_SIP_CFG_byDispalyName_set
    __swig_getmethods__["byDispalyName"] = _hk_struct_test.NET_DVR_SIP_CFG_byDispalyName_get
    if _newclass:
        byDispalyName = _swig_property(_hk_struct_test.NET_DVR_SIP_CFG_byDispalyName_get, _hk_struct_test.NET_DVR_SIP_CFG_byDispalyName_set)
    __swig_setmethods__["wLocalPort"] = _hk_struct_test.NET_DVR_SIP_CFG_wLocalPort_set
    __swig_getmethods__["wLocalPort"] = _hk_struct_test.NET_DVR_SIP_CFG_wLocalPort_get
    if _newclass:
        wLocalPort = _swig_property(_hk_struct_test.NET_DVR_SIP_CFG_wLocalPort_get, _hk_struct_test.NET_DVR_SIP_CFG_wLocalPort_set)
    __swig_setmethods__["byLoginCycle"] = _hk_struct_test.NET_DVR_SIP_CFG_byLoginCycle_set
    __swig_getmethods__["byLoginCycle"] = _hk_struct_test.NET_DVR_SIP_CFG_byLoginCycle_get
    if _newclass:
        byLoginCycle = _swig_property(_hk_struct_test.NET_DVR_SIP_CFG_byLoginCycle_get, _hk_struct_test.NET_DVR_SIP_CFG_byLoginCycle_set)
    __swig_setmethods__["byType"] = _hk_struct_test.NET_DVR_SIP_CFG_byType_set
    __swig_getmethods__["byType"] = _hk_struct_test.NET_DVR_SIP_CFG_byType_get
    if _newclass:
        byType = _swig_property(_hk_struct_test.NET_DVR_SIP_CFG_byType_get, _hk_struct_test.NET_DVR_SIP_CFG_byType_set)
    __swig_setmethods__["byDomainName"] = _hk_struct_test.NET_DVR_SIP_CFG_byDomainName_set
    __swig_getmethods__["byDomainName"] = _hk_struct_test.NET_DVR_SIP_CFG_byDomainName_get
    if _newclass:
        byDomainName = _swig_property(_hk_struct_test.NET_DVR_SIP_CFG_byDomainName_get, _hk_struct_test.NET_DVR_SIP_CFG_byDomainName_set)
    __swig_setmethods__["byRes"] = _hk_struct_test.NET_DVR_SIP_CFG_byRes_set
    __swig_getmethods__["byRes"] = _hk_struct_test.NET_DVR_SIP_CFG_byRes_get
    if _newclass:
        byRes = _swig_property(_hk_struct_test.NET_DVR_SIP_CFG_byRes_get, _hk_struct_test.NET_DVR_SIP_CFG_byRes_set)

    def __init__(self):
        """__init__(tagNET_DVR_SIP_CFG self) -> NET_DVR_SIP_CFG"""
        this = _hk_struct_test.new_NET_DVR_SIP_CFG()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_SIP_CFG
    __del__ = lambda self: None
NET_DVR_SIP_CFG_swigregister = _hk_struct_test.NET_DVR_SIP_CFG_swigregister
NET_DVR_SIP_CFG_swigregister(NET_DVR_SIP_CFG)

class NET_DVR_SIP_CFG_V50(_object):
    """Proxy of C++ tagNET_DVR_SIP_CFG_V50 class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_SIP_CFG_V50, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_SIP_CFG_V50, name)
    __repr__ = _swig_repr
    __swig_setmethods__["dwSize"] = _hk_struct_test.NET_DVR_SIP_CFG_V50_dwSize_set
    __swig_getmethods__["dwSize"] = _hk_struct_test.NET_DVR_SIP_CFG_V50_dwSize_get
    if _newclass:
        dwSize = _swig_property(_hk_struct_test.NET_DVR_SIP_CFG_V50_dwSize_get, _hk_struct_test.NET_DVR_SIP_CFG_V50_dwSize_set)
    __swig_setmethods__["byEnableAutoLogin"] = _hk_struct_test.NET_DVR_SIP_CFG_V50_byEnableAutoLogin_set
    __swig_getmethods__["byEnableAutoLogin"] = _hk_struct_test.NET_DVR_SIP_CFG_V50_byEnableAutoLogin_get
    if _newclass:
        byEnableAutoLogin = _swig_property(_hk_struct_test.NET_DVR_SIP_CFG_V50_byEnableAutoLogin_get, _hk_struct_test.NET_DVR_SIP_CFG_V50_byEnableAutoLogin_set)
    __swig_setmethods__["byLoginStatus"] = _hk_struct_test.NET_DVR_SIP_CFG_V50_byLoginStatus_set
    __swig_getmethods__["byLoginStatus"] = _hk_struct_test.NET_DVR_SIP_CFG_V50_byLoginStatus_get
    if _newclass:
        byLoginStatus = _swig_property(_hk_struct_test.NET_DVR_SIP_CFG_V50_byLoginStatus_get, _hk_struct_test.NET_DVR_SIP_CFG_V50_byLoginStatus_set)
    __swig_setmethods__["byRes1"] = _hk_struct_test.NET_DVR_SIP_CFG_V50_byRes1_set
    __swig_getmethods__["byRes1"] = _hk_struct_test.NET_DVR_SIP_CFG_V50_byRes1_get
    if _newclass:
        byRes1 = _swig_property(_hk_struct_test.NET_DVR_SIP_CFG_V50_byRes1_get, _hk_struct_test.NET_DVR_SIP_CFG_V50_byRes1_set)
    __swig_setmethods__["stuServerIP"] = _hk_struct_test.NET_DVR_SIP_CFG_V50_stuServerIP_set
    __swig_getmethods__["stuServerIP"] = _hk_struct_test.NET_DVR_SIP_CFG_V50_stuServerIP_get
    if _newclass:
        stuServerIP = _swig_property(_hk_struct_test.NET_DVR_SIP_CFG_V50_stuServerIP_get, _hk_struct_test.NET_DVR_SIP_CFG_V50_stuServerIP_set)
    __swig_setmethods__["wServerPort"] = _hk_struct_test.NET_DVR_SIP_CFG_V50_wServerPort_set
    __swig_getmethods__["wServerPort"] = _hk_struct_test.NET_DVR_SIP_CFG_V50_wServerPort_get
    if _newclass:
        wServerPort = _swig_property(_hk_struct_test.NET_DVR_SIP_CFG_V50_wServerPort_get, _hk_struct_test.NET_DVR_SIP_CFG_V50_wServerPort_set)
    __swig_setmethods__["byRes2"] = _hk_struct_test.NET_DVR_SIP_CFG_V50_byRes2_set
    __swig_getmethods__["byRes2"] = _hk_struct_test.NET_DVR_SIP_CFG_V50_byRes2_get
    if _newclass:
        byRes2 = _swig_property(_hk_struct_test.NET_DVR_SIP_CFG_V50_byRes2_get, _hk_struct_test.NET_DVR_SIP_CFG_V50_byRes2_set)
    __swig_setmethods__["byUserName"] = _hk_struct_test.NET_DVR_SIP_CFG_V50_byUserName_set
    __swig_getmethods__["byUserName"] = _hk_struct_test.NET_DVR_SIP_CFG_V50_byUserName_get
    if _newclass:
        byUserName = _swig_property(_hk_struct_test.NET_DVR_SIP_CFG_V50_byUserName_get, _hk_struct_test.NET_DVR_SIP_CFG_V50_byUserName_set)
    __swig_setmethods__["byPassWord"] = _hk_struct_test.NET_DVR_SIP_CFG_V50_byPassWord_set
    __swig_getmethods__["byPassWord"] = _hk_struct_test.NET_DVR_SIP_CFG_V50_byPassWord_get
    if _newclass:
        byPassWord = _swig_property(_hk_struct_test.NET_DVR_SIP_CFG_V50_byPassWord_get, _hk_struct_test.NET_DVR_SIP_CFG_V50_byPassWord_set)
    __swig_setmethods__["byLocalNo"] = _hk_struct_test.NET_DVR_SIP_CFG_V50_byLocalNo_set
    __swig_getmethods__["byLocalNo"] = _hk_struct_test.NET_DVR_SIP_CFG_V50_byLocalNo_get
    if _newclass:
        byLocalNo = _swig_property(_hk_struct_test.NET_DVR_SIP_CFG_V50_byLocalNo_get, _hk_struct_test.NET_DVR_SIP_CFG_V50_byLocalNo_set)
    __swig_setmethods__["byDispalyName"] = _hk_struct_test.NET_DVR_SIP_CFG_V50_byDispalyName_set
    __swig_getmethods__["byDispalyName"] = _hk_struct_test.NET_DVR_SIP_CFG_V50_byDispalyName_get
    if _newclass:
        byDispalyName = _swig_property(_hk_struct_test.NET_DVR_SIP_CFG_V50_byDispalyName_get, _hk_struct_test.NET_DVR_SIP_CFG_V50_byDispalyName_set)
    __swig_setmethods__["wLocalPort"] = _hk_struct_test.NET_DVR_SIP_CFG_V50_wLocalPort_set
    __swig_getmethods__["wLocalPort"] = _hk_struct_test.NET_DVR_SIP_CFG_V50_wLocalPort_get
    if _newclass:
        wLocalPort = _swig_property(_hk_struct_test.NET_DVR_SIP_CFG_V50_wLocalPort_get, _hk_struct_test.NET_DVR_SIP_CFG_V50_wLocalPort_set)
    __swig_setmethods__["byLoginCycle"] = _hk_struct_test.NET_DVR_SIP_CFG_V50_byLoginCycle_set
    __swig_getmethods__["byLoginCycle"] = _hk_struct_test.NET_DVR_SIP_CFG_V50_byLoginCycle_get
    if _newclass:
        byLoginCycle = _swig_property(_hk_struct_test.NET_DVR_SIP_CFG_V50_byLoginCycle_get, _hk_struct_test.NET_DVR_SIP_CFG_V50_byLoginCycle_set)
    __swig_setmethods__["byRes3"] = _hk_struct_test.NET_DVR_SIP_CFG_V50_byRes3_set
    __swig_getmethods__["byRes3"] = _hk_struct_test.NET_DVR_SIP_CFG_V50_byRes3_get
    if _newclass:
        byRes3 = _swig_property(_hk_struct_test.NET_DVR_SIP_CFG_V50_byRes3_get, _hk_struct_test.NET_DVR_SIP_CFG_V50_byRes3_set)
    __swig_setmethods__["bySIPServerDomain"] = _hk_struct_test.NET_DVR_SIP_CFG_V50_bySIPServerDomain_set
    __swig_getmethods__["bySIPServerDomain"] = _hk_struct_test.NET_DVR_SIP_CFG_V50_bySIPServerDomain_get
    if _newclass:
        bySIPServerDomain = _swig_property(_hk_struct_test.NET_DVR_SIP_CFG_V50_bySIPServerDomain_get, _hk_struct_test.NET_DVR_SIP_CFG_V50_bySIPServerDomain_set)
    __swig_setmethods__["stuSTUNServerIP"] = _hk_struct_test.NET_DVR_SIP_CFG_V50_stuSTUNServerIP_set
    __swig_getmethods__["stuSTUNServerIP"] = _hk_struct_test.NET_DVR_SIP_CFG_V50_stuSTUNServerIP_get
    if _newclass:
        stuSTUNServerIP = _swig_property(_hk_struct_test.NET_DVR_SIP_CFG_V50_stuSTUNServerIP_get, _hk_struct_test.NET_DVR_SIP_CFG_V50_stuSTUNServerIP_set)
    __swig_setmethods__["bySTUNServerDomain"] = _hk_struct_test.NET_DVR_SIP_CFG_V50_bySTUNServerDomain_set
    __swig_getmethods__["bySTUNServerDomain"] = _hk_struct_test.NET_DVR_SIP_CFG_V50_bySTUNServerDomain_get
    if _newclass:
        bySTUNServerDomain = _swig_property(_hk_struct_test.NET_DVR_SIP_CFG_V50_bySTUNServerDomain_get, _hk_struct_test.NET_DVR_SIP_CFG_V50_bySTUNServerDomain_set)
    __swig_setmethods__["wSTUNServerPort"] = _hk_struct_test.NET_DVR_SIP_CFG_V50_wSTUNServerPort_set
    __swig_getmethods__["wSTUNServerPort"] = _hk_struct_test.NET_DVR_SIP_CFG_V50_wSTUNServerPort_get
    if _newclass:
        wSTUNServerPort = _swig_property(_hk_struct_test.NET_DVR_SIP_CFG_V50_wSTUNServerPort_get, _hk_struct_test.NET_DVR_SIP_CFG_V50_wSTUNServerPort_set)
    __swig_setmethods__["byRes4"] = _hk_struct_test.NET_DVR_SIP_CFG_V50_byRes4_set
    __swig_getmethods__["byRes4"] = _hk_struct_test.NET_DVR_SIP_CFG_V50_byRes4_get
    if _newclass:
        byRes4 = _swig_property(_hk_struct_test.NET_DVR_SIP_CFG_V50_byRes4_get, _hk_struct_test.NET_DVR_SIP_CFG_V50_byRes4_set)
    __swig_setmethods__["stuProxyServerIP"] = _hk_struct_test.NET_DVR_SIP_CFG_V50_stuProxyServerIP_set
    __swig_getmethods__["stuProxyServerIP"] = _hk_struct_test.NET_DVR_SIP_CFG_V50_stuProxyServerIP_get
    if _newclass:
        stuProxyServerIP = _swig_property(_hk_struct_test.NET_DVR_SIP_CFG_V50_stuProxyServerIP_get, _hk_struct_test.NET_DVR_SIP_CFG_V50_stuProxyServerIP_set)
    __swig_setmethods__["byProxyServerDomain"] = _hk_struct_test.NET_DVR_SIP_CFG_V50_byProxyServerDomain_set
    __swig_getmethods__["byProxyServerDomain"] = _hk_struct_test.NET_DVR_SIP_CFG_V50_byProxyServerDomain_get
    if _newclass:
        byProxyServerDomain = _swig_property(_hk_struct_test.NET_DVR_SIP_CFG_V50_byProxyServerDomain_get, _hk_struct_test.NET_DVR_SIP_CFG_V50_byProxyServerDomain_set)
    __swig_setmethods__["wProxyServerPort"] = _hk_struct_test.NET_DVR_SIP_CFG_V50_wProxyServerPort_set
    __swig_getmethods__["wProxyServerPort"] = _hk_struct_test.NET_DVR_SIP_CFG_V50_wProxyServerPort_get
    if _newclass:
        wProxyServerPort = _swig_property(_hk_struct_test.NET_DVR_SIP_CFG_V50_wProxyServerPort_get, _hk_struct_test.NET_DVR_SIP_CFG_V50_wProxyServerPort_set)
    __swig_setmethods__["byNetWork"] = _hk_struct_test.NET_DVR_SIP_CFG_V50_byNetWork_set
    __swig_getmethods__["byNetWork"] = _hk_struct_test.NET_DVR_SIP_CFG_V50_byNetWork_get
    if _newclass:
        byNetWork = _swig_property(_hk_struct_test.NET_DVR_SIP_CFG_V50_byNetWork_get, _hk_struct_test.NET_DVR_SIP_CFG_V50_byNetWork_set)
    __swig_setmethods__["byRes"] = _hk_struct_test.NET_DVR_SIP_CFG_V50_byRes_set
    __swig_getmethods__["byRes"] = _hk_struct_test.NET_DVR_SIP_CFG_V50_byRes_get
    if _newclass:
        byRes = _swig_property(_hk_struct_test.NET_DVR_SIP_CFG_V50_byRes_get, _hk_struct_test.NET_DVR_SIP_CFG_V50_byRes_set)

    def __init__(self):
        """__init__(tagNET_DVR_SIP_CFG_V50 self) -> NET_DVR_SIP_CFG_V50"""
        this = _hk_struct_test.new_NET_DVR_SIP_CFG_V50()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_SIP_CFG_V50
    __del__ = lambda self: None
NET_DVR_SIP_CFG_V50_swigregister = _hk_struct_test.NET_DVR_SIP_CFG_V50_swigregister
NET_DVR_SIP_CFG_V50_swigregister(NET_DVR_SIP_CFG_V50)

class NET_DVR_IP_VIEW_DEVCFG(_object):
    """Proxy of C++ tagNET_DVR_IP_VIEW_DEVCFG class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_IP_VIEW_DEVCFG, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_IP_VIEW_DEVCFG, name)
    __repr__ = _swig_repr
    __swig_setmethods__["dwSize"] = _hk_struct_test.NET_DVR_IP_VIEW_DEVCFG_dwSize_set
    __swig_getmethods__["dwSize"] = _hk_struct_test.NET_DVR_IP_VIEW_DEVCFG_dwSize_get
    if _newclass:
        dwSize = _swig_property(_hk_struct_test.NET_DVR_IP_VIEW_DEVCFG_dwSize_get, _hk_struct_test.NET_DVR_IP_VIEW_DEVCFG_dwSize_set)
    __swig_setmethods__["byDefaultRing"] = _hk_struct_test.NET_DVR_IP_VIEW_DEVCFG_byDefaultRing_set
    __swig_getmethods__["byDefaultRing"] = _hk_struct_test.NET_DVR_IP_VIEW_DEVCFG_byDefaultRing_get
    if _newclass:
        byDefaultRing = _swig_property(_hk_struct_test.NET_DVR_IP_VIEW_DEVCFG_byDefaultRing_get, _hk_struct_test.NET_DVR_IP_VIEW_DEVCFG_byDefaultRing_set)
    __swig_setmethods__["byRingVolume"] = _hk_struct_test.NET_DVR_IP_VIEW_DEVCFG_byRingVolume_set
    __swig_getmethods__["byRingVolume"] = _hk_struct_test.NET_DVR_IP_VIEW_DEVCFG_byRingVolume_get
    if _newclass:
        byRingVolume = _swig_property(_hk_struct_test.NET_DVR_IP_VIEW_DEVCFG_byRingVolume_get, _hk_struct_test.NET_DVR_IP_VIEW_DEVCFG_byRingVolume_set)
    __swig_setmethods__["byInputVolume"] = _hk_struct_test.NET_DVR_IP_VIEW_DEVCFG_byInputVolume_set
    __swig_getmethods__["byInputVolume"] = _hk_struct_test.NET_DVR_IP_VIEW_DEVCFG_byInputVolume_get
    if _newclass:
        byInputVolume = _swig_property(_hk_struct_test.NET_DVR_IP_VIEW_DEVCFG_byInputVolume_get, _hk_struct_test.NET_DVR_IP_VIEW_DEVCFG_byInputVolume_set)
    __swig_setmethods__["byOutputVolume"] = _hk_struct_test.NET_DVR_IP_VIEW_DEVCFG_byOutputVolume_set
    __swig_getmethods__["byOutputVolume"] = _hk_struct_test.NET_DVR_IP_VIEW_DEVCFG_byOutputVolume_get
    if _newclass:
        byOutputVolume = _swig_property(_hk_struct_test.NET_DVR_IP_VIEW_DEVCFG_byOutputVolume_get, _hk_struct_test.NET_DVR_IP_VIEW_DEVCFG_byOutputVolume_set)
    __swig_setmethods__["wRtpPort"] = _hk_struct_test.NET_DVR_IP_VIEW_DEVCFG_wRtpPort_set
    __swig_getmethods__["wRtpPort"] = _hk_struct_test.NET_DVR_IP_VIEW_DEVCFG_wRtpPort_get
    if _newclass:
        wRtpPort = _swig_property(_hk_struct_test.NET_DVR_IP_VIEW_DEVCFG_wRtpPort_get, _hk_struct_test.NET_DVR_IP_VIEW_DEVCFG_wRtpPort_set)
    __swig_setmethods__["byRes1"] = _hk_struct_test.NET_DVR_IP_VIEW_DEVCFG_byRes1_set
    __swig_getmethods__["byRes1"] = _hk_struct_test.NET_DVR_IP_VIEW_DEVCFG_byRes1_get
    if _newclass:
        byRes1 = _swig_property(_hk_struct_test.NET_DVR_IP_VIEW_DEVCFG_byRes1_get, _hk_struct_test.NET_DVR_IP_VIEW_DEVCFG_byRes1_set)
    __swig_setmethods__["dwPreviewDelayTime"] = _hk_struct_test.NET_DVR_IP_VIEW_DEVCFG_dwPreviewDelayTime_set
    __swig_getmethods__["dwPreviewDelayTime"] = _hk_struct_test.NET_DVR_IP_VIEW_DEVCFG_dwPreviewDelayTime_get
    if _newclass:
        dwPreviewDelayTime = _swig_property(_hk_struct_test.NET_DVR_IP_VIEW_DEVCFG_dwPreviewDelayTime_get, _hk_struct_test.NET_DVR_IP_VIEW_DEVCFG_dwPreviewDelayTime_set)
    __swig_setmethods__["byRes2"] = _hk_struct_test.NET_DVR_IP_VIEW_DEVCFG_byRes2_set
    __swig_getmethods__["byRes2"] = _hk_struct_test.NET_DVR_IP_VIEW_DEVCFG_byRes2_get
    if _newclass:
        byRes2 = _swig_property(_hk_struct_test.NET_DVR_IP_VIEW_DEVCFG_byRes2_get, _hk_struct_test.NET_DVR_IP_VIEW_DEVCFG_byRes2_set)

    def __init__(self):
        """__init__(tagNET_DVR_IP_VIEW_DEVCFG self) -> NET_DVR_IP_VIEW_DEVCFG"""
        this = _hk_struct_test.new_NET_DVR_IP_VIEW_DEVCFG()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_IP_VIEW_DEVCFG
    __del__ = lambda self: None
NET_DVR_IP_VIEW_DEVCFG_swigregister = _hk_struct_test.NET_DVR_IP_VIEW_DEVCFG_swigregister
NET_DVR_IP_VIEW_DEVCFG_swigregister(NET_DVR_IP_VIEW_DEVCFG)

class NET_DVR_IP_VIEW_AUDIO_CFG(_object):
    """Proxy of C++ tagNET_DVR_IP_VIEW_AUDIO_CFG class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_IP_VIEW_AUDIO_CFG, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_IP_VIEW_AUDIO_CFG, name)
    __repr__ = _swig_repr
    __swig_setmethods__["dwSize"] = _hk_struct_test.NET_DVR_IP_VIEW_AUDIO_CFG_dwSize_set
    __swig_getmethods__["dwSize"] = _hk_struct_test.NET_DVR_IP_VIEW_AUDIO_CFG_dwSize_get
    if _newclass:
        dwSize = _swig_property(_hk_struct_test.NET_DVR_IP_VIEW_AUDIO_CFG_dwSize_get, _hk_struct_test.NET_DVR_IP_VIEW_AUDIO_CFG_dwSize_set)
    __swig_setmethods__["byAudioEncPri1"] = _hk_struct_test.NET_DVR_IP_VIEW_AUDIO_CFG_byAudioEncPri1_set
    __swig_getmethods__["byAudioEncPri1"] = _hk_struct_test.NET_DVR_IP_VIEW_AUDIO_CFG_byAudioEncPri1_get
    if _newclass:
        byAudioEncPri1 = _swig_property(_hk_struct_test.NET_DVR_IP_VIEW_AUDIO_CFG_byAudioEncPri1_get, _hk_struct_test.NET_DVR_IP_VIEW_AUDIO_CFG_byAudioEncPri1_set)
    __swig_setmethods__["byAudioEncPri2"] = _hk_struct_test.NET_DVR_IP_VIEW_AUDIO_CFG_byAudioEncPri2_set
    __swig_getmethods__["byAudioEncPri2"] = _hk_struct_test.NET_DVR_IP_VIEW_AUDIO_CFG_byAudioEncPri2_get
    if _newclass:
        byAudioEncPri2 = _swig_property(_hk_struct_test.NET_DVR_IP_VIEW_AUDIO_CFG_byAudioEncPri2_get, _hk_struct_test.NET_DVR_IP_VIEW_AUDIO_CFG_byAudioEncPri2_set)
    __swig_setmethods__["wAudioPacketLen1"] = _hk_struct_test.NET_DVR_IP_VIEW_AUDIO_CFG_wAudioPacketLen1_set
    __swig_getmethods__["wAudioPacketLen1"] = _hk_struct_test.NET_DVR_IP_VIEW_AUDIO_CFG_wAudioPacketLen1_get
    if _newclass:
        wAudioPacketLen1 = _swig_property(_hk_struct_test.NET_DVR_IP_VIEW_AUDIO_CFG_wAudioPacketLen1_get, _hk_struct_test.NET_DVR_IP_VIEW_AUDIO_CFG_wAudioPacketLen1_set)
    __swig_setmethods__["wAudioPacketLen2"] = _hk_struct_test.NET_DVR_IP_VIEW_AUDIO_CFG_wAudioPacketLen2_set
    __swig_getmethods__["wAudioPacketLen2"] = _hk_struct_test.NET_DVR_IP_VIEW_AUDIO_CFG_wAudioPacketLen2_get
    if _newclass:
        wAudioPacketLen2 = _swig_property(_hk_struct_test.NET_DVR_IP_VIEW_AUDIO_CFG_wAudioPacketLen2_get, _hk_struct_test.NET_DVR_IP_VIEW_AUDIO_CFG_wAudioPacketLen2_set)
    __swig_setmethods__["byRes"] = _hk_struct_test.NET_DVR_IP_VIEW_AUDIO_CFG_byRes_set
    __swig_getmethods__["byRes"] = _hk_struct_test.NET_DVR_IP_VIEW_AUDIO_CFG_byRes_get
    if _newclass:
        byRes = _swig_property(_hk_struct_test.NET_DVR_IP_VIEW_AUDIO_CFG_byRes_get, _hk_struct_test.NET_DVR_IP_VIEW_AUDIO_CFG_byRes_set)

    def __init__(self):
        """__init__(tagNET_DVR_IP_VIEW_AUDIO_CFG self) -> NET_DVR_IP_VIEW_AUDIO_CFG"""
        this = _hk_struct_test.new_NET_DVR_IP_VIEW_AUDIO_CFG()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_IP_VIEW_AUDIO_CFG
    __del__ = lambda self: None
NET_DVR_IP_VIEW_AUDIO_CFG_swigregister = _hk_struct_test.NET_DVR_IP_VIEW_AUDIO_CFG_swigregister
NET_DVR_IP_VIEW_AUDIO_CFG_swigregister(NET_DVR_IP_VIEW_AUDIO_CFG)

class NET_DVR_IP_VIEW_CALL_CFG(_object):
    """Proxy of C++ tagNET_DVR_IP_VIEW_CALL_CFG class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_IP_VIEW_CALL_CFG, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_IP_VIEW_CALL_CFG, name)
    __repr__ = _swig_repr
    __swig_setmethods__["dwSize"] = _hk_struct_test.NET_DVR_IP_VIEW_CALL_CFG_dwSize_set
    __swig_getmethods__["dwSize"] = _hk_struct_test.NET_DVR_IP_VIEW_CALL_CFG_dwSize_get
    if _newclass:
        dwSize = _swig_property(_hk_struct_test.NET_DVR_IP_VIEW_CALL_CFG_dwSize_get, _hk_struct_test.NET_DVR_IP_VIEW_CALL_CFG_dwSize_set)
    __swig_setmethods__["byEnableAutoResponse"] = _hk_struct_test.NET_DVR_IP_VIEW_CALL_CFG_byEnableAutoResponse_set
    __swig_getmethods__["byEnableAutoResponse"] = _hk_struct_test.NET_DVR_IP_VIEW_CALL_CFG_byEnableAutoResponse_get
    if _newclass:
        byEnableAutoResponse = _swig_property(_hk_struct_test.NET_DVR_IP_VIEW_CALL_CFG_byEnableAutoResponse_get, _hk_struct_test.NET_DVR_IP_VIEW_CALL_CFG_byEnableAutoResponse_set)
    __swig_setmethods__["byAudoResponseTime"] = _hk_struct_test.NET_DVR_IP_VIEW_CALL_CFG_byAudoResponseTime_set
    __swig_getmethods__["byAudoResponseTime"] = _hk_struct_test.NET_DVR_IP_VIEW_CALL_CFG_byAudoResponseTime_get
    if _newclass:
        byAudoResponseTime = _swig_property(_hk_struct_test.NET_DVR_IP_VIEW_CALL_CFG_byAudoResponseTime_get, _hk_struct_test.NET_DVR_IP_VIEW_CALL_CFG_byAudoResponseTime_set)
    __swig_setmethods__["byRes1"] = _hk_struct_test.NET_DVR_IP_VIEW_CALL_CFG_byRes1_set
    __swig_getmethods__["byRes1"] = _hk_struct_test.NET_DVR_IP_VIEW_CALL_CFG_byRes1_get
    if _newclass:
        byRes1 = _swig_property(_hk_struct_test.NET_DVR_IP_VIEW_CALL_CFG_byRes1_get, _hk_struct_test.NET_DVR_IP_VIEW_CALL_CFG_byRes1_set)
    __swig_setmethods__["byEnableAlarmNumber1"] = _hk_struct_test.NET_DVR_IP_VIEW_CALL_CFG_byEnableAlarmNumber1_set
    __swig_getmethods__["byEnableAlarmNumber1"] = _hk_struct_test.NET_DVR_IP_VIEW_CALL_CFG_byEnableAlarmNumber1_get
    if _newclass:
        byEnableAlarmNumber1 = _swig_property(_hk_struct_test.NET_DVR_IP_VIEW_CALL_CFG_byEnableAlarmNumber1_get, _hk_struct_test.NET_DVR_IP_VIEW_CALL_CFG_byEnableAlarmNumber1_set)
    __swig_setmethods__["byRes2"] = _hk_struct_test.NET_DVR_IP_VIEW_CALL_CFG_byRes2_set
    __swig_getmethods__["byRes2"] = _hk_struct_test.NET_DVR_IP_VIEW_CALL_CFG_byRes2_get
    if _newclass:
        byRes2 = _swig_property(_hk_struct_test.NET_DVR_IP_VIEW_CALL_CFG_byRes2_get, _hk_struct_test.NET_DVR_IP_VIEW_CALL_CFG_byRes2_set)
    __swig_setmethods__["byAlarmNumber1"] = _hk_struct_test.NET_DVR_IP_VIEW_CALL_CFG_byAlarmNumber1_set
    __swig_getmethods__["byAlarmNumber1"] = _hk_struct_test.NET_DVR_IP_VIEW_CALL_CFG_byAlarmNumber1_get
    if _newclass:
        byAlarmNumber1 = _swig_property(_hk_struct_test.NET_DVR_IP_VIEW_CALL_CFG_byAlarmNumber1_get, _hk_struct_test.NET_DVR_IP_VIEW_CALL_CFG_byAlarmNumber1_set)
    __swig_setmethods__["byEnableAlarmNumber2"] = _hk_struct_test.NET_DVR_IP_VIEW_CALL_CFG_byEnableAlarmNumber2_set
    __swig_getmethods__["byEnableAlarmNumber2"] = _hk_struct_test.NET_DVR_IP_VIEW_CALL_CFG_byEnableAlarmNumber2_get
    if _newclass:
        byEnableAlarmNumber2 = _swig_property(_hk_struct_test.NET_DVR_IP_VIEW_CALL_CFG_byEnableAlarmNumber2_get, _hk_struct_test.NET_DVR_IP_VIEW_CALL_CFG_byEnableAlarmNumber2_set)
    __swig_setmethods__["byRes3"] = _hk_struct_test.NET_DVR_IP_VIEW_CALL_CFG_byRes3_set
    __swig_getmethods__["byRes3"] = _hk_struct_test.NET_DVR_IP_VIEW_CALL_CFG_byRes3_get
    if _newclass:
        byRes3 = _swig_property(_hk_struct_test.NET_DVR_IP_VIEW_CALL_CFG_byRes3_get, _hk_struct_test.NET_DVR_IP_VIEW_CALL_CFG_byRes3_set)
    __swig_setmethods__["byAlarmNumber2"] = _hk_struct_test.NET_DVR_IP_VIEW_CALL_CFG_byAlarmNumber2_set
    __swig_getmethods__["byAlarmNumber2"] = _hk_struct_test.NET_DVR_IP_VIEW_CALL_CFG_byAlarmNumber2_get
    if _newclass:
        byAlarmNumber2 = _swig_property(_hk_struct_test.NET_DVR_IP_VIEW_CALL_CFG_byAlarmNumber2_get, _hk_struct_test.NET_DVR_IP_VIEW_CALL_CFG_byAlarmNumber2_set)
    __swig_setmethods__["byRes4"] = _hk_struct_test.NET_DVR_IP_VIEW_CALL_CFG_byRes4_set
    __swig_getmethods__["byRes4"] = _hk_struct_test.NET_DVR_IP_VIEW_CALL_CFG_byRes4_get
    if _newclass:
        byRes4 = _swig_property(_hk_struct_test.NET_DVR_IP_VIEW_CALL_CFG_byRes4_get, _hk_struct_test.NET_DVR_IP_VIEW_CALL_CFG_byRes4_set)

    def __init__(self):
        """__init__(tagNET_DVR_IP_VIEW_CALL_CFG self) -> NET_DVR_IP_VIEW_CALL_CFG"""
        this = _hk_struct_test.new_NET_DVR_IP_VIEW_CALL_CFG()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_IP_VIEW_CALL_CFG
    __del__ = lambda self: None
NET_DVR_IP_VIEW_CALL_CFG_swigregister = _hk_struct_test.NET_DVR_IP_VIEW_CALL_CFG_swigregister
NET_DVR_IP_VIEW_CALL_CFG_swigregister(NET_DVR_IP_VIEW_CALL_CFG)

class NET_DVR_RECORDCHAN(_object):
    """Proxy of C++ NET_DVR_RECORDCHAN class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_RECORDCHAN, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_RECORDCHAN, name)
    __repr__ = _swig_repr
    __swig_setmethods__["dwMaxRecordChanNum"] = _hk_struct_test.NET_DVR_RECORDCHAN_dwMaxRecordChanNum_set
    __swig_getmethods__["dwMaxRecordChanNum"] = _hk_struct_test.NET_DVR_RECORDCHAN_dwMaxRecordChanNum_get
    if _newclass:
        dwMaxRecordChanNum = _swig_property(_hk_struct_test.NET_DVR_RECORDCHAN_dwMaxRecordChanNum_get, _hk_struct_test.NET_DVR_RECORDCHAN_dwMaxRecordChanNum_set)
    __swig_setmethods__["dwCurRecordChanNum"] = _hk_struct_test.NET_DVR_RECORDCHAN_dwCurRecordChanNum_set
    __swig_getmethods__["dwCurRecordChanNum"] = _hk_struct_test.NET_DVR_RECORDCHAN_dwCurRecordChanNum_get
    if _newclass:
        dwCurRecordChanNum = _swig_property(_hk_struct_test.NET_DVR_RECORDCHAN_dwCurRecordChanNum_get, _hk_struct_test.NET_DVR_RECORDCHAN_dwCurRecordChanNum_set)
    __swig_setmethods__["dwRelRecordChan"] = _hk_struct_test.NET_DVR_RECORDCHAN_dwRelRecordChan_set
    __swig_getmethods__["dwRelRecordChan"] = _hk_struct_test.NET_DVR_RECORDCHAN_dwRelRecordChan_get
    if _newclass:
        dwRelRecordChan = _swig_property(_hk_struct_test.NET_DVR_RECORDCHAN_dwRelRecordChan_get, _hk_struct_test.NET_DVR_RECORDCHAN_dwRelRecordChan_set)
    __swig_setmethods__["byRes"] = _hk_struct_test.NET_DVR_RECORDCHAN_byRes_set
    __swig_getmethods__["byRes"] = _hk_struct_test.NET_DVR_RECORDCHAN_byRes_get
    if _newclass:
        byRes = _swig_property(_hk_struct_test.NET_DVR_RECORDCHAN_byRes_get, _hk_struct_test.NET_DVR_RECORDCHAN_byRes_set)

    def __init__(self):
        """__init__(NET_DVR_RECORDCHAN self) -> NET_DVR_RECORDCHAN"""
        this = _hk_struct_test.new_NET_DVR_RECORDCHAN()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_RECORDCHAN
    __del__ = lambda self: None
NET_DVR_RECORDCHAN_swigregister = _hk_struct_test.NET_DVR_RECORDCHAN_swigregister
NET_DVR_RECORDCHAN_swigregister(NET_DVR_RECORDCHAN)

class NET_DVR_MOTION_V30(_object):
    """Proxy of C++ NET_DVR_MOTION_V30 class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_MOTION_V30, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_MOTION_V30, name)
    __repr__ = _swig_repr
    __swig_setmethods__["byMotionScope"] = _hk_struct_test.NET_DVR_MOTION_V30_byMotionScope_set
    __swig_getmethods__["byMotionScope"] = _hk_struct_test.NET_DVR_MOTION_V30_byMotionScope_get
    if _newclass:
        byMotionScope = _swig_property(_hk_struct_test.NET_DVR_MOTION_V30_byMotionScope_get, _hk_struct_test.NET_DVR_MOTION_V30_byMotionScope_set)
    __swig_setmethods__["byMotionSensitive"] = _hk_struct_test.NET_DVR_MOTION_V30_byMotionSensitive_set
    __swig_getmethods__["byMotionSensitive"] = _hk_struct_test.NET_DVR_MOTION_V30_byMotionSensitive_get
    if _newclass:
        byMotionSensitive = _swig_property(_hk_struct_test.NET_DVR_MOTION_V30_byMotionSensitive_get, _hk_struct_test.NET_DVR_MOTION_V30_byMotionSensitive_set)
    __swig_setmethods__["byEnableHandleMotion"] = _hk_struct_test.NET_DVR_MOTION_V30_byEnableHandleMotion_set
    __swig_getmethods__["byEnableHandleMotion"] = _hk_struct_test.NET_DVR_MOTION_V30_byEnableHandleMotion_get
    if _newclass:
        byEnableHandleMotion = _swig_property(_hk_struct_test.NET_DVR_MOTION_V30_byEnableHandleMotion_get, _hk_struct_test.NET_DVR_MOTION_V30_byEnableHandleMotion_set)
    __swig_setmethods__["byEnableDisplay"] = _hk_struct_test.NET_DVR_MOTION_V30_byEnableDisplay_set
    __swig_getmethods__["byEnableDisplay"] = _hk_struct_test.NET_DVR_MOTION_V30_byEnableDisplay_get
    if _newclass:
        byEnableDisplay = _swig_property(_hk_struct_test.NET_DVR_MOTION_V30_byEnableDisplay_get, _hk_struct_test.NET_DVR_MOTION_V30_byEnableDisplay_set)
    __swig_setmethods__["reservedData"] = _hk_struct_test.NET_DVR_MOTION_V30_reservedData_set
    __swig_getmethods__["reservedData"] = _hk_struct_test.NET_DVR_MOTION_V30_reservedData_get
    if _newclass:
        reservedData = _swig_property(_hk_struct_test.NET_DVR_MOTION_V30_reservedData_get, _hk_struct_test.NET_DVR_MOTION_V30_reservedData_set)
    __swig_setmethods__["struMotionHandleType"] = _hk_struct_test.NET_DVR_MOTION_V30_struMotionHandleType_set
    __swig_getmethods__["struMotionHandleType"] = _hk_struct_test.NET_DVR_MOTION_V30_struMotionHandleType_get
    if _newclass:
        struMotionHandleType = _swig_property(_hk_struct_test.NET_DVR_MOTION_V30_struMotionHandleType_get, _hk_struct_test.NET_DVR_MOTION_V30_struMotionHandleType_set)
    __swig_setmethods__["struAlarmTime"] = _hk_struct_test.NET_DVR_MOTION_V30_struAlarmTime_set
    __swig_getmethods__["struAlarmTime"] = _hk_struct_test.NET_DVR_MOTION_V30_struAlarmTime_get
    if _newclass:
        struAlarmTime = _swig_property(_hk_struct_test.NET_DVR_MOTION_V30_struAlarmTime_get, _hk_struct_test.NET_DVR_MOTION_V30_struAlarmTime_set)
    __swig_setmethods__["byRelRecordChan"] = _hk_struct_test.NET_DVR_MOTION_V30_byRelRecordChan_set
    __swig_getmethods__["byRelRecordChan"] = _hk_struct_test.NET_DVR_MOTION_V30_byRelRecordChan_get
    if _newclass:
        byRelRecordChan = _swig_property(_hk_struct_test.NET_DVR_MOTION_V30_byRelRecordChan_get, _hk_struct_test.NET_DVR_MOTION_V30_byRelRecordChan_set)

    def __init__(self):
        """__init__(NET_DVR_MOTION_V30 self) -> NET_DVR_MOTION_V30"""
        this = _hk_struct_test.new_NET_DVR_MOTION_V30()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_MOTION_V30
    __del__ = lambda self: None
NET_DVR_MOTION_V30_swigregister = _hk_struct_test.NET_DVR_MOTION_V30_swigregister
NET_DVR_MOTION_V30_swigregister(NET_DVR_MOTION_V30)

class NET_DVR_MOTION(_object):
    """Proxy of C++ NET_DVR_MOTION class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_MOTION, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_MOTION, name)
    __repr__ = _swig_repr
    __swig_setmethods__["byMotionScope"] = _hk_struct_test.NET_DVR_MOTION_byMotionScope_set
    __swig_getmethods__["byMotionScope"] = _hk_struct_test.NET_DVR_MOTION_byMotionScope_get
    if _newclass:
        byMotionScope = _swig_property(_hk_struct_test.NET_DVR_MOTION_byMotionScope_get, _hk_struct_test.NET_DVR_MOTION_byMotionScope_set)
    __swig_setmethods__["byMotionSensitive"] = _hk_struct_test.NET_DVR_MOTION_byMotionSensitive_set
    __swig_getmethods__["byMotionSensitive"] = _hk_struct_test.NET_DVR_MOTION_byMotionSensitive_get
    if _newclass:
        byMotionSensitive = _swig_property(_hk_struct_test.NET_DVR_MOTION_byMotionSensitive_get, _hk_struct_test.NET_DVR_MOTION_byMotionSensitive_set)
    __swig_setmethods__["byEnableHandleMotion"] = _hk_struct_test.NET_DVR_MOTION_byEnableHandleMotion_set
    __swig_getmethods__["byEnableHandleMotion"] = _hk_struct_test.NET_DVR_MOTION_byEnableHandleMotion_get
    if _newclass:
        byEnableHandleMotion = _swig_property(_hk_struct_test.NET_DVR_MOTION_byEnableHandleMotion_get, _hk_struct_test.NET_DVR_MOTION_byEnableHandleMotion_set)
    __swig_setmethods__["byEnableDisplay"] = _hk_struct_test.NET_DVR_MOTION_byEnableDisplay_set
    __swig_getmethods__["byEnableDisplay"] = _hk_struct_test.NET_DVR_MOTION_byEnableDisplay_get
    if _newclass:
        byEnableDisplay = _swig_property(_hk_struct_test.NET_DVR_MOTION_byEnableDisplay_get, _hk_struct_test.NET_DVR_MOTION_byEnableDisplay_set)
    __swig_setmethods__["reservedData"] = _hk_struct_test.NET_DVR_MOTION_reservedData_set
    __swig_getmethods__["reservedData"] = _hk_struct_test.NET_DVR_MOTION_reservedData_get
    if _newclass:
        reservedData = _swig_property(_hk_struct_test.NET_DVR_MOTION_reservedData_get, _hk_struct_test.NET_DVR_MOTION_reservedData_set)
    __swig_setmethods__["strMotionHandleType"] = _hk_struct_test.NET_DVR_MOTION_strMotionHandleType_set
    __swig_getmethods__["strMotionHandleType"] = _hk_struct_test.NET_DVR_MOTION_strMotionHandleType_get
    if _newclass:
        strMotionHandleType = _swig_property(_hk_struct_test.NET_DVR_MOTION_strMotionHandleType_get, _hk_struct_test.NET_DVR_MOTION_strMotionHandleType_set)
    __swig_setmethods__["struAlarmTime"] = _hk_struct_test.NET_DVR_MOTION_struAlarmTime_set
    __swig_getmethods__["struAlarmTime"] = _hk_struct_test.NET_DVR_MOTION_struAlarmTime_get
    if _newclass:
        struAlarmTime = _swig_property(_hk_struct_test.NET_DVR_MOTION_struAlarmTime_get, _hk_struct_test.NET_DVR_MOTION_struAlarmTime_set)
    __swig_setmethods__["byRelRecordChan"] = _hk_struct_test.NET_DVR_MOTION_byRelRecordChan_set
    __swig_getmethods__["byRelRecordChan"] = _hk_struct_test.NET_DVR_MOTION_byRelRecordChan_get
    if _newclass:
        byRelRecordChan = _swig_property(_hk_struct_test.NET_DVR_MOTION_byRelRecordChan_get, _hk_struct_test.NET_DVR_MOTION_byRelRecordChan_set)

    def __init__(self):
        """__init__(NET_DVR_MOTION self) -> NET_DVR_MOTION"""
        this = _hk_struct_test.new_NET_DVR_MOTION()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_MOTION
    __del__ = lambda self: None
NET_DVR_MOTION_swigregister = _hk_struct_test.NET_DVR_MOTION_swigregister
NET_DVR_MOTION_swigregister(NET_DVR_MOTION)

class NET_DVR_HIDEALARM_V30(_object):
    """Proxy of C++ NET_DVR_HIDEALARM_V30 class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_HIDEALARM_V30, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_HIDEALARM_V30, name)
    __repr__ = _swig_repr
    __swig_setmethods__["dwEnableHideAlarm"] = _hk_struct_test.NET_DVR_HIDEALARM_V30_dwEnableHideAlarm_set
    __swig_getmethods__["dwEnableHideAlarm"] = _hk_struct_test.NET_DVR_HIDEALARM_V30_dwEnableHideAlarm_get
    if _newclass:
        dwEnableHideAlarm = _swig_property(_hk_struct_test.NET_DVR_HIDEALARM_V30_dwEnableHideAlarm_get, _hk_struct_test.NET_DVR_HIDEALARM_V30_dwEnableHideAlarm_set)
    __swig_setmethods__["wHideAlarmAreaTopLeftX"] = _hk_struct_test.NET_DVR_HIDEALARM_V30_wHideAlarmAreaTopLeftX_set
    __swig_getmethods__["wHideAlarmAreaTopLeftX"] = _hk_struct_test.NET_DVR_HIDEALARM_V30_wHideAlarmAreaTopLeftX_get
    if _newclass:
        wHideAlarmAreaTopLeftX = _swig_property(_hk_struct_test.NET_DVR_HIDEALARM_V30_wHideAlarmAreaTopLeftX_get, _hk_struct_test.NET_DVR_HIDEALARM_V30_wHideAlarmAreaTopLeftX_set)
    __swig_setmethods__["wHideAlarmAreaTopLeftY"] = _hk_struct_test.NET_DVR_HIDEALARM_V30_wHideAlarmAreaTopLeftY_set
    __swig_getmethods__["wHideAlarmAreaTopLeftY"] = _hk_struct_test.NET_DVR_HIDEALARM_V30_wHideAlarmAreaTopLeftY_get
    if _newclass:
        wHideAlarmAreaTopLeftY = _swig_property(_hk_struct_test.NET_DVR_HIDEALARM_V30_wHideAlarmAreaTopLeftY_get, _hk_struct_test.NET_DVR_HIDEALARM_V30_wHideAlarmAreaTopLeftY_set)
    __swig_setmethods__["wHideAlarmAreaWidth"] = _hk_struct_test.NET_DVR_HIDEALARM_V30_wHideAlarmAreaWidth_set
    __swig_getmethods__["wHideAlarmAreaWidth"] = _hk_struct_test.NET_DVR_HIDEALARM_V30_wHideAlarmAreaWidth_get
    if _newclass:
        wHideAlarmAreaWidth = _swig_property(_hk_struct_test.NET_DVR_HIDEALARM_V30_wHideAlarmAreaWidth_get, _hk_struct_test.NET_DVR_HIDEALARM_V30_wHideAlarmAreaWidth_set)
    __swig_setmethods__["wHideAlarmAreaHeight"] = _hk_struct_test.NET_DVR_HIDEALARM_V30_wHideAlarmAreaHeight_set
    __swig_getmethods__["wHideAlarmAreaHeight"] = _hk_struct_test.NET_DVR_HIDEALARM_V30_wHideAlarmAreaHeight_get
    if _newclass:
        wHideAlarmAreaHeight = _swig_property(_hk_struct_test.NET_DVR_HIDEALARM_V30_wHideAlarmAreaHeight_get, _hk_struct_test.NET_DVR_HIDEALARM_V30_wHideAlarmAreaHeight_set)
    __swig_setmethods__["strHideAlarmHandleType"] = _hk_struct_test.NET_DVR_HIDEALARM_V30_strHideAlarmHandleType_set
    __swig_getmethods__["strHideAlarmHandleType"] = _hk_struct_test.NET_DVR_HIDEALARM_V30_strHideAlarmHandleType_get
    if _newclass:
        strHideAlarmHandleType = _swig_property(_hk_struct_test.NET_DVR_HIDEALARM_V30_strHideAlarmHandleType_get, _hk_struct_test.NET_DVR_HIDEALARM_V30_strHideAlarmHandleType_set)
    __swig_setmethods__["struAlarmTime"] = _hk_struct_test.NET_DVR_HIDEALARM_V30_struAlarmTime_set
    __swig_getmethods__["struAlarmTime"] = _hk_struct_test.NET_DVR_HIDEALARM_V30_struAlarmTime_get
    if _newclass:
        struAlarmTime = _swig_property(_hk_struct_test.NET_DVR_HIDEALARM_V30_struAlarmTime_get, _hk_struct_test.NET_DVR_HIDEALARM_V30_struAlarmTime_set)

    def __init__(self):
        """__init__(NET_DVR_HIDEALARM_V30 self) -> NET_DVR_HIDEALARM_V30"""
        this = _hk_struct_test.new_NET_DVR_HIDEALARM_V30()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_HIDEALARM_V30
    __del__ = lambda self: None
NET_DVR_HIDEALARM_V30_swigregister = _hk_struct_test.NET_DVR_HIDEALARM_V30_swigregister
NET_DVR_HIDEALARM_V30_swigregister(NET_DVR_HIDEALARM_V30)

class NET_DVR_HIDEALARM(_object):
    """Proxy of C++ NET_DVR_HIDEALARM class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_HIDEALARM, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_HIDEALARM, name)
    __repr__ = _swig_repr
    __swig_setmethods__["dwEnableHideAlarm"] = _hk_struct_test.NET_DVR_HIDEALARM_dwEnableHideAlarm_set
    __swig_getmethods__["dwEnableHideAlarm"] = _hk_struct_test.NET_DVR_HIDEALARM_dwEnableHideAlarm_get
    if _newclass:
        dwEnableHideAlarm = _swig_property(_hk_struct_test.NET_DVR_HIDEALARM_dwEnableHideAlarm_get, _hk_struct_test.NET_DVR_HIDEALARM_dwEnableHideAlarm_set)
    __swig_setmethods__["wHideAlarmAreaTopLeftX"] = _hk_struct_test.NET_DVR_HIDEALARM_wHideAlarmAreaTopLeftX_set
    __swig_getmethods__["wHideAlarmAreaTopLeftX"] = _hk_struct_test.NET_DVR_HIDEALARM_wHideAlarmAreaTopLeftX_get
    if _newclass:
        wHideAlarmAreaTopLeftX = _swig_property(_hk_struct_test.NET_DVR_HIDEALARM_wHideAlarmAreaTopLeftX_get, _hk_struct_test.NET_DVR_HIDEALARM_wHideAlarmAreaTopLeftX_set)
    __swig_setmethods__["wHideAlarmAreaTopLeftY"] = _hk_struct_test.NET_DVR_HIDEALARM_wHideAlarmAreaTopLeftY_set
    __swig_getmethods__["wHideAlarmAreaTopLeftY"] = _hk_struct_test.NET_DVR_HIDEALARM_wHideAlarmAreaTopLeftY_get
    if _newclass:
        wHideAlarmAreaTopLeftY = _swig_property(_hk_struct_test.NET_DVR_HIDEALARM_wHideAlarmAreaTopLeftY_get, _hk_struct_test.NET_DVR_HIDEALARM_wHideAlarmAreaTopLeftY_set)
    __swig_setmethods__["wHideAlarmAreaWidth"] = _hk_struct_test.NET_DVR_HIDEALARM_wHideAlarmAreaWidth_set
    __swig_getmethods__["wHideAlarmAreaWidth"] = _hk_struct_test.NET_DVR_HIDEALARM_wHideAlarmAreaWidth_get
    if _newclass:
        wHideAlarmAreaWidth = _swig_property(_hk_struct_test.NET_DVR_HIDEALARM_wHideAlarmAreaWidth_get, _hk_struct_test.NET_DVR_HIDEALARM_wHideAlarmAreaWidth_set)
    __swig_setmethods__["wHideAlarmAreaHeight"] = _hk_struct_test.NET_DVR_HIDEALARM_wHideAlarmAreaHeight_set
    __swig_getmethods__["wHideAlarmAreaHeight"] = _hk_struct_test.NET_DVR_HIDEALARM_wHideAlarmAreaHeight_get
    if _newclass:
        wHideAlarmAreaHeight = _swig_property(_hk_struct_test.NET_DVR_HIDEALARM_wHideAlarmAreaHeight_get, _hk_struct_test.NET_DVR_HIDEALARM_wHideAlarmAreaHeight_set)
    __swig_setmethods__["strHideAlarmHandleType"] = _hk_struct_test.NET_DVR_HIDEALARM_strHideAlarmHandleType_set
    __swig_getmethods__["strHideAlarmHandleType"] = _hk_struct_test.NET_DVR_HIDEALARM_strHideAlarmHandleType_get
    if _newclass:
        strHideAlarmHandleType = _swig_property(_hk_struct_test.NET_DVR_HIDEALARM_strHideAlarmHandleType_get, _hk_struct_test.NET_DVR_HIDEALARM_strHideAlarmHandleType_set)
    __swig_setmethods__["struAlarmTime"] = _hk_struct_test.NET_DVR_HIDEALARM_struAlarmTime_set
    __swig_getmethods__["struAlarmTime"] = _hk_struct_test.NET_DVR_HIDEALARM_struAlarmTime_get
    if _newclass:
        struAlarmTime = _swig_property(_hk_struct_test.NET_DVR_HIDEALARM_struAlarmTime_get, _hk_struct_test.NET_DVR_HIDEALARM_struAlarmTime_set)

    def __init__(self):
        """__init__(NET_DVR_HIDEALARM self) -> NET_DVR_HIDEALARM"""
        this = _hk_struct_test.new_NET_DVR_HIDEALARM()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_HIDEALARM
    __del__ = lambda self: None
NET_DVR_HIDEALARM_swigregister = _hk_struct_test.NET_DVR_HIDEALARM_swigregister
NET_DVR_HIDEALARM_swigregister(NET_DVR_HIDEALARM)

class NET_DVR_VILOST_V30(_object):
    """Proxy of C++ NET_DVR_VILOST_V30 class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_VILOST_V30, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_VILOST_V30, name)
    __repr__ = _swig_repr
    __swig_setmethods__["byEnableHandleVILost"] = _hk_struct_test.NET_DVR_VILOST_V30_byEnableHandleVILost_set
    __swig_getmethods__["byEnableHandleVILost"] = _hk_struct_test.NET_DVR_VILOST_V30_byEnableHandleVILost_get
    if _newclass:
        byEnableHandleVILost = _swig_property(_hk_struct_test.NET_DVR_VILOST_V30_byEnableHandleVILost_get, _hk_struct_test.NET_DVR_VILOST_V30_byEnableHandleVILost_set)
    __swig_setmethods__["strVILostHandleType"] = _hk_struct_test.NET_DVR_VILOST_V30_strVILostHandleType_set
    __swig_getmethods__["strVILostHandleType"] = _hk_struct_test.NET_DVR_VILOST_V30_strVILostHandleType_get
    if _newclass:
        strVILostHandleType = _swig_property(_hk_struct_test.NET_DVR_VILOST_V30_strVILostHandleType_get, _hk_struct_test.NET_DVR_VILOST_V30_strVILostHandleType_set)
    __swig_setmethods__["struAlarmTime"] = _hk_struct_test.NET_DVR_VILOST_V30_struAlarmTime_set
    __swig_getmethods__["struAlarmTime"] = _hk_struct_test.NET_DVR_VILOST_V30_struAlarmTime_get
    if _newclass:
        struAlarmTime = _swig_property(_hk_struct_test.NET_DVR_VILOST_V30_struAlarmTime_get, _hk_struct_test.NET_DVR_VILOST_V30_struAlarmTime_set)

    def __init__(self):
        """__init__(NET_DVR_VILOST_V30 self) -> NET_DVR_VILOST_V30"""
        this = _hk_struct_test.new_NET_DVR_VILOST_V30()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_VILOST_V30
    __del__ = lambda self: None
NET_DVR_VILOST_V30_swigregister = _hk_struct_test.NET_DVR_VILOST_V30_swigregister
NET_DVR_VILOST_V30_swigregister(NET_DVR_VILOST_V30)

class NET_DVR_VILOST(_object):
    """Proxy of C++ NET_DVR_VILOST class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_VILOST, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_VILOST, name)
    __repr__ = _swig_repr
    __swig_setmethods__["byEnableHandleVILost"] = _hk_struct_test.NET_DVR_VILOST_byEnableHandleVILost_set
    __swig_getmethods__["byEnableHandleVILost"] = _hk_struct_test.NET_DVR_VILOST_byEnableHandleVILost_get
    if _newclass:
        byEnableHandleVILost = _swig_property(_hk_struct_test.NET_DVR_VILOST_byEnableHandleVILost_get, _hk_struct_test.NET_DVR_VILOST_byEnableHandleVILost_set)
    __swig_setmethods__["strVILostHandleType"] = _hk_struct_test.NET_DVR_VILOST_strVILostHandleType_set
    __swig_getmethods__["strVILostHandleType"] = _hk_struct_test.NET_DVR_VILOST_strVILostHandleType_get
    if _newclass:
        strVILostHandleType = _swig_property(_hk_struct_test.NET_DVR_VILOST_strVILostHandleType_get, _hk_struct_test.NET_DVR_VILOST_strVILostHandleType_set)
    __swig_setmethods__["struAlarmTime"] = _hk_struct_test.NET_DVR_VILOST_struAlarmTime_set
    __swig_getmethods__["struAlarmTime"] = _hk_struct_test.NET_DVR_VILOST_struAlarmTime_get
    if _newclass:
        struAlarmTime = _swig_property(_hk_struct_test.NET_DVR_VILOST_struAlarmTime_get, _hk_struct_test.NET_DVR_VILOST_struAlarmTime_set)

    def __init__(self):
        """__init__(NET_DVR_VILOST self) -> NET_DVR_VILOST"""
        this = _hk_struct_test.new_NET_DVR_VILOST()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_VILOST
    __del__ = lambda self: None
NET_DVR_VILOST_swigregister = _hk_struct_test.NET_DVR_VILOST_swigregister
NET_DVR_VILOST_swigregister(NET_DVR_VILOST)

class NET_DVR_SHELTER(_object):
    """Proxy of C++ NET_DVR_SHELTER class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_SHELTER, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_SHELTER, name)
    __repr__ = _swig_repr
    __swig_setmethods__["wHideAreaTopLeftX"] = _hk_struct_test.NET_DVR_SHELTER_wHideAreaTopLeftX_set
    __swig_getmethods__["wHideAreaTopLeftX"] = _hk_struct_test.NET_DVR_SHELTER_wHideAreaTopLeftX_get
    if _newclass:
        wHideAreaTopLeftX = _swig_property(_hk_struct_test.NET_DVR_SHELTER_wHideAreaTopLeftX_get, _hk_struct_test.NET_DVR_SHELTER_wHideAreaTopLeftX_set)
    __swig_setmethods__["wHideAreaTopLeftY"] = _hk_struct_test.NET_DVR_SHELTER_wHideAreaTopLeftY_set
    __swig_getmethods__["wHideAreaTopLeftY"] = _hk_struct_test.NET_DVR_SHELTER_wHideAreaTopLeftY_get
    if _newclass:
        wHideAreaTopLeftY = _swig_property(_hk_struct_test.NET_DVR_SHELTER_wHideAreaTopLeftY_get, _hk_struct_test.NET_DVR_SHELTER_wHideAreaTopLeftY_set)
    __swig_setmethods__["wHideAreaWidth"] = _hk_struct_test.NET_DVR_SHELTER_wHideAreaWidth_set
    __swig_getmethods__["wHideAreaWidth"] = _hk_struct_test.NET_DVR_SHELTER_wHideAreaWidth_get
    if _newclass:
        wHideAreaWidth = _swig_property(_hk_struct_test.NET_DVR_SHELTER_wHideAreaWidth_get, _hk_struct_test.NET_DVR_SHELTER_wHideAreaWidth_set)
    __swig_setmethods__["wHideAreaHeight"] = _hk_struct_test.NET_DVR_SHELTER_wHideAreaHeight_set
    __swig_getmethods__["wHideAreaHeight"] = _hk_struct_test.NET_DVR_SHELTER_wHideAreaHeight_get
    if _newclass:
        wHideAreaHeight = _swig_property(_hk_struct_test.NET_DVR_SHELTER_wHideAreaHeight_get, _hk_struct_test.NET_DVR_SHELTER_wHideAreaHeight_set)

    def __init__(self):
        """__init__(NET_DVR_SHELTER self) -> NET_DVR_SHELTER"""
        this = _hk_struct_test.new_NET_DVR_SHELTER()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_SHELTER
    __del__ = lambda self: None
NET_DVR_SHELTER_swigregister = _hk_struct_test.NET_DVR_SHELTER_swigregister
NET_DVR_SHELTER_swigregister(NET_DVR_SHELTER)

class NET_DVR_COLOR(_object):
    """Proxy of C++ NET_DVR_COLOR class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_COLOR, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_COLOR, name)
    __repr__ = _swig_repr
    __swig_setmethods__["byBrightness"] = _hk_struct_test.NET_DVR_COLOR_byBrightness_set
    __swig_getmethods__["byBrightness"] = _hk_struct_test.NET_DVR_COLOR_byBrightness_get
    if _newclass:
        byBrightness = _swig_property(_hk_struct_test.NET_DVR_COLOR_byBrightness_get, _hk_struct_test.NET_DVR_COLOR_byBrightness_set)
    __swig_setmethods__["byContrast"] = _hk_struct_test.NET_DVR_COLOR_byContrast_set
    __swig_getmethods__["byContrast"] = _hk_struct_test.NET_DVR_COLOR_byContrast_get
    if _newclass:
        byContrast = _swig_property(_hk_struct_test.NET_DVR_COLOR_byContrast_get, _hk_struct_test.NET_DVR_COLOR_byContrast_set)
    __swig_setmethods__["bySaturation"] = _hk_struct_test.NET_DVR_COLOR_bySaturation_set
    __swig_getmethods__["bySaturation"] = _hk_struct_test.NET_DVR_COLOR_bySaturation_get
    if _newclass:
        bySaturation = _swig_property(_hk_struct_test.NET_DVR_COLOR_bySaturation_get, _hk_struct_test.NET_DVR_COLOR_bySaturation_set)
    __swig_setmethods__["byHue"] = _hk_struct_test.NET_DVR_COLOR_byHue_set
    __swig_getmethods__["byHue"] = _hk_struct_test.NET_DVR_COLOR_byHue_get
    if _newclass:
        byHue = _swig_property(_hk_struct_test.NET_DVR_COLOR_byHue_get, _hk_struct_test.NET_DVR_COLOR_byHue_set)

    def __init__(self):
        """__init__(NET_DVR_COLOR self) -> NET_DVR_COLOR"""
        this = _hk_struct_test.new_NET_DVR_COLOR()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_COLOR
    __del__ = lambda self: None
NET_DVR_COLOR_swigregister = _hk_struct_test.NET_DVR_COLOR_swigregister
NET_DVR_COLOR_swigregister(NET_DVR_COLOR)

class NET_DVR_RGB_COLOR(_object):
    """Proxy of C++ NET_DVR_RGB_COLOR class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_RGB_COLOR, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_RGB_COLOR, name)
    __repr__ = _swig_repr
    __swig_setmethods__["byRed"] = _hk_struct_test.NET_DVR_RGB_COLOR_byRed_set
    __swig_getmethods__["byRed"] = _hk_struct_test.NET_DVR_RGB_COLOR_byRed_get
    if _newclass:
        byRed = _swig_property(_hk_struct_test.NET_DVR_RGB_COLOR_byRed_get, _hk_struct_test.NET_DVR_RGB_COLOR_byRed_set)
    __swig_setmethods__["byGreen"] = _hk_struct_test.NET_DVR_RGB_COLOR_byGreen_set
    __swig_getmethods__["byGreen"] = _hk_struct_test.NET_DVR_RGB_COLOR_byGreen_get
    if _newclass:
        byGreen = _swig_property(_hk_struct_test.NET_DVR_RGB_COLOR_byGreen_get, _hk_struct_test.NET_DVR_RGB_COLOR_byGreen_set)
    __swig_setmethods__["byBlue"] = _hk_struct_test.NET_DVR_RGB_COLOR_byBlue_set
    __swig_getmethods__["byBlue"] = _hk_struct_test.NET_DVR_RGB_COLOR_byBlue_get
    if _newclass:
        byBlue = _swig_property(_hk_struct_test.NET_DVR_RGB_COLOR_byBlue_get, _hk_struct_test.NET_DVR_RGB_COLOR_byBlue_set)
    __swig_setmethods__["byRes"] = _hk_struct_test.NET_DVR_RGB_COLOR_byRes_set
    __swig_getmethods__["byRes"] = _hk_struct_test.NET_DVR_RGB_COLOR_byRes_get
    if _newclass:
        byRes = _swig_property(_hk_struct_test.NET_DVR_RGB_COLOR_byRes_get, _hk_struct_test.NET_DVR_RGB_COLOR_byRes_set)

    def __init__(self):
        """__init__(NET_DVR_RGB_COLOR self) -> NET_DVR_RGB_COLOR"""
        this = _hk_struct_test.new_NET_DVR_RGB_COLOR()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_RGB_COLOR
    __del__ = lambda self: None
NET_DVR_RGB_COLOR_swigregister = _hk_struct_test.NET_DVR_RGB_COLOR_swigregister
NET_DVR_RGB_COLOR_swigregister(NET_DVR_RGB_COLOR)

class NET_VCA_POINT(_object):
    """Proxy of C++ tagNET_VCA_POINT class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_VCA_POINT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_VCA_POINT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["fX"] = _hk_struct_test.NET_VCA_POINT_fX_set
    __swig_getmethods__["fX"] = _hk_struct_test.NET_VCA_POINT_fX_get
    if _newclass:
        fX = _swig_property(_hk_struct_test.NET_VCA_POINT_fX_get, _hk_struct_test.NET_VCA_POINT_fX_set)
    __swig_setmethods__["fY"] = _hk_struct_test.NET_VCA_POINT_fY_set
    __swig_getmethods__["fY"] = _hk_struct_test.NET_VCA_POINT_fY_get
    if _newclass:
        fY = _swig_property(_hk_struct_test.NET_VCA_POINT_fY_get, _hk_struct_test.NET_VCA_POINT_fY_set)

    def __init__(self):
        """__init__(tagNET_VCA_POINT self) -> NET_VCA_POINT"""
        this = _hk_struct_test.new_NET_VCA_POINT()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_VCA_POINT
    __del__ = lambda self: None
NET_VCA_POINT_swigregister = _hk_struct_test.NET_VCA_POINT_swigregister
NET_VCA_POINT_swigregister(NET_VCA_POINT)

class NET_DVR_PICCFG_V30(_object):
    """Proxy of C++ NET_DVR_PICCFG_V30 class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_PICCFG_V30, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_PICCFG_V30, name)
    __repr__ = _swig_repr
    __swig_setmethods__["dwSize"] = _hk_struct_test.NET_DVR_PICCFG_V30_dwSize_set
    __swig_getmethods__["dwSize"] = _hk_struct_test.NET_DVR_PICCFG_V30_dwSize_get
    if _newclass:
        dwSize = _swig_property(_hk_struct_test.NET_DVR_PICCFG_V30_dwSize_get, _hk_struct_test.NET_DVR_PICCFG_V30_dwSize_set)
    __swig_setmethods__["sChanName"] = _hk_struct_test.NET_DVR_PICCFG_V30_sChanName_set
    __swig_getmethods__["sChanName"] = _hk_struct_test.NET_DVR_PICCFG_V30_sChanName_get
    if _newclass:
        sChanName = _swig_property(_hk_struct_test.NET_DVR_PICCFG_V30_sChanName_get, _hk_struct_test.NET_DVR_PICCFG_V30_sChanName_set)
    __swig_setmethods__["dwVideoFormat"] = _hk_struct_test.NET_DVR_PICCFG_V30_dwVideoFormat_set
    __swig_getmethods__["dwVideoFormat"] = _hk_struct_test.NET_DVR_PICCFG_V30_dwVideoFormat_get
    if _newclass:
        dwVideoFormat = _swig_property(_hk_struct_test.NET_DVR_PICCFG_V30_dwVideoFormat_get, _hk_struct_test.NET_DVR_PICCFG_V30_dwVideoFormat_set)
    __swig_setmethods__["byReservedData"] = _hk_struct_test.NET_DVR_PICCFG_V30_byReservedData_set
    __swig_getmethods__["byReservedData"] = _hk_struct_test.NET_DVR_PICCFG_V30_byReservedData_get
    if _newclass:
        byReservedData = _swig_property(_hk_struct_test.NET_DVR_PICCFG_V30_byReservedData_get, _hk_struct_test.NET_DVR_PICCFG_V30_byReservedData_set)
    __swig_setmethods__["dwShowChanName"] = _hk_struct_test.NET_DVR_PICCFG_V30_dwShowChanName_set
    __swig_getmethods__["dwShowChanName"] = _hk_struct_test.NET_DVR_PICCFG_V30_dwShowChanName_get
    if _newclass:
        dwShowChanName = _swig_property(_hk_struct_test.NET_DVR_PICCFG_V30_dwShowChanName_get, _hk_struct_test.NET_DVR_PICCFG_V30_dwShowChanName_set)
    __swig_setmethods__["wShowNameTopLeftX"] = _hk_struct_test.NET_DVR_PICCFG_V30_wShowNameTopLeftX_set
    __swig_getmethods__["wShowNameTopLeftX"] = _hk_struct_test.NET_DVR_PICCFG_V30_wShowNameTopLeftX_get
    if _newclass:
        wShowNameTopLeftX = _swig_property(_hk_struct_test.NET_DVR_PICCFG_V30_wShowNameTopLeftX_get, _hk_struct_test.NET_DVR_PICCFG_V30_wShowNameTopLeftX_set)
    __swig_setmethods__["wShowNameTopLeftY"] = _hk_struct_test.NET_DVR_PICCFG_V30_wShowNameTopLeftY_set
    __swig_getmethods__["wShowNameTopLeftY"] = _hk_struct_test.NET_DVR_PICCFG_V30_wShowNameTopLeftY_get
    if _newclass:
        wShowNameTopLeftY = _swig_property(_hk_struct_test.NET_DVR_PICCFG_V30_wShowNameTopLeftY_get, _hk_struct_test.NET_DVR_PICCFG_V30_wShowNameTopLeftY_set)
    __swig_setmethods__["struVILost"] = _hk_struct_test.NET_DVR_PICCFG_V30_struVILost_set
    __swig_getmethods__["struVILost"] = _hk_struct_test.NET_DVR_PICCFG_V30_struVILost_get
    if _newclass:
        struVILost = _swig_property(_hk_struct_test.NET_DVR_PICCFG_V30_struVILost_get, _hk_struct_test.NET_DVR_PICCFG_V30_struVILost_set)
    __swig_setmethods__["struRes"] = _hk_struct_test.NET_DVR_PICCFG_V30_struRes_set
    __swig_getmethods__["struRes"] = _hk_struct_test.NET_DVR_PICCFG_V30_struRes_get
    if _newclass:
        struRes = _swig_property(_hk_struct_test.NET_DVR_PICCFG_V30_struRes_get, _hk_struct_test.NET_DVR_PICCFG_V30_struRes_set)
    __swig_setmethods__["struMotion"] = _hk_struct_test.NET_DVR_PICCFG_V30_struMotion_set
    __swig_getmethods__["struMotion"] = _hk_struct_test.NET_DVR_PICCFG_V30_struMotion_get
    if _newclass:
        struMotion = _swig_property(_hk_struct_test.NET_DVR_PICCFG_V30_struMotion_get, _hk_struct_test.NET_DVR_PICCFG_V30_struMotion_set)
    __swig_setmethods__["struHideAlarm"] = _hk_struct_test.NET_DVR_PICCFG_V30_struHideAlarm_set
    __swig_getmethods__["struHideAlarm"] = _hk_struct_test.NET_DVR_PICCFG_V30_struHideAlarm_get
    if _newclass:
        struHideAlarm = _swig_property(_hk_struct_test.NET_DVR_PICCFG_V30_struHideAlarm_get, _hk_struct_test.NET_DVR_PICCFG_V30_struHideAlarm_set)
    __swig_setmethods__["dwEnableHide"] = _hk_struct_test.NET_DVR_PICCFG_V30_dwEnableHide_set
    __swig_getmethods__["dwEnableHide"] = _hk_struct_test.NET_DVR_PICCFG_V30_dwEnableHide_get
    if _newclass:
        dwEnableHide = _swig_property(_hk_struct_test.NET_DVR_PICCFG_V30_dwEnableHide_get, _hk_struct_test.NET_DVR_PICCFG_V30_dwEnableHide_set)
    __swig_setmethods__["struShelter"] = _hk_struct_test.NET_DVR_PICCFG_V30_struShelter_set
    __swig_getmethods__["struShelter"] = _hk_struct_test.NET_DVR_PICCFG_V30_struShelter_get
    if _newclass:
        struShelter = _swig_property(_hk_struct_test.NET_DVR_PICCFG_V30_struShelter_get, _hk_struct_test.NET_DVR_PICCFG_V30_struShelter_set)
    __swig_setmethods__["dwShowOsd"] = _hk_struct_test.NET_DVR_PICCFG_V30_dwShowOsd_set
    __swig_getmethods__["dwShowOsd"] = _hk_struct_test.NET_DVR_PICCFG_V30_dwShowOsd_get
    if _newclass:
        dwShowOsd = _swig_property(_hk_struct_test.NET_DVR_PICCFG_V30_dwShowOsd_get, _hk_struct_test.NET_DVR_PICCFG_V30_dwShowOsd_set)
    __swig_setmethods__["wOSDTopLeftX"] = _hk_struct_test.NET_DVR_PICCFG_V30_wOSDTopLeftX_set
    __swig_getmethods__["wOSDTopLeftX"] = _hk_struct_test.NET_DVR_PICCFG_V30_wOSDTopLeftX_get
    if _newclass:
        wOSDTopLeftX = _swig_property(_hk_struct_test.NET_DVR_PICCFG_V30_wOSDTopLeftX_get, _hk_struct_test.NET_DVR_PICCFG_V30_wOSDTopLeftX_set)
    __swig_setmethods__["wOSDTopLeftY"] = _hk_struct_test.NET_DVR_PICCFG_V30_wOSDTopLeftY_set
    __swig_getmethods__["wOSDTopLeftY"] = _hk_struct_test.NET_DVR_PICCFG_V30_wOSDTopLeftY_get
    if _newclass:
        wOSDTopLeftY = _swig_property(_hk_struct_test.NET_DVR_PICCFG_V30_wOSDTopLeftY_get, _hk_struct_test.NET_DVR_PICCFG_V30_wOSDTopLeftY_set)
    __swig_setmethods__["byOSDType"] = _hk_struct_test.NET_DVR_PICCFG_V30_byOSDType_set
    __swig_getmethods__["byOSDType"] = _hk_struct_test.NET_DVR_PICCFG_V30_byOSDType_get
    if _newclass:
        byOSDType = _swig_property(_hk_struct_test.NET_DVR_PICCFG_V30_byOSDType_get, _hk_struct_test.NET_DVR_PICCFG_V30_byOSDType_set)
    __swig_setmethods__["byDispWeek"] = _hk_struct_test.NET_DVR_PICCFG_V30_byDispWeek_set
    __swig_getmethods__["byDispWeek"] = _hk_struct_test.NET_DVR_PICCFG_V30_byDispWeek_get
    if _newclass:
        byDispWeek = _swig_property(_hk_struct_test.NET_DVR_PICCFG_V30_byDispWeek_get, _hk_struct_test.NET_DVR_PICCFG_V30_byDispWeek_set)
    __swig_setmethods__["byOSDAttrib"] = _hk_struct_test.NET_DVR_PICCFG_V30_byOSDAttrib_set
    __swig_getmethods__["byOSDAttrib"] = _hk_struct_test.NET_DVR_PICCFG_V30_byOSDAttrib_get
    if _newclass:
        byOSDAttrib = _swig_property(_hk_struct_test.NET_DVR_PICCFG_V30_byOSDAttrib_get, _hk_struct_test.NET_DVR_PICCFG_V30_byOSDAttrib_set)
    __swig_setmethods__["byHourOSDType"] = _hk_struct_test.NET_DVR_PICCFG_V30_byHourOSDType_set
    __swig_getmethods__["byHourOSDType"] = _hk_struct_test.NET_DVR_PICCFG_V30_byHourOSDType_get
    if _newclass:
        byHourOSDType = _swig_property(_hk_struct_test.NET_DVR_PICCFG_V30_byHourOSDType_get, _hk_struct_test.NET_DVR_PICCFG_V30_byHourOSDType_set)
    __swig_setmethods__["byFontSize"] = _hk_struct_test.NET_DVR_PICCFG_V30_byFontSize_set
    __swig_getmethods__["byFontSize"] = _hk_struct_test.NET_DVR_PICCFG_V30_byFontSize_get
    if _newclass:
        byFontSize = _swig_property(_hk_struct_test.NET_DVR_PICCFG_V30_byFontSize_get, _hk_struct_test.NET_DVR_PICCFG_V30_byFontSize_set)
    __swig_setmethods__["byOSDColorType"] = _hk_struct_test.NET_DVR_PICCFG_V30_byOSDColorType_set
    __swig_getmethods__["byOSDColorType"] = _hk_struct_test.NET_DVR_PICCFG_V30_byOSDColorType_get
    if _newclass:
        byOSDColorType = _swig_property(_hk_struct_test.NET_DVR_PICCFG_V30_byOSDColorType_get, _hk_struct_test.NET_DVR_PICCFG_V30_byOSDColorType_set)
    __swig_setmethods__["byAlignment"] = _hk_struct_test.NET_DVR_PICCFG_V30_byAlignment_set
    __swig_getmethods__["byAlignment"] = _hk_struct_test.NET_DVR_PICCFG_V30_byAlignment_get
    if _newclass:
        byAlignment = _swig_property(_hk_struct_test.NET_DVR_PICCFG_V30_byAlignment_get, _hk_struct_test.NET_DVR_PICCFG_V30_byAlignment_set)
    __swig_setmethods__["byOSDMilliSecondEnable"] = _hk_struct_test.NET_DVR_PICCFG_V30_byOSDMilliSecondEnable_set
    __swig_getmethods__["byOSDMilliSecondEnable"] = _hk_struct_test.NET_DVR_PICCFG_V30_byOSDMilliSecondEnable_get
    if _newclass:
        byOSDMilliSecondEnable = _swig_property(_hk_struct_test.NET_DVR_PICCFG_V30_byOSDMilliSecondEnable_get, _hk_struct_test.NET_DVR_PICCFG_V30_byOSDMilliSecondEnable_set)
    __swig_setmethods__["struOsdColor"] = _hk_struct_test.NET_DVR_PICCFG_V30_struOsdColor_set
    __swig_getmethods__["struOsdColor"] = _hk_struct_test.NET_DVR_PICCFG_V30_struOsdColor_get
    if _newclass:
        struOsdColor = _swig_property(_hk_struct_test.NET_DVR_PICCFG_V30_struOsdColor_get, _hk_struct_test.NET_DVR_PICCFG_V30_struOsdColor_set)
    __swig_setmethods__["dwBoundary"] = _hk_struct_test.NET_DVR_PICCFG_V30_dwBoundary_set
    __swig_getmethods__["dwBoundary"] = _hk_struct_test.NET_DVR_PICCFG_V30_dwBoundary_get
    if _newclass:
        dwBoundary = _swig_property(_hk_struct_test.NET_DVR_PICCFG_V30_dwBoundary_get, _hk_struct_test.NET_DVR_PICCFG_V30_dwBoundary_set)
    __swig_setmethods__["struOsdBkColor"] = _hk_struct_test.NET_DVR_PICCFG_V30_struOsdBkColor_set
    __swig_getmethods__["struOsdBkColor"] = _hk_struct_test.NET_DVR_PICCFG_V30_struOsdBkColor_get
    if _newclass:
        struOsdBkColor = _swig_property(_hk_struct_test.NET_DVR_PICCFG_V30_struOsdBkColor_get, _hk_struct_test.NET_DVR_PICCFG_V30_struOsdBkColor_set)
    __swig_setmethods__["byOSDBkColorMode"] = _hk_struct_test.NET_DVR_PICCFG_V30_byOSDBkColorMode_set
    __swig_getmethods__["byOSDBkColorMode"] = _hk_struct_test.NET_DVR_PICCFG_V30_byOSDBkColorMode_get
    if _newclass:
        byOSDBkColorMode = _swig_property(_hk_struct_test.NET_DVR_PICCFG_V30_byOSDBkColorMode_get, _hk_struct_test.NET_DVR_PICCFG_V30_byOSDBkColorMode_set)
    __swig_setmethods__["byUpDownBoundary"] = _hk_struct_test.NET_DVR_PICCFG_V30_byUpDownBoundary_set
    __swig_getmethods__["byUpDownBoundary"] = _hk_struct_test.NET_DVR_PICCFG_V30_byUpDownBoundary_get
    if _newclass:
        byUpDownBoundary = _swig_property(_hk_struct_test.NET_DVR_PICCFG_V30_byUpDownBoundary_get, _hk_struct_test.NET_DVR_PICCFG_V30_byUpDownBoundary_set)
    __swig_setmethods__["byLeftRightBoundary"] = _hk_struct_test.NET_DVR_PICCFG_V30_byLeftRightBoundary_set
    __swig_getmethods__["byLeftRightBoundary"] = _hk_struct_test.NET_DVR_PICCFG_V30_byLeftRightBoundary_get
    if _newclass:
        byLeftRightBoundary = _swig_property(_hk_struct_test.NET_DVR_PICCFG_V30_byLeftRightBoundary_get, _hk_struct_test.NET_DVR_PICCFG_V30_byLeftRightBoundary_set)
    __swig_setmethods__["byAngleEnabled"] = _hk_struct_test.NET_DVR_PICCFG_V30_byAngleEnabled_set
    __swig_getmethods__["byAngleEnabled"] = _hk_struct_test.NET_DVR_PICCFG_V30_byAngleEnabled_get
    if _newclass:
        byAngleEnabled = _swig_property(_hk_struct_test.NET_DVR_PICCFG_V30_byAngleEnabled_get, _hk_struct_test.NET_DVR_PICCFG_V30_byAngleEnabled_set)
    __swig_setmethods__["wTiltAngleTopLeftX"] = _hk_struct_test.NET_DVR_PICCFG_V30_wTiltAngleTopLeftX_set
    __swig_getmethods__["wTiltAngleTopLeftX"] = _hk_struct_test.NET_DVR_PICCFG_V30_wTiltAngleTopLeftX_get
    if _newclass:
        wTiltAngleTopLeftX = _swig_property(_hk_struct_test.NET_DVR_PICCFG_V30_wTiltAngleTopLeftX_get, _hk_struct_test.NET_DVR_PICCFG_V30_wTiltAngleTopLeftX_set)
    __swig_setmethods__["wTiltAngleTopLeftY"] = _hk_struct_test.NET_DVR_PICCFG_V30_wTiltAngleTopLeftY_set
    __swig_getmethods__["wTiltAngleTopLeftY"] = _hk_struct_test.NET_DVR_PICCFG_V30_wTiltAngleTopLeftY_get
    if _newclass:
        wTiltAngleTopLeftY = _swig_property(_hk_struct_test.NET_DVR_PICCFG_V30_wTiltAngleTopLeftY_get, _hk_struct_test.NET_DVR_PICCFG_V30_wTiltAngleTopLeftY_set)
    __swig_setmethods__["byRes"] = _hk_struct_test.NET_DVR_PICCFG_V30_byRes_set
    __swig_getmethods__["byRes"] = _hk_struct_test.NET_DVR_PICCFG_V30_byRes_get
    if _newclass:
        byRes = _swig_property(_hk_struct_test.NET_DVR_PICCFG_V30_byRes_get, _hk_struct_test.NET_DVR_PICCFG_V30_byRes_set)

    def __init__(self):
        """__init__(NET_DVR_PICCFG_V30 self) -> NET_DVR_PICCFG_V30"""
        this = _hk_struct_test.new_NET_DVR_PICCFG_V30()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_PICCFG_V30
    __del__ = lambda self: None
NET_DVR_PICCFG_V30_swigregister = _hk_struct_test.NET_DVR_PICCFG_V30_swigregister
NET_DVR_PICCFG_V30_swigregister(NET_DVR_PICCFG_V30)

class NET_DVR_PICCFG_EX(_object):
    """Proxy of C++ NET_DVR_PICCFG_EX class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_PICCFG_EX, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_PICCFG_EX, name)
    __repr__ = _swig_repr
    __swig_setmethods__["dwSize"] = _hk_struct_test.NET_DVR_PICCFG_EX_dwSize_set
    __swig_getmethods__["dwSize"] = _hk_struct_test.NET_DVR_PICCFG_EX_dwSize_get
    if _newclass:
        dwSize = _swig_property(_hk_struct_test.NET_DVR_PICCFG_EX_dwSize_get, _hk_struct_test.NET_DVR_PICCFG_EX_dwSize_set)
    __swig_setmethods__["sChanName"] = _hk_struct_test.NET_DVR_PICCFG_EX_sChanName_set
    __swig_getmethods__["sChanName"] = _hk_struct_test.NET_DVR_PICCFG_EX_sChanName_get
    if _newclass:
        sChanName = _swig_property(_hk_struct_test.NET_DVR_PICCFG_EX_sChanName_get, _hk_struct_test.NET_DVR_PICCFG_EX_sChanName_set)
    __swig_setmethods__["dwVideoFormat"] = _hk_struct_test.NET_DVR_PICCFG_EX_dwVideoFormat_set
    __swig_getmethods__["dwVideoFormat"] = _hk_struct_test.NET_DVR_PICCFG_EX_dwVideoFormat_get
    if _newclass:
        dwVideoFormat = _swig_property(_hk_struct_test.NET_DVR_PICCFG_EX_dwVideoFormat_get, _hk_struct_test.NET_DVR_PICCFG_EX_dwVideoFormat_set)
    __swig_setmethods__["byBrightness"] = _hk_struct_test.NET_DVR_PICCFG_EX_byBrightness_set
    __swig_getmethods__["byBrightness"] = _hk_struct_test.NET_DVR_PICCFG_EX_byBrightness_get
    if _newclass:
        byBrightness = _swig_property(_hk_struct_test.NET_DVR_PICCFG_EX_byBrightness_get, _hk_struct_test.NET_DVR_PICCFG_EX_byBrightness_set)
    __swig_setmethods__["byContrast"] = _hk_struct_test.NET_DVR_PICCFG_EX_byContrast_set
    __swig_getmethods__["byContrast"] = _hk_struct_test.NET_DVR_PICCFG_EX_byContrast_get
    if _newclass:
        byContrast = _swig_property(_hk_struct_test.NET_DVR_PICCFG_EX_byContrast_get, _hk_struct_test.NET_DVR_PICCFG_EX_byContrast_set)
    __swig_setmethods__["bySaturation"] = _hk_struct_test.NET_DVR_PICCFG_EX_bySaturation_set
    __swig_getmethods__["bySaturation"] = _hk_struct_test.NET_DVR_PICCFG_EX_bySaturation_get
    if _newclass:
        bySaturation = _swig_property(_hk_struct_test.NET_DVR_PICCFG_EX_bySaturation_get, _hk_struct_test.NET_DVR_PICCFG_EX_bySaturation_set)
    __swig_setmethods__["byHue"] = _hk_struct_test.NET_DVR_PICCFG_EX_byHue_set
    __swig_getmethods__["byHue"] = _hk_struct_test.NET_DVR_PICCFG_EX_byHue_get
    if _newclass:
        byHue = _swig_property(_hk_struct_test.NET_DVR_PICCFG_EX_byHue_get, _hk_struct_test.NET_DVR_PICCFG_EX_byHue_set)
    __swig_setmethods__["dwShowChanName"] = _hk_struct_test.NET_DVR_PICCFG_EX_dwShowChanName_set
    __swig_getmethods__["dwShowChanName"] = _hk_struct_test.NET_DVR_PICCFG_EX_dwShowChanName_get
    if _newclass:
        dwShowChanName = _swig_property(_hk_struct_test.NET_DVR_PICCFG_EX_dwShowChanName_get, _hk_struct_test.NET_DVR_PICCFG_EX_dwShowChanName_set)
    __swig_setmethods__["wShowNameTopLeftX"] = _hk_struct_test.NET_DVR_PICCFG_EX_wShowNameTopLeftX_set
    __swig_getmethods__["wShowNameTopLeftX"] = _hk_struct_test.NET_DVR_PICCFG_EX_wShowNameTopLeftX_get
    if _newclass:
        wShowNameTopLeftX = _swig_property(_hk_struct_test.NET_DVR_PICCFG_EX_wShowNameTopLeftX_get, _hk_struct_test.NET_DVR_PICCFG_EX_wShowNameTopLeftX_set)
    __swig_setmethods__["wShowNameTopLeftY"] = _hk_struct_test.NET_DVR_PICCFG_EX_wShowNameTopLeftY_set
    __swig_getmethods__["wShowNameTopLeftY"] = _hk_struct_test.NET_DVR_PICCFG_EX_wShowNameTopLeftY_get
    if _newclass:
        wShowNameTopLeftY = _swig_property(_hk_struct_test.NET_DVR_PICCFG_EX_wShowNameTopLeftY_get, _hk_struct_test.NET_DVR_PICCFG_EX_wShowNameTopLeftY_set)
    __swig_setmethods__["struVILost"] = _hk_struct_test.NET_DVR_PICCFG_EX_struVILost_set
    __swig_getmethods__["struVILost"] = _hk_struct_test.NET_DVR_PICCFG_EX_struVILost_get
    if _newclass:
        struVILost = _swig_property(_hk_struct_test.NET_DVR_PICCFG_EX_struVILost_get, _hk_struct_test.NET_DVR_PICCFG_EX_struVILost_set)
    __swig_setmethods__["struMotion"] = _hk_struct_test.NET_DVR_PICCFG_EX_struMotion_set
    __swig_getmethods__["struMotion"] = _hk_struct_test.NET_DVR_PICCFG_EX_struMotion_get
    if _newclass:
        struMotion = _swig_property(_hk_struct_test.NET_DVR_PICCFG_EX_struMotion_get, _hk_struct_test.NET_DVR_PICCFG_EX_struMotion_set)
    __swig_setmethods__["struHideAlarm"] = _hk_struct_test.NET_DVR_PICCFG_EX_struHideAlarm_set
    __swig_getmethods__["struHideAlarm"] = _hk_struct_test.NET_DVR_PICCFG_EX_struHideAlarm_get
    if _newclass:
        struHideAlarm = _swig_property(_hk_struct_test.NET_DVR_PICCFG_EX_struHideAlarm_get, _hk_struct_test.NET_DVR_PICCFG_EX_struHideAlarm_set)
    __swig_setmethods__["dwEnableHide"] = _hk_struct_test.NET_DVR_PICCFG_EX_dwEnableHide_set
    __swig_getmethods__["dwEnableHide"] = _hk_struct_test.NET_DVR_PICCFG_EX_dwEnableHide_get
    if _newclass:
        dwEnableHide = _swig_property(_hk_struct_test.NET_DVR_PICCFG_EX_dwEnableHide_get, _hk_struct_test.NET_DVR_PICCFG_EX_dwEnableHide_set)
    __swig_setmethods__["struShelter"] = _hk_struct_test.NET_DVR_PICCFG_EX_struShelter_set
    __swig_getmethods__["struShelter"] = _hk_struct_test.NET_DVR_PICCFG_EX_struShelter_get
    if _newclass:
        struShelter = _swig_property(_hk_struct_test.NET_DVR_PICCFG_EX_struShelter_get, _hk_struct_test.NET_DVR_PICCFG_EX_struShelter_set)
    __swig_setmethods__["dwShowOsd"] = _hk_struct_test.NET_DVR_PICCFG_EX_dwShowOsd_set
    __swig_getmethods__["dwShowOsd"] = _hk_struct_test.NET_DVR_PICCFG_EX_dwShowOsd_get
    if _newclass:
        dwShowOsd = _swig_property(_hk_struct_test.NET_DVR_PICCFG_EX_dwShowOsd_get, _hk_struct_test.NET_DVR_PICCFG_EX_dwShowOsd_set)
    __swig_setmethods__["wOSDTopLeftX"] = _hk_struct_test.NET_DVR_PICCFG_EX_wOSDTopLeftX_set
    __swig_getmethods__["wOSDTopLeftX"] = _hk_struct_test.NET_DVR_PICCFG_EX_wOSDTopLeftX_get
    if _newclass:
        wOSDTopLeftX = _swig_property(_hk_struct_test.NET_DVR_PICCFG_EX_wOSDTopLeftX_get, _hk_struct_test.NET_DVR_PICCFG_EX_wOSDTopLeftX_set)
    __swig_setmethods__["wOSDTopLeftY"] = _hk_struct_test.NET_DVR_PICCFG_EX_wOSDTopLeftY_set
    __swig_getmethods__["wOSDTopLeftY"] = _hk_struct_test.NET_DVR_PICCFG_EX_wOSDTopLeftY_get
    if _newclass:
        wOSDTopLeftY = _swig_property(_hk_struct_test.NET_DVR_PICCFG_EX_wOSDTopLeftY_get, _hk_struct_test.NET_DVR_PICCFG_EX_wOSDTopLeftY_set)
    __swig_setmethods__["byOSDType"] = _hk_struct_test.NET_DVR_PICCFG_EX_byOSDType_set
    __swig_getmethods__["byOSDType"] = _hk_struct_test.NET_DVR_PICCFG_EX_byOSDType_get
    if _newclass:
        byOSDType = _swig_property(_hk_struct_test.NET_DVR_PICCFG_EX_byOSDType_get, _hk_struct_test.NET_DVR_PICCFG_EX_byOSDType_set)
    __swig_setmethods__["byDispWeek"] = _hk_struct_test.NET_DVR_PICCFG_EX_byDispWeek_set
    __swig_getmethods__["byDispWeek"] = _hk_struct_test.NET_DVR_PICCFG_EX_byDispWeek_get
    if _newclass:
        byDispWeek = _swig_property(_hk_struct_test.NET_DVR_PICCFG_EX_byDispWeek_get, _hk_struct_test.NET_DVR_PICCFG_EX_byDispWeek_set)
    __swig_setmethods__["byOSDAttrib"] = _hk_struct_test.NET_DVR_PICCFG_EX_byOSDAttrib_set
    __swig_getmethods__["byOSDAttrib"] = _hk_struct_test.NET_DVR_PICCFG_EX_byOSDAttrib_get
    if _newclass:
        byOSDAttrib = _swig_property(_hk_struct_test.NET_DVR_PICCFG_EX_byOSDAttrib_get, _hk_struct_test.NET_DVR_PICCFG_EX_byOSDAttrib_set)
    __swig_setmethods__["byHourOsdType"] = _hk_struct_test.NET_DVR_PICCFG_EX_byHourOsdType_set
    __swig_getmethods__["byHourOsdType"] = _hk_struct_test.NET_DVR_PICCFG_EX_byHourOsdType_get
    if _newclass:
        byHourOsdType = _swig_property(_hk_struct_test.NET_DVR_PICCFG_EX_byHourOsdType_get, _hk_struct_test.NET_DVR_PICCFG_EX_byHourOsdType_set)

    def __init__(self):
        """__init__(NET_DVR_PICCFG_EX self) -> NET_DVR_PICCFG_EX"""
        this = _hk_struct_test.new_NET_DVR_PICCFG_EX()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_PICCFG_EX
    __del__ = lambda self: None
NET_DVR_PICCFG_EX_swigregister = _hk_struct_test.NET_DVR_PICCFG_EX_swigregister
NET_DVR_PICCFG_EX_swigregister(NET_DVR_PICCFG_EX)

class NET_DVR_PICCFG(_object):
    """Proxy of C++ NET_DVR_PICCFG class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_PICCFG, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_PICCFG, name)
    __repr__ = _swig_repr
    __swig_setmethods__["dwSize"] = _hk_struct_test.NET_DVR_PICCFG_dwSize_set
    __swig_getmethods__["dwSize"] = _hk_struct_test.NET_DVR_PICCFG_dwSize_get
    if _newclass:
        dwSize = _swig_property(_hk_struct_test.NET_DVR_PICCFG_dwSize_get, _hk_struct_test.NET_DVR_PICCFG_dwSize_set)
    __swig_setmethods__["sChanName"] = _hk_struct_test.NET_DVR_PICCFG_sChanName_set
    __swig_getmethods__["sChanName"] = _hk_struct_test.NET_DVR_PICCFG_sChanName_get
    if _newclass:
        sChanName = _swig_property(_hk_struct_test.NET_DVR_PICCFG_sChanName_get, _hk_struct_test.NET_DVR_PICCFG_sChanName_set)
    __swig_setmethods__["dwVideoFormat"] = _hk_struct_test.NET_DVR_PICCFG_dwVideoFormat_set
    __swig_getmethods__["dwVideoFormat"] = _hk_struct_test.NET_DVR_PICCFG_dwVideoFormat_get
    if _newclass:
        dwVideoFormat = _swig_property(_hk_struct_test.NET_DVR_PICCFG_dwVideoFormat_get, _hk_struct_test.NET_DVR_PICCFG_dwVideoFormat_set)
    __swig_setmethods__["byBrightness"] = _hk_struct_test.NET_DVR_PICCFG_byBrightness_set
    __swig_getmethods__["byBrightness"] = _hk_struct_test.NET_DVR_PICCFG_byBrightness_get
    if _newclass:
        byBrightness = _swig_property(_hk_struct_test.NET_DVR_PICCFG_byBrightness_get, _hk_struct_test.NET_DVR_PICCFG_byBrightness_set)
    __swig_setmethods__["byContrast"] = _hk_struct_test.NET_DVR_PICCFG_byContrast_set
    __swig_getmethods__["byContrast"] = _hk_struct_test.NET_DVR_PICCFG_byContrast_get
    if _newclass:
        byContrast = _swig_property(_hk_struct_test.NET_DVR_PICCFG_byContrast_get, _hk_struct_test.NET_DVR_PICCFG_byContrast_set)
    __swig_setmethods__["bySaturation"] = _hk_struct_test.NET_DVR_PICCFG_bySaturation_set
    __swig_getmethods__["bySaturation"] = _hk_struct_test.NET_DVR_PICCFG_bySaturation_get
    if _newclass:
        bySaturation = _swig_property(_hk_struct_test.NET_DVR_PICCFG_bySaturation_get, _hk_struct_test.NET_DVR_PICCFG_bySaturation_set)
    __swig_setmethods__["byHue"] = _hk_struct_test.NET_DVR_PICCFG_byHue_set
    __swig_getmethods__["byHue"] = _hk_struct_test.NET_DVR_PICCFG_byHue_get
    if _newclass:
        byHue = _swig_property(_hk_struct_test.NET_DVR_PICCFG_byHue_get, _hk_struct_test.NET_DVR_PICCFG_byHue_set)
    __swig_setmethods__["dwShowChanName"] = _hk_struct_test.NET_DVR_PICCFG_dwShowChanName_set
    __swig_getmethods__["dwShowChanName"] = _hk_struct_test.NET_DVR_PICCFG_dwShowChanName_get
    if _newclass:
        dwShowChanName = _swig_property(_hk_struct_test.NET_DVR_PICCFG_dwShowChanName_get, _hk_struct_test.NET_DVR_PICCFG_dwShowChanName_set)
    __swig_setmethods__["wShowNameTopLeftX"] = _hk_struct_test.NET_DVR_PICCFG_wShowNameTopLeftX_set
    __swig_getmethods__["wShowNameTopLeftX"] = _hk_struct_test.NET_DVR_PICCFG_wShowNameTopLeftX_get
    if _newclass:
        wShowNameTopLeftX = _swig_property(_hk_struct_test.NET_DVR_PICCFG_wShowNameTopLeftX_get, _hk_struct_test.NET_DVR_PICCFG_wShowNameTopLeftX_set)
    __swig_setmethods__["wShowNameTopLeftY"] = _hk_struct_test.NET_DVR_PICCFG_wShowNameTopLeftY_set
    __swig_getmethods__["wShowNameTopLeftY"] = _hk_struct_test.NET_DVR_PICCFG_wShowNameTopLeftY_get
    if _newclass:
        wShowNameTopLeftY = _swig_property(_hk_struct_test.NET_DVR_PICCFG_wShowNameTopLeftY_get, _hk_struct_test.NET_DVR_PICCFG_wShowNameTopLeftY_set)
    __swig_setmethods__["struVILost"] = _hk_struct_test.NET_DVR_PICCFG_struVILost_set
    __swig_getmethods__["struVILost"] = _hk_struct_test.NET_DVR_PICCFG_struVILost_get
    if _newclass:
        struVILost = _swig_property(_hk_struct_test.NET_DVR_PICCFG_struVILost_get, _hk_struct_test.NET_DVR_PICCFG_struVILost_set)
    __swig_setmethods__["struMotion"] = _hk_struct_test.NET_DVR_PICCFG_struMotion_set
    __swig_getmethods__["struMotion"] = _hk_struct_test.NET_DVR_PICCFG_struMotion_get
    if _newclass:
        struMotion = _swig_property(_hk_struct_test.NET_DVR_PICCFG_struMotion_get, _hk_struct_test.NET_DVR_PICCFG_struMotion_set)
    __swig_setmethods__["struHideAlarm"] = _hk_struct_test.NET_DVR_PICCFG_struHideAlarm_set
    __swig_getmethods__["struHideAlarm"] = _hk_struct_test.NET_DVR_PICCFG_struHideAlarm_get
    if _newclass:
        struHideAlarm = _swig_property(_hk_struct_test.NET_DVR_PICCFG_struHideAlarm_get, _hk_struct_test.NET_DVR_PICCFG_struHideAlarm_set)
    __swig_setmethods__["dwEnableHide"] = _hk_struct_test.NET_DVR_PICCFG_dwEnableHide_set
    __swig_getmethods__["dwEnableHide"] = _hk_struct_test.NET_DVR_PICCFG_dwEnableHide_get
    if _newclass:
        dwEnableHide = _swig_property(_hk_struct_test.NET_DVR_PICCFG_dwEnableHide_get, _hk_struct_test.NET_DVR_PICCFG_dwEnableHide_set)
    __swig_setmethods__["wHideAreaTopLeftX"] = _hk_struct_test.NET_DVR_PICCFG_wHideAreaTopLeftX_set
    __swig_getmethods__["wHideAreaTopLeftX"] = _hk_struct_test.NET_DVR_PICCFG_wHideAreaTopLeftX_get
    if _newclass:
        wHideAreaTopLeftX = _swig_property(_hk_struct_test.NET_DVR_PICCFG_wHideAreaTopLeftX_get, _hk_struct_test.NET_DVR_PICCFG_wHideAreaTopLeftX_set)
    __swig_setmethods__["wHideAreaTopLeftY"] = _hk_struct_test.NET_DVR_PICCFG_wHideAreaTopLeftY_set
    __swig_getmethods__["wHideAreaTopLeftY"] = _hk_struct_test.NET_DVR_PICCFG_wHideAreaTopLeftY_get
    if _newclass:
        wHideAreaTopLeftY = _swig_property(_hk_struct_test.NET_DVR_PICCFG_wHideAreaTopLeftY_get, _hk_struct_test.NET_DVR_PICCFG_wHideAreaTopLeftY_set)
    __swig_setmethods__["wHideAreaWidth"] = _hk_struct_test.NET_DVR_PICCFG_wHideAreaWidth_set
    __swig_getmethods__["wHideAreaWidth"] = _hk_struct_test.NET_DVR_PICCFG_wHideAreaWidth_get
    if _newclass:
        wHideAreaWidth = _swig_property(_hk_struct_test.NET_DVR_PICCFG_wHideAreaWidth_get, _hk_struct_test.NET_DVR_PICCFG_wHideAreaWidth_set)
    __swig_setmethods__["wHideAreaHeight"] = _hk_struct_test.NET_DVR_PICCFG_wHideAreaHeight_set
    __swig_getmethods__["wHideAreaHeight"] = _hk_struct_test.NET_DVR_PICCFG_wHideAreaHeight_get
    if _newclass:
        wHideAreaHeight = _swig_property(_hk_struct_test.NET_DVR_PICCFG_wHideAreaHeight_get, _hk_struct_test.NET_DVR_PICCFG_wHideAreaHeight_set)
    __swig_setmethods__["dwShowOsd"] = _hk_struct_test.NET_DVR_PICCFG_dwShowOsd_set
    __swig_getmethods__["dwShowOsd"] = _hk_struct_test.NET_DVR_PICCFG_dwShowOsd_get
    if _newclass:
        dwShowOsd = _swig_property(_hk_struct_test.NET_DVR_PICCFG_dwShowOsd_get, _hk_struct_test.NET_DVR_PICCFG_dwShowOsd_set)
    __swig_setmethods__["wOSDTopLeftX"] = _hk_struct_test.NET_DVR_PICCFG_wOSDTopLeftX_set
    __swig_getmethods__["wOSDTopLeftX"] = _hk_struct_test.NET_DVR_PICCFG_wOSDTopLeftX_get
    if _newclass:
        wOSDTopLeftX = _swig_property(_hk_struct_test.NET_DVR_PICCFG_wOSDTopLeftX_get, _hk_struct_test.NET_DVR_PICCFG_wOSDTopLeftX_set)
    __swig_setmethods__["wOSDTopLeftY"] = _hk_struct_test.NET_DVR_PICCFG_wOSDTopLeftY_set
    __swig_getmethods__["wOSDTopLeftY"] = _hk_struct_test.NET_DVR_PICCFG_wOSDTopLeftY_get
    if _newclass:
        wOSDTopLeftY = _swig_property(_hk_struct_test.NET_DVR_PICCFG_wOSDTopLeftY_get, _hk_struct_test.NET_DVR_PICCFG_wOSDTopLeftY_set)
    __swig_setmethods__["byOSDType"] = _hk_struct_test.NET_DVR_PICCFG_byOSDType_set
    __swig_getmethods__["byOSDType"] = _hk_struct_test.NET_DVR_PICCFG_byOSDType_get
    if _newclass:
        byOSDType = _swig_property(_hk_struct_test.NET_DVR_PICCFG_byOSDType_get, _hk_struct_test.NET_DVR_PICCFG_byOSDType_set)
    __swig_setmethods__["byDispWeek"] = _hk_struct_test.NET_DVR_PICCFG_byDispWeek_set
    __swig_getmethods__["byDispWeek"] = _hk_struct_test.NET_DVR_PICCFG_byDispWeek_get
    if _newclass:
        byDispWeek = _swig_property(_hk_struct_test.NET_DVR_PICCFG_byDispWeek_get, _hk_struct_test.NET_DVR_PICCFG_byDispWeek_set)
    __swig_setmethods__["byOSDAttrib"] = _hk_struct_test.NET_DVR_PICCFG_byOSDAttrib_set
    __swig_getmethods__["byOSDAttrib"] = _hk_struct_test.NET_DVR_PICCFG_byOSDAttrib_get
    if _newclass:
        byOSDAttrib = _swig_property(_hk_struct_test.NET_DVR_PICCFG_byOSDAttrib_get, _hk_struct_test.NET_DVR_PICCFG_byOSDAttrib_set)
    __swig_setmethods__["reservedData2"] = _hk_struct_test.NET_DVR_PICCFG_reservedData2_set
    __swig_getmethods__["reservedData2"] = _hk_struct_test.NET_DVR_PICCFG_reservedData2_get
    if _newclass:
        reservedData2 = _swig_property(_hk_struct_test.NET_DVR_PICCFG_reservedData2_get, _hk_struct_test.NET_DVR_PICCFG_reservedData2_set)

    def __init__(self):
        """__init__(NET_DVR_PICCFG self) -> NET_DVR_PICCFG"""
        this = _hk_struct_test.new_NET_DVR_PICCFG()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_PICCFG
    __del__ = lambda self: None
NET_DVR_PICCFG_swigregister = _hk_struct_test.NET_DVR_PICCFG_swigregister
NET_DVR_PICCFG_swigregister(NET_DVR_PICCFG)

BITRATE_ENCODE_def = _hk_struct_test.BITRATE_ENCODE_def
BITRATE_ENCODE_8kps = _hk_struct_test.BITRATE_ENCODE_8kps
BITRATE_ENCODE_16kps = _hk_struct_test.BITRATE_ENCODE_16kps
BITRATE_ENCODE_32kps = _hk_struct_test.BITRATE_ENCODE_32kps
BITRATE_ENCODE_64kps = _hk_struct_test.BITRATE_ENCODE_64kps
BITRATE_ENCODE_128kps = _hk_struct_test.BITRATE_ENCODE_128kps
BITRATE_ENCODE_192kps = _hk_struct_test.BITRATE_ENCODE_192kps
BITRATE_ENCODE_40kps = _hk_struct_test.BITRATE_ENCODE_40kps
BITRATE_ENCODE_48kps = _hk_struct_test.BITRATE_ENCODE_48kps
BITRATE_ENCODE_56kps = _hk_struct_test.BITRATE_ENCODE_56kps
BITRATE_ENCODE_80kps = _hk_struct_test.BITRATE_ENCODE_80kps
BITRATE_ENCODE_96kps = _hk_struct_test.BITRATE_ENCODE_96kps
BITRATE_ENCODE_112kps = _hk_struct_test.BITRATE_ENCODE_112kps
BITRATE_ENCODE_144kps = _hk_struct_test.BITRATE_ENCODE_144kps
BITRATE_ENCODE_160kps = _hk_struct_test.BITRATE_ENCODE_160kps
BITRATE_ENCODE_224kps = _hk_struct_test.BITRATE_ENCODE_224kps
BITRATE_ENCODE_256kps = _hk_struct_test.BITRATE_ENCODE_256kps
BITRATE_ENCODE_320kps = _hk_struct_test.BITRATE_ENCODE_320kps
class NET_DVR_COMPRESSION_INFO_V30(_object):
    """Proxy of C++ NET_DVR_COMPRESSION_INFO_V30 class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_COMPRESSION_INFO_V30, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_COMPRESSION_INFO_V30, name)
    __repr__ = _swig_repr
    __swig_setmethods__["byStreamType"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_byStreamType_set
    __swig_getmethods__["byStreamType"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_byStreamType_get
    if _newclass:
        byStreamType = _swig_property(_hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_byStreamType_get, _hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_byStreamType_set)
    __swig_setmethods__["byResolution"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_byResolution_set
    __swig_getmethods__["byResolution"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_byResolution_get
    if _newclass:
        byResolution = _swig_property(_hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_byResolution_get, _hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_byResolution_set)
    __swig_setmethods__["byBitrateType"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_byBitrateType_set
    __swig_getmethods__["byBitrateType"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_byBitrateType_get
    if _newclass:
        byBitrateType = _swig_property(_hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_byBitrateType_get, _hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_byBitrateType_set)
    __swig_setmethods__["byPicQuality"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_byPicQuality_set
    __swig_getmethods__["byPicQuality"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_byPicQuality_get
    if _newclass:
        byPicQuality = _swig_property(_hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_byPicQuality_get, _hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_byPicQuality_set)
    __swig_setmethods__["dwVideoBitrate"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_dwVideoBitrate_set
    __swig_getmethods__["dwVideoBitrate"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_dwVideoBitrate_get
    if _newclass:
        dwVideoBitrate = _swig_property(_hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_dwVideoBitrate_get, _hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_dwVideoBitrate_set)
    __swig_setmethods__["dwVideoFrameRate"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_dwVideoFrameRate_set
    __swig_getmethods__["dwVideoFrameRate"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_dwVideoFrameRate_get
    if _newclass:
        dwVideoFrameRate = _swig_property(_hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_dwVideoFrameRate_get, _hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_dwVideoFrameRate_set)
    __swig_setmethods__["wIntervalFrameI"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_wIntervalFrameI_set
    __swig_getmethods__["wIntervalFrameI"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_wIntervalFrameI_get
    if _newclass:
        wIntervalFrameI = _swig_property(_hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_wIntervalFrameI_get, _hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_wIntervalFrameI_set)
    __swig_setmethods__["byIntervalBPFrame"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_byIntervalBPFrame_set
    __swig_getmethods__["byIntervalBPFrame"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_byIntervalBPFrame_get
    if _newclass:
        byIntervalBPFrame = _swig_property(_hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_byIntervalBPFrame_get, _hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_byIntervalBPFrame_set)
    __swig_setmethods__["byres1"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_byres1_set
    __swig_getmethods__["byres1"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_byres1_get
    if _newclass:
        byres1 = _swig_property(_hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_byres1_get, _hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_byres1_set)
    __swig_setmethods__["byVideoEncType"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_byVideoEncType_set
    __swig_getmethods__["byVideoEncType"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_byVideoEncType_get
    if _newclass:
        byVideoEncType = _swig_property(_hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_byVideoEncType_get, _hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_byVideoEncType_set)
    __swig_setmethods__["byAudioEncType"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_byAudioEncType_set
    __swig_getmethods__["byAudioEncType"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_byAudioEncType_get
    if _newclass:
        byAudioEncType = _swig_property(_hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_byAudioEncType_get, _hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_byAudioEncType_set)
    __swig_setmethods__["byVideoEncComplexity"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_byVideoEncComplexity_set
    __swig_getmethods__["byVideoEncComplexity"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_byVideoEncComplexity_get
    if _newclass:
        byVideoEncComplexity = _swig_property(_hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_byVideoEncComplexity_get, _hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_byVideoEncComplexity_set)
    __swig_setmethods__["byEnableSvc"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_byEnableSvc_set
    __swig_getmethods__["byEnableSvc"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_byEnableSvc_get
    if _newclass:
        byEnableSvc = _swig_property(_hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_byEnableSvc_get, _hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_byEnableSvc_set)
    __swig_setmethods__["byFormatType"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_byFormatType_set
    __swig_getmethods__["byFormatType"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_byFormatType_get
    if _newclass:
        byFormatType = _swig_property(_hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_byFormatType_get, _hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_byFormatType_set)
    __swig_setmethods__["byAudioBitRate"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_byAudioBitRate_set
    __swig_getmethods__["byAudioBitRate"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_byAudioBitRate_get
    if _newclass:
        byAudioBitRate = _swig_property(_hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_byAudioBitRate_get, _hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_byAudioBitRate_set)
    __swig_setmethods__["byStreamSmooth"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_byStreamSmooth_set
    __swig_getmethods__["byStreamSmooth"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_byStreamSmooth_get
    if _newclass:
        byStreamSmooth = _swig_property(_hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_byStreamSmooth_get, _hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_byStreamSmooth_set)
    __swig_setmethods__["byAudioSamplingRate"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_byAudioSamplingRate_set
    __swig_getmethods__["byAudioSamplingRate"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_byAudioSamplingRate_get
    if _newclass:
        byAudioSamplingRate = _swig_property(_hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_byAudioSamplingRate_get, _hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_byAudioSamplingRate_set)
    __swig_setmethods__["bySmartCodec"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_bySmartCodec_set
    __swig_getmethods__["bySmartCodec"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_bySmartCodec_get
    if _newclass:
        bySmartCodec = _swig_property(_hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_bySmartCodec_get, _hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_bySmartCodec_set)
    __swig_setmethods__["byDepthMapEnable"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_byDepthMapEnable_set
    __swig_getmethods__["byDepthMapEnable"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_byDepthMapEnable_get
    if _newclass:
        byDepthMapEnable = _swig_property(_hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_byDepthMapEnable_get, _hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_byDepthMapEnable_set)
    __swig_setmethods__["wAverageVideoBitrate"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_wAverageVideoBitrate_set
    __swig_getmethods__["wAverageVideoBitrate"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_wAverageVideoBitrate_get
    if _newclass:
        wAverageVideoBitrate = _swig_property(_hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_wAverageVideoBitrate_get, _hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_wAverageVideoBitrate_set)

    def __init__(self):
        """__init__(NET_DVR_COMPRESSION_INFO_V30 self) -> NET_DVR_COMPRESSION_INFO_V30"""
        this = _hk_struct_test.new_NET_DVR_COMPRESSION_INFO_V30()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_COMPRESSION_INFO_V30
    __del__ = lambda self: None
NET_DVR_COMPRESSION_INFO_V30_swigregister = _hk_struct_test.NET_DVR_COMPRESSION_INFO_V30_swigregister
NET_DVR_COMPRESSION_INFO_V30_swigregister(NET_DVR_COMPRESSION_INFO_V30)

class NET_DVR_COMPRESSIONCFG_V30(_object):
    """Proxy of C++ NET_DVR_COMPRESSIONCFG_V30 class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_COMPRESSIONCFG_V30, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_COMPRESSIONCFG_V30, name)
    __repr__ = _swig_repr
    __swig_setmethods__["dwSize"] = _hk_struct_test.NET_DVR_COMPRESSIONCFG_V30_dwSize_set
    __swig_getmethods__["dwSize"] = _hk_struct_test.NET_DVR_COMPRESSIONCFG_V30_dwSize_get
    if _newclass:
        dwSize = _swig_property(_hk_struct_test.NET_DVR_COMPRESSIONCFG_V30_dwSize_get, _hk_struct_test.NET_DVR_COMPRESSIONCFG_V30_dwSize_set)
    __swig_setmethods__["struNormHighRecordPara"] = _hk_struct_test.NET_DVR_COMPRESSIONCFG_V30_struNormHighRecordPara_set
    __swig_getmethods__["struNormHighRecordPara"] = _hk_struct_test.NET_DVR_COMPRESSIONCFG_V30_struNormHighRecordPara_get
    if _newclass:
        struNormHighRecordPara = _swig_property(_hk_struct_test.NET_DVR_COMPRESSIONCFG_V30_struNormHighRecordPara_get, _hk_struct_test.NET_DVR_COMPRESSIONCFG_V30_struNormHighRecordPara_set)
    __swig_setmethods__["struRes"] = _hk_struct_test.NET_DVR_COMPRESSIONCFG_V30_struRes_set
    __swig_getmethods__["struRes"] = _hk_struct_test.NET_DVR_COMPRESSIONCFG_V30_struRes_get
    if _newclass:
        struRes = _swig_property(_hk_struct_test.NET_DVR_COMPRESSIONCFG_V30_struRes_get, _hk_struct_test.NET_DVR_COMPRESSIONCFG_V30_struRes_set)
    __swig_setmethods__["struEventRecordPara"] = _hk_struct_test.NET_DVR_COMPRESSIONCFG_V30_struEventRecordPara_set
    __swig_getmethods__["struEventRecordPara"] = _hk_struct_test.NET_DVR_COMPRESSIONCFG_V30_struEventRecordPara_get
    if _newclass:
        struEventRecordPara = _swig_property(_hk_struct_test.NET_DVR_COMPRESSIONCFG_V30_struEventRecordPara_get, _hk_struct_test.NET_DVR_COMPRESSIONCFG_V30_struEventRecordPara_set)
    __swig_setmethods__["struNetPara"] = _hk_struct_test.NET_DVR_COMPRESSIONCFG_V30_struNetPara_set
    __swig_getmethods__["struNetPara"] = _hk_struct_test.NET_DVR_COMPRESSIONCFG_V30_struNetPara_get
    if _newclass:
        struNetPara = _swig_property(_hk_struct_test.NET_DVR_COMPRESSIONCFG_V30_struNetPara_get, _hk_struct_test.NET_DVR_COMPRESSIONCFG_V30_struNetPara_set)

    def __init__(self):
        """__init__(NET_DVR_COMPRESSIONCFG_V30 self) -> NET_DVR_COMPRESSIONCFG_V30"""
        this = _hk_struct_test.new_NET_DVR_COMPRESSIONCFG_V30()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_COMPRESSIONCFG_V30
    __del__ = lambda self: None
NET_DVR_COMPRESSIONCFG_V30_swigregister = _hk_struct_test.NET_DVR_COMPRESSIONCFG_V30_swigregister
NET_DVR_COMPRESSIONCFG_V30_swigregister(NET_DVR_COMPRESSIONCFG_V30)

class NET_DVR_COMPRESSION_INFO(_object):
    """Proxy of C++ NET_DVR_COMPRESSION_INFO class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_COMPRESSION_INFO, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_COMPRESSION_INFO, name)
    __repr__ = _swig_repr
    __swig_setmethods__["byStreamType"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_byStreamType_set
    __swig_getmethods__["byStreamType"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_byStreamType_get
    if _newclass:
        byStreamType = _swig_property(_hk_struct_test.NET_DVR_COMPRESSION_INFO_byStreamType_get, _hk_struct_test.NET_DVR_COMPRESSION_INFO_byStreamType_set)
    __swig_setmethods__["byResolution"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_byResolution_set
    __swig_getmethods__["byResolution"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_byResolution_get
    if _newclass:
        byResolution = _swig_property(_hk_struct_test.NET_DVR_COMPRESSION_INFO_byResolution_get, _hk_struct_test.NET_DVR_COMPRESSION_INFO_byResolution_set)
    __swig_setmethods__["byBitrateType"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_byBitrateType_set
    __swig_getmethods__["byBitrateType"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_byBitrateType_get
    if _newclass:
        byBitrateType = _swig_property(_hk_struct_test.NET_DVR_COMPRESSION_INFO_byBitrateType_get, _hk_struct_test.NET_DVR_COMPRESSION_INFO_byBitrateType_set)
    __swig_setmethods__["byPicQuality"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_byPicQuality_set
    __swig_getmethods__["byPicQuality"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_byPicQuality_get
    if _newclass:
        byPicQuality = _swig_property(_hk_struct_test.NET_DVR_COMPRESSION_INFO_byPicQuality_get, _hk_struct_test.NET_DVR_COMPRESSION_INFO_byPicQuality_set)
    __swig_setmethods__["dwVideoBitrate"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_dwVideoBitrate_set
    __swig_getmethods__["dwVideoBitrate"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_dwVideoBitrate_get
    if _newclass:
        dwVideoBitrate = _swig_property(_hk_struct_test.NET_DVR_COMPRESSION_INFO_dwVideoBitrate_get, _hk_struct_test.NET_DVR_COMPRESSION_INFO_dwVideoBitrate_set)
    __swig_setmethods__["dwVideoFrameRate"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_dwVideoFrameRate_set
    __swig_getmethods__["dwVideoFrameRate"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_dwVideoFrameRate_get
    if _newclass:
        dwVideoFrameRate = _swig_property(_hk_struct_test.NET_DVR_COMPRESSION_INFO_dwVideoFrameRate_get, _hk_struct_test.NET_DVR_COMPRESSION_INFO_dwVideoFrameRate_set)

    def __init__(self):
        """__init__(NET_DVR_COMPRESSION_INFO self) -> NET_DVR_COMPRESSION_INFO"""
        this = _hk_struct_test.new_NET_DVR_COMPRESSION_INFO()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_COMPRESSION_INFO
    __del__ = lambda self: None
NET_DVR_COMPRESSION_INFO_swigregister = _hk_struct_test.NET_DVR_COMPRESSION_INFO_swigregister
NET_DVR_COMPRESSION_INFO_swigregister(NET_DVR_COMPRESSION_INFO)

class NET_DVR_COMPRESSIONCFG(_object):
    """Proxy of C++ NET_DVR_COMPRESSIONCFG class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_COMPRESSIONCFG, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_COMPRESSIONCFG, name)
    __repr__ = _swig_repr
    __swig_setmethods__["dwSize"] = _hk_struct_test.NET_DVR_COMPRESSIONCFG_dwSize_set
    __swig_getmethods__["dwSize"] = _hk_struct_test.NET_DVR_COMPRESSIONCFG_dwSize_get
    if _newclass:
        dwSize = _swig_property(_hk_struct_test.NET_DVR_COMPRESSIONCFG_dwSize_get, _hk_struct_test.NET_DVR_COMPRESSIONCFG_dwSize_set)
    __swig_setmethods__["struRecordPara"] = _hk_struct_test.NET_DVR_COMPRESSIONCFG_struRecordPara_set
    __swig_getmethods__["struRecordPara"] = _hk_struct_test.NET_DVR_COMPRESSIONCFG_struRecordPara_get
    if _newclass:
        struRecordPara = _swig_property(_hk_struct_test.NET_DVR_COMPRESSIONCFG_struRecordPara_get, _hk_struct_test.NET_DVR_COMPRESSIONCFG_struRecordPara_set)
    __swig_setmethods__["struNetPara"] = _hk_struct_test.NET_DVR_COMPRESSIONCFG_struNetPara_set
    __swig_getmethods__["struNetPara"] = _hk_struct_test.NET_DVR_COMPRESSIONCFG_struNetPara_get
    if _newclass:
        struNetPara = _swig_property(_hk_struct_test.NET_DVR_COMPRESSIONCFG_struNetPara_get, _hk_struct_test.NET_DVR_COMPRESSIONCFG_struNetPara_set)

    def __init__(self):
        """__init__(NET_DVR_COMPRESSIONCFG self) -> NET_DVR_COMPRESSIONCFG"""
        this = _hk_struct_test.new_NET_DVR_COMPRESSIONCFG()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_COMPRESSIONCFG
    __del__ = lambda self: None
NET_DVR_COMPRESSIONCFG_swigregister = _hk_struct_test.NET_DVR_COMPRESSIONCFG_swigregister
NET_DVR_COMPRESSIONCFG_swigregister(NET_DVR_COMPRESSIONCFG)

class NET_DVR_COMPRESSION_INFO_EX(_object):
    """Proxy of C++ NET_DVR_COMPRESSION_INFO_EX class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_COMPRESSION_INFO_EX, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_COMPRESSION_INFO_EX, name)
    __repr__ = _swig_repr
    __swig_setmethods__["byStreamType"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_EX_byStreamType_set
    __swig_getmethods__["byStreamType"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_EX_byStreamType_get
    if _newclass:
        byStreamType = _swig_property(_hk_struct_test.NET_DVR_COMPRESSION_INFO_EX_byStreamType_get, _hk_struct_test.NET_DVR_COMPRESSION_INFO_EX_byStreamType_set)
    __swig_setmethods__["byResolution"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_EX_byResolution_set
    __swig_getmethods__["byResolution"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_EX_byResolution_get
    if _newclass:
        byResolution = _swig_property(_hk_struct_test.NET_DVR_COMPRESSION_INFO_EX_byResolution_get, _hk_struct_test.NET_DVR_COMPRESSION_INFO_EX_byResolution_set)
    __swig_setmethods__["byBitrateType"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_EX_byBitrateType_set
    __swig_getmethods__["byBitrateType"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_EX_byBitrateType_get
    if _newclass:
        byBitrateType = _swig_property(_hk_struct_test.NET_DVR_COMPRESSION_INFO_EX_byBitrateType_get, _hk_struct_test.NET_DVR_COMPRESSION_INFO_EX_byBitrateType_set)
    __swig_setmethods__["byPicQuality"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_EX_byPicQuality_set
    __swig_getmethods__["byPicQuality"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_EX_byPicQuality_get
    if _newclass:
        byPicQuality = _swig_property(_hk_struct_test.NET_DVR_COMPRESSION_INFO_EX_byPicQuality_get, _hk_struct_test.NET_DVR_COMPRESSION_INFO_EX_byPicQuality_set)
    __swig_setmethods__["dwVideoBitrate"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_EX_dwVideoBitrate_set
    __swig_getmethods__["dwVideoBitrate"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_EX_dwVideoBitrate_get
    if _newclass:
        dwVideoBitrate = _swig_property(_hk_struct_test.NET_DVR_COMPRESSION_INFO_EX_dwVideoBitrate_get, _hk_struct_test.NET_DVR_COMPRESSION_INFO_EX_dwVideoBitrate_set)
    __swig_setmethods__["dwVideoFrameRate"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_EX_dwVideoFrameRate_set
    __swig_getmethods__["dwVideoFrameRate"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_EX_dwVideoFrameRate_get
    if _newclass:
        dwVideoFrameRate = _swig_property(_hk_struct_test.NET_DVR_COMPRESSION_INFO_EX_dwVideoFrameRate_get, _hk_struct_test.NET_DVR_COMPRESSION_INFO_EX_dwVideoFrameRate_set)
    __swig_setmethods__["wIntervalFrameI"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_EX_wIntervalFrameI_set
    __swig_getmethods__["wIntervalFrameI"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_EX_wIntervalFrameI_get
    if _newclass:
        wIntervalFrameI = _swig_property(_hk_struct_test.NET_DVR_COMPRESSION_INFO_EX_wIntervalFrameI_get, _hk_struct_test.NET_DVR_COMPRESSION_INFO_EX_wIntervalFrameI_set)
    __swig_setmethods__["byIntervalBPFrame"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_EX_byIntervalBPFrame_set
    __swig_getmethods__["byIntervalBPFrame"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_EX_byIntervalBPFrame_get
    if _newclass:
        byIntervalBPFrame = _swig_property(_hk_struct_test.NET_DVR_COMPRESSION_INFO_EX_byIntervalBPFrame_get, _hk_struct_test.NET_DVR_COMPRESSION_INFO_EX_byIntervalBPFrame_set)
    __swig_setmethods__["byRes"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_EX_byRes_set
    __swig_getmethods__["byRes"] = _hk_struct_test.NET_DVR_COMPRESSION_INFO_EX_byRes_get
    if _newclass:
        byRes = _swig_property(_hk_struct_test.NET_DVR_COMPRESSION_INFO_EX_byRes_get, _hk_struct_test.NET_DVR_COMPRESSION_INFO_EX_byRes_set)

    def __init__(self):
        """__init__(NET_DVR_COMPRESSION_INFO_EX self) -> NET_DVR_COMPRESSION_INFO_EX"""
        this = _hk_struct_test.new_NET_DVR_COMPRESSION_INFO_EX()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_COMPRESSION_INFO_EX
    __del__ = lambda self: None
NET_DVR_COMPRESSION_INFO_EX_swigregister = _hk_struct_test.NET_DVR_COMPRESSION_INFO_EX_swigregister
NET_DVR_COMPRESSION_INFO_EX_swigregister(NET_DVR_COMPRESSION_INFO_EX)

class NET_DVR_COMPRESSIONCFG_EX(_object):
    """Proxy of C++ NET_DVR_COMPRESSIONCFG_EX class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_COMPRESSIONCFG_EX, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_COMPRESSIONCFG_EX, name)
    __repr__ = _swig_repr
    __swig_setmethods__["dwSize"] = _hk_struct_test.NET_DVR_COMPRESSIONCFG_EX_dwSize_set
    __swig_getmethods__["dwSize"] = _hk_struct_test.NET_DVR_COMPRESSIONCFG_EX_dwSize_get
    if _newclass:
        dwSize = _swig_property(_hk_struct_test.NET_DVR_COMPRESSIONCFG_EX_dwSize_get, _hk_struct_test.NET_DVR_COMPRESSIONCFG_EX_dwSize_set)
    __swig_setmethods__["struRecordPara"] = _hk_struct_test.NET_DVR_COMPRESSIONCFG_EX_struRecordPara_set
    __swig_getmethods__["struRecordPara"] = _hk_struct_test.NET_DVR_COMPRESSIONCFG_EX_struRecordPara_get
    if _newclass:
        struRecordPara = _swig_property(_hk_struct_test.NET_DVR_COMPRESSIONCFG_EX_struRecordPara_get, _hk_struct_test.NET_DVR_COMPRESSIONCFG_EX_struRecordPara_set)
    __swig_setmethods__["struNetPara"] = _hk_struct_test.NET_DVR_COMPRESSIONCFG_EX_struNetPara_set
    __swig_getmethods__["struNetPara"] = _hk_struct_test.NET_DVR_COMPRESSIONCFG_EX_struNetPara_get
    if _newclass:
        struNetPara = _swig_property(_hk_struct_test.NET_DVR_COMPRESSIONCFG_EX_struNetPara_get, _hk_struct_test.NET_DVR_COMPRESSIONCFG_EX_struNetPara_set)

    def __init__(self):
        """__init__(NET_DVR_COMPRESSIONCFG_EX self) -> NET_DVR_COMPRESSIONCFG_EX"""
        this = _hk_struct_test.new_NET_DVR_COMPRESSIONCFG_EX()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_COMPRESSIONCFG_EX
    __del__ = lambda self: None
NET_DVR_COMPRESSIONCFG_EX_swigregister = _hk_struct_test.NET_DVR_COMPRESSIONCFG_EX_swigregister
NET_DVR_COMPRESSIONCFG_EX_swigregister(NET_DVR_COMPRESSIONCFG_EX)

class NET_DVR_RECORDSCHED(_object):
    """Proxy of C++ NET_DVR_RECORDSCHED class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_RECORDSCHED, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_RECORDSCHED, name)
    __repr__ = _swig_repr
    __swig_setmethods__["struRecordTime"] = _hk_struct_test.NET_DVR_RECORDSCHED_struRecordTime_set
    __swig_getmethods__["struRecordTime"] = _hk_struct_test.NET_DVR_RECORDSCHED_struRecordTime_get
    if _newclass:
        struRecordTime = _swig_property(_hk_struct_test.NET_DVR_RECORDSCHED_struRecordTime_get, _hk_struct_test.NET_DVR_RECORDSCHED_struRecordTime_set)
    __swig_setmethods__["byRecordType"] = _hk_struct_test.NET_DVR_RECORDSCHED_byRecordType_set
    __swig_getmethods__["byRecordType"] = _hk_struct_test.NET_DVR_RECORDSCHED_byRecordType_get
    if _newclass:
        byRecordType = _swig_property(_hk_struct_test.NET_DVR_RECORDSCHED_byRecordType_get, _hk_struct_test.NET_DVR_RECORDSCHED_byRecordType_set)
    __swig_setmethods__["reservedData"] = _hk_struct_test.NET_DVR_RECORDSCHED_reservedData_set
    __swig_getmethods__["reservedData"] = _hk_struct_test.NET_DVR_RECORDSCHED_reservedData_get
    if _newclass:
        reservedData = _swig_property(_hk_struct_test.NET_DVR_RECORDSCHED_reservedData_get, _hk_struct_test.NET_DVR_RECORDSCHED_reservedData_set)

    def __init__(self):
        """__init__(NET_DVR_RECORDSCHED self) -> NET_DVR_RECORDSCHED"""
        this = _hk_struct_test.new_NET_DVR_RECORDSCHED()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_RECORDSCHED
    __del__ = lambda self: None
NET_DVR_RECORDSCHED_swigregister = _hk_struct_test.NET_DVR_RECORDSCHED_swigregister
NET_DVR_RECORDSCHED_swigregister(NET_DVR_RECORDSCHED)

class NET_DVR_RECORDDAY(_object):
    """Proxy of C++ NET_DVR_RECORDDAY class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_RECORDDAY, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_RECORDDAY, name)
    __repr__ = _swig_repr
    __swig_setmethods__["wAllDayRecord"] = _hk_struct_test.NET_DVR_RECORDDAY_wAllDayRecord_set
    __swig_getmethods__["wAllDayRecord"] = _hk_struct_test.NET_DVR_RECORDDAY_wAllDayRecord_get
    if _newclass:
        wAllDayRecord = _swig_property(_hk_struct_test.NET_DVR_RECORDDAY_wAllDayRecord_get, _hk_struct_test.NET_DVR_RECORDDAY_wAllDayRecord_set)
    __swig_setmethods__["byRecordType"] = _hk_struct_test.NET_DVR_RECORDDAY_byRecordType_set
    __swig_getmethods__["byRecordType"] = _hk_struct_test.NET_DVR_RECORDDAY_byRecordType_get
    if _newclass:
        byRecordType = _swig_property(_hk_struct_test.NET_DVR_RECORDDAY_byRecordType_get, _hk_struct_test.NET_DVR_RECORDDAY_byRecordType_set)
    __swig_setmethods__["reservedData"] = _hk_struct_test.NET_DVR_RECORDDAY_reservedData_set
    __swig_getmethods__["reservedData"] = _hk_struct_test.NET_DVR_RECORDDAY_reservedData_get
    if _newclass:
        reservedData = _swig_property(_hk_struct_test.NET_DVR_RECORDDAY_reservedData_get, _hk_struct_test.NET_DVR_RECORDDAY_reservedData_set)

    def __init__(self):
        """__init__(NET_DVR_RECORDDAY self) -> NET_DVR_RECORDDAY"""
        this = _hk_struct_test.new_NET_DVR_RECORDDAY()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_RECORDDAY
    __del__ = lambda self: None
NET_DVR_RECORDDAY_swigregister = _hk_struct_test.NET_DVR_RECORDDAY_swigregister
NET_DVR_RECORDDAY_swigregister(NET_DVR_RECORDDAY)

class NET_DVR_RECORD_V30(_object):
    """Proxy of C++ NET_DVR_RECORD_V30 class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_RECORD_V30, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_RECORD_V30, name)
    __repr__ = _swig_repr
    __swig_setmethods__["dwSize"] = _hk_struct_test.NET_DVR_RECORD_V30_dwSize_set
    __swig_getmethods__["dwSize"] = _hk_struct_test.NET_DVR_RECORD_V30_dwSize_get
    if _newclass:
        dwSize = _swig_property(_hk_struct_test.NET_DVR_RECORD_V30_dwSize_get, _hk_struct_test.NET_DVR_RECORD_V30_dwSize_set)
    __swig_setmethods__["dwRecord"] = _hk_struct_test.NET_DVR_RECORD_V30_dwRecord_set
    __swig_getmethods__["dwRecord"] = _hk_struct_test.NET_DVR_RECORD_V30_dwRecord_get
    if _newclass:
        dwRecord = _swig_property(_hk_struct_test.NET_DVR_RECORD_V30_dwRecord_get, _hk_struct_test.NET_DVR_RECORD_V30_dwRecord_set)
    __swig_setmethods__["struRecAllDay"] = _hk_struct_test.NET_DVR_RECORD_V30_struRecAllDay_set
    __swig_getmethods__["struRecAllDay"] = _hk_struct_test.NET_DVR_RECORD_V30_struRecAllDay_get
    if _newclass:
        struRecAllDay = _swig_property(_hk_struct_test.NET_DVR_RECORD_V30_struRecAllDay_get, _hk_struct_test.NET_DVR_RECORD_V30_struRecAllDay_set)
    __swig_setmethods__["struRecordSched"] = _hk_struct_test.NET_DVR_RECORD_V30_struRecordSched_set
    __swig_getmethods__["struRecordSched"] = _hk_struct_test.NET_DVR_RECORD_V30_struRecordSched_get
    if _newclass:
        struRecordSched = _swig_property(_hk_struct_test.NET_DVR_RECORD_V30_struRecordSched_get, _hk_struct_test.NET_DVR_RECORD_V30_struRecordSched_set)
    __swig_setmethods__["dwRecordTime"] = _hk_struct_test.NET_DVR_RECORD_V30_dwRecordTime_set
    __swig_getmethods__["dwRecordTime"] = _hk_struct_test.NET_DVR_RECORD_V30_dwRecordTime_get
    if _newclass:
        dwRecordTime = _swig_property(_hk_struct_test.NET_DVR_RECORD_V30_dwRecordTime_get, _hk_struct_test.NET_DVR_RECORD_V30_dwRecordTime_set)
    __swig_setmethods__["dwPreRecordTime"] = _hk_struct_test.NET_DVR_RECORD_V30_dwPreRecordTime_set
    __swig_getmethods__["dwPreRecordTime"] = _hk_struct_test.NET_DVR_RECORD_V30_dwPreRecordTime_get
    if _newclass:
        dwPreRecordTime = _swig_property(_hk_struct_test.NET_DVR_RECORD_V30_dwPreRecordTime_get, _hk_struct_test.NET_DVR_RECORD_V30_dwPreRecordTime_set)
    __swig_setmethods__["dwRecorderDuration"] = _hk_struct_test.NET_DVR_RECORD_V30_dwRecorderDuration_set
    __swig_getmethods__["dwRecorderDuration"] = _hk_struct_test.NET_DVR_RECORD_V30_dwRecorderDuration_get
    if _newclass:
        dwRecorderDuration = _swig_property(_hk_struct_test.NET_DVR_RECORD_V30_dwRecorderDuration_get, _hk_struct_test.NET_DVR_RECORD_V30_dwRecorderDuration_set)
    __swig_setmethods__["byRedundancyRec"] = _hk_struct_test.NET_DVR_RECORD_V30_byRedundancyRec_set
    __swig_getmethods__["byRedundancyRec"] = _hk_struct_test.NET_DVR_RECORD_V30_byRedundancyRec_get
    if _newclass:
        byRedundancyRec = _swig_property(_hk_struct_test.NET_DVR_RECORD_V30_byRedundancyRec_get, _hk_struct_test.NET_DVR_RECORD_V30_byRedundancyRec_set)
    __swig_setmethods__["byAudioRec"] = _hk_struct_test.NET_DVR_RECORD_V30_byAudioRec_set
    __swig_getmethods__["byAudioRec"] = _hk_struct_test.NET_DVR_RECORD_V30_byAudioRec_get
    if _newclass:
        byAudioRec = _swig_property(_hk_struct_test.NET_DVR_RECORD_V30_byAudioRec_get, _hk_struct_test.NET_DVR_RECORD_V30_byAudioRec_set)
    __swig_setmethods__["byStreamType"] = _hk_struct_test.NET_DVR_RECORD_V30_byStreamType_set
    __swig_getmethods__["byStreamType"] = _hk_struct_test.NET_DVR_RECORD_V30_byStreamType_get
    if _newclass:
        byStreamType = _swig_property(_hk_struct_test.NET_DVR_RECORD_V30_byStreamType_get, _hk_struct_test.NET_DVR_RECORD_V30_byStreamType_set)
    __swig_setmethods__["byPassbackRecord"] = _hk_struct_test.NET_DVR_RECORD_V30_byPassbackRecord_set
    __swig_getmethods__["byPassbackRecord"] = _hk_struct_test.NET_DVR_RECORD_V30_byPassbackRecord_get
    if _newclass:
        byPassbackRecord = _swig_property(_hk_struct_test.NET_DVR_RECORD_V30_byPassbackRecord_get, _hk_struct_test.NET_DVR_RECORD_V30_byPassbackRecord_set)
    __swig_setmethods__["wLockDuration"] = _hk_struct_test.NET_DVR_RECORD_V30_wLockDuration_set
    __swig_getmethods__["wLockDuration"] = _hk_struct_test.NET_DVR_RECORD_V30_wLockDuration_get
    if _newclass:
        wLockDuration = _swig_property(_hk_struct_test.NET_DVR_RECORD_V30_wLockDuration_get, _hk_struct_test.NET_DVR_RECORD_V30_wLockDuration_set)
    __swig_setmethods__["byRecordBackup"] = _hk_struct_test.NET_DVR_RECORD_V30_byRecordBackup_set
    __swig_getmethods__["byRecordBackup"] = _hk_struct_test.NET_DVR_RECORD_V30_byRecordBackup_get
    if _newclass:
        byRecordBackup = _swig_property(_hk_struct_test.NET_DVR_RECORD_V30_byRecordBackup_get, _hk_struct_test.NET_DVR_RECORD_V30_byRecordBackup_set)
    __swig_setmethods__["bySVCLevel"] = _hk_struct_test.NET_DVR_RECORD_V30_bySVCLevel_set
    __swig_getmethods__["bySVCLevel"] = _hk_struct_test.NET_DVR_RECORD_V30_bySVCLevel_get
    if _newclass:
        bySVCLevel = _swig_property(_hk_struct_test.NET_DVR_RECORD_V30_bySVCLevel_get, _hk_struct_test.NET_DVR_RECORD_V30_bySVCLevel_set)
    __swig_setmethods__["byRecordManage"] = _hk_struct_test.NET_DVR_RECORD_V30_byRecordManage_set
    __swig_getmethods__["byRecordManage"] = _hk_struct_test.NET_DVR_RECORD_V30_byRecordManage_get
    if _newclass:
        byRecordManage = _swig_property(_hk_struct_test.NET_DVR_RECORD_V30_byRecordManage_get, _hk_struct_test.NET_DVR_RECORD_V30_byRecordManage_set)
    __swig_setmethods__["byExtraSaveAudio"] = _hk_struct_test.NET_DVR_RECORD_V30_byExtraSaveAudio_set
    __swig_getmethods__["byExtraSaveAudio"] = _hk_struct_test.NET_DVR_RECORD_V30_byExtraSaveAudio_get
    if _newclass:
        byExtraSaveAudio = _swig_property(_hk_struct_test.NET_DVR_RECORD_V30_byExtraSaveAudio_get, _hk_struct_test.NET_DVR_RECORD_V30_byExtraSaveAudio_set)
    __swig_setmethods__["byIntelligentRecord"] = _hk_struct_test.NET_DVR_RECORD_V30_byIntelligentRecord_set
    __swig_getmethods__["byIntelligentRecord"] = _hk_struct_test.NET_DVR_RECORD_V30_byIntelligentRecord_get
    if _newclass:
        byIntelligentRecord = _swig_property(_hk_struct_test.NET_DVR_RECORD_V30_byIntelligentRecord_get, _hk_struct_test.NET_DVR_RECORD_V30_byIntelligentRecord_set)
    __swig_setmethods__["byReserve"] = _hk_struct_test.NET_DVR_RECORD_V30_byReserve_set
    __swig_getmethods__["byReserve"] = _hk_struct_test.NET_DVR_RECORD_V30_byReserve_get
    if _newclass:
        byReserve = _swig_property(_hk_struct_test.NET_DVR_RECORD_V30_byReserve_get, _hk_struct_test.NET_DVR_RECORD_V30_byReserve_set)

    def __init__(self):
        """__init__(NET_DVR_RECORD_V30 self) -> NET_DVR_RECORD_V30"""
        this = _hk_struct_test.new_NET_DVR_RECORD_V30()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_RECORD_V30
    __del__ = lambda self: None
NET_DVR_RECORD_V30_swigregister = _hk_struct_test.NET_DVR_RECORD_V30_swigregister
NET_DVR_RECORD_V30_swigregister(NET_DVR_RECORD_V30)

class NET_DVR_RECORDSCHED_V40(_object):
    """Proxy of C++ NET_DVR_RECORDSCHED_V40 class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_RECORDSCHED_V40, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_RECORDSCHED_V40, name)
    __repr__ = _swig_repr
    __swig_setmethods__["struRecordTime"] = _hk_struct_test.NET_DVR_RECORDSCHED_V40_struRecordTime_set
    __swig_getmethods__["struRecordTime"] = _hk_struct_test.NET_DVR_RECORDSCHED_V40_struRecordTime_get
    if _newclass:
        struRecordTime = _swig_property(_hk_struct_test.NET_DVR_RECORDSCHED_V40_struRecordTime_get, _hk_struct_test.NET_DVR_RECORDSCHED_V40_struRecordTime_set)
    __swig_setmethods__["byRecordType"] = _hk_struct_test.NET_DVR_RECORDSCHED_V40_byRecordType_set
    __swig_getmethods__["byRecordType"] = _hk_struct_test.NET_DVR_RECORDSCHED_V40_byRecordType_get
    if _newclass:
        byRecordType = _swig_property(_hk_struct_test.NET_DVR_RECORDSCHED_V40_byRecordType_get, _hk_struct_test.NET_DVR_RECORDSCHED_V40_byRecordType_set)
    __swig_setmethods__["byRes"] = _hk_struct_test.NET_DVR_RECORDSCHED_V40_byRes_set
    __swig_getmethods__["byRes"] = _hk_struct_test.NET_DVR_RECORDSCHED_V40_byRes_get
    if _newclass:
        byRes = _swig_property(_hk_struct_test.NET_DVR_RECORDSCHED_V40_byRes_get, _hk_struct_test.NET_DVR_RECORDSCHED_V40_byRes_set)

    def __init__(self):
        """__init__(NET_DVR_RECORDSCHED_V40 self) -> NET_DVR_RECORDSCHED_V40"""
        this = _hk_struct_test.new_NET_DVR_RECORDSCHED_V40()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_RECORDSCHED_V40
    __del__ = lambda self: None
NET_DVR_RECORDSCHED_V40_swigregister = _hk_struct_test.NET_DVR_RECORDSCHED_V40_swigregister
NET_DVR_RECORDSCHED_V40_swigregister(NET_DVR_RECORDSCHED_V40)

class NET_DVR_RECORDDAY_V40(_object):
    """Proxy of C++ NET_DVR_RECORDDAY_V40 class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_RECORDDAY_V40, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_RECORDDAY_V40, name)
    __repr__ = _swig_repr
    __swig_setmethods__["byAllDayRecord"] = _hk_struct_test.NET_DVR_RECORDDAY_V40_byAllDayRecord_set
    __swig_getmethods__["byAllDayRecord"] = _hk_struct_test.NET_DVR_RECORDDAY_V40_byAllDayRecord_get
    if _newclass:
        byAllDayRecord = _swig_property(_hk_struct_test.NET_DVR_RECORDDAY_V40_byAllDayRecord_get, _hk_struct_test.NET_DVR_RECORDDAY_V40_byAllDayRecord_set)
    __swig_setmethods__["byRecordType"] = _hk_struct_test.NET_DVR_RECORDDAY_V40_byRecordType_set
    __swig_getmethods__["byRecordType"] = _hk_struct_test.NET_DVR_RECORDDAY_V40_byRecordType_get
    if _newclass:
        byRecordType = _swig_property(_hk_struct_test.NET_DVR_RECORDDAY_V40_byRecordType_get, _hk_struct_test.NET_DVR_RECORDDAY_V40_byRecordType_set)
    __swig_setmethods__["byRes"] = _hk_struct_test.NET_DVR_RECORDDAY_V40_byRes_set
    __swig_getmethods__["byRes"] = _hk_struct_test.NET_DVR_RECORDDAY_V40_byRes_get
    if _newclass:
        byRes = _swig_property(_hk_struct_test.NET_DVR_RECORDDAY_V40_byRes_get, _hk_struct_test.NET_DVR_RECORDDAY_V40_byRes_set)

    def __init__(self):
        """__init__(NET_DVR_RECORDDAY_V40 self) -> NET_DVR_RECORDDAY_V40"""
        this = _hk_struct_test.new_NET_DVR_RECORDDAY_V40()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_RECORDDAY_V40
    __del__ = lambda self: None
NET_DVR_RECORDDAY_V40_swigregister = _hk_struct_test.NET_DVR_RECORDDAY_V40_swigregister
NET_DVR_RECORDDAY_V40_swigregister(NET_DVR_RECORDDAY_V40)

class NET_DVR_RECORD_V40(_object):
    """Proxy of C++ NET_DVR_RECORD_V40 class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_RECORD_V40, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_RECORD_V40, name)
    __repr__ = _swig_repr
    __swig_setmethods__["dwSize"] = _hk_struct_test.NET_DVR_RECORD_V40_dwSize_set
    __swig_getmethods__["dwSize"] = _hk_struct_test.NET_DVR_RECORD_V40_dwSize_get
    if _newclass:
        dwSize = _swig_property(_hk_struct_test.NET_DVR_RECORD_V40_dwSize_get, _hk_struct_test.NET_DVR_RECORD_V40_dwSize_set)
    __swig_setmethods__["dwRecord"] = _hk_struct_test.NET_DVR_RECORD_V40_dwRecord_set
    __swig_getmethods__["dwRecord"] = _hk_struct_test.NET_DVR_RECORD_V40_dwRecord_get
    if _newclass:
        dwRecord = _swig_property(_hk_struct_test.NET_DVR_RECORD_V40_dwRecord_get, _hk_struct_test.NET_DVR_RECORD_V40_dwRecord_set)
    __swig_setmethods__["struRecAllDay"] = _hk_struct_test.NET_DVR_RECORD_V40_struRecAllDay_set
    __swig_getmethods__["struRecAllDay"] = _hk_struct_test.NET_DVR_RECORD_V40_struRecAllDay_get
    if _newclass:
        struRecAllDay = _swig_property(_hk_struct_test.NET_DVR_RECORD_V40_struRecAllDay_get, _hk_struct_test.NET_DVR_RECORD_V40_struRecAllDay_set)
    __swig_setmethods__["struRecordSched"] = _hk_struct_test.NET_DVR_RECORD_V40_struRecordSched_set
    __swig_getmethods__["struRecordSched"] = _hk_struct_test.NET_DVR_RECORD_V40_struRecordSched_get
    if _newclass:
        struRecordSched = _swig_property(_hk_struct_test.NET_DVR_RECORD_V40_struRecordSched_get, _hk_struct_test.NET_DVR_RECORD_V40_struRecordSched_set)
    __swig_setmethods__["dwRecordTime"] = _hk_struct_test.NET_DVR_RECORD_V40_dwRecordTime_set
    __swig_getmethods__["dwRecordTime"] = _hk_struct_test.NET_DVR_RECORD_V40_dwRecordTime_get
    if _newclass:
        dwRecordTime = _swig_property(_hk_struct_test.NET_DVR_RECORD_V40_dwRecordTime_get, _hk_struct_test.NET_DVR_RECORD_V40_dwRecordTime_set)
    __swig_setmethods__["dwPreRecordTime"] = _hk_struct_test.NET_DVR_RECORD_V40_dwPreRecordTime_set
    __swig_getmethods__["dwPreRecordTime"] = _hk_struct_test.NET_DVR_RECORD_V40_dwPreRecordTime_get
    if _newclass:
        dwPreRecordTime = _swig_property(_hk_struct_test.NET_DVR_RECORD_V40_dwPreRecordTime_get, _hk_struct_test.NET_DVR_RECORD_V40_dwPreRecordTime_set)
    __swig_setmethods__["dwRecorderDuration"] = _hk_struct_test.NET_DVR_RECORD_V40_dwRecorderDuration_set
    __swig_getmethods__["dwRecorderDuration"] = _hk_struct_test.NET_DVR_RECORD_V40_dwRecorderDuration_get
    if _newclass:
        dwRecorderDuration = _swig_property(_hk_struct_test.NET_DVR_RECORD_V40_dwRecorderDuration_get, _hk_struct_test.NET_DVR_RECORD_V40_dwRecorderDuration_set)
    __swig_setmethods__["byRedundancyRec"] = _hk_struct_test.NET_DVR_RECORD_V40_byRedundancyRec_set
    __swig_getmethods__["byRedundancyRec"] = _hk_struct_test.NET_DVR_RECORD_V40_byRedundancyRec_get
    if _newclass:
        byRedundancyRec = _swig_property(_hk_struct_test.NET_DVR_RECORD_V40_byRedundancyRec_get, _hk_struct_test.NET_DVR_RECORD_V40_byRedundancyRec_set)
    __swig_setmethods__["byAudioRec"] = _hk_struct_test.NET_DVR_RECORD_V40_byAudioRec_set
    __swig_getmethods__["byAudioRec"] = _hk_struct_test.NET_DVR_RECORD_V40_byAudioRec_get
    if _newclass:
        byAudioRec = _swig_property(_hk_struct_test.NET_DVR_RECORD_V40_byAudioRec_get, _hk_struct_test.NET_DVR_RECORD_V40_byAudioRec_set)
    __swig_setmethods__["byStreamType"] = _hk_struct_test.NET_DVR_RECORD_V40_byStreamType_set
    __swig_getmethods__["byStreamType"] = _hk_struct_test.NET_DVR_RECORD_V40_byStreamType_get
    if _newclass:
        byStreamType = _swig_property(_hk_struct_test.NET_DVR_RECORD_V40_byStreamType_get, _hk_struct_test.NET_DVR_RECORD_V40_byStreamType_set)
    __swig_setmethods__["byPassbackRecord"] = _hk_struct_test.NET_DVR_RECORD_V40_byPassbackRecord_set
    __swig_getmethods__["byPassbackRecord"] = _hk_struct_test.NET_DVR_RECORD_V40_byPassbackRecord_get
    if _newclass:
        byPassbackRecord = _swig_property(_hk_struct_test.NET_DVR_RECORD_V40_byPassbackRecord_get, _hk_struct_test.NET_DVR_RECORD_V40_byPassbackRecord_set)
    __swig_setmethods__["wLockDuration"] = _hk_struct_test.NET_DVR_RECORD_V40_wLockDuration_set
    __swig_getmethods__["wLockDuration"] = _hk_struct_test.NET_DVR_RECORD_V40_wLockDuration_get
    if _newclass:
        wLockDuration = _swig_property(_hk_struct_test.NET_DVR_RECORD_V40_wLockDuration_get, _hk_struct_test.NET_DVR_RECORD_V40_wLockDuration_set)
    __swig_setmethods__["byRecordBackup"] = _hk_struct_test.NET_DVR_RECORD_V40_byRecordBackup_set
    __swig_getmethods__["byRecordBackup"] = _hk_struct_test.NET_DVR_RECORD_V40_byRecordBackup_get
    if _newclass:
        byRecordBackup = _swig_property(_hk_struct_test.NET_DVR_RECORD_V40_byRecordBackup_get, _hk_struct_test.NET_DVR_RECORD_V40_byRecordBackup_set)
    __swig_setmethods__["bySVCLevel"] = _hk_struct_test.NET_DVR_RECORD_V40_bySVCLevel_set
    __swig_getmethods__["bySVCLevel"] = _hk_struct_test.NET_DVR_RECORD_V40_bySVCLevel_get
    if _newclass:
        bySVCLevel = _swig_property(_hk_struct_test.NET_DVR_RECORD_V40_bySVCLevel_get, _hk_struct_test.NET_DVR_RECORD_V40_bySVCLevel_set)
    __swig_setmethods__["byRecordManage"] = _hk_struct_test.NET_DVR_RECORD_V40_byRecordManage_set
    __swig_getmethods__["byRecordManage"] = _hk_struct_test.NET_DVR_RECORD_V40_byRecordManage_get
    if _newclass:
        byRecordManage = _swig_property(_hk_struct_test.NET_DVR_RECORD_V40_byRecordManage_get, _hk_struct_test.NET_DVR_RECORD_V40_byRecordManage_set)
    __swig_setmethods__["byExtraSaveAudio"] = _hk_struct_test.NET_DVR_RECORD_V40_byExtraSaveAudio_set
    __swig_getmethods__["byExtraSaveAudio"] = _hk_struct_test.NET_DVR_RECORD_V40_byExtraSaveAudio_get
    if _newclass:
        byExtraSaveAudio = _swig_property(_hk_struct_test.NET_DVR_RECORD_V40_byExtraSaveAudio_get, _hk_struct_test.NET_DVR_RECORD_V40_byExtraSaveAudio_set)
    __swig_setmethods__["byIntelligentRecord"] = _hk_struct_test.NET_DVR_RECORD_V40_byIntelligentRecord_set
    __swig_getmethods__["byIntelligentRecord"] = _hk_struct_test.NET_DVR_RECORD_V40_byIntelligentRecord_get
    if _newclass:
        byIntelligentRecord = _swig_property(_hk_struct_test.NET_DVR_RECORD_V40_byIntelligentRecord_get, _hk_struct_test.NET_DVR_RECORD_V40_byIntelligentRecord_set)
    __swig_setmethods__["byRes"] = _hk_struct_test.NET_DVR_RECORD_V40_byRes_set
    __swig_getmethods__["byRes"] = _hk_struct_test.NET_DVR_RECORD_V40_byRes_get
    if _newclass:
        byRes = _swig_property(_hk_struct_test.NET_DVR_RECORD_V40_byRes_get, _hk_struct_test.NET_DVR_RECORD_V40_byRes_set)

    def __init__(self):
        """__init__(NET_DVR_RECORD_V40 self) -> NET_DVR_RECORD_V40"""
        this = _hk_struct_test.new_NET_DVR_RECORD_V40()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_RECORD_V40
    __del__ = lambda self: None
NET_DVR_RECORD_V40_swigregister = _hk_struct_test.NET_DVR_RECORD_V40_swigregister
NET_DVR_RECORD_V40_swigregister(NET_DVR_RECORD_V40)

class NET_DVR_RECORD(_object):
    """Proxy of C++ NET_DVR_RECORD class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_RECORD, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_RECORD, name)
    __repr__ = _swig_repr
    __swig_setmethods__["dwSize"] = _hk_struct_test.NET_DVR_RECORD_dwSize_set
    __swig_getmethods__["dwSize"] = _hk_struct_test.NET_DVR_RECORD_dwSize_get
    if _newclass:
        dwSize = _swig_property(_hk_struct_test.NET_DVR_RECORD_dwSize_get, _hk_struct_test.NET_DVR_RECORD_dwSize_set)
    __swig_setmethods__["dwRecord"] = _hk_struct_test.NET_DVR_RECORD_dwRecord_set
    __swig_getmethods__["dwRecord"] = _hk_struct_test.NET_DVR_RECORD_dwRecord_get
    if _newclass:
        dwRecord = _swig_property(_hk_struct_test.NET_DVR_RECORD_dwRecord_get, _hk_struct_test.NET_DVR_RECORD_dwRecord_set)
    __swig_setmethods__["struRecAllDay"] = _hk_struct_test.NET_DVR_RECORD_struRecAllDay_set
    __swig_getmethods__["struRecAllDay"] = _hk_struct_test.NET_DVR_RECORD_struRecAllDay_get
    if _newclass:
        struRecAllDay = _swig_property(_hk_struct_test.NET_DVR_RECORD_struRecAllDay_get, _hk_struct_test.NET_DVR_RECORD_struRecAllDay_set)
    __swig_setmethods__["struRecordSched"] = _hk_struct_test.NET_DVR_RECORD_struRecordSched_set
    __swig_getmethods__["struRecordSched"] = _hk_struct_test.NET_DVR_RECORD_struRecordSched_get
    if _newclass:
        struRecordSched = _swig_property(_hk_struct_test.NET_DVR_RECORD_struRecordSched_get, _hk_struct_test.NET_DVR_RECORD_struRecordSched_set)
    __swig_setmethods__["dwRecordTime"] = _hk_struct_test.NET_DVR_RECORD_dwRecordTime_set
    __swig_getmethods__["dwRecordTime"] = _hk_struct_test.NET_DVR_RECORD_dwRecordTime_get
    if _newclass:
        dwRecordTime = _swig_property(_hk_struct_test.NET_DVR_RECORD_dwRecordTime_get, _hk_struct_test.NET_DVR_RECORD_dwRecordTime_set)
    __swig_setmethods__["dwPreRecordTime"] = _hk_struct_test.NET_DVR_RECORD_dwPreRecordTime_set
    __swig_getmethods__["dwPreRecordTime"] = _hk_struct_test.NET_DVR_RECORD_dwPreRecordTime_get
    if _newclass:
        dwPreRecordTime = _swig_property(_hk_struct_test.NET_DVR_RECORD_dwPreRecordTime_get, _hk_struct_test.NET_DVR_RECORD_dwPreRecordTime_set)

    def __init__(self):
        """__init__(NET_DVR_RECORD self) -> NET_DVR_RECORD"""
        this = _hk_struct_test.new_NET_DVR_RECORD()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_RECORD
    __del__ = lambda self: None
NET_DVR_RECORD_swigregister = _hk_struct_test.NET_DVR_RECORD_swigregister
NET_DVR_RECORD_swigregister(NET_DVR_RECORD)

class NET_DVR_PTZ_PROTOCOL(_object):
    """Proxy of C++ NET_DVR_PTZ_PROTOCOL class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_PTZ_PROTOCOL, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_PTZ_PROTOCOL, name)
    __repr__ = _swig_repr
    __swig_setmethods__["dwType"] = _hk_struct_test.NET_DVR_PTZ_PROTOCOL_dwType_set
    __swig_getmethods__["dwType"] = _hk_struct_test.NET_DVR_PTZ_PROTOCOL_dwType_get
    if _newclass:
        dwType = _swig_property(_hk_struct_test.NET_DVR_PTZ_PROTOCOL_dwType_get, _hk_struct_test.NET_DVR_PTZ_PROTOCOL_dwType_set)
    __swig_setmethods__["byDescribe"] = _hk_struct_test.NET_DVR_PTZ_PROTOCOL_byDescribe_set
    __swig_getmethods__["byDescribe"] = _hk_struct_test.NET_DVR_PTZ_PROTOCOL_byDescribe_get
    if _newclass:
        byDescribe = _swig_property(_hk_struct_test.NET_DVR_PTZ_PROTOCOL_byDescribe_get, _hk_struct_test.NET_DVR_PTZ_PROTOCOL_byDescribe_set)

    def __init__(self):
        """__init__(NET_DVR_PTZ_PROTOCOL self) -> NET_DVR_PTZ_PROTOCOL"""
        this = _hk_struct_test.new_NET_DVR_PTZ_PROTOCOL()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_PTZ_PROTOCOL
    __del__ = lambda self: None
NET_DVR_PTZ_PROTOCOL_swigregister = _hk_struct_test.NET_DVR_PTZ_PROTOCOL_swigregister
NET_DVR_PTZ_PROTOCOL_swigregister(NET_DVR_PTZ_PROTOCOL)

class NET_DVR_PTZCFG(_object):
    """Proxy of C++ NET_DVR_PTZCFG class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_PTZCFG, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_PTZCFG, name)
    __repr__ = _swig_repr
    __swig_setmethods__["dwSize"] = _hk_struct_test.NET_DVR_PTZCFG_dwSize_set
    __swig_getmethods__["dwSize"] = _hk_struct_test.NET_DVR_PTZCFG_dwSize_get
    if _newclass:
        dwSize = _swig_property(_hk_struct_test.NET_DVR_PTZCFG_dwSize_get, _hk_struct_test.NET_DVR_PTZCFG_dwSize_set)
    __swig_setmethods__["struPtz"] = _hk_struct_test.NET_DVR_PTZCFG_struPtz_set
    __swig_getmethods__["struPtz"] = _hk_struct_test.NET_DVR_PTZCFG_struPtz_get
    if _newclass:
        struPtz = _swig_property(_hk_struct_test.NET_DVR_PTZCFG_struPtz_get, _hk_struct_test.NET_DVR_PTZCFG_struPtz_set)
    __swig_setmethods__["dwPtzNum"] = _hk_struct_test.NET_DVR_PTZCFG_dwPtzNum_set
    __swig_getmethods__["dwPtzNum"] = _hk_struct_test.NET_DVR_PTZCFG_dwPtzNum_get
    if _newclass:
        dwPtzNum = _swig_property(_hk_struct_test.NET_DVR_PTZCFG_dwPtzNum_get, _hk_struct_test.NET_DVR_PTZCFG_dwPtzNum_set)
    __swig_setmethods__["byRes"] = _hk_struct_test.NET_DVR_PTZCFG_byRes_set
    __swig_getmethods__["byRes"] = _hk_struct_test.NET_DVR_PTZCFG_byRes_get
    if _newclass:
        byRes = _swig_property(_hk_struct_test.NET_DVR_PTZCFG_byRes_get, _hk_struct_test.NET_DVR_PTZCFG_byRes_set)

    def __init__(self):
        """__init__(NET_DVR_PTZCFG self) -> NET_DVR_PTZCFG"""
        this = _hk_struct_test.new_NET_DVR_PTZCFG()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_PTZCFG
    __del__ = lambda self: None
NET_DVR_PTZCFG_swigregister = _hk_struct_test.NET_DVR_PTZCFG_swigregister
NET_DVR_PTZCFG_swigregister(NET_DVR_PTZCFG)

class NET_DVR_SERIALSTART_V40(_object):
    """Proxy of C++ tagNET_DVR_SERIALSTART_V40 class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_SERIALSTART_V40, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_SERIALSTART_V40, name)
    __repr__ = _swig_repr
    __swig_setmethods__["dwSize"] = _hk_struct_test.NET_DVR_SERIALSTART_V40_dwSize_set
    __swig_getmethods__["dwSize"] = _hk_struct_test.NET_DVR_SERIALSTART_V40_dwSize_get
    if _newclass:
        dwSize = _swig_property(_hk_struct_test.NET_DVR_SERIALSTART_V40_dwSize_get, _hk_struct_test.NET_DVR_SERIALSTART_V40_dwSize_set)
    __swig_setmethods__["dwSerialType"] = _hk_struct_test.NET_DVR_SERIALSTART_V40_dwSerialType_set
    __swig_getmethods__["dwSerialType"] = _hk_struct_test.NET_DVR_SERIALSTART_V40_dwSerialType_get
    if _newclass:
        dwSerialType = _swig_property(_hk_struct_test.NET_DVR_SERIALSTART_V40_dwSerialType_get, _hk_struct_test.NET_DVR_SERIALSTART_V40_dwSerialType_set)
    __swig_setmethods__["bySerialNum"] = _hk_struct_test.NET_DVR_SERIALSTART_V40_bySerialNum_set
    __swig_getmethods__["bySerialNum"] = _hk_struct_test.NET_DVR_SERIALSTART_V40_bySerialNum_get
    if _newclass:
        bySerialNum = _swig_property(_hk_struct_test.NET_DVR_SERIALSTART_V40_bySerialNum_get, _hk_struct_test.NET_DVR_SERIALSTART_V40_bySerialNum_set)
    __swig_setmethods__["byRes"] = _hk_struct_test.NET_DVR_SERIALSTART_V40_byRes_set
    __swig_getmethods__["byRes"] = _hk_struct_test.NET_DVR_SERIALSTART_V40_byRes_get
    if _newclass:
        byRes = _swig_property(_hk_struct_test.NET_DVR_SERIALSTART_V40_byRes_get, _hk_struct_test.NET_DVR_SERIALSTART_V40_byRes_set)

    def __init__(self):
        """__init__(tagNET_DVR_SERIALSTART_V40 self) -> NET_DVR_SERIALSTART_V40"""
        this = _hk_struct_test.new_NET_DVR_SERIALSTART_V40()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_SERIALSTART_V40
    __del__ = lambda self: None
NET_DVR_SERIALSTART_V40_swigregister = _hk_struct_test.NET_DVR_SERIALSTART_V40_swigregister
NET_DVR_SERIALSTART_V40_swigregister(NET_DVR_SERIALSTART_V40)

class NET_DVR_DECODERCFG_V40(_object):
    """Proxy of C++ tagNET_DVR_DECODERCFG_V40 class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_DECODERCFG_V40, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_DECODERCFG_V40, name)
    __repr__ = _swig_repr
    __swig_setmethods__["dwSize"] = _hk_struct_test.NET_DVR_DECODERCFG_V40_dwSize_set
    __swig_getmethods__["dwSize"] = _hk_struct_test.NET_DVR_DECODERCFG_V40_dwSize_get
    if _newclass:
        dwSize = _swig_property(_hk_struct_test.NET_DVR_DECODERCFG_V40_dwSize_get, _hk_struct_test.NET_DVR_DECODERCFG_V40_dwSize_set)
    __swig_setmethods__["dwBaudRate"] = _hk_struct_test.NET_DVR_DECODERCFG_V40_dwBaudRate_set
    __swig_getmethods__["dwBaudRate"] = _hk_struct_test.NET_DVR_DECODERCFG_V40_dwBaudRate_get
    if _newclass:
        dwBaudRate = _swig_property(_hk_struct_test.NET_DVR_DECODERCFG_V40_dwBaudRate_get, _hk_struct_test.NET_DVR_DECODERCFG_V40_dwBaudRate_set)
    __swig_setmethods__["byDataBit"] = _hk_struct_test.NET_DVR_DECODERCFG_V40_byDataBit_set
    __swig_getmethods__["byDataBit"] = _hk_struct_test.NET_DVR_DECODERCFG_V40_byDataBit_get
    if _newclass:
        byDataBit = _swig_property(_hk_struct_test.NET_DVR_DECODERCFG_V40_byDataBit_get, _hk_struct_test.NET_DVR_DECODERCFG_V40_byDataBit_set)
    __swig_setmethods__["byStopBit"] = _hk_struct_test.NET_DVR_DECODERCFG_V40_byStopBit_set
    __swig_getmethods__["byStopBit"] = _hk_struct_test.NET_DVR_DECODERCFG_V40_byStopBit_get
    if _newclass:
        byStopBit = _swig_property(_hk_struct_test.NET_DVR_DECODERCFG_V40_byStopBit_get, _hk_struct_test.NET_DVR_DECODERCFG_V40_byStopBit_set)
    __swig_setmethods__["byParity"] = _hk_struct_test.NET_DVR_DECODERCFG_V40_byParity_set
    __swig_getmethods__["byParity"] = _hk_struct_test.NET_DVR_DECODERCFG_V40_byParity_get
    if _newclass:
        byParity = _swig_property(_hk_struct_test.NET_DVR_DECODERCFG_V40_byParity_get, _hk_struct_test.NET_DVR_DECODERCFG_V40_byParity_set)
    __swig_setmethods__["byFlowcontrol"] = _hk_struct_test.NET_DVR_DECODERCFG_V40_byFlowcontrol_set
    __swig_getmethods__["byFlowcontrol"] = _hk_struct_test.NET_DVR_DECODERCFG_V40_byFlowcontrol_get
    if _newclass:
        byFlowcontrol = _swig_property(_hk_struct_test.NET_DVR_DECODERCFG_V40_byFlowcontrol_get, _hk_struct_test.NET_DVR_DECODERCFG_V40_byFlowcontrol_set)
    __swig_setmethods__["wDecoderType"] = _hk_struct_test.NET_DVR_DECODERCFG_V40_wDecoderType_set
    __swig_getmethods__["wDecoderType"] = _hk_struct_test.NET_DVR_DECODERCFG_V40_wDecoderType_get
    if _newclass:
        wDecoderType = _swig_property(_hk_struct_test.NET_DVR_DECODERCFG_V40_wDecoderType_get, _hk_struct_test.NET_DVR_DECODERCFG_V40_wDecoderType_set)
    __swig_setmethods__["wDecoderAddress"] = _hk_struct_test.NET_DVR_DECODERCFG_V40_wDecoderAddress_set
    __swig_getmethods__["wDecoderAddress"] = _hk_struct_test.NET_DVR_DECODERCFG_V40_wDecoderAddress_get
    if _newclass:
        wDecoderAddress = _swig_property(_hk_struct_test.NET_DVR_DECODERCFG_V40_wDecoderAddress_get, _hk_struct_test.NET_DVR_DECODERCFG_V40_wDecoderAddress_set)
    __swig_setmethods__["bySetPreset"] = _hk_struct_test.NET_DVR_DECODERCFG_V40_bySetPreset_set
    __swig_getmethods__["bySetPreset"] = _hk_struct_test.NET_DVR_DECODERCFG_V40_bySetPreset_get
    if _newclass:
        bySetPreset = _swig_property(_hk_struct_test.NET_DVR_DECODERCFG_V40_bySetPreset_get, _hk_struct_test.NET_DVR_DECODERCFG_V40_bySetPreset_set)
    __swig_setmethods__["bySetCruise"] = _hk_struct_test.NET_DVR_DECODERCFG_V40_bySetCruise_set
    __swig_getmethods__["bySetCruise"] = _hk_struct_test.NET_DVR_DECODERCFG_V40_bySetCruise_get
    if _newclass:
        bySetCruise = _swig_property(_hk_struct_test.NET_DVR_DECODERCFG_V40_bySetCruise_get, _hk_struct_test.NET_DVR_DECODERCFG_V40_bySetCruise_set)
    __swig_setmethods__["bySetTrack"] = _hk_struct_test.NET_DVR_DECODERCFG_V40_bySetTrack_set
    __swig_getmethods__["bySetTrack"] = _hk_struct_test.NET_DVR_DECODERCFG_V40_bySetTrack_get
    if _newclass:
        bySetTrack = _swig_property(_hk_struct_test.NET_DVR_DECODERCFG_V40_bySetTrack_get, _hk_struct_test.NET_DVR_DECODERCFG_V40_bySetTrack_set)
    __swig_setmethods__["bySerialNO"] = _hk_struct_test.NET_DVR_DECODERCFG_V40_bySerialNO_set
    __swig_getmethods__["bySerialNO"] = _hk_struct_test.NET_DVR_DECODERCFG_V40_bySerialNO_get
    if _newclass:
        bySerialNO = _swig_property(_hk_struct_test.NET_DVR_DECODERCFG_V40_bySerialNO_get, _hk_struct_test.NET_DVR_DECODERCFG_V40_bySerialNO_set)
    __swig_setmethods__["byWorkMode"] = _hk_struct_test.NET_DVR_DECODERCFG_V40_byWorkMode_set
    __swig_getmethods__["byWorkMode"] = _hk_struct_test.NET_DVR_DECODERCFG_V40_byWorkMode_get
    if _newclass:
        byWorkMode = _swig_property(_hk_struct_test.NET_DVR_DECODERCFG_V40_byWorkMode_get, _hk_struct_test.NET_DVR_DECODERCFG_V40_byWorkMode_set)
    __swig_setmethods__["byRes"] = _hk_struct_test.NET_DVR_DECODERCFG_V40_byRes_set
    __swig_getmethods__["byRes"] = _hk_struct_test.NET_DVR_DECODERCFG_V40_byRes_get
    if _newclass:
        byRes = _swig_property(_hk_struct_test.NET_DVR_DECODERCFG_V40_byRes_get, _hk_struct_test.NET_DVR_DECODERCFG_V40_byRes_set)

    def __init__(self):
        """__init__(tagNET_DVR_DECODERCFG_V40 self) -> NET_DVR_DECODERCFG_V40"""
        this = _hk_struct_test.new_NET_DVR_DECODERCFG_V40()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_DECODERCFG_V40
    __del__ = lambda self: None
NET_DVR_DECODERCFG_V40_swigregister = _hk_struct_test.NET_DVR_DECODERCFG_V40_swigregister
NET_DVR_DECODERCFG_V40_swigregister(NET_DVR_DECODERCFG_V40)

class NET_DVR_THERMOMETRYRULE_TEMPERATURE_INFO(_object):
    """Proxy of C++ tagNET_DVR_THERMOMETRYRULE_TEMPERATURE_INFO class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_THERMOMETRYRULE_TEMPERATURE_INFO, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_THERMOMETRYRULE_TEMPERATURE_INFO, name)
    __repr__ = _swig_repr
    __swig_setmethods__["fMaxTemperature"] = _hk_struct_test.NET_DVR_THERMOMETRYRULE_TEMPERATURE_INFO_fMaxTemperature_set
    __swig_getmethods__["fMaxTemperature"] = _hk_struct_test.NET_DVR_THERMOMETRYRULE_TEMPERATURE_INFO_fMaxTemperature_get
    if _newclass:
        fMaxTemperature = _swig_property(_hk_struct_test.NET_DVR_THERMOMETRYRULE_TEMPERATURE_INFO_fMaxTemperature_get, _hk_struct_test.NET_DVR_THERMOMETRYRULE_TEMPERATURE_INFO_fMaxTemperature_set)
    __swig_setmethods__["fMinTemperature"] = _hk_struct_test.NET_DVR_THERMOMETRYRULE_TEMPERATURE_INFO_fMinTemperature_set
    __swig_getmethods__["fMinTemperature"] = _hk_struct_test.NET_DVR_THERMOMETRYRULE_TEMPERATURE_INFO_fMinTemperature_get
    if _newclass:
        fMinTemperature = _swig_property(_hk_struct_test.NET_DVR_THERMOMETRYRULE_TEMPERATURE_INFO_fMinTemperature_get, _hk_struct_test.NET_DVR_THERMOMETRYRULE_TEMPERATURE_INFO_fMinTemperature_set)
    __swig_setmethods__["fAverageTemperature"] = _hk_struct_test.NET_DVR_THERMOMETRYRULE_TEMPERATURE_INFO_fAverageTemperature_set
    __swig_getmethods__["fAverageTemperature"] = _hk_struct_test.NET_DVR_THERMOMETRYRULE_TEMPERATURE_INFO_fAverageTemperature_get
    if _newclass:
        fAverageTemperature = _swig_property(_hk_struct_test.NET_DVR_THERMOMETRYRULE_TEMPERATURE_INFO_fAverageTemperature_get, _hk_struct_test.NET_DVR_THERMOMETRYRULE_TEMPERATURE_INFO_fAverageTemperature_set)
    __swig_setmethods__["struHighestPoint"] = _hk_struct_test.NET_DVR_THERMOMETRYRULE_TEMPERATURE_INFO_struHighestPoint_set
    __swig_getmethods__["struHighestPoint"] = _hk_struct_test.NET_DVR_THERMOMETRYRULE_TEMPERATURE_INFO_struHighestPoint_get
    if _newclass:
        struHighestPoint = _swig_property(_hk_struct_test.NET_DVR_THERMOMETRYRULE_TEMPERATURE_INFO_struHighestPoint_get, _hk_struct_test.NET_DVR_THERMOMETRYRULE_TEMPERATURE_INFO_struHighestPoint_set)
    __swig_setmethods__["struLowestPoint"] = _hk_struct_test.NET_DVR_THERMOMETRYRULE_TEMPERATURE_INFO_struLowestPoint_set
    __swig_getmethods__["struLowestPoint"] = _hk_struct_test.NET_DVR_THERMOMETRYRULE_TEMPERATURE_INFO_struLowestPoint_get
    if _newclass:
        struLowestPoint = _swig_property(_hk_struct_test.NET_DVR_THERMOMETRYRULE_TEMPERATURE_INFO_struLowestPoint_get, _hk_struct_test.NET_DVR_THERMOMETRYRULE_TEMPERATURE_INFO_struLowestPoint_set)
    __swig_setmethods__["byIsFreezedata"] = _hk_struct_test.NET_DVR_THERMOMETRYRULE_TEMPERATURE_INFO_byIsFreezedata_set
    __swig_getmethods__["byIsFreezedata"] = _hk_struct_test.NET_DVR_THERMOMETRYRULE_TEMPERATURE_INFO_byIsFreezedata_get
    if _newclass:
        byIsFreezedata = _swig_property(_hk_struct_test.NET_DVR_THERMOMETRYRULE_TEMPERATURE_INFO_byIsFreezedata_get, _hk_struct_test.NET_DVR_THERMOMETRYRULE_TEMPERATURE_INFO_byIsFreezedata_set)
    __swig_setmethods__["byRes"] = _hk_struct_test.NET_DVR_THERMOMETRYRULE_TEMPERATURE_INFO_byRes_set
    __swig_getmethods__["byRes"] = _hk_struct_test.NET_DVR_THERMOMETRYRULE_TEMPERATURE_INFO_byRes_get
    if _newclass:
        byRes = _swig_property(_hk_struct_test.NET_DVR_THERMOMETRYRULE_TEMPERATURE_INFO_byRes_get, _hk_struct_test.NET_DVR_THERMOMETRYRULE_TEMPERATURE_INFO_byRes_set)

    def __init__(self):
        """__init__(tagNET_DVR_THERMOMETRYRULE_TEMPERATURE_INFO self) -> NET_DVR_THERMOMETRYRULE_TEMPERATURE_INFO"""
        this = _hk_struct_test.new_NET_DVR_THERMOMETRYRULE_TEMPERATURE_INFO()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_THERMOMETRYRULE_TEMPERATURE_INFO
    __del__ = lambda self: None
NET_DVR_THERMOMETRYRULE_TEMPERATURE_INFO_swigregister = _hk_struct_test.NET_DVR_THERMOMETRYRULE_TEMPERATURE_INFO_swigregister
NET_DVR_THERMOMETRYRULE_TEMPERATURE_INFO_swigregister(NET_DVR_THERMOMETRYRULE_TEMPERATURE_INFO)

class NET_DVR_DECODERCFG_V30(_object):
    """Proxy of C++ NET_DVR_DECODERCFG_V30 class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_DECODERCFG_V30, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_DECODERCFG_V30, name)
    __repr__ = _swig_repr
    __swig_setmethods__["dwSize"] = _hk_struct_test.NET_DVR_DECODERCFG_V30_dwSize_set
    __swig_getmethods__["dwSize"] = _hk_struct_test.NET_DVR_DECODERCFG_V30_dwSize_get
    if _newclass:
        dwSize = _swig_property(_hk_struct_test.NET_DVR_DECODERCFG_V30_dwSize_get, _hk_struct_test.NET_DVR_DECODERCFG_V30_dwSize_set)
    __swig_setmethods__["dwBaudRate"] = _hk_struct_test.NET_DVR_DECODERCFG_V30_dwBaudRate_set
    __swig_getmethods__["dwBaudRate"] = _hk_struct_test.NET_DVR_DECODERCFG_V30_dwBaudRate_get
    if _newclass:
        dwBaudRate = _swig_property(_hk_struct_test.NET_DVR_DECODERCFG_V30_dwBaudRate_get, _hk_struct_test.NET_DVR_DECODERCFG_V30_dwBaudRate_set)
    __swig_setmethods__["byDataBit"] = _hk_struct_test.NET_DVR_DECODERCFG_V30_byDataBit_set
    __swig_getmethods__["byDataBit"] = _hk_struct_test.NET_DVR_DECODERCFG_V30_byDataBit_get
    if _newclass:
        byDataBit = _swig_property(_hk_struct_test.NET_DVR_DECODERCFG_V30_byDataBit_get, _hk_struct_test.NET_DVR_DECODERCFG_V30_byDataBit_set)
    __swig_setmethods__["byStopBit"] = _hk_struct_test.NET_DVR_DECODERCFG_V30_byStopBit_set
    __swig_getmethods__["byStopBit"] = _hk_struct_test.NET_DVR_DECODERCFG_V30_byStopBit_get
    if _newclass:
        byStopBit = _swig_property(_hk_struct_test.NET_DVR_DECODERCFG_V30_byStopBit_get, _hk_struct_test.NET_DVR_DECODERCFG_V30_byStopBit_set)
    __swig_setmethods__["byParity"] = _hk_struct_test.NET_DVR_DECODERCFG_V30_byParity_set
    __swig_getmethods__["byParity"] = _hk_struct_test.NET_DVR_DECODERCFG_V30_byParity_get
    if _newclass:
        byParity = _swig_property(_hk_struct_test.NET_DVR_DECODERCFG_V30_byParity_get, _hk_struct_test.NET_DVR_DECODERCFG_V30_byParity_set)
    __swig_setmethods__["byFlowcontrol"] = _hk_struct_test.NET_DVR_DECODERCFG_V30_byFlowcontrol_set
    __swig_getmethods__["byFlowcontrol"] = _hk_struct_test.NET_DVR_DECODERCFG_V30_byFlowcontrol_get
    if _newclass:
        byFlowcontrol = _swig_property(_hk_struct_test.NET_DVR_DECODERCFG_V30_byFlowcontrol_get, _hk_struct_test.NET_DVR_DECODERCFG_V30_byFlowcontrol_set)
    __swig_setmethods__["wDecoderType"] = _hk_struct_test.NET_DVR_DECODERCFG_V30_wDecoderType_set
    __swig_getmethods__["wDecoderType"] = _hk_struct_test.NET_DVR_DECODERCFG_V30_wDecoderType_get
    if _newclass:
        wDecoderType = _swig_property(_hk_struct_test.NET_DVR_DECODERCFG_V30_wDecoderType_get, _hk_struct_test.NET_DVR_DECODERCFG_V30_wDecoderType_set)
    __swig_setmethods__["wDecoderAddress"] = _hk_struct_test.NET_DVR_DECODERCFG_V30_wDecoderAddress_set
    __swig_getmethods__["wDecoderAddress"] = _hk_struct_test.NET_DVR_DECODERCFG_V30_wDecoderAddress_get
    if _newclass:
        wDecoderAddress = _swig_property(_hk_struct_test.NET_DVR_DECODERCFG_V30_wDecoderAddress_get, _hk_struct_test.NET_DVR_DECODERCFG_V30_wDecoderAddress_set)
    __swig_setmethods__["bySetPreset"] = _hk_struct_test.NET_DVR_DECODERCFG_V30_bySetPreset_set
    __swig_getmethods__["bySetPreset"] = _hk_struct_test.NET_DVR_DECODERCFG_V30_bySetPreset_get
    if _newclass:
        bySetPreset = _swig_property(_hk_struct_test.NET_DVR_DECODERCFG_V30_bySetPreset_get, _hk_struct_test.NET_DVR_DECODERCFG_V30_bySetPreset_set)
    __swig_setmethods__["bySetCruise"] = _hk_struct_test.NET_DVR_DECODERCFG_V30_bySetCruise_set
    __swig_getmethods__["bySetCruise"] = _hk_struct_test.NET_DVR_DECODERCFG_V30_bySetCruise_get
    if _newclass:
        bySetCruise = _swig_property(_hk_struct_test.NET_DVR_DECODERCFG_V30_bySetCruise_get, _hk_struct_test.NET_DVR_DECODERCFG_V30_bySetCruise_set)
    __swig_setmethods__["bySetTrack"] = _hk_struct_test.NET_DVR_DECODERCFG_V30_bySetTrack_set
    __swig_getmethods__["bySetTrack"] = _hk_struct_test.NET_DVR_DECODERCFG_V30_bySetTrack_get
    if _newclass:
        bySetTrack = _swig_property(_hk_struct_test.NET_DVR_DECODERCFG_V30_bySetTrack_get, _hk_struct_test.NET_DVR_DECODERCFG_V30_bySetTrack_set)

    def __init__(self):
        """__init__(NET_DVR_DECODERCFG_V30 self) -> NET_DVR_DECODERCFG_V30"""
        this = _hk_struct_test.new_NET_DVR_DECODERCFG_V30()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_DECODERCFG_V30
    __del__ = lambda self: None
NET_DVR_DECODERCFG_V30_swigregister = _hk_struct_test.NET_DVR_DECODERCFG_V30_swigregister
NET_DVR_DECODERCFG_V30_swigregister(NET_DVR_DECODERCFG_V30)

class NET_DVR_DECODERCFG(_object):
    """Proxy of C++ NET_DVR_DECODERCFG class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_DECODERCFG, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_DECODERCFG, name)
    __repr__ = _swig_repr
    __swig_setmethods__["dwSize"] = _hk_struct_test.NET_DVR_DECODERCFG_dwSize_set
    __swig_getmethods__["dwSize"] = _hk_struct_test.NET_DVR_DECODERCFG_dwSize_get
    if _newclass:
        dwSize = _swig_property(_hk_struct_test.NET_DVR_DECODERCFG_dwSize_get, _hk_struct_test.NET_DVR_DECODERCFG_dwSize_set)
    __swig_setmethods__["dwBaudRate"] = _hk_struct_test.NET_DVR_DECODERCFG_dwBaudRate_set
    __swig_getmethods__["dwBaudRate"] = _hk_struct_test.NET_DVR_DECODERCFG_dwBaudRate_get
    if _newclass:
        dwBaudRate = _swig_property(_hk_struct_test.NET_DVR_DECODERCFG_dwBaudRate_get, _hk_struct_test.NET_DVR_DECODERCFG_dwBaudRate_set)
    __swig_setmethods__["byDataBit"] = _hk_struct_test.NET_DVR_DECODERCFG_byDataBit_set
    __swig_getmethods__["byDataBit"] = _hk_struct_test.NET_DVR_DECODERCFG_byDataBit_get
    if _newclass:
        byDataBit = _swig_property(_hk_struct_test.NET_DVR_DECODERCFG_byDataBit_get, _hk_struct_test.NET_DVR_DECODERCFG_byDataBit_set)
    __swig_setmethods__["byStopBit"] = _hk_struct_test.NET_DVR_DECODERCFG_byStopBit_set
    __swig_getmethods__["byStopBit"] = _hk_struct_test.NET_DVR_DECODERCFG_byStopBit_get
    if _newclass:
        byStopBit = _swig_property(_hk_struct_test.NET_DVR_DECODERCFG_byStopBit_get, _hk_struct_test.NET_DVR_DECODERCFG_byStopBit_set)
    __swig_setmethods__["byParity"] = _hk_struct_test.NET_DVR_DECODERCFG_byParity_set
    __swig_getmethods__["byParity"] = _hk_struct_test.NET_DVR_DECODERCFG_byParity_get
    if _newclass:
        byParity = _swig_property(_hk_struct_test.NET_DVR_DECODERCFG_byParity_get, _hk_struct_test.NET_DVR_DECODERCFG_byParity_set)
    __swig_setmethods__["byFlowcontrol"] = _hk_struct_test.NET_DVR_DECODERCFG_byFlowcontrol_set
    __swig_getmethods__["byFlowcontrol"] = _hk_struct_test.NET_DVR_DECODERCFG_byFlowcontrol_get
    if _newclass:
        byFlowcontrol = _swig_property(_hk_struct_test.NET_DVR_DECODERCFG_byFlowcontrol_get, _hk_struct_test.NET_DVR_DECODERCFG_byFlowcontrol_set)
    __swig_setmethods__["wDecoderType"] = _hk_struct_test.NET_DVR_DECODERCFG_wDecoderType_set
    __swig_getmethods__["wDecoderType"] = _hk_struct_test.NET_DVR_DECODERCFG_wDecoderType_get
    if _newclass:
        wDecoderType = _swig_property(_hk_struct_test.NET_DVR_DECODERCFG_wDecoderType_get, _hk_struct_test.NET_DVR_DECODERCFG_wDecoderType_set)
    __swig_setmethods__["wDecoderAddress"] = _hk_struct_test.NET_DVR_DECODERCFG_wDecoderAddress_set
    __swig_getmethods__["wDecoderAddress"] = _hk_struct_test.NET_DVR_DECODERCFG_wDecoderAddress_get
    if _newclass:
        wDecoderAddress = _swig_property(_hk_struct_test.NET_DVR_DECODERCFG_wDecoderAddress_get, _hk_struct_test.NET_DVR_DECODERCFG_wDecoderAddress_set)
    __swig_setmethods__["bySetPreset"] = _hk_struct_test.NET_DVR_DECODERCFG_bySetPreset_set
    __swig_getmethods__["bySetPreset"] = _hk_struct_test.NET_DVR_DECODERCFG_bySetPreset_get
    if _newclass:
        bySetPreset = _swig_property(_hk_struct_test.NET_DVR_DECODERCFG_bySetPreset_get, _hk_struct_test.NET_DVR_DECODERCFG_bySetPreset_set)
    __swig_setmethods__["bySetCruise"] = _hk_struct_test.NET_DVR_DECODERCFG_bySetCruise_set
    __swig_getmethods__["bySetCruise"] = _hk_struct_test.NET_DVR_DECODERCFG_bySetCruise_get
    if _newclass:
        bySetCruise = _swig_property(_hk_struct_test.NET_DVR_DECODERCFG_bySetCruise_get, _hk_struct_test.NET_DVR_DECODERCFG_bySetCruise_set)
    __swig_setmethods__["bySetTrack"] = _hk_struct_test.NET_DVR_DECODERCFG_bySetTrack_set
    __swig_getmethods__["bySetTrack"] = _hk_struct_test.NET_DVR_DECODERCFG_bySetTrack_get
    if _newclass:
        bySetTrack = _swig_property(_hk_struct_test.NET_DVR_DECODERCFG_bySetTrack_get, _hk_struct_test.NET_DVR_DECODERCFG_bySetTrack_set)

    def __init__(self):
        """__init__(NET_DVR_DECODERCFG self) -> NET_DVR_DECODERCFG"""
        this = _hk_struct_test.new_NET_DVR_DECODERCFG()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_DECODERCFG
    __del__ = lambda self: None
NET_DVR_DECODERCFG_swigregister = _hk_struct_test.NET_DVR_DECODERCFG_swigregister
NET_DVR_DECODERCFG_swigregister(NET_DVR_DECODERCFG)

class NET_DVR_PPPCFG_V30(_object):
    """Proxy of C++ NET_DVR_PPPCFG_V30 class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_PPPCFG_V30, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_PPPCFG_V30, name)
    __repr__ = _swig_repr
    __swig_setmethods__["struRemoteIP"] = _hk_struct_test.NET_DVR_PPPCFG_V30_struRemoteIP_set
    __swig_getmethods__["struRemoteIP"] = _hk_struct_test.NET_DVR_PPPCFG_V30_struRemoteIP_get
    if _newclass:
        struRemoteIP = _swig_property(_hk_struct_test.NET_DVR_PPPCFG_V30_struRemoteIP_get, _hk_struct_test.NET_DVR_PPPCFG_V30_struRemoteIP_set)
    __swig_setmethods__["struLocalIP"] = _hk_struct_test.NET_DVR_PPPCFG_V30_struLocalIP_set
    __swig_getmethods__["struLocalIP"] = _hk_struct_test.NET_DVR_PPPCFG_V30_struLocalIP_get
    if _newclass:
        struLocalIP = _swig_property(_hk_struct_test.NET_DVR_PPPCFG_V30_struLocalIP_get, _hk_struct_test.NET_DVR_PPPCFG_V30_struLocalIP_set)
    __swig_setmethods__["sLocalIPMask"] = _hk_struct_test.NET_DVR_PPPCFG_V30_sLocalIPMask_set
    __swig_getmethods__["sLocalIPMask"] = _hk_struct_test.NET_DVR_PPPCFG_V30_sLocalIPMask_get
    if _newclass:
        sLocalIPMask = _swig_property(_hk_struct_test.NET_DVR_PPPCFG_V30_sLocalIPMask_get, _hk_struct_test.NET_DVR_PPPCFG_V30_sLocalIPMask_set)
    __swig_setmethods__["sUsername"] = _hk_struct_test.NET_DVR_PPPCFG_V30_sUsername_set
    __swig_getmethods__["sUsername"] = _hk_struct_test.NET_DVR_PPPCFG_V30_sUsername_get
    if _newclass:
        sUsername = _swig_property(_hk_struct_test.NET_DVR_PPPCFG_V30_sUsername_get, _hk_struct_test.NET_DVR_PPPCFG_V30_sUsername_set)
    __swig_setmethods__["sPassword"] = _hk_struct_test.NET_DVR_PPPCFG_V30_sPassword_set
    __swig_getmethods__["sPassword"] = _hk_struct_test.NET_DVR_PPPCFG_V30_sPassword_get
    if _newclass:
        sPassword = _swig_property(_hk_struct_test.NET_DVR_PPPCFG_V30_sPassword_get, _hk_struct_test.NET_DVR_PPPCFG_V30_sPassword_set)
    __swig_setmethods__["byPPPMode"] = _hk_struct_test.NET_DVR_PPPCFG_V30_byPPPMode_set
    __swig_getmethods__["byPPPMode"] = _hk_struct_test.NET_DVR_PPPCFG_V30_byPPPMode_get
    if _newclass:
        byPPPMode = _swig_property(_hk_struct_test.NET_DVR_PPPCFG_V30_byPPPMode_get, _hk_struct_test.NET_DVR_PPPCFG_V30_byPPPMode_set)
    __swig_setmethods__["byRedial"] = _hk_struct_test.NET_DVR_PPPCFG_V30_byRedial_set
    __swig_getmethods__["byRedial"] = _hk_struct_test.NET_DVR_PPPCFG_V30_byRedial_get
    if _newclass:
        byRedial = _swig_property(_hk_struct_test.NET_DVR_PPPCFG_V30_byRedial_get, _hk_struct_test.NET_DVR_PPPCFG_V30_byRedial_set)
    __swig_setmethods__["byRedialMode"] = _hk_struct_test.NET_DVR_PPPCFG_V30_byRedialMode_set
    __swig_getmethods__["byRedialMode"] = _hk_struct_test.NET_DVR_PPPCFG_V30_byRedialMode_get
    if _newclass:
        byRedialMode = _swig_property(_hk_struct_test.NET_DVR_PPPCFG_V30_byRedialMode_get, _hk_struct_test.NET_DVR_PPPCFG_V30_byRedialMode_set)
    __swig_setmethods__["byDataEncrypt"] = _hk_struct_test.NET_DVR_PPPCFG_V30_byDataEncrypt_set
    __swig_getmethods__["byDataEncrypt"] = _hk_struct_test.NET_DVR_PPPCFG_V30_byDataEncrypt_get
    if _newclass:
        byDataEncrypt = _swig_property(_hk_struct_test.NET_DVR_PPPCFG_V30_byDataEncrypt_get, _hk_struct_test.NET_DVR_PPPCFG_V30_byDataEncrypt_set)
    __swig_setmethods__["dwMTU"] = _hk_struct_test.NET_DVR_PPPCFG_V30_dwMTU_set
    __swig_getmethods__["dwMTU"] = _hk_struct_test.NET_DVR_PPPCFG_V30_dwMTU_get
    if _newclass:
        dwMTU = _swig_property(_hk_struct_test.NET_DVR_PPPCFG_V30_dwMTU_get, _hk_struct_test.NET_DVR_PPPCFG_V30_dwMTU_set)
    __swig_setmethods__["sTelephoneNumber"] = _hk_struct_test.NET_DVR_PPPCFG_V30_sTelephoneNumber_set
    __swig_getmethods__["sTelephoneNumber"] = _hk_struct_test.NET_DVR_PPPCFG_V30_sTelephoneNumber_get
    if _newclass:
        sTelephoneNumber = _swig_property(_hk_struct_test.NET_DVR_PPPCFG_V30_sTelephoneNumber_get, _hk_struct_test.NET_DVR_PPPCFG_V30_sTelephoneNumber_set)

    def __init__(self):
        """__init__(NET_DVR_PPPCFG_V30 self) -> NET_DVR_PPPCFG_V30"""
        this = _hk_struct_test.new_NET_DVR_PPPCFG_V30()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_PPPCFG_V30
    __del__ = lambda self: None
NET_DVR_PPPCFG_V30_swigregister = _hk_struct_test.NET_DVR_PPPCFG_V30_swigregister
NET_DVR_PPPCFG_V30_swigregister(NET_DVR_PPPCFG_V30)

class NET_DVR_PPPCFG(_object):
    """Proxy of C++ NET_DVR_PPPCFG class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_PPPCFG, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_PPPCFG, name)
    __repr__ = _swig_repr
    __swig_setmethods__["sRemoteIP"] = _hk_struct_test.NET_DVR_PPPCFG_sRemoteIP_set
    __swig_getmethods__["sRemoteIP"] = _hk_struct_test.NET_DVR_PPPCFG_sRemoteIP_get
    if _newclass:
        sRemoteIP = _swig_property(_hk_struct_test.NET_DVR_PPPCFG_sRemoteIP_get, _hk_struct_test.NET_DVR_PPPCFG_sRemoteIP_set)
    __swig_setmethods__["sLocalIP"] = _hk_struct_test.NET_DVR_PPPCFG_sLocalIP_set
    __swig_getmethods__["sLocalIP"] = _hk_struct_test.NET_DVR_PPPCFG_sLocalIP_get
    if _newclass:
        sLocalIP = _swig_property(_hk_struct_test.NET_DVR_PPPCFG_sLocalIP_get, _hk_struct_test.NET_DVR_PPPCFG_sLocalIP_set)
    __swig_setmethods__["sLocalIPMask"] = _hk_struct_test.NET_DVR_PPPCFG_sLocalIPMask_set
    __swig_getmethods__["sLocalIPMask"] = _hk_struct_test.NET_DVR_PPPCFG_sLocalIPMask_get
    if _newclass:
        sLocalIPMask = _swig_property(_hk_struct_test.NET_DVR_PPPCFG_sLocalIPMask_get, _hk_struct_test.NET_DVR_PPPCFG_sLocalIPMask_set)
    __swig_setmethods__["sUsername"] = _hk_struct_test.NET_DVR_PPPCFG_sUsername_set
    __swig_getmethods__["sUsername"] = _hk_struct_test.NET_DVR_PPPCFG_sUsername_get
    if _newclass:
        sUsername = _swig_property(_hk_struct_test.NET_DVR_PPPCFG_sUsername_get, _hk_struct_test.NET_DVR_PPPCFG_sUsername_set)
    __swig_setmethods__["sPassword"] = _hk_struct_test.NET_DVR_PPPCFG_sPassword_set
    __swig_getmethods__["sPassword"] = _hk_struct_test.NET_DVR_PPPCFG_sPassword_get
    if _newclass:
        sPassword = _swig_property(_hk_struct_test.NET_DVR_PPPCFG_sPassword_get, _hk_struct_test.NET_DVR_PPPCFG_sPassword_set)
    __swig_setmethods__["byPPPMode"] = _hk_struct_test.NET_DVR_PPPCFG_byPPPMode_set
    __swig_getmethods__["byPPPMode"] = _hk_struct_test.NET_DVR_PPPCFG_byPPPMode_get
    if _newclass:
        byPPPMode = _swig_property(_hk_struct_test.NET_DVR_PPPCFG_byPPPMode_get, _hk_struct_test.NET_DVR_PPPCFG_byPPPMode_set)
    __swig_setmethods__["byRedial"] = _hk_struct_test.NET_DVR_PPPCFG_byRedial_set
    __swig_getmethods__["byRedial"] = _hk_struct_test.NET_DVR_PPPCFG_byRedial_get
    if _newclass:
        byRedial = _swig_property(_hk_struct_test.NET_DVR_PPPCFG_byRedial_get, _hk_struct_test.NET_DVR_PPPCFG_byRedial_set)
    __swig_setmethods__["byRedialMode"] = _hk_struct_test.NET_DVR_PPPCFG_byRedialMode_set
    __swig_getmethods__["byRedialMode"] = _hk_struct_test.NET_DVR_PPPCFG_byRedialMode_get
    if _newclass:
        byRedialMode = _swig_property(_hk_struct_test.NET_DVR_PPPCFG_byRedialMode_get, _hk_struct_test.NET_DVR_PPPCFG_byRedialMode_set)
    __swig_setmethods__["byDataEncrypt"] = _hk_struct_test.NET_DVR_PPPCFG_byDataEncrypt_set
    __swig_getmethods__["byDataEncrypt"] = _hk_struct_test.NET_DVR_PPPCFG_byDataEncrypt_get
    if _newclass:
        byDataEncrypt = _swig_property(_hk_struct_test.NET_DVR_PPPCFG_byDataEncrypt_get, _hk_struct_test.NET_DVR_PPPCFG_byDataEncrypt_set)
    __swig_setmethods__["dwMTU"] = _hk_struct_test.NET_DVR_PPPCFG_dwMTU_set
    __swig_getmethods__["dwMTU"] = _hk_struct_test.NET_DVR_PPPCFG_dwMTU_get
    if _newclass:
        dwMTU = _swig_property(_hk_struct_test.NET_DVR_PPPCFG_dwMTU_get, _hk_struct_test.NET_DVR_PPPCFG_dwMTU_set)
    __swig_setmethods__["sTelephoneNumber"] = _hk_struct_test.NET_DVR_PPPCFG_sTelephoneNumber_set
    __swig_getmethods__["sTelephoneNumber"] = _hk_struct_test.NET_DVR_PPPCFG_sTelephoneNumber_get
    if _newclass:
        sTelephoneNumber = _swig_property(_hk_struct_test.NET_DVR_PPPCFG_sTelephoneNumber_get, _hk_struct_test.NET_DVR_PPPCFG_sTelephoneNumber_set)

    def __init__(self):
        """__init__(NET_DVR_PPPCFG self) -> NET_DVR_PPPCFG"""
        this = _hk_struct_test.new_NET_DVR_PPPCFG()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_PPPCFG
    __del__ = lambda self: None
NET_DVR_PPPCFG_swigregister = _hk_struct_test.NET_DVR_PPPCFG_swigregister
NET_DVR_PPPCFG_swigregister(NET_DVR_PPPCFG)

class NET_DVR_SINGLE_RS232(_object):
    """Proxy of C++ NET_DVR_SINGLE_RS232 class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_SINGLE_RS232, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_SINGLE_RS232, name)
    __repr__ = _swig_repr
    __swig_setmethods__["dwBaudRate"] = _hk_struct_test.NET_DVR_SINGLE_RS232_dwBaudRate_set
    __swig_getmethods__["dwBaudRate"] = _hk_struct_test.NET_DVR_SINGLE_RS232_dwBaudRate_get
    if _newclass:
        dwBaudRate = _swig_property(_hk_struct_test.NET_DVR_SINGLE_RS232_dwBaudRate_get, _hk_struct_test.NET_DVR_SINGLE_RS232_dwBaudRate_set)
    __swig_setmethods__["byDataBit"] = _hk_struct_test.NET_DVR_SINGLE_RS232_byDataBit_set
    __swig_getmethods__["byDataBit"] = _hk_struct_test.NET_DVR_SINGLE_RS232_byDataBit_get
    if _newclass:
        byDataBit = _swig_property(_hk_struct_test.NET_DVR_SINGLE_RS232_byDataBit_get, _hk_struct_test.NET_DVR_SINGLE_RS232_byDataBit_set)
    __swig_setmethods__["byStopBit"] = _hk_struct_test.NET_DVR_SINGLE_RS232_byStopBit_set
    __swig_getmethods__["byStopBit"] = _hk_struct_test.NET_DVR_SINGLE_RS232_byStopBit_get
    if _newclass:
        byStopBit = _swig_property(_hk_struct_test.NET_DVR_SINGLE_RS232_byStopBit_get, _hk_struct_test.NET_DVR_SINGLE_RS232_byStopBit_set)
    __swig_setmethods__["byParity"] = _hk_struct_test.NET_DVR_SINGLE_RS232_byParity_set
    __swig_getmethods__["byParity"] = _hk_struct_test.NET_DVR_SINGLE_RS232_byParity_get
    if _newclass:
        byParity = _swig_property(_hk_struct_test.NET_DVR_SINGLE_RS232_byParity_get, _hk_struct_test.NET_DVR_SINGLE_RS232_byParity_set)
    __swig_setmethods__["byFlowcontrol"] = _hk_struct_test.NET_DVR_SINGLE_RS232_byFlowcontrol_set
    __swig_getmethods__["byFlowcontrol"] = _hk_struct_test.NET_DVR_SINGLE_RS232_byFlowcontrol_get
    if _newclass:
        byFlowcontrol = _swig_property(_hk_struct_test.NET_DVR_SINGLE_RS232_byFlowcontrol_get, _hk_struct_test.NET_DVR_SINGLE_RS232_byFlowcontrol_set)
    __swig_setmethods__["dwWorkMode"] = _hk_struct_test.NET_DVR_SINGLE_RS232_dwWorkMode_set
    __swig_getmethods__["dwWorkMode"] = _hk_struct_test.NET_DVR_SINGLE_RS232_dwWorkMode_get
    if _newclass:
        dwWorkMode = _swig_property(_hk_struct_test.NET_DVR_SINGLE_RS232_dwWorkMode_get, _hk_struct_test.NET_DVR_SINGLE_RS232_dwWorkMode_set)

    def __init__(self):
        """__init__(NET_DVR_SINGLE_RS232 self) -> NET_DVR_SINGLE_RS232"""
        this = _hk_struct_test.new_NET_DVR_SINGLE_RS232()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_SINGLE_RS232
    __del__ = lambda self: None
NET_DVR_SINGLE_RS232_swigregister = _hk_struct_test.NET_DVR_SINGLE_RS232_swigregister
NET_DVR_SINGLE_RS232_swigregister(NET_DVR_SINGLE_RS232)

class NET_DVR_USB_RS232(_object):
    """Proxy of C++ tagNET_DVR_USB_RS232 class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_USB_RS232, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_USB_RS232, name)
    __repr__ = _swig_repr
    __swig_setmethods__["dwBaudRate"] = _hk_struct_test.NET_DVR_USB_RS232_dwBaudRate_set
    __swig_getmethods__["dwBaudRate"] = _hk_struct_test.NET_DVR_USB_RS232_dwBaudRate_get
    if _newclass:
        dwBaudRate = _swig_property(_hk_struct_test.NET_DVR_USB_RS232_dwBaudRate_get, _hk_struct_test.NET_DVR_USB_RS232_dwBaudRate_set)
    __swig_setmethods__["byDataBit"] = _hk_struct_test.NET_DVR_USB_RS232_byDataBit_set
    __swig_getmethods__["byDataBit"] = _hk_struct_test.NET_DVR_USB_RS232_byDataBit_get
    if _newclass:
        byDataBit = _swig_property(_hk_struct_test.NET_DVR_USB_RS232_byDataBit_get, _hk_struct_test.NET_DVR_USB_RS232_byDataBit_set)
    __swig_setmethods__["byStopBit"] = _hk_struct_test.NET_DVR_USB_RS232_byStopBit_set
    __swig_getmethods__["byStopBit"] = _hk_struct_test.NET_DVR_USB_RS232_byStopBit_get
    if _newclass:
        byStopBit = _swig_property(_hk_struct_test.NET_DVR_USB_RS232_byStopBit_get, _hk_struct_test.NET_DVR_USB_RS232_byStopBit_set)
    __swig_setmethods__["byParity"] = _hk_struct_test.NET_DVR_USB_RS232_byParity_set
    __swig_getmethods__["byParity"] = _hk_struct_test.NET_DVR_USB_RS232_byParity_get
    if _newclass:
        byParity = _swig_property(_hk_struct_test.NET_DVR_USB_RS232_byParity_get, _hk_struct_test.NET_DVR_USB_RS232_byParity_set)
    __swig_setmethods__["byFlowcontrol"] = _hk_struct_test.NET_DVR_USB_RS232_byFlowcontrol_set
    __swig_getmethods__["byFlowcontrol"] = _hk_struct_test.NET_DVR_USB_RS232_byFlowcontrol_get
    if _newclass:
        byFlowcontrol = _swig_property(_hk_struct_test.NET_DVR_USB_RS232_byFlowcontrol_get, _hk_struct_test.NET_DVR_USB_RS232_byFlowcontrol_set)
    __swig_setmethods__["byVirtualSerialPort"] = _hk_struct_test.NET_DVR_USB_RS232_byVirtualSerialPort_set
    __swig_getmethods__["byVirtualSerialPort"] = _hk_struct_test.NET_DVR_USB_RS232_byVirtualSerialPort_get
    if _newclass:
        byVirtualSerialPort = _swig_property(_hk_struct_test.NET_DVR_USB_RS232_byVirtualSerialPort_get, _hk_struct_test.NET_DVR_USB_RS232_byVirtualSerialPort_set)
    __swig_setmethods__["byRes"] = _hk_struct_test.NET_DVR_USB_RS232_byRes_set
    __swig_getmethods__["byRes"] = _hk_struct_test.NET_DVR_USB_RS232_byRes_get
    if _newclass:
        byRes = _swig_property(_hk_struct_test.NET_DVR_USB_RS232_byRes_get, _hk_struct_test.NET_DVR_USB_RS232_byRes_set)

    def __init__(self):
        """__init__(tagNET_DVR_USB_RS232 self) -> NET_DVR_USB_RS232"""
        this = _hk_struct_test.new_NET_DVR_USB_RS232()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_USB_RS232
    __del__ = lambda self: None
NET_DVR_USB_RS232_swigregister = _hk_struct_test.NET_DVR_USB_RS232_swigregister
NET_DVR_USB_RS232_swigregister(NET_DVR_USB_RS232)

class NET_DVR_RS232CFG_V30(_object):
    """Proxy of C++ NET_DVR_RS232CFG_V30 class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_RS232CFG_V30, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_RS232CFG_V30, name)
    __repr__ = _swig_repr
    __swig_setmethods__["dwSize"] = _hk_struct_test.NET_DVR_RS232CFG_V30_dwSize_set
    __swig_getmethods__["dwSize"] = _hk_struct_test.NET_DVR_RS232CFG_V30_dwSize_get
    if _newclass:
        dwSize = _swig_property(_hk_struct_test.NET_DVR_RS232CFG_V30_dwSize_get, _hk_struct_test.NET_DVR_RS232CFG_V30_dwSize_set)
    __swig_setmethods__["struRs232"] = _hk_struct_test.NET_DVR_RS232CFG_V30_struRs232_set
    __swig_getmethods__["struRs232"] = _hk_struct_test.NET_DVR_RS232CFG_V30_struRs232_get
    if _newclass:
        struRs232 = _swig_property(_hk_struct_test.NET_DVR_RS232CFG_V30_struRs232_get, _hk_struct_test.NET_DVR_RS232CFG_V30_struRs232_set)
    __swig_setmethods__["struPPPConfig"] = _hk_struct_test.NET_DVR_RS232CFG_V30_struPPPConfig_set
    __swig_getmethods__["struPPPConfig"] = _hk_struct_test.NET_DVR_RS232CFG_V30_struPPPConfig_get
    if _newclass:
        struPPPConfig = _swig_property(_hk_struct_test.NET_DVR_RS232CFG_V30_struPPPConfig_get, _hk_struct_test.NET_DVR_RS232CFG_V30_struPPPConfig_set)

    def __init__(self):
        """__init__(NET_DVR_RS232CFG_V30 self) -> NET_DVR_RS232CFG_V30"""
        this = _hk_struct_test.new_NET_DVR_RS232CFG_V30()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_RS232CFG_V30
    __del__ = lambda self: None
NET_DVR_RS232CFG_V30_swigregister = _hk_struct_test.NET_DVR_RS232CFG_V30_swigregister
NET_DVR_RS232CFG_V30_swigregister(NET_DVR_RS232CFG_V30)

class NET_DVR_RS232CFG(_object):
    """Proxy of C++ NET_DVR_RS232CFG class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_RS232CFG, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_RS232CFG, name)
    __repr__ = _swig_repr
    __swig_setmethods__["dwSize"] = _hk_struct_test.NET_DVR_RS232CFG_dwSize_set
    __swig_getmethods__["dwSize"] = _hk_struct_test.NET_DVR_RS232CFG_dwSize_get
    if _newclass:
        dwSize = _swig_property(_hk_struct_test.NET_DVR_RS232CFG_dwSize_get, _hk_struct_test.NET_DVR_RS232CFG_dwSize_set)
    __swig_setmethods__["dwBaudRate"] = _hk_struct_test.NET_DVR_RS232CFG_dwBaudRate_set
    __swig_getmethods__["dwBaudRate"] = _hk_struct_test.NET_DVR_RS232CFG_dwBaudRate_get
    if _newclass:
        dwBaudRate = _swig_property(_hk_struct_test.NET_DVR_RS232CFG_dwBaudRate_get, _hk_struct_test.NET_DVR_RS232CFG_dwBaudRate_set)
    __swig_setmethods__["byDataBit"] = _hk_struct_test.NET_DVR_RS232CFG_byDataBit_set
    __swig_getmethods__["byDataBit"] = _hk_struct_test.NET_DVR_RS232CFG_byDataBit_get
    if _newclass:
        byDataBit = _swig_property(_hk_struct_test.NET_DVR_RS232CFG_byDataBit_get, _hk_struct_test.NET_DVR_RS232CFG_byDataBit_set)
    __swig_setmethods__["byStopBit"] = _hk_struct_test.NET_DVR_RS232CFG_byStopBit_set
    __swig_getmethods__["byStopBit"] = _hk_struct_test.NET_DVR_RS232CFG_byStopBit_get
    if _newclass:
        byStopBit = _swig_property(_hk_struct_test.NET_DVR_RS232CFG_byStopBit_get, _hk_struct_test.NET_DVR_RS232CFG_byStopBit_set)
    __swig_setmethods__["byParity"] = _hk_struct_test.NET_DVR_RS232CFG_byParity_set
    __swig_getmethods__["byParity"] = _hk_struct_test.NET_DVR_RS232CFG_byParity_get
    if _newclass:
        byParity = _swig_property(_hk_struct_test.NET_DVR_RS232CFG_byParity_get, _hk_struct_test.NET_DVR_RS232CFG_byParity_set)
    __swig_setmethods__["byFlowcontrol"] = _hk_struct_test.NET_DVR_RS232CFG_byFlowcontrol_set
    __swig_getmethods__["byFlowcontrol"] = _hk_struct_test.NET_DVR_RS232CFG_byFlowcontrol_get
    if _newclass:
        byFlowcontrol = _swig_property(_hk_struct_test.NET_DVR_RS232CFG_byFlowcontrol_get, _hk_struct_test.NET_DVR_RS232CFG_byFlowcontrol_set)
    __swig_setmethods__["dwWorkMode"] = _hk_struct_test.NET_DVR_RS232CFG_dwWorkMode_set
    __swig_getmethods__["dwWorkMode"] = _hk_struct_test.NET_DVR_RS232CFG_dwWorkMode_get
    if _newclass:
        dwWorkMode = _swig_property(_hk_struct_test.NET_DVR_RS232CFG_dwWorkMode_get, _hk_struct_test.NET_DVR_RS232CFG_dwWorkMode_set)
    __swig_setmethods__["struPPPConfig"] = _hk_struct_test.NET_DVR_RS232CFG_struPPPConfig_set
    __swig_getmethods__["struPPPConfig"] = _hk_struct_test.NET_DVR_RS232CFG_struPPPConfig_get
    if _newclass:
        struPPPConfig = _swig_property(_hk_struct_test.NET_DVR_RS232CFG_struPPPConfig_get, _hk_struct_test.NET_DVR_RS232CFG_struPPPConfig_set)

    def __init__(self):
        """__init__(NET_DVR_RS232CFG self) -> NET_DVR_RS232CFG"""
        this = _hk_struct_test.new_NET_DVR_RS232CFG()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_RS232CFG
    __del__ = lambda self: None
NET_DVR_RS232CFG_swigregister = _hk_struct_test.NET_DVR_RS232CFG_swigregister
NET_DVR_RS232CFG_swigregister(NET_DVR_RS232CFG)

class NET_DVR_PRESETCHAN_INFO(_object):
    """Proxy of C++ NET_DVR_PRESETCHAN_INFO class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_PRESETCHAN_INFO, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_PRESETCHAN_INFO, name)
    __repr__ = _swig_repr
    __swig_setmethods__["dwEnablePresetChan"] = _hk_struct_test.NET_DVR_PRESETCHAN_INFO_dwEnablePresetChan_set
    __swig_getmethods__["dwEnablePresetChan"] = _hk_struct_test.NET_DVR_PRESETCHAN_INFO_dwEnablePresetChan_get
    if _newclass:
        dwEnablePresetChan = _swig_property(_hk_struct_test.NET_DVR_PRESETCHAN_INFO_dwEnablePresetChan_get, _hk_struct_test.NET_DVR_PRESETCHAN_INFO_dwEnablePresetChan_set)
    __swig_setmethods__["dwPresetPointNo"] = _hk_struct_test.NET_DVR_PRESETCHAN_INFO_dwPresetPointNo_set
    __swig_getmethods__["dwPresetPointNo"] = _hk_struct_test.NET_DVR_PRESETCHAN_INFO_dwPresetPointNo_get
    if _newclass:
        dwPresetPointNo = _swig_property(_hk_struct_test.NET_DVR_PRESETCHAN_INFO_dwPresetPointNo_get, _hk_struct_test.NET_DVR_PRESETCHAN_INFO_dwPresetPointNo_set)

    def __init__(self):
        """__init__(NET_DVR_PRESETCHAN_INFO self) -> NET_DVR_PRESETCHAN_INFO"""
        this = _hk_struct_test.new_NET_DVR_PRESETCHAN_INFO()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_PRESETCHAN_INFO
    __del__ = lambda self: None
NET_DVR_PRESETCHAN_INFO_swigregister = _hk_struct_test.NET_DVR_PRESETCHAN_INFO_swigregister
NET_DVR_PRESETCHAN_INFO_swigregister(NET_DVR_PRESETCHAN_INFO)

class NET_DVR_CRUISECHAN_INFO(_object):
    """Proxy of C++ NET_DVR_CRUISECHAN_INFO class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_CRUISECHAN_INFO, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_CRUISECHAN_INFO, name)
    __repr__ = _swig_repr
    __swig_setmethods__["dwEnableCruiseChan"] = _hk_struct_test.NET_DVR_CRUISECHAN_INFO_dwEnableCruiseChan_set
    __swig_getmethods__["dwEnableCruiseChan"] = _hk_struct_test.NET_DVR_CRUISECHAN_INFO_dwEnableCruiseChan_get
    if _newclass:
        dwEnableCruiseChan = _swig_property(_hk_struct_test.NET_DVR_CRUISECHAN_INFO_dwEnableCruiseChan_get, _hk_struct_test.NET_DVR_CRUISECHAN_INFO_dwEnableCruiseChan_set)
    __swig_setmethods__["dwCruiseNo"] = _hk_struct_test.NET_DVR_CRUISECHAN_INFO_dwCruiseNo_set
    __swig_getmethods__["dwCruiseNo"] = _hk_struct_test.NET_DVR_CRUISECHAN_INFO_dwCruiseNo_get
    if _newclass:
        dwCruiseNo = _swig_property(_hk_struct_test.NET_DVR_CRUISECHAN_INFO_dwCruiseNo_get, _hk_struct_test.NET_DVR_CRUISECHAN_INFO_dwCruiseNo_set)

    def __init__(self):
        """__init__(NET_DVR_CRUISECHAN_INFO self) -> NET_DVR_CRUISECHAN_INFO"""
        this = _hk_struct_test.new_NET_DVR_CRUISECHAN_INFO()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_CRUISECHAN_INFO
    __del__ = lambda self: None
NET_DVR_CRUISECHAN_INFO_swigregister = _hk_struct_test.NET_DVR_CRUISECHAN_INFO_swigregister
NET_DVR_CRUISECHAN_INFO_swigregister(NET_DVR_CRUISECHAN_INFO)

class NET_DVR_PTZTRACKCHAN_INFO(_object):
    """Proxy of C++ NET_DVR_PTZTRACKCHAN_INFO class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_PTZTRACKCHAN_INFO, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_PTZTRACKCHAN_INFO, name)
    __repr__ = _swig_repr
    __swig_setmethods__["dwEnablePtzTrackChan"] = _hk_struct_test.NET_DVR_PTZTRACKCHAN_INFO_dwEnablePtzTrackChan_set
    __swig_getmethods__["dwEnablePtzTrackChan"] = _hk_struct_test.NET_DVR_PTZTRACKCHAN_INFO_dwEnablePtzTrackChan_get
    if _newclass:
        dwEnablePtzTrackChan = _swig_property(_hk_struct_test.NET_DVR_PTZTRACKCHAN_INFO_dwEnablePtzTrackChan_get, _hk_struct_test.NET_DVR_PTZTRACKCHAN_INFO_dwEnablePtzTrackChan_set)
    __swig_setmethods__["dwPtzTrackNo"] = _hk_struct_test.NET_DVR_PTZTRACKCHAN_INFO_dwPtzTrackNo_set
    __swig_getmethods__["dwPtzTrackNo"] = _hk_struct_test.NET_DVR_PTZTRACKCHAN_INFO_dwPtzTrackNo_get
    if _newclass:
        dwPtzTrackNo = _swig_property(_hk_struct_test.NET_DVR_PTZTRACKCHAN_INFO_dwPtzTrackNo_get, _hk_struct_test.NET_DVR_PTZTRACKCHAN_INFO_dwPtzTrackNo_set)

    def __init__(self):
        """__init__(NET_DVR_PTZTRACKCHAN_INFO self) -> NET_DVR_PTZTRACKCHAN_INFO"""
        this = _hk_struct_test.new_NET_DVR_PTZTRACKCHAN_INFO()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_PTZTRACKCHAN_INFO
    __del__ = lambda self: None
NET_DVR_PTZTRACKCHAN_INFO_swigregister = _hk_struct_test.NET_DVR_PTZTRACKCHAN_INFO_swigregister
NET_DVR_PTZTRACKCHAN_INFO_swigregister(NET_DVR_PTZTRACKCHAN_INFO)

class NET_DVR_PTZ_NOTIFICATION_COND(_object):
    """Proxy of C++ tagNET_DVR_PTZ_NOTIFICATION_COND class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_PTZ_NOTIFICATION_COND, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_PTZ_NOTIFICATION_COND, name)
    __repr__ = _swig_repr
    __swig_setmethods__["dwSize"] = _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_COND_dwSize_set
    __swig_getmethods__["dwSize"] = _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_COND_dwSize_get
    if _newclass:
        dwSize = _swig_property(_hk_struct_test.NET_DVR_PTZ_NOTIFICATION_COND_dwSize_get, _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_COND_dwSize_set)
    __swig_setmethods__["byEventType"] = _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_COND_byEventType_set
    __swig_getmethods__["byEventType"] = _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_COND_byEventType_get
    if _newclass:
        byEventType = _swig_property(_hk_struct_test.NET_DVR_PTZ_NOTIFICATION_COND_byEventType_get, _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_COND_byEventType_set)
    __swig_setmethods__["byRes"] = _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_COND_byRes_set
    __swig_getmethods__["byRes"] = _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_COND_byRes_get
    if _newclass:
        byRes = _swig_property(_hk_struct_test.NET_DVR_PTZ_NOTIFICATION_COND_byRes_get, _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_COND_byRes_set)
    __swig_setmethods__["dwChannel"] = _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_COND_dwChannel_set
    __swig_getmethods__["dwChannel"] = _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_COND_dwChannel_get
    if _newclass:
        dwChannel = _swig_property(_hk_struct_test.NET_DVR_PTZ_NOTIFICATION_COND_dwChannel_get, _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_COND_dwChannel_set)
    __swig_setmethods__["byRes1"] = _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_COND_byRes1_set
    __swig_getmethods__["byRes1"] = _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_COND_byRes1_get
    if _newclass:
        byRes1 = _swig_property(_hk_struct_test.NET_DVR_PTZ_NOTIFICATION_COND_byRes1_get, _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_COND_byRes1_set)

    def __init__(self):
        """__init__(tagNET_DVR_PTZ_NOTIFICATION_COND self) -> NET_DVR_PTZ_NOTIFICATION_COND"""
        this = _hk_struct_test.new_NET_DVR_PTZ_NOTIFICATION_COND()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_PTZ_NOTIFICATION_COND
    __del__ = lambda self: None
NET_DVR_PTZ_NOTIFICATION_COND_swigregister = _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_COND_swigregister
NET_DVR_PTZ_NOTIFICATION_COND_swigregister(NET_DVR_PTZ_NOTIFICATION_COND)

class NET_DVR_PTZ_NOTIFICATION_CFG(_object):
    """Proxy of C++ tagNET_DVR_PTZ_NOTIFICATION_CFG class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_PTZ_NOTIFICATION_CFG, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_PTZ_NOTIFICATION_CFG, name)
    __repr__ = _swig_repr
    __swig_setmethods__["dwSize"] = _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_CFG_dwSize_set
    __swig_getmethods__["dwSize"] = _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_CFG_dwSize_get
    if _newclass:
        dwSize = _swig_property(_hk_struct_test.NET_DVR_PTZ_NOTIFICATION_CFG_dwSize_get, _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_CFG_dwSize_set)
    __swig_setmethods__["dwEnablePresetChanNum"] = _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_CFG_dwEnablePresetChanNum_set
    __swig_getmethods__["dwEnablePresetChanNum"] = _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_CFG_dwEnablePresetChanNum_get
    if _newclass:
        dwEnablePresetChanNum = _swig_property(_hk_struct_test.NET_DVR_PTZ_NOTIFICATION_CFG_dwEnablePresetChanNum_get, _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_CFG_dwEnablePresetChanNum_set)
    __swig_setmethods__["struPresetChanInfo"] = _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_CFG_struPresetChanInfo_set
    __swig_getmethods__["struPresetChanInfo"] = _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_CFG_struPresetChanInfo_get
    if _newclass:
        struPresetChanInfo = _swig_property(_hk_struct_test.NET_DVR_PTZ_NOTIFICATION_CFG_struPresetChanInfo_get, _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_CFG_struPresetChanInfo_set)
    __swig_setmethods__["dwEnableCruiseChanNum"] = _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_CFG_dwEnableCruiseChanNum_set
    __swig_getmethods__["dwEnableCruiseChanNum"] = _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_CFG_dwEnableCruiseChanNum_get
    if _newclass:
        dwEnableCruiseChanNum = _swig_property(_hk_struct_test.NET_DVR_PTZ_NOTIFICATION_CFG_dwEnableCruiseChanNum_get, _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_CFG_dwEnableCruiseChanNum_set)
    __swig_setmethods__["struCruiseChanInfo"] = _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_CFG_struCruiseChanInfo_set
    __swig_getmethods__["struCruiseChanInfo"] = _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_CFG_struCruiseChanInfo_get
    if _newclass:
        struCruiseChanInfo = _swig_property(_hk_struct_test.NET_DVR_PTZ_NOTIFICATION_CFG_struCruiseChanInfo_get, _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_CFG_struCruiseChanInfo_set)
    __swig_setmethods__["dwEnablePtzTrackChanNum"] = _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_CFG_dwEnablePtzTrackChanNum_set
    __swig_getmethods__["dwEnablePtzTrackChanNum"] = _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_CFG_dwEnablePtzTrackChanNum_get
    if _newclass:
        dwEnablePtzTrackChanNum = _swig_property(_hk_struct_test.NET_DVR_PTZ_NOTIFICATION_CFG_dwEnablePtzTrackChanNum_get, _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_CFG_dwEnablePtzTrackChanNum_set)
    __swig_setmethods__["struPtzTrackInfo"] = _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_CFG_struPtzTrackInfo_set
    __swig_getmethods__["struPtzTrackInfo"] = _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_CFG_struPtzTrackInfo_get
    if _newclass:
        struPtzTrackInfo = _swig_property(_hk_struct_test.NET_DVR_PTZ_NOTIFICATION_CFG_struPtzTrackInfo_get, _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_CFG_struPtzTrackInfo_set)
    __swig_setmethods__["byRes1"] = _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_CFG_byRes1_set
    __swig_getmethods__["byRes1"] = _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_CFG_byRes1_get
    if _newclass:
        byRes1 = _swig_property(_hk_struct_test.NET_DVR_PTZ_NOTIFICATION_CFG_byRes1_get, _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_CFG_byRes1_set)

    def __init__(self):
        """__init__(tagNET_DVR_PTZ_NOTIFICATION_CFG self) -> NET_DVR_PTZ_NOTIFICATION_CFG"""
        this = _hk_struct_test.new_NET_DVR_PTZ_NOTIFICATION_CFG()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_PTZ_NOTIFICATION_CFG
    __del__ = lambda self: None
NET_DVR_PTZ_NOTIFICATION_CFG_swigregister = _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_CFG_swigregister
NET_DVR_PTZ_NOTIFICATION_CFG_swigregister(NET_DVR_PTZ_NOTIFICATION_CFG)

class NET_DVR_PTZ_NOTIFICATION(_object):
    """Proxy of C++ tagNET_DVR_PTZ_NOTIFICATION class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_PTZ_NOTIFICATION, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_PTZ_NOTIFICATION, name)
    __repr__ = _swig_repr
    __swig_setmethods__["dwSize"] = _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_dwSize_set
    __swig_getmethods__["dwSize"] = _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_dwSize_get
    if _newclass:
        dwSize = _swig_property(_hk_struct_test.NET_DVR_PTZ_NOTIFICATION_dwSize_get, _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_dwSize_set)
    __swig_setmethods__["byEventType"] = _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_byEventType_set
    __swig_getmethods__["byEventType"] = _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_byEventType_get
    if _newclass:
        byEventType = _swig_property(_hk_struct_test.NET_DVR_PTZ_NOTIFICATION_byEventType_get, _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_byEventType_set)
    __swig_setmethods__["byRes"] = _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_byRes_set
    __swig_getmethods__["byRes"] = _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_byRes_get
    if _newclass:
        byRes = _swig_property(_hk_struct_test.NET_DVR_PTZ_NOTIFICATION_byRes_get, _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_byRes_set)
    __swig_setmethods__["dwEnablePresetChanNum"] = _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_dwEnablePresetChanNum_set
    __swig_getmethods__["dwEnablePresetChanNum"] = _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_dwEnablePresetChanNum_get
    if _newclass:
        dwEnablePresetChanNum = _swig_property(_hk_struct_test.NET_DVR_PTZ_NOTIFICATION_dwEnablePresetChanNum_get, _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_dwEnablePresetChanNum_set)
    __swig_setmethods__["struPresetChanInfo"] = _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_struPresetChanInfo_set
    __swig_getmethods__["struPresetChanInfo"] = _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_struPresetChanInfo_get
    if _newclass:
        struPresetChanInfo = _swig_property(_hk_struct_test.NET_DVR_PTZ_NOTIFICATION_struPresetChanInfo_get, _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_struPresetChanInfo_set)
    __swig_setmethods__["dwEnableCruiseChanNum"] = _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_dwEnableCruiseChanNum_set
    __swig_getmethods__["dwEnableCruiseChanNum"] = _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_dwEnableCruiseChanNum_get
    if _newclass:
        dwEnableCruiseChanNum = _swig_property(_hk_struct_test.NET_DVR_PTZ_NOTIFICATION_dwEnableCruiseChanNum_get, _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_dwEnableCruiseChanNum_set)
    __swig_setmethods__["struCruiseChanInfo"] = _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_struCruiseChanInfo_set
    __swig_getmethods__["struCruiseChanInfo"] = _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_struCruiseChanInfo_get
    if _newclass:
        struCruiseChanInfo = _swig_property(_hk_struct_test.NET_DVR_PTZ_NOTIFICATION_struCruiseChanInfo_get, _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_struCruiseChanInfo_set)
    __swig_setmethods__["dwEnablePtzTrackChanNum"] = _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_dwEnablePtzTrackChanNum_set
    __swig_getmethods__["dwEnablePtzTrackChanNum"] = _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_dwEnablePtzTrackChanNum_get
    if _newclass:
        dwEnablePtzTrackChanNum = _swig_property(_hk_struct_test.NET_DVR_PTZ_NOTIFICATION_dwEnablePtzTrackChanNum_get, _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_dwEnablePtzTrackChanNum_set)
    __swig_setmethods__["struPtzTrackInfo"] = _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_struPtzTrackInfo_set
    __swig_getmethods__["struPtzTrackInfo"] = _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_struPtzTrackInfo_get
    if _newclass:
        struPtzTrackInfo = _swig_property(_hk_struct_test.NET_DVR_PTZ_NOTIFICATION_struPtzTrackInfo_get, _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_struPtzTrackInfo_set)
    __swig_setmethods__["byRes1"] = _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_byRes1_set
    __swig_getmethods__["byRes1"] = _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_byRes1_get
    if _newclass:
        byRes1 = _swig_property(_hk_struct_test.NET_DVR_PTZ_NOTIFICATION_byRes1_get, _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_byRes1_set)

    def __init__(self):
        """__init__(tagNET_DVR_PTZ_NOTIFICATION self) -> NET_DVR_PTZ_NOTIFICATION"""
        this = _hk_struct_test.new_NET_DVR_PTZ_NOTIFICATION()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_PTZ_NOTIFICATION
    __del__ = lambda self: None
NET_DVR_PTZ_NOTIFICATION_swigregister = _hk_struct_test.NET_DVR_PTZ_NOTIFICATION_swigregister
NET_DVR_PTZ_NOTIFICATION_swigregister(NET_DVR_PTZ_NOTIFICATION)

NET_SDK_MAX_EVENT_NUM = _hk_struct_test.NET_SDK_MAX_EVENT_NUM
class NET_DVR_ALARMINCFG_V40(_object):
    """Proxy of C++ tagNET_DVR_ALARMINCFG_V40 class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_ALARMINCFG_V40, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_ALARMINCFG_V40, name)
    __repr__ = _swig_repr
    __swig_setmethods__["dwSize"] = _hk_struct_test.NET_DVR_ALARMINCFG_V40_dwSize_set
    __swig_getmethods__["dwSize"] = _hk_struct_test.NET_DVR_ALARMINCFG_V40_dwSize_get
    if _newclass:
        dwSize = _swig_property(_hk_struct_test.NET_DVR_ALARMINCFG_V40_dwSize_get, _hk_struct_test.NET_DVR_ALARMINCFG_V40_dwSize_set)
    __swig_setmethods__["sAlarmInName"] = _hk_struct_test.NET_DVR_ALARMINCFG_V40_sAlarmInName_set
    __swig_getmethods__["sAlarmInName"] = _hk_struct_test.NET_DVR_ALARMINCFG_V40_sAlarmInName_get
    if _newclass:
        sAlarmInName = _swig_property(_hk_struct_test.NET_DVR_ALARMINCFG_V40_sAlarmInName_get, _hk_struct_test.NET_DVR_ALARMINCFG_V40_sAlarmInName_set)
    __swig_setmethods__["byAlarmType"] = _hk_struct_test.NET_DVR_ALARMINCFG_V40_byAlarmType_set
    __swig_getmethods__["byAlarmType"] = _hk_struct_test.NET_DVR_ALARMINCFG_V40_byAlarmType_get
    if _newclass:
        byAlarmType = _swig_property(_hk_struct_test.NET_DVR_ALARMINCFG_V40_byAlarmType_get, _hk_struct_test.NET_DVR_ALARMINCFG_V40_byAlarmType_set)
    __swig_setmethods__["byAlarmInHandle"] = _hk_struct_test.NET_DVR_ALARMINCFG_V40_byAlarmInHandle_set
    __swig_getmethods__["byAlarmInHandle"] = _hk_struct_test.NET_DVR_ALARMINCFG_V40_byAlarmInHandle_get
    if _newclass:
        byAlarmInHandle = _swig_property(_hk_struct_test.NET_DVR_ALARMINCFG_V40_byAlarmInHandle_get, _hk_struct_test.NET_DVR_ALARMINCFG_V40_byAlarmInHandle_set)
    __swig_setmethods__["byChannel"] = _hk_struct_test.NET_DVR_ALARMINCFG_V40_byChannel_set
    __swig_getmethods__["byChannel"] = _hk_struct_test.NET_DVR_ALARMINCFG_V40_byChannel_get
    if _newclass:
        byChannel = _swig_property(_hk_struct_test.NET_DVR_ALARMINCFG_V40_byChannel_get, _hk_struct_test.NET_DVR_ALARMINCFG_V40_byChannel_set)
    __swig_setmethods__["byInputType"] = _hk_struct_test.NET_DVR_ALARMINCFG_V40_byInputType_set
    __swig_getmethods__["byInputType"] = _hk_struct_test.NET_DVR_ALARMINCFG_V40_byInputType_get
    if _newclass:
        byInputType = _swig_property(_hk_struct_test.NET_DVR_ALARMINCFG_V40_byInputType_get, _hk_struct_test.NET_DVR_ALARMINCFG_V40_byInputType_set)
    __swig_setmethods__["dwHandleType"] = _hk_struct_test.NET_DVR_ALARMINCFG_V40_dwHandleType_set
    __swig_getmethods__["dwHandleType"] = _hk_struct_test.NET_DVR_ALARMINCFG_V40_dwHandleType_get
    if _newclass:
        dwHandleType = _swig_property(_hk_struct_test.NET_DVR_ALARMINCFG_V40_dwHandleType_get, _hk_struct_test.NET_DVR_ALARMINCFG_V40_dwHandleType_set)
    __swig_setmethods__["dwMaxRelAlarmOutChanNum"] = _hk_struct_test.NET_DVR_ALARMINCFG_V40_dwMaxRelAlarmOutChanNum_set
    __swig_getmethods__["dwMaxRelAlarmOutChanNum"] = _hk_struct_test.NET_DVR_ALARMINCFG_V40_dwMaxRelAlarmOutChanNum_get
    if _newclass:
        dwMaxRelAlarmOutChanNum = _swig_property(_hk_struct_test.NET_DVR_ALARMINCFG_V40_dwMaxRelAlarmOutChanNum_get, _hk_struct_test.NET_DVR_ALARMINCFG_V40_dwMaxRelAlarmOutChanNum_set)
    __swig_setmethods__["dwRelAlarmOutChanNum"] = _hk_struct_test.NET_DVR_ALARMINCFG_V40_dwRelAlarmOutChanNum_set
    __swig_getmethods__["dwRelAlarmOutChanNum"] = _hk_struct_test.NET_DVR_ALARMINCFG_V40_dwRelAlarmOutChanNum_get
    if _newclass:
        dwRelAlarmOutChanNum = _swig_property(_hk_struct_test.NET_DVR_ALARMINCFG_V40_dwRelAlarmOutChanNum_get, _hk_struct_test.NET_DVR_ALARMINCFG_V40_dwRelAlarmOutChanNum_set)
    __swig_setmethods__["dwRelAlarmOut"] = _hk_struct_test.NET_DVR_ALARMINCFG_V40_dwRelAlarmOut_set
    __swig_getmethods__["dwRelAlarmOut"] = _hk_struct_test.NET_DVR_ALARMINCFG_V40_dwRelAlarmOut_get
    if _newclass:
        dwRelAlarmOut = _swig_property(_hk_struct_test.NET_DVR_ALARMINCFG_V40_dwRelAlarmOut_get, _hk_struct_test.NET_DVR_ALARMINCFG_V40_dwRelAlarmOut_set)
    __swig_setmethods__["struAlarmTime"] = _hk_struct_test.NET_DVR_ALARMINCFG_V40_struAlarmTime_set
    __swig_getmethods__["struAlarmTime"] = _hk_struct_test.NET_DVR_ALARMINCFG_V40_struAlarmTime_get
    if _newclass:
        struAlarmTime = _swig_property(_hk_struct_test.NET_DVR_ALARMINCFG_V40_struAlarmTime_get, _hk_struct_test.NET_DVR_ALARMINCFG_V40_struAlarmTime_set)
    __swig_setmethods__["dwMaxRecordChanNum"] = _hk_struct_test.NET_DVR_ALARMINCFG_V40_dwMaxRecordChanNum_set
    __swig_getmethods__["dwMaxRecordChanNum"] = _hk_struct_test.NET_DVR_ALARMINCFG_V40_dwMaxRecordChanNum_get
    if _newclass:
        dwMaxRecordChanNum = _swig_property(_hk_struct_test.NET_DVR_ALARMINCFG_V40_dwMaxRecordChanNum_get, _hk_struct_test.NET_DVR_ALARMINCFG_V40_dwMaxRecordChanNum_set)
    __swig_setmethods__["dwCurRecordChanNum"] = _hk_struct_test.NET_DVR_ALARMINCFG_V40_dwCurRecordChanNum_set
    __swig_getmethods__["dwCurRecordChanNum"] = _hk_struct_test.NET_DVR_ALARMINCFG_V40_dwCurRecordChanNum_get
    if _newclass:
        dwCurRecordChanNum = _swig_property(_hk_struct_test.NET_DVR_ALARMINCFG_V40_dwCurRecordChanNum_get, _hk_struct_test.NET_DVR_ALARMINCFG_V40_dwCurRecordChanNum_set)
    __swig_setmethods__["dwRelRecordChan"] = _hk_struct_test.NET_DVR_ALARMINCFG_V40_dwRelRecordChan_set
    __swig_getmethods__["dwRelRecordChan"] = _hk_struct_test.NET_DVR_ALARMINCFG_V40_dwRelRecordChan_get
    if _newclass:
        dwRelRecordChan = _swig_property(_hk_struct_test.NET_DVR_ALARMINCFG_V40_dwRelRecordChan_get, _hk_struct_test.NET_DVR_ALARMINCFG_V40_dwRelRecordChan_set)
    __swig_setmethods__["dwMaxEnablePtzCtrlNun"] = _hk_struct_test.NET_DVR_ALARMINCFG_V40_dwMaxEnablePtzCtrlNun_set
    __swig_getmethods__["dwMaxEnablePtzCtrlNun"] = _hk_struct_test.NET_DVR_ALARMINCFG_V40_dwMaxEnablePtzCtrlNun_get
    if _newclass:
        dwMaxEnablePtzCtrlNun = _swig_property(_hk_struct_test.NET_DVR_ALARMINCFG_V40_dwMaxEnablePtzCtrlNun_get, _hk_struct_test.NET_DVR_ALARMINCFG_V40_dwMaxEnablePtzCtrlNun_set)
    __swig_setmethods__["dwEnablePresetChanNum"] = _hk_struct_test.NET_DVR_ALARMINCFG_V40_dwEnablePresetChanNum_set
    __swig_getmethods__["dwEnablePresetChanNum"] = _hk_struct_test.NET_DVR_ALARMINCFG_V40_dwEnablePresetChanNum_get
    if _newclass:
        dwEnablePresetChanNum = _swig_property(_hk_struct_test.NET_DVR_ALARMINCFG_V40_dwEnablePresetChanNum_get, _hk_struct_test.NET_DVR_ALARMINCFG_V40_dwEnablePresetChanNum_set)
    __swig_setmethods__["struPresetChanInfo"] = _hk_struct_test.NET_DVR_ALARMINCFG_V40_struPresetChanInfo_set
    __swig_getmethods__["struPresetChanInfo"] = _hk_struct_test.NET_DVR_ALARMINCFG_V40_struPresetChanInfo_get
    if _newclass:
        struPresetChanInfo = _swig_property(_hk_struct_test.NET_DVR_ALARMINCFG_V40_struPresetChanInfo_get, _hk_struct_test.NET_DVR_ALARMINCFG_V40_struPresetChanInfo_set)
    __swig_setmethods__["byPresetDurationTime"] = _hk_struct_test.NET_DVR_ALARMINCFG_V40_byPresetDurationTime_set
    __swig_getmethods__["byPresetDurationTime"] = _hk_struct_test.NET_DVR_ALARMINCFG_V40_byPresetDurationTime_get
    if _newclass:
        byPresetDurationTime = _swig_property(_hk_struct_test.NET_DVR_ALARMINCFG_V40_byPresetDurationTime_get, _hk_struct_test.NET_DVR_ALARMINCFG_V40_byPresetDurationTime_set)
    __swig_setmethods__["byRes2"] = _hk_struct_test.NET_DVR_ALARMINCFG_V40_byRes2_set
    __swig_getmethods__["byRes2"] = _hk_struct_test.NET_DVR_ALARMINCFG_V40_byRes2_get
    if _newclass:
        byRes2 = _swig_property(_hk_struct_test.NET_DVR_ALARMINCFG_V40_byRes2_get, _hk_struct_test.NET_DVR_ALARMINCFG_V40_byRes2_set)
    __swig_setmethods__["dwEnableCruiseChanNum"] = _hk_struct_test.NET_DVR_ALARMINCFG_V40_dwEnableCruiseChanNum_set
    __swig_getmethods__["dwEnableCruiseChanNum"] = _hk_struct_test.NET_DVR_ALARMINCFG_V40_dwEnableCruiseChanNum_get
    if _newclass:
        dwEnableCruiseChanNum = _swig_property(_hk_struct_test.NET_DVR_ALARMINCFG_V40_dwEnableCruiseChanNum_get, _hk_struct_test.NET_DVR_ALARMINCFG_V40_dwEnableCruiseChanNum_set)
    __swig_setmethods__["struCruiseChanInfo"] = _hk_struct_test.NET_DVR_ALARMINCFG_V40_struCruiseChanInfo_set
    __swig_getmethods__["struCruiseChanInfo"] = _hk_struct_test.NET_DVR_ALARMINCFG_V40_struCruiseChanInfo_get
    if _newclass:
        struCruiseChanInfo = _swig_property(_hk_struct_test.NET_DVR_ALARMINCFG_V40_struCruiseChanInfo_get, _hk_struct_test.NET_DVR_ALARMINCFG_V40_struCruiseChanInfo_set)
    __swig_setmethods__["dwEnablePtzTrackChanNum"] = _hk_struct_test.NET_DVR_ALARMINCFG_V40_dwEnablePtzTrackChanNum_set
    __swig_getmethods__["dwEnablePtzTrackChanNum"] = _hk_struct_test.NET_DVR_ALARMINCFG_V40_dwEnablePtzTrackChanNum_get
    if _newclass:
        dwEnablePtzTrackChanNum = _swig_property(_hk_struct_test.NET_DVR_ALARMINCFG_V40_dwEnablePtzTrackChanNum_get, _hk_struct_test.NET_DVR_ALARMINCFG_V40_dwEnablePtzTrackChanNum_set)
    __swig_setmethods__["struPtzTrackInfo"] = _hk_struct_test.NET_DVR_ALARMINCFG_V40_struPtzTrackInfo_set
    __swig_getmethods__["struPtzTrackInfo"] = _hk_struct_test.NET_DVR_ALARMINCFG_V40_struPtzTrackInfo_get
    if _newclass:
        struPtzTrackInfo = _swig_property(_hk_struct_test.NET_DVR_ALARMINCFG_V40_struPtzTrackInfo_get, _hk_struct_test.NET_DVR_ALARMINCFG_V40_struPtzTrackInfo_set)
    __swig_setmethods__["wEventType"] = _hk_struct_test.NET_DVR_ALARMINCFG_V40_wEventType_set
    __swig_getmethods__["wEventType"] = _hk_struct_test.NET_DVR_ALARMINCFG_V40_wEventType_get
    if _newclass:
        wEventType = _swig_property(_hk_struct_test.NET_DVR_ALARMINCFG_V40_wEventType_get, _hk_struct_test.NET_DVR_ALARMINCFG_V40_wEventType_set)
    __swig_setmethods__["byRes"] = _hk_struct_test.NET_DVR_ALARMINCFG_V40_byRes_set
    __swig_getmethods__["byRes"] = _hk_struct_test.NET_DVR_ALARMINCFG_V40_byRes_get
    if _newclass:
        byRes = _swig_property(_hk_struct_test.NET_DVR_ALARMINCFG_V40_byRes_get, _hk_struct_test.NET_DVR_ALARMINCFG_V40_byRes_set)

    def __init__(self):
        """__init__(tagNET_DVR_ALARMINCFG_V40 self) -> NET_DVR_ALARMINCFG_V40"""
        this = _hk_struct_test.new_NET_DVR_ALARMINCFG_V40()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_ALARMINCFG_V40
    __del__ = lambda self: None
NET_DVR_ALARMINCFG_V40_swigregister = _hk_struct_test.NET_DVR_ALARMINCFG_V40_swigregister
NET_DVR_ALARMINCFG_V40_swigregister(NET_DVR_ALARMINCFG_V40)

class NET_DVR_ALARMINCFG_V30(_object):
    """Proxy of C++ NET_DVR_ALARMINCFG_V30 class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_ALARMINCFG_V30, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_ALARMINCFG_V30, name)
    __repr__ = _swig_repr
    __swig_setmethods__["dwSize"] = _hk_struct_test.NET_DVR_ALARMINCFG_V30_dwSize_set
    __swig_getmethods__["dwSize"] = _hk_struct_test.NET_DVR_ALARMINCFG_V30_dwSize_get
    if _newclass:
        dwSize = _swig_property(_hk_struct_test.NET_DVR_ALARMINCFG_V30_dwSize_get, _hk_struct_test.NET_DVR_ALARMINCFG_V30_dwSize_set)
    __swig_setmethods__["sAlarmInName"] = _hk_struct_test.NET_DVR_ALARMINCFG_V30_sAlarmInName_set
    __swig_getmethods__["sAlarmInName"] = _hk_struct_test.NET_DVR_ALARMINCFG_V30_sAlarmInName_get
    if _newclass:
        sAlarmInName = _swig_property(_hk_struct_test.NET_DVR_ALARMINCFG_V30_sAlarmInName_get, _hk_struct_test.NET_DVR_ALARMINCFG_V30_sAlarmInName_set)
    __swig_setmethods__["byAlarmType"] = _hk_struct_test.NET_DVR_ALARMINCFG_V30_byAlarmType_set
    __swig_getmethods__["byAlarmType"] = _hk_struct_test.NET_DVR_ALARMINCFG_V30_byAlarmType_get
    if _newclass:
        byAlarmType = _swig_property(_hk_struct_test.NET_DVR_ALARMINCFG_V30_byAlarmType_get, _hk_struct_test.NET_DVR_ALARMINCFG_V30_byAlarmType_set)
    __swig_setmethods__["byAlarmInHandle"] = _hk_struct_test.NET_DVR_ALARMINCFG_V30_byAlarmInHandle_set
    __swig_getmethods__["byAlarmInHandle"] = _hk_struct_test.NET_DVR_ALARMINCFG_V30_byAlarmInHandle_get
    if _newclass:
        byAlarmInHandle = _swig_property(_hk_struct_test.NET_DVR_ALARMINCFG_V30_byAlarmInHandle_get, _hk_struct_test.NET_DVR_ALARMINCFG_V30_byAlarmInHandle_set)
    __swig_setmethods__["byChannel"] = _hk_struct_test.NET_DVR_ALARMINCFG_V30_byChannel_set
    __swig_getmethods__["byChannel"] = _hk_struct_test.NET_DVR_ALARMINCFG_V30_byChannel_get
    if _newclass:
        byChannel = _swig_property(_hk_struct_test.NET_DVR_ALARMINCFG_V30_byChannel_get, _hk_struct_test.NET_DVR_ALARMINCFG_V30_byChannel_set)
    __swig_setmethods__["byInputType"] = _hk_struct_test.NET_DVR_ALARMINCFG_V30_byInputType_set
    __swig_getmethods__["byInputType"] = _hk_struct_test.NET_DVR_ALARMINCFG_V30_byInputType_get
    if _newclass:
        byInputType = _swig_property(_hk_struct_test.NET_DVR_ALARMINCFG_V30_byInputType_get, _hk_struct_test.NET_DVR_ALARMINCFG_V30_byInputType_set)
    __swig_setmethods__["struAlarmHandleType"] = _hk_struct_test.NET_DVR_ALARMINCFG_V30_struAlarmHandleType_set
    __swig_getmethods__["struAlarmHandleType"] = _hk_struct_test.NET_DVR_ALARMINCFG_V30_struAlarmHandleType_get
    if _newclass:
        struAlarmHandleType = _swig_property(_hk_struct_test.NET_DVR_ALARMINCFG_V30_struAlarmHandleType_get, _hk_struct_test.NET_DVR_ALARMINCFG_V30_struAlarmHandleType_set)
    __swig_setmethods__["struAlarmTime"] = _hk_struct_test.NET_DVR_ALARMINCFG_V30_struAlarmTime_set
    __swig_getmethods__["struAlarmTime"] = _hk_struct_test.NET_DVR_ALARMINCFG_V30_struAlarmTime_get
    if _newclass:
        struAlarmTime = _swig_property(_hk_struct_test.NET_DVR_ALARMINCFG_V30_struAlarmTime_get, _hk_struct_test.NET_DVR_ALARMINCFG_V30_struAlarmTime_set)
    __swig_setmethods__["byRelRecordChan"] = _hk_struct_test.NET_DVR_ALARMINCFG_V30_byRelRecordChan_set
    __swig_getmethods__["byRelRecordChan"] = _hk_struct_test.NET_DVR_ALARMINCFG_V30_byRelRecordChan_get
    if _newclass:
        byRelRecordChan = _swig_property(_hk_struct_test.NET_DVR_ALARMINCFG_V30_byRelRecordChan_get, _hk_struct_test.NET_DVR_ALARMINCFG_V30_byRelRecordChan_set)
    __swig_setmethods__["byEnablePreset"] = _hk_struct_test.NET_DVR_ALARMINCFG_V30_byEnablePreset_set
    __swig_getmethods__["byEnablePreset"] = _hk_struct_test.NET_DVR_ALARMINCFG_V30_byEnablePreset_get
    if _newclass:
        byEnablePreset = _swig_property(_hk_struct_test.NET_DVR_ALARMINCFG_V30_byEnablePreset_get, _hk_struct_test.NET_DVR_ALARMINCFG_V30_byEnablePreset_set)
    __swig_setmethods__["byPresetNo"] = _hk_struct_test.NET_DVR_ALARMINCFG_V30_byPresetNo_set
    __swig_getmethods__["byPresetNo"] = _hk_struct_test.NET_DVR_ALARMINCFG_V30_byPresetNo_get
    if _newclass:
        byPresetNo = _swig_property(_hk_struct_test.NET_DVR_ALARMINCFG_V30_byPresetNo_get, _hk_struct_test.NET_DVR_ALARMINCFG_V30_byPresetNo_set)
    __swig_setmethods__["byRes2"] = _hk_struct_test.NET_DVR_ALARMINCFG_V30_byRes2_set
    __swig_getmethods__["byRes2"] = _hk_struct_test.NET_DVR_ALARMINCFG_V30_byRes2_get
    if _newclass:
        byRes2 = _swig_property(_hk_struct_test.NET_DVR_ALARMINCFG_V30_byRes2_get, _hk_struct_test.NET_DVR_ALARMINCFG_V30_byRes2_set)
    __swig_setmethods__["byEnableCruise"] = _hk_struct_test.NET_DVR_ALARMINCFG_V30_byEnableCruise_set
    __swig_getmethods__["byEnableCruise"] = _hk_struct_test.NET_DVR_ALARMINCFG_V30_byEnableCruise_get
    if _newclass:
        byEnableCruise = _swig_property(_hk_struct_test.NET_DVR_ALARMINCFG_V30_byEnableCruise_get, _hk_struct_test.NET_DVR_ALARMINCFG_V30_byEnableCruise_set)
    __swig_setmethods__["byCruiseNo"] = _hk_struct_test.NET_DVR_ALARMINCFG_V30_byCruiseNo_set
    __swig_getmethods__["byCruiseNo"] = _hk_struct_test.NET_DVR_ALARMINCFG_V30_byCruiseNo_get
    if _newclass:
        byCruiseNo = _swig_property(_hk_struct_test.NET_DVR_ALARMINCFG_V30_byCruiseNo_get, _hk_struct_test.NET_DVR_ALARMINCFG_V30_byCruiseNo_set)
    __swig_setmethods__["byEnablePtzTrack"] = _hk_struct_test.NET_DVR_ALARMINCFG_V30_byEnablePtzTrack_set
    __swig_getmethods__["byEnablePtzTrack"] = _hk_struct_test.NET_DVR_ALARMINCFG_V30_byEnablePtzTrack_get
    if _newclass:
        byEnablePtzTrack = _swig_property(_hk_struct_test.NET_DVR_ALARMINCFG_V30_byEnablePtzTrack_get, _hk_struct_test.NET_DVR_ALARMINCFG_V30_byEnablePtzTrack_set)
    __swig_setmethods__["byPTZTrack"] = _hk_struct_test.NET_DVR_ALARMINCFG_V30_byPTZTrack_set
    __swig_getmethods__["byPTZTrack"] = _hk_struct_test.NET_DVR_ALARMINCFG_V30_byPTZTrack_get
    if _newclass:
        byPTZTrack = _swig_property(_hk_struct_test.NET_DVR_ALARMINCFG_V30_byPTZTrack_get, _hk_struct_test.NET_DVR_ALARMINCFG_V30_byPTZTrack_set)
    __swig_setmethods__["byRes3"] = _hk_struct_test.NET_DVR_ALARMINCFG_V30_byRes3_set
    __swig_getmethods__["byRes3"] = _hk_struct_test.NET_DVR_ALARMINCFG_V30_byRes3_get
    if _newclass:
        byRes3 = _swig_property(_hk_struct_test.NET_DVR_ALARMINCFG_V30_byRes3_get, _hk_struct_test.NET_DVR_ALARMINCFG_V30_byRes3_set)

    def __init__(self):
        """__init__(NET_DVR_ALARMINCFG_V30 self) -> NET_DVR_ALARMINCFG_V30"""
        this = _hk_struct_test.new_NET_DVR_ALARMINCFG_V30()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _hk_struct_test.delete_NET_DVR_ALARMINCFG_V30
    __del__ = lambda self: None
NET_DVR_ALARMINCFG_V30_swigregister = _hk_struct_test.NET_DVR_ALARMINCFG_V30_swigregister
NET_DVR_ALARMINCFG_V30_swigregister(NET_DVR_ALARMINCFG_V30)


def test_NET_DVR_ALARMINCFG_V30(a: 'NET_DVR_ALARMINCFG_V30') -> "void":
    """test_NET_DVR_ALARMINCFG_V30(NET_DVR_ALARMINCFG_V30 a)"""
    return _hk_struct_test.test_NET_DVR_ALARMINCFG_V30(a)
# This file is compatible with both classic and new-style classes.


