# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_pyhk')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_pyhk')
    _pyhk = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_pyhk', [dirname(__file__)])
        except ImportError:
            import _pyhk
            return _pyhk
        try:
            _mod = imp.load_module('_pyhk', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _pyhk = swig_import_helper()
    del swig_import_helper
else:
    import _pyhk
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        if _newclass:
            object.__setattr__(self, name, value)
        else:
            self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except __builtin__.Exception:
    class _object:
        pass
    _newclass = 0

try:
    import weakref
    weakref_proxy = weakref.proxy
except __builtin__.Exception:
    weakref_proxy = lambda x: x


TRUE = _pyhk.TRUE
FALSE = _pyhk.FALSE
NULL = _pyhk.NULL
SERIALNO_LEN = _pyhk.SERIALNO_LEN
NAME_LEN = _pyhk.NAME_LEN
MACADDR_LEN = _pyhk.MACADDR_LEN
class NET_DVR_DEVICEINFO_V30(_object):
    """Proxy of C++ NET_DVR_DEVICEINFO_V30 class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_DEVICEINFO_V30, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_DEVICEINFO_V30, name)
    __repr__ = _swig_repr
    __swig_setmethods__["sSerialNumber"] = _pyhk.NET_DVR_DEVICEINFO_V30_sSerialNumber_set
    __swig_getmethods__["sSerialNumber"] = _pyhk.NET_DVR_DEVICEINFO_V30_sSerialNumber_get
    if _newclass:
        sSerialNumber = _swig_property(_pyhk.NET_DVR_DEVICEINFO_V30_sSerialNumber_get, _pyhk.NET_DVR_DEVICEINFO_V30_sSerialNumber_set)
    __swig_setmethods__["byAlarmInPortNum"] = _pyhk.NET_DVR_DEVICEINFO_V30_byAlarmInPortNum_set
    __swig_getmethods__["byAlarmInPortNum"] = _pyhk.NET_DVR_DEVICEINFO_V30_byAlarmInPortNum_get
    if _newclass:
        byAlarmInPortNum = _swig_property(_pyhk.NET_DVR_DEVICEINFO_V30_byAlarmInPortNum_get, _pyhk.NET_DVR_DEVICEINFO_V30_byAlarmInPortNum_set)
    __swig_setmethods__["byAlarmOutPortNum"] = _pyhk.NET_DVR_DEVICEINFO_V30_byAlarmOutPortNum_set
    __swig_getmethods__["byAlarmOutPortNum"] = _pyhk.NET_DVR_DEVICEINFO_V30_byAlarmOutPortNum_get
    if _newclass:
        byAlarmOutPortNum = _swig_property(_pyhk.NET_DVR_DEVICEINFO_V30_byAlarmOutPortNum_get, _pyhk.NET_DVR_DEVICEINFO_V30_byAlarmOutPortNum_set)
    __swig_setmethods__["byDiskNum"] = _pyhk.NET_DVR_DEVICEINFO_V30_byDiskNum_set
    __swig_getmethods__["byDiskNum"] = _pyhk.NET_DVR_DEVICEINFO_V30_byDiskNum_get
    if _newclass:
        byDiskNum = _swig_property(_pyhk.NET_DVR_DEVICEINFO_V30_byDiskNum_get, _pyhk.NET_DVR_DEVICEINFO_V30_byDiskNum_set)
    __swig_setmethods__["byDVRType"] = _pyhk.NET_DVR_DEVICEINFO_V30_byDVRType_set
    __swig_getmethods__["byDVRType"] = _pyhk.NET_DVR_DEVICEINFO_V30_byDVRType_get
    if _newclass:
        byDVRType = _swig_property(_pyhk.NET_DVR_DEVICEINFO_V30_byDVRType_get, _pyhk.NET_DVR_DEVICEINFO_V30_byDVRType_set)
    __swig_setmethods__["byChanNum"] = _pyhk.NET_DVR_DEVICEINFO_V30_byChanNum_set
    __swig_getmethods__["byChanNum"] = _pyhk.NET_DVR_DEVICEINFO_V30_byChanNum_get
    if _newclass:
        byChanNum = _swig_property(_pyhk.NET_DVR_DEVICEINFO_V30_byChanNum_get, _pyhk.NET_DVR_DEVICEINFO_V30_byChanNum_set)
    __swig_setmethods__["byStartChan"] = _pyhk.NET_DVR_DEVICEINFO_V30_byStartChan_set
    __swig_getmethods__["byStartChan"] = _pyhk.NET_DVR_DEVICEINFO_V30_byStartChan_get
    if _newclass:
        byStartChan = _swig_property(_pyhk.NET_DVR_DEVICEINFO_V30_byStartChan_get, _pyhk.NET_DVR_DEVICEINFO_V30_byStartChan_set)
    __swig_setmethods__["byAudioChanNum"] = _pyhk.NET_DVR_DEVICEINFO_V30_byAudioChanNum_set
    __swig_getmethods__["byAudioChanNum"] = _pyhk.NET_DVR_DEVICEINFO_V30_byAudioChanNum_get
    if _newclass:
        byAudioChanNum = _swig_property(_pyhk.NET_DVR_DEVICEINFO_V30_byAudioChanNum_get, _pyhk.NET_DVR_DEVICEINFO_V30_byAudioChanNum_set)
    __swig_setmethods__["byIPChanNum"] = _pyhk.NET_DVR_DEVICEINFO_V30_byIPChanNum_set
    __swig_getmethods__["byIPChanNum"] = _pyhk.NET_DVR_DEVICEINFO_V30_byIPChanNum_get
    if _newclass:
        byIPChanNum = _swig_property(_pyhk.NET_DVR_DEVICEINFO_V30_byIPChanNum_get, _pyhk.NET_DVR_DEVICEINFO_V30_byIPChanNum_set)
    __swig_setmethods__["byZeroChanNum"] = _pyhk.NET_DVR_DEVICEINFO_V30_byZeroChanNum_set
    __swig_getmethods__["byZeroChanNum"] = _pyhk.NET_DVR_DEVICEINFO_V30_byZeroChanNum_get
    if _newclass:
        byZeroChanNum = _swig_property(_pyhk.NET_DVR_DEVICEINFO_V30_byZeroChanNum_get, _pyhk.NET_DVR_DEVICEINFO_V30_byZeroChanNum_set)
    __swig_setmethods__["byMainProto"] = _pyhk.NET_DVR_DEVICEINFO_V30_byMainProto_set
    __swig_getmethods__["byMainProto"] = _pyhk.NET_DVR_DEVICEINFO_V30_byMainProto_get
    if _newclass:
        byMainProto = _swig_property(_pyhk.NET_DVR_DEVICEINFO_V30_byMainProto_get, _pyhk.NET_DVR_DEVICEINFO_V30_byMainProto_set)
    __swig_setmethods__["bySubProto"] = _pyhk.NET_DVR_DEVICEINFO_V30_bySubProto_set
    __swig_getmethods__["bySubProto"] = _pyhk.NET_DVR_DEVICEINFO_V30_bySubProto_get
    if _newclass:
        bySubProto = _swig_property(_pyhk.NET_DVR_DEVICEINFO_V30_bySubProto_get, _pyhk.NET_DVR_DEVICEINFO_V30_bySubProto_set)
    __swig_setmethods__["bySupport"] = _pyhk.NET_DVR_DEVICEINFO_V30_bySupport_set
    __swig_getmethods__["bySupport"] = _pyhk.NET_DVR_DEVICEINFO_V30_bySupport_get
    if _newclass:
        bySupport = _swig_property(_pyhk.NET_DVR_DEVICEINFO_V30_bySupport_get, _pyhk.NET_DVR_DEVICEINFO_V30_bySupport_set)
    __swig_setmethods__["bySupport1"] = _pyhk.NET_DVR_DEVICEINFO_V30_bySupport1_set
    __swig_getmethods__["bySupport1"] = _pyhk.NET_DVR_DEVICEINFO_V30_bySupport1_get
    if _newclass:
        bySupport1 = _swig_property(_pyhk.NET_DVR_DEVICEINFO_V30_bySupport1_get, _pyhk.NET_DVR_DEVICEINFO_V30_bySupport1_set)
    __swig_setmethods__["bySupport2"] = _pyhk.NET_DVR_DEVICEINFO_V30_bySupport2_set
    __swig_getmethods__["bySupport2"] = _pyhk.NET_DVR_DEVICEINFO_V30_bySupport2_get
    if _newclass:
        bySupport2 = _swig_property(_pyhk.NET_DVR_DEVICEINFO_V30_bySupport2_get, _pyhk.NET_DVR_DEVICEINFO_V30_bySupport2_set)
    __swig_setmethods__["wDevType"] = _pyhk.NET_DVR_DEVICEINFO_V30_wDevType_set
    __swig_getmethods__["wDevType"] = _pyhk.NET_DVR_DEVICEINFO_V30_wDevType_get
    if _newclass:
        wDevType = _swig_property(_pyhk.NET_DVR_DEVICEINFO_V30_wDevType_get, _pyhk.NET_DVR_DEVICEINFO_V30_wDevType_set)
    __swig_setmethods__["bySupport3"] = _pyhk.NET_DVR_DEVICEINFO_V30_bySupport3_set
    __swig_getmethods__["bySupport3"] = _pyhk.NET_DVR_DEVICEINFO_V30_bySupport3_get
    if _newclass:
        bySupport3 = _swig_property(_pyhk.NET_DVR_DEVICEINFO_V30_bySupport3_get, _pyhk.NET_DVR_DEVICEINFO_V30_bySupport3_set)
    __swig_setmethods__["byMultiStreamProto"] = _pyhk.NET_DVR_DEVICEINFO_V30_byMultiStreamProto_set
    __swig_getmethods__["byMultiStreamProto"] = _pyhk.NET_DVR_DEVICEINFO_V30_byMultiStreamProto_get
    if _newclass:
        byMultiStreamProto = _swig_property(_pyhk.NET_DVR_DEVICEINFO_V30_byMultiStreamProto_get, _pyhk.NET_DVR_DEVICEINFO_V30_byMultiStreamProto_set)
    __swig_setmethods__["byStartDChan"] = _pyhk.NET_DVR_DEVICEINFO_V30_byStartDChan_set
    __swig_getmethods__["byStartDChan"] = _pyhk.NET_DVR_DEVICEINFO_V30_byStartDChan_get
    if _newclass:
        byStartDChan = _swig_property(_pyhk.NET_DVR_DEVICEINFO_V30_byStartDChan_get, _pyhk.NET_DVR_DEVICEINFO_V30_byStartDChan_set)
    __swig_setmethods__["byStartDTalkChan"] = _pyhk.NET_DVR_DEVICEINFO_V30_byStartDTalkChan_set
    __swig_getmethods__["byStartDTalkChan"] = _pyhk.NET_DVR_DEVICEINFO_V30_byStartDTalkChan_get
    if _newclass:
        byStartDTalkChan = _swig_property(_pyhk.NET_DVR_DEVICEINFO_V30_byStartDTalkChan_get, _pyhk.NET_DVR_DEVICEINFO_V30_byStartDTalkChan_set)
    __swig_setmethods__["byHighDChanNum"] = _pyhk.NET_DVR_DEVICEINFO_V30_byHighDChanNum_set
    __swig_getmethods__["byHighDChanNum"] = _pyhk.NET_DVR_DEVICEINFO_V30_byHighDChanNum_get
    if _newclass:
        byHighDChanNum = _swig_property(_pyhk.NET_DVR_DEVICEINFO_V30_byHighDChanNum_get, _pyhk.NET_DVR_DEVICEINFO_V30_byHighDChanNum_set)
    __swig_setmethods__["bySupport4"] = _pyhk.NET_DVR_DEVICEINFO_V30_bySupport4_set
    __swig_getmethods__["bySupport4"] = _pyhk.NET_DVR_DEVICEINFO_V30_bySupport4_get
    if _newclass:
        bySupport4 = _swig_property(_pyhk.NET_DVR_DEVICEINFO_V30_bySupport4_get, _pyhk.NET_DVR_DEVICEINFO_V30_bySupport4_set)
    __swig_setmethods__["byLanguageType"] = _pyhk.NET_DVR_DEVICEINFO_V30_byLanguageType_set
    __swig_getmethods__["byLanguageType"] = _pyhk.NET_DVR_DEVICEINFO_V30_byLanguageType_get
    if _newclass:
        byLanguageType = _swig_property(_pyhk.NET_DVR_DEVICEINFO_V30_byLanguageType_get, _pyhk.NET_DVR_DEVICEINFO_V30_byLanguageType_set)
    __swig_setmethods__["byVoiceInChanNum"] = _pyhk.NET_DVR_DEVICEINFO_V30_byVoiceInChanNum_set
    __swig_getmethods__["byVoiceInChanNum"] = _pyhk.NET_DVR_DEVICEINFO_V30_byVoiceInChanNum_get
    if _newclass:
        byVoiceInChanNum = _swig_property(_pyhk.NET_DVR_DEVICEINFO_V30_byVoiceInChanNum_get, _pyhk.NET_DVR_DEVICEINFO_V30_byVoiceInChanNum_set)
    __swig_setmethods__["byStartVoiceInChanNo"] = _pyhk.NET_DVR_DEVICEINFO_V30_byStartVoiceInChanNo_set
    __swig_getmethods__["byStartVoiceInChanNo"] = _pyhk.NET_DVR_DEVICEINFO_V30_byStartVoiceInChanNo_get
    if _newclass:
        byStartVoiceInChanNo = _swig_property(_pyhk.NET_DVR_DEVICEINFO_V30_byStartVoiceInChanNo_get, _pyhk.NET_DVR_DEVICEINFO_V30_byStartVoiceInChanNo_set)
    __swig_setmethods__["bySupport5"] = _pyhk.NET_DVR_DEVICEINFO_V30_bySupport5_set
    __swig_getmethods__["bySupport5"] = _pyhk.NET_DVR_DEVICEINFO_V30_bySupport5_get
    if _newclass:
        bySupport5 = _swig_property(_pyhk.NET_DVR_DEVICEINFO_V30_bySupport5_get, _pyhk.NET_DVR_DEVICEINFO_V30_bySupport5_set)
    __swig_setmethods__["bySupport6"] = _pyhk.NET_DVR_DEVICEINFO_V30_bySupport6_set
    __swig_getmethods__["bySupport6"] = _pyhk.NET_DVR_DEVICEINFO_V30_bySupport6_get
    if _newclass:
        bySupport6 = _swig_property(_pyhk.NET_DVR_DEVICEINFO_V30_bySupport6_get, _pyhk.NET_DVR_DEVICEINFO_V30_bySupport6_set)
    __swig_setmethods__["byMirrorChanNum"] = _pyhk.NET_DVR_DEVICEINFO_V30_byMirrorChanNum_set
    __swig_getmethods__["byMirrorChanNum"] = _pyhk.NET_DVR_DEVICEINFO_V30_byMirrorChanNum_get
    if _newclass:
        byMirrorChanNum = _swig_property(_pyhk.NET_DVR_DEVICEINFO_V30_byMirrorChanNum_get, _pyhk.NET_DVR_DEVICEINFO_V30_byMirrorChanNum_set)
    __swig_setmethods__["wStartMirrorChanNo"] = _pyhk.NET_DVR_DEVICEINFO_V30_wStartMirrorChanNo_set
    __swig_getmethods__["wStartMirrorChanNo"] = _pyhk.NET_DVR_DEVICEINFO_V30_wStartMirrorChanNo_get
    if _newclass:
        wStartMirrorChanNo = _swig_property(_pyhk.NET_DVR_DEVICEINFO_V30_wStartMirrorChanNo_get, _pyhk.NET_DVR_DEVICEINFO_V30_wStartMirrorChanNo_set)
    __swig_setmethods__["bySupport7"] = _pyhk.NET_DVR_DEVICEINFO_V30_bySupport7_set
    __swig_getmethods__["bySupport7"] = _pyhk.NET_DVR_DEVICEINFO_V30_bySupport7_get
    if _newclass:
        bySupport7 = _swig_property(_pyhk.NET_DVR_DEVICEINFO_V30_bySupport7_get, _pyhk.NET_DVR_DEVICEINFO_V30_bySupport7_set)
    __swig_setmethods__["byRes2"] = _pyhk.NET_DVR_DEVICEINFO_V30_byRes2_set
    __swig_getmethods__["byRes2"] = _pyhk.NET_DVR_DEVICEINFO_V30_byRes2_get
    if _newclass:
        byRes2 = _swig_property(_pyhk.NET_DVR_DEVICEINFO_V30_byRes2_get, _pyhk.NET_DVR_DEVICEINFO_V30_byRes2_set)

    def __init__(self):
        """__init__(self) -> NET_DVR_DEVICEINFO_V30"""
        this = _pyhk.new_NET_DVR_DEVICEINFO_V30()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyhk.delete_NET_DVR_DEVICEINFO_V30
    __del__ = lambda self: None
NET_DVR_DEVICEINFO_V30_swigregister = _pyhk.NET_DVR_DEVICEINFO_V30_swigregister
NET_DVR_DEVICEINFO_V30_swigregister(NET_DVR_DEVICEINFO_V30)

class NET_DVR_ALARMER(_object):
    """Proxy of C++ NET_DVR_ALARMER class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_ALARMER, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_ALARMER, name)
    __repr__ = _swig_repr
    __swig_setmethods__["byUserIDValid"] = _pyhk.NET_DVR_ALARMER_byUserIDValid_set
    __swig_getmethods__["byUserIDValid"] = _pyhk.NET_DVR_ALARMER_byUserIDValid_get
    if _newclass:
        byUserIDValid = _swig_property(_pyhk.NET_DVR_ALARMER_byUserIDValid_get, _pyhk.NET_DVR_ALARMER_byUserIDValid_set)
    __swig_setmethods__["bySerialValid"] = _pyhk.NET_DVR_ALARMER_bySerialValid_set
    __swig_getmethods__["bySerialValid"] = _pyhk.NET_DVR_ALARMER_bySerialValid_get
    if _newclass:
        bySerialValid = _swig_property(_pyhk.NET_DVR_ALARMER_bySerialValid_get, _pyhk.NET_DVR_ALARMER_bySerialValid_set)
    __swig_setmethods__["byVersionValid"] = _pyhk.NET_DVR_ALARMER_byVersionValid_set
    __swig_getmethods__["byVersionValid"] = _pyhk.NET_DVR_ALARMER_byVersionValid_get
    if _newclass:
        byVersionValid = _swig_property(_pyhk.NET_DVR_ALARMER_byVersionValid_get, _pyhk.NET_DVR_ALARMER_byVersionValid_set)
    __swig_setmethods__["byDeviceNameValid"] = _pyhk.NET_DVR_ALARMER_byDeviceNameValid_set
    __swig_getmethods__["byDeviceNameValid"] = _pyhk.NET_DVR_ALARMER_byDeviceNameValid_get
    if _newclass:
        byDeviceNameValid = _swig_property(_pyhk.NET_DVR_ALARMER_byDeviceNameValid_get, _pyhk.NET_DVR_ALARMER_byDeviceNameValid_set)
    __swig_setmethods__["byMacAddrValid"] = _pyhk.NET_DVR_ALARMER_byMacAddrValid_set
    __swig_getmethods__["byMacAddrValid"] = _pyhk.NET_DVR_ALARMER_byMacAddrValid_get
    if _newclass:
        byMacAddrValid = _swig_property(_pyhk.NET_DVR_ALARMER_byMacAddrValid_get, _pyhk.NET_DVR_ALARMER_byMacAddrValid_set)
    __swig_setmethods__["byLinkPortValid"] = _pyhk.NET_DVR_ALARMER_byLinkPortValid_set
    __swig_getmethods__["byLinkPortValid"] = _pyhk.NET_DVR_ALARMER_byLinkPortValid_get
    if _newclass:
        byLinkPortValid = _swig_property(_pyhk.NET_DVR_ALARMER_byLinkPortValid_get, _pyhk.NET_DVR_ALARMER_byLinkPortValid_set)
    __swig_setmethods__["byDeviceIPValid"] = _pyhk.NET_DVR_ALARMER_byDeviceIPValid_set
    __swig_getmethods__["byDeviceIPValid"] = _pyhk.NET_DVR_ALARMER_byDeviceIPValid_get
    if _newclass:
        byDeviceIPValid = _swig_property(_pyhk.NET_DVR_ALARMER_byDeviceIPValid_get, _pyhk.NET_DVR_ALARMER_byDeviceIPValid_set)
    __swig_setmethods__["bySocketIPValid"] = _pyhk.NET_DVR_ALARMER_bySocketIPValid_set
    __swig_getmethods__["bySocketIPValid"] = _pyhk.NET_DVR_ALARMER_bySocketIPValid_get
    if _newclass:
        bySocketIPValid = _swig_property(_pyhk.NET_DVR_ALARMER_bySocketIPValid_get, _pyhk.NET_DVR_ALARMER_bySocketIPValid_set)
    __swig_setmethods__["lUserID"] = _pyhk.NET_DVR_ALARMER_lUserID_set
    __swig_getmethods__["lUserID"] = _pyhk.NET_DVR_ALARMER_lUserID_get
    if _newclass:
        lUserID = _swig_property(_pyhk.NET_DVR_ALARMER_lUserID_get, _pyhk.NET_DVR_ALARMER_lUserID_set)
    __swig_setmethods__["sSerialNumber"] = _pyhk.NET_DVR_ALARMER_sSerialNumber_set
    __swig_getmethods__["sSerialNumber"] = _pyhk.NET_DVR_ALARMER_sSerialNumber_get
    if _newclass:
        sSerialNumber = _swig_property(_pyhk.NET_DVR_ALARMER_sSerialNumber_get, _pyhk.NET_DVR_ALARMER_sSerialNumber_set)
    __swig_setmethods__["dwDeviceVersion"] = _pyhk.NET_DVR_ALARMER_dwDeviceVersion_set
    __swig_getmethods__["dwDeviceVersion"] = _pyhk.NET_DVR_ALARMER_dwDeviceVersion_get
    if _newclass:
        dwDeviceVersion = _swig_property(_pyhk.NET_DVR_ALARMER_dwDeviceVersion_get, _pyhk.NET_DVR_ALARMER_dwDeviceVersion_set)
    __swig_setmethods__["sDeviceName"] = _pyhk.NET_DVR_ALARMER_sDeviceName_set
    __swig_getmethods__["sDeviceName"] = _pyhk.NET_DVR_ALARMER_sDeviceName_get
    if _newclass:
        sDeviceName = _swig_property(_pyhk.NET_DVR_ALARMER_sDeviceName_get, _pyhk.NET_DVR_ALARMER_sDeviceName_set)
    __swig_setmethods__["byMacAddr"] = _pyhk.NET_DVR_ALARMER_byMacAddr_set
    __swig_getmethods__["byMacAddr"] = _pyhk.NET_DVR_ALARMER_byMacAddr_get
    if _newclass:
        byMacAddr = _swig_property(_pyhk.NET_DVR_ALARMER_byMacAddr_get, _pyhk.NET_DVR_ALARMER_byMacAddr_set)
    __swig_setmethods__["wLinkPort"] = _pyhk.NET_DVR_ALARMER_wLinkPort_set
    __swig_getmethods__["wLinkPort"] = _pyhk.NET_DVR_ALARMER_wLinkPort_get
    if _newclass:
        wLinkPort = _swig_property(_pyhk.NET_DVR_ALARMER_wLinkPort_get, _pyhk.NET_DVR_ALARMER_wLinkPort_set)
    __swig_setmethods__["sDeviceIP"] = _pyhk.NET_DVR_ALARMER_sDeviceIP_set
    __swig_getmethods__["sDeviceIP"] = _pyhk.NET_DVR_ALARMER_sDeviceIP_get
    if _newclass:
        sDeviceIP = _swig_property(_pyhk.NET_DVR_ALARMER_sDeviceIP_get, _pyhk.NET_DVR_ALARMER_sDeviceIP_set)
    __swig_setmethods__["sSocketIP"] = _pyhk.NET_DVR_ALARMER_sSocketIP_set
    __swig_getmethods__["sSocketIP"] = _pyhk.NET_DVR_ALARMER_sSocketIP_get
    if _newclass:
        sSocketIP = _swig_property(_pyhk.NET_DVR_ALARMER_sSocketIP_get, _pyhk.NET_DVR_ALARMER_sSocketIP_set)
    __swig_setmethods__["byIpProtocol"] = _pyhk.NET_DVR_ALARMER_byIpProtocol_set
    __swig_getmethods__["byIpProtocol"] = _pyhk.NET_DVR_ALARMER_byIpProtocol_get
    if _newclass:
        byIpProtocol = _swig_property(_pyhk.NET_DVR_ALARMER_byIpProtocol_get, _pyhk.NET_DVR_ALARMER_byIpProtocol_set)
    __swig_setmethods__["byRes1"] = _pyhk.NET_DVR_ALARMER_byRes1_set
    __swig_getmethods__["byRes1"] = _pyhk.NET_DVR_ALARMER_byRes1_get
    if _newclass:
        byRes1 = _swig_property(_pyhk.NET_DVR_ALARMER_byRes1_get, _pyhk.NET_DVR_ALARMER_byRes1_set)
    __swig_setmethods__["bJSONBroken"] = _pyhk.NET_DVR_ALARMER_bJSONBroken_set
    __swig_getmethods__["bJSONBroken"] = _pyhk.NET_DVR_ALARMER_bJSONBroken_get
    if _newclass:
        bJSONBroken = _swig_property(_pyhk.NET_DVR_ALARMER_bJSONBroken_get, _pyhk.NET_DVR_ALARMER_bJSONBroken_set)
    __swig_setmethods__["wSocketPort"] = _pyhk.NET_DVR_ALARMER_wSocketPort_set
    __swig_getmethods__["wSocketPort"] = _pyhk.NET_DVR_ALARMER_wSocketPort_get
    if _newclass:
        wSocketPort = _swig_property(_pyhk.NET_DVR_ALARMER_wSocketPort_get, _pyhk.NET_DVR_ALARMER_wSocketPort_set)
    __swig_setmethods__["byRes2"] = _pyhk.NET_DVR_ALARMER_byRes2_set
    __swig_getmethods__["byRes2"] = _pyhk.NET_DVR_ALARMER_byRes2_get
    if _newclass:
        byRes2 = _swig_property(_pyhk.NET_DVR_ALARMER_byRes2_get, _pyhk.NET_DVR_ALARMER_byRes2_set)

    def __init__(self):
        """__init__(self) -> NET_DVR_ALARMER"""
        this = _pyhk.new_NET_DVR_ALARMER()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyhk.delete_NET_DVR_ALARMER
    __del__ = lambda self: None
NET_DVR_ALARMER_swigregister = _pyhk.NET_DVR_ALARMER_swigregister
NET_DVR_ALARMER_swigregister(NET_DVR_ALARMER)

class NET_DVR_SETUPALARM_PARAM(_object):
    """Proxy of C++ tagNET_DVR_SETUPALARM_PARAM class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, NET_DVR_SETUPALARM_PARAM, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, NET_DVR_SETUPALARM_PARAM, name)
    __repr__ = _swig_repr
    __swig_setmethods__["dwSize"] = _pyhk.NET_DVR_SETUPALARM_PARAM_dwSize_set
    __swig_getmethods__["dwSize"] = _pyhk.NET_DVR_SETUPALARM_PARAM_dwSize_get
    if _newclass:
        dwSize = _swig_property(_pyhk.NET_DVR_SETUPALARM_PARAM_dwSize_get, _pyhk.NET_DVR_SETUPALARM_PARAM_dwSize_set)
    __swig_setmethods__["byLevel"] = _pyhk.NET_DVR_SETUPALARM_PARAM_byLevel_set
    __swig_getmethods__["byLevel"] = _pyhk.NET_DVR_SETUPALARM_PARAM_byLevel_get
    if _newclass:
        byLevel = _swig_property(_pyhk.NET_DVR_SETUPALARM_PARAM_byLevel_get, _pyhk.NET_DVR_SETUPALARM_PARAM_byLevel_set)
    __swig_setmethods__["byAlarmInfoType"] = _pyhk.NET_DVR_SETUPALARM_PARAM_byAlarmInfoType_set
    __swig_getmethods__["byAlarmInfoType"] = _pyhk.NET_DVR_SETUPALARM_PARAM_byAlarmInfoType_get
    if _newclass:
        byAlarmInfoType = _swig_property(_pyhk.NET_DVR_SETUPALARM_PARAM_byAlarmInfoType_get, _pyhk.NET_DVR_SETUPALARM_PARAM_byAlarmInfoType_set)
    __swig_setmethods__["byRetAlarmTypeV40"] = _pyhk.NET_DVR_SETUPALARM_PARAM_byRetAlarmTypeV40_set
    __swig_getmethods__["byRetAlarmTypeV40"] = _pyhk.NET_DVR_SETUPALARM_PARAM_byRetAlarmTypeV40_get
    if _newclass:
        byRetAlarmTypeV40 = _swig_property(_pyhk.NET_DVR_SETUPALARM_PARAM_byRetAlarmTypeV40_get, _pyhk.NET_DVR_SETUPALARM_PARAM_byRetAlarmTypeV40_set)
    __swig_setmethods__["byRetDevInfoVersion"] = _pyhk.NET_DVR_SETUPALARM_PARAM_byRetDevInfoVersion_set
    __swig_getmethods__["byRetDevInfoVersion"] = _pyhk.NET_DVR_SETUPALARM_PARAM_byRetDevInfoVersion_get
    if _newclass:
        byRetDevInfoVersion = _swig_property(_pyhk.NET_DVR_SETUPALARM_PARAM_byRetDevInfoVersion_get, _pyhk.NET_DVR_SETUPALARM_PARAM_byRetDevInfoVersion_set)
    __swig_setmethods__["byRetVQDAlarmType"] = _pyhk.NET_DVR_SETUPALARM_PARAM_byRetVQDAlarmType_set
    __swig_getmethods__["byRetVQDAlarmType"] = _pyhk.NET_DVR_SETUPALARM_PARAM_byRetVQDAlarmType_get
    if _newclass:
        byRetVQDAlarmType = _swig_property(_pyhk.NET_DVR_SETUPALARM_PARAM_byRetVQDAlarmType_get, _pyhk.NET_DVR_SETUPALARM_PARAM_byRetVQDAlarmType_set)
    __swig_setmethods__["byFaceAlarmDetection"] = _pyhk.NET_DVR_SETUPALARM_PARAM_byFaceAlarmDetection_set
    __swig_getmethods__["byFaceAlarmDetection"] = _pyhk.NET_DVR_SETUPALARM_PARAM_byFaceAlarmDetection_get
    if _newclass:
        byFaceAlarmDetection = _swig_property(_pyhk.NET_DVR_SETUPALARM_PARAM_byFaceAlarmDetection_get, _pyhk.NET_DVR_SETUPALARM_PARAM_byFaceAlarmDetection_set)
    __swig_setmethods__["bySupport"] = _pyhk.NET_DVR_SETUPALARM_PARAM_bySupport_set
    __swig_getmethods__["bySupport"] = _pyhk.NET_DVR_SETUPALARM_PARAM_bySupport_get
    if _newclass:
        bySupport = _swig_property(_pyhk.NET_DVR_SETUPALARM_PARAM_bySupport_get, _pyhk.NET_DVR_SETUPALARM_PARAM_bySupport_set)
    __swig_setmethods__["byBrokenNetHttp"] = _pyhk.NET_DVR_SETUPALARM_PARAM_byBrokenNetHttp_set
    __swig_getmethods__["byBrokenNetHttp"] = _pyhk.NET_DVR_SETUPALARM_PARAM_byBrokenNetHttp_get
    if _newclass:
        byBrokenNetHttp = _swig_property(_pyhk.NET_DVR_SETUPALARM_PARAM_byBrokenNetHttp_get, _pyhk.NET_DVR_SETUPALARM_PARAM_byBrokenNetHttp_set)
    __swig_setmethods__["wTaskNo"] = _pyhk.NET_DVR_SETUPALARM_PARAM_wTaskNo_set
    __swig_getmethods__["wTaskNo"] = _pyhk.NET_DVR_SETUPALARM_PARAM_wTaskNo_get
    if _newclass:
        wTaskNo = _swig_property(_pyhk.NET_DVR_SETUPALARM_PARAM_wTaskNo_get, _pyhk.NET_DVR_SETUPALARM_PARAM_wTaskNo_set)
    __swig_setmethods__["byDeployType"] = _pyhk.NET_DVR_SETUPALARM_PARAM_byDeployType_set
    __swig_getmethods__["byDeployType"] = _pyhk.NET_DVR_SETUPALARM_PARAM_byDeployType_get
    if _newclass:
        byDeployType = _swig_property(_pyhk.NET_DVR_SETUPALARM_PARAM_byDeployType_get, _pyhk.NET_DVR_SETUPALARM_PARAM_byDeployType_set)
    __swig_setmethods__["byRes1"] = _pyhk.NET_DVR_SETUPALARM_PARAM_byRes1_set
    __swig_getmethods__["byRes1"] = _pyhk.NET_DVR_SETUPALARM_PARAM_byRes1_get
    if _newclass:
        byRes1 = _swig_property(_pyhk.NET_DVR_SETUPALARM_PARAM_byRes1_get, _pyhk.NET_DVR_SETUPALARM_PARAM_byRes1_set)
    __swig_setmethods__["byAlarmTypeURL"] = _pyhk.NET_DVR_SETUPALARM_PARAM_byAlarmTypeURL_set
    __swig_getmethods__["byAlarmTypeURL"] = _pyhk.NET_DVR_SETUPALARM_PARAM_byAlarmTypeURL_get
    if _newclass:
        byAlarmTypeURL = _swig_property(_pyhk.NET_DVR_SETUPALARM_PARAM_byAlarmTypeURL_get, _pyhk.NET_DVR_SETUPALARM_PARAM_byAlarmTypeURL_set)
    __swig_setmethods__["byCustomCtrl"] = _pyhk.NET_DVR_SETUPALARM_PARAM_byCustomCtrl_set
    __swig_getmethods__["byCustomCtrl"] = _pyhk.NET_DVR_SETUPALARM_PARAM_byCustomCtrl_get
    if _newclass:
        byCustomCtrl = _swig_property(_pyhk.NET_DVR_SETUPALARM_PARAM_byCustomCtrl_get, _pyhk.NET_DVR_SETUPALARM_PARAM_byCustomCtrl_set)

    def __init__(self):
        """__init__(self) -> NET_DVR_SETUPALARM_PARAM"""
        this = _pyhk.new_NET_DVR_SETUPALARM_PARAM()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyhk.delete_NET_DVR_SETUPALARM_PARAM
    __del__ = lambda self: None
NET_DVR_SETUPALARM_PARAM_swigregister = _pyhk.NET_DVR_SETUPALARM_PARAM_swigregister
NET_DVR_SETUPALARM_PARAM_swigregister(NET_DVR_SETUPALARM_PARAM)


def NET_DVR_Init() -> "int":
    """NET_DVR_Init() -> int"""
    return _pyhk.NET_DVR_Init()

def NET_DVR_Logout(lUserID: 'LONG') -> "int":
    """
    NET_DVR_Logout(lUserID) -> int

    Parameters
    ----------
    lUserID: LONG

    """
    return _pyhk.NET_DVR_Logout(lUserID)

def NET_DVR_Cleanup() -> "int":
    """NET_DVR_Cleanup() -> int"""
    return _pyhk.NET_DVR_Cleanup()

def NET_DVR_SetConnectTime(dwWaitTime: 'DWORD'=3000, dwTryTimes: 'DWORD'=3) -> "int":
    """
    NET_DVR_SetConnectTime(dwWaitTime=3000, dwTryTimes=3) -> int

    Parameters
    ----------
    dwWaitTime: DWORD
    dwTryTimes: DWORD

    """
    return _pyhk.NET_DVR_SetConnectTime(dwWaitTime, dwTryTimes)

def NET_DVR_SetReconnect(dwInterval: 'DWORD'=30000, bEnableRecon: 'int'=1) -> "int":
    """
    NET_DVR_SetReconnect(dwInterval=30000, bEnableRecon=1) -> int

    Parameters
    ----------
    dwInterval: DWORD
    bEnableRecon: int

    """
    return _pyhk.NET_DVR_SetReconnect(dwInterval, bEnableRecon)

def NET_DVR_Login_V30(sDVRIP: 'char *', wDVRPort: 'WORD', sUserName: 'char *', sPassword: 'char *', lpDeviceInfo: 'NET_DVR_DEVICEINFO_V30') -> "LONG":
    """
    NET_DVR_Login_V30(sDVRIP, wDVRPort, sUserName, sPassword, lpDeviceInfo) -> LONG

    Parameters
    ----------
    sDVRIP: char *
    wDVRPort: WORD
    sUserName: char *
    sPassword: char *
    lpDeviceInfo: LPNET_DVR_DEVICEINFO_V30

    """
    return _pyhk.NET_DVR_Login_V30(sDVRIP, wDVRPort, sUserName, sPassword, lpDeviceInfo)

def NET_DVR_GetLastError() -> "DWORD":
    """NET_DVR_GetLastError() -> DWORD"""
    return _pyhk.NET_DVR_GetLastError()

def NET_DVR_SetupAlarmChan_V41(lUserID: 'LONG', lpSetupParam: 'NET_DVR_SETUPALARM_PARAM') -> "LONG":
    """
    NET_DVR_SetupAlarmChan_V41(lUserID, lpSetupParam) -> LONG

    Parameters
    ----------
    lUserID: LONG
    lpSetupParam: LPNET_DVR_SETUPALARM_PARAM

    """
    return _pyhk.NET_DVR_SetupAlarmChan_V41(lUserID, lpSetupParam)

def NET_DVR_SetupAlarmChan_V30(lUserID: 'LONG') -> "LONG":
    """
    NET_DVR_SetupAlarmChan_V30(lUserID) -> LONG

    Parameters
    ----------
    lUserID: LONG

    """
    return _pyhk.NET_DVR_SetupAlarmChan_V30(lUserID)
class MSGCallBackOp(_object):
    """Proxy of C++ MSGCallBackOp class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MSGCallBackOp, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MSGCallBackOp, name)
    __repr__ = _swig_repr

    def MSGCallBack(self, lCommand: 'LONG', pAlarmer: 'NET_DVR_ALARMER', pAlarmInfo: 'char *', dwBufLen: 'DWORD', pUser: 'void *') -> "void":
        """
        MSGCallBack(self, lCommand, pAlarmer, pAlarmInfo, dwBufLen, pUser)

        Parameters
        ----------
        lCommand: LONG
        pAlarmer: NET_DVR_ALARMER *
        pAlarmInfo: char *
        dwBufLen: DWORD
        pUser: void *

        """
        return _pyhk.MSGCallBackOp_MSGCallBack(self, lCommand, pAlarmer, pAlarmInfo, dwBufLen, pUser)

    __swig_destroy__ = _pyhk.delete_MSGCallBackOp
    __del__ = lambda self: None

    def __init__(self):
        """
        __init__(self) -> MSGCallBackOp

        Parameters
        ----------
        self: PyObject *

        """
        if self.__class__ == MSGCallBackOp:
            _self = None
        else:
            _self = self
        this = _pyhk.new_MSGCallBackOp(_self, )
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    def __disown__(self):
        self.this.disown()
        _pyhk.disown_MSGCallBackOp(self)
        return weakref_proxy(self)
MSGCallBackOp_swigregister = _pyhk.MSGCallBackOp_swigregister
MSGCallBackOp_swigregister(MSGCallBackOp)


def NET_DVR_SetDVRMessageCallBack_V30_wrapper(fMessageCallBack: 'MSGCallBackOp', pUser: 'void *') -> "int":
    """
    NET_DVR_SetDVRMessageCallBack_V30_wrapper(fMessageCallBack, pUser) -> int

    Parameters
    ----------
    fMessageCallBack: MSGCallBackOp *
    pUser: void *

    """
    return _pyhk.NET_DVR_SetDVRMessageCallBack_V30_wrapper(fMessageCallBack, pUser)
# This file is compatible with both classic and new-style classes.


