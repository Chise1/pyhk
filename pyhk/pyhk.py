# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _pyhk
else:
    import _pyhk

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import weakref

TRUE = _pyhk.TRUE

FALSE = _pyhk.FALSE

NULL = _pyhk.NULL

SERIALNO_LEN = _pyhk.SERIALNO_LEN

NAME_LEN = _pyhk.NAME_LEN

MACADDR_LEN = _pyhk.MACADDR_LEN

class NET_DVR_DEVICEINFO_V30(object):
    r"""Proxy of C++ NET_DVR_DEVICEINFO_V30 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    sSerialNumber = property(_pyhk.NET_DVR_DEVICEINFO_V30_sSerialNumber_get, _pyhk.NET_DVR_DEVICEINFO_V30_sSerialNumber_set, doc=r"""sSerialNumber""")
    byAlarmInPortNum = property(_pyhk.NET_DVR_DEVICEINFO_V30_byAlarmInPortNum_get, _pyhk.NET_DVR_DEVICEINFO_V30_byAlarmInPortNum_set, doc=r"""byAlarmInPortNum""")
    byAlarmOutPortNum = property(_pyhk.NET_DVR_DEVICEINFO_V30_byAlarmOutPortNum_get, _pyhk.NET_DVR_DEVICEINFO_V30_byAlarmOutPortNum_set, doc=r"""byAlarmOutPortNum""")
    byDiskNum = property(_pyhk.NET_DVR_DEVICEINFO_V30_byDiskNum_get, _pyhk.NET_DVR_DEVICEINFO_V30_byDiskNum_set, doc=r"""byDiskNum""")
    byDVRType = property(_pyhk.NET_DVR_DEVICEINFO_V30_byDVRType_get, _pyhk.NET_DVR_DEVICEINFO_V30_byDVRType_set, doc=r"""byDVRType""")
    byChanNum = property(_pyhk.NET_DVR_DEVICEINFO_V30_byChanNum_get, _pyhk.NET_DVR_DEVICEINFO_V30_byChanNum_set, doc=r"""byChanNum""")
    byStartChan = property(_pyhk.NET_DVR_DEVICEINFO_V30_byStartChan_get, _pyhk.NET_DVR_DEVICEINFO_V30_byStartChan_set, doc=r"""byStartChan""")
    byAudioChanNum = property(_pyhk.NET_DVR_DEVICEINFO_V30_byAudioChanNum_get, _pyhk.NET_DVR_DEVICEINFO_V30_byAudioChanNum_set, doc=r"""byAudioChanNum""")
    byIPChanNum = property(_pyhk.NET_DVR_DEVICEINFO_V30_byIPChanNum_get, _pyhk.NET_DVR_DEVICEINFO_V30_byIPChanNum_set, doc=r"""byIPChanNum""")
    byZeroChanNum = property(_pyhk.NET_DVR_DEVICEINFO_V30_byZeroChanNum_get, _pyhk.NET_DVR_DEVICEINFO_V30_byZeroChanNum_set, doc=r"""byZeroChanNum""")
    byMainProto = property(_pyhk.NET_DVR_DEVICEINFO_V30_byMainProto_get, _pyhk.NET_DVR_DEVICEINFO_V30_byMainProto_set, doc=r"""byMainProto""")
    bySubProto = property(_pyhk.NET_DVR_DEVICEINFO_V30_bySubProto_get, _pyhk.NET_DVR_DEVICEINFO_V30_bySubProto_set, doc=r"""bySubProto""")
    bySupport = property(_pyhk.NET_DVR_DEVICEINFO_V30_bySupport_get, _pyhk.NET_DVR_DEVICEINFO_V30_bySupport_set, doc=r"""bySupport""")
    bySupport1 = property(_pyhk.NET_DVR_DEVICEINFO_V30_bySupport1_get, _pyhk.NET_DVR_DEVICEINFO_V30_bySupport1_set, doc=r"""bySupport1""")
    bySupport2 = property(_pyhk.NET_DVR_DEVICEINFO_V30_bySupport2_get, _pyhk.NET_DVR_DEVICEINFO_V30_bySupport2_set, doc=r"""bySupport2""")
    wDevType = property(_pyhk.NET_DVR_DEVICEINFO_V30_wDevType_get, _pyhk.NET_DVR_DEVICEINFO_V30_wDevType_set, doc=r"""wDevType""")
    bySupport3 = property(_pyhk.NET_DVR_DEVICEINFO_V30_bySupport3_get, _pyhk.NET_DVR_DEVICEINFO_V30_bySupport3_set, doc=r"""bySupport3""")
    byMultiStreamProto = property(_pyhk.NET_DVR_DEVICEINFO_V30_byMultiStreamProto_get, _pyhk.NET_DVR_DEVICEINFO_V30_byMultiStreamProto_set, doc=r"""byMultiStreamProto""")
    byStartDChan = property(_pyhk.NET_DVR_DEVICEINFO_V30_byStartDChan_get, _pyhk.NET_DVR_DEVICEINFO_V30_byStartDChan_set, doc=r"""byStartDChan""")
    byStartDTalkChan = property(_pyhk.NET_DVR_DEVICEINFO_V30_byStartDTalkChan_get, _pyhk.NET_DVR_DEVICEINFO_V30_byStartDTalkChan_set, doc=r"""byStartDTalkChan""")
    byHighDChanNum = property(_pyhk.NET_DVR_DEVICEINFO_V30_byHighDChanNum_get, _pyhk.NET_DVR_DEVICEINFO_V30_byHighDChanNum_set, doc=r"""byHighDChanNum""")
    bySupport4 = property(_pyhk.NET_DVR_DEVICEINFO_V30_bySupport4_get, _pyhk.NET_DVR_DEVICEINFO_V30_bySupport4_set, doc=r"""bySupport4""")
    byLanguageType = property(_pyhk.NET_DVR_DEVICEINFO_V30_byLanguageType_get, _pyhk.NET_DVR_DEVICEINFO_V30_byLanguageType_set, doc=r"""byLanguageType""")
    byVoiceInChanNum = property(_pyhk.NET_DVR_DEVICEINFO_V30_byVoiceInChanNum_get, _pyhk.NET_DVR_DEVICEINFO_V30_byVoiceInChanNum_set, doc=r"""byVoiceInChanNum""")
    byStartVoiceInChanNo = property(_pyhk.NET_DVR_DEVICEINFO_V30_byStartVoiceInChanNo_get, _pyhk.NET_DVR_DEVICEINFO_V30_byStartVoiceInChanNo_set, doc=r"""byStartVoiceInChanNo""")
    bySupport5 = property(_pyhk.NET_DVR_DEVICEINFO_V30_bySupport5_get, _pyhk.NET_DVR_DEVICEINFO_V30_bySupport5_set, doc=r"""bySupport5""")
    bySupport6 = property(_pyhk.NET_DVR_DEVICEINFO_V30_bySupport6_get, _pyhk.NET_DVR_DEVICEINFO_V30_bySupport6_set, doc=r"""bySupport6""")
    byMirrorChanNum = property(_pyhk.NET_DVR_DEVICEINFO_V30_byMirrorChanNum_get, _pyhk.NET_DVR_DEVICEINFO_V30_byMirrorChanNum_set, doc=r"""byMirrorChanNum""")
    wStartMirrorChanNo = property(_pyhk.NET_DVR_DEVICEINFO_V30_wStartMirrorChanNo_get, _pyhk.NET_DVR_DEVICEINFO_V30_wStartMirrorChanNo_set, doc=r"""wStartMirrorChanNo""")
    bySupport7 = property(_pyhk.NET_DVR_DEVICEINFO_V30_bySupport7_get, _pyhk.NET_DVR_DEVICEINFO_V30_bySupport7_set, doc=r"""bySupport7""")
    byRes2 = property(_pyhk.NET_DVR_DEVICEINFO_V30_byRes2_get, _pyhk.NET_DVR_DEVICEINFO_V30_byRes2_set, doc=r"""byRes2""")

    def __init__(self):
        r"""__init__(self) -> NET_DVR_DEVICEINFO_V30"""
        _pyhk.NET_DVR_DEVICEINFO_V30_swiginit(self, _pyhk.new_NET_DVR_DEVICEINFO_V30())
    __swig_destroy__ = _pyhk.delete_NET_DVR_DEVICEINFO_V30

# Register NET_DVR_DEVICEINFO_V30 in _pyhk:
_pyhk.NET_DVR_DEVICEINFO_V30_swigregister(NET_DVR_DEVICEINFO_V30)

class NET_DVR_ALARMER(object):
    r"""Proxy of C++ NET_DVR_ALARMER class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    byUserIDValid = property(_pyhk.NET_DVR_ALARMER_byUserIDValid_get, _pyhk.NET_DVR_ALARMER_byUserIDValid_set, doc=r"""byUserIDValid""")
    bySerialValid = property(_pyhk.NET_DVR_ALARMER_bySerialValid_get, _pyhk.NET_DVR_ALARMER_bySerialValid_set, doc=r"""bySerialValid""")
    byVersionValid = property(_pyhk.NET_DVR_ALARMER_byVersionValid_get, _pyhk.NET_DVR_ALARMER_byVersionValid_set, doc=r"""byVersionValid""")
    byDeviceNameValid = property(_pyhk.NET_DVR_ALARMER_byDeviceNameValid_get, _pyhk.NET_DVR_ALARMER_byDeviceNameValid_set, doc=r"""byDeviceNameValid""")
    byMacAddrValid = property(_pyhk.NET_DVR_ALARMER_byMacAddrValid_get, _pyhk.NET_DVR_ALARMER_byMacAddrValid_set, doc=r"""byMacAddrValid""")
    byLinkPortValid = property(_pyhk.NET_DVR_ALARMER_byLinkPortValid_get, _pyhk.NET_DVR_ALARMER_byLinkPortValid_set, doc=r"""byLinkPortValid""")
    byDeviceIPValid = property(_pyhk.NET_DVR_ALARMER_byDeviceIPValid_get, _pyhk.NET_DVR_ALARMER_byDeviceIPValid_set, doc=r"""byDeviceIPValid""")
    bySocketIPValid = property(_pyhk.NET_DVR_ALARMER_bySocketIPValid_get, _pyhk.NET_DVR_ALARMER_bySocketIPValid_set, doc=r"""bySocketIPValid""")
    lUserID = property(_pyhk.NET_DVR_ALARMER_lUserID_get, _pyhk.NET_DVR_ALARMER_lUserID_set, doc=r"""lUserID""")
    sSerialNumber = property(_pyhk.NET_DVR_ALARMER_sSerialNumber_get, _pyhk.NET_DVR_ALARMER_sSerialNumber_set, doc=r"""sSerialNumber""")
    dwDeviceVersion = property(_pyhk.NET_DVR_ALARMER_dwDeviceVersion_get, _pyhk.NET_DVR_ALARMER_dwDeviceVersion_set, doc=r"""dwDeviceVersion""")
    sDeviceName = property(_pyhk.NET_DVR_ALARMER_sDeviceName_get, _pyhk.NET_DVR_ALARMER_sDeviceName_set, doc=r"""sDeviceName""")
    byMacAddr = property(_pyhk.NET_DVR_ALARMER_byMacAddr_get, _pyhk.NET_DVR_ALARMER_byMacAddr_set, doc=r"""byMacAddr""")
    wLinkPort = property(_pyhk.NET_DVR_ALARMER_wLinkPort_get, _pyhk.NET_DVR_ALARMER_wLinkPort_set, doc=r"""wLinkPort""")
    sDeviceIP = property(_pyhk.NET_DVR_ALARMER_sDeviceIP_get, _pyhk.NET_DVR_ALARMER_sDeviceIP_set, doc=r"""sDeviceIP""")
    sSocketIP = property(_pyhk.NET_DVR_ALARMER_sSocketIP_get, _pyhk.NET_DVR_ALARMER_sSocketIP_set, doc=r"""sSocketIP""")
    byIpProtocol = property(_pyhk.NET_DVR_ALARMER_byIpProtocol_get, _pyhk.NET_DVR_ALARMER_byIpProtocol_set, doc=r"""byIpProtocol""")
    byRes1 = property(_pyhk.NET_DVR_ALARMER_byRes1_get, _pyhk.NET_DVR_ALARMER_byRes1_set, doc=r"""byRes1""")
    bJSONBroken = property(_pyhk.NET_DVR_ALARMER_bJSONBroken_get, _pyhk.NET_DVR_ALARMER_bJSONBroken_set, doc=r"""bJSONBroken""")
    wSocketPort = property(_pyhk.NET_DVR_ALARMER_wSocketPort_get, _pyhk.NET_DVR_ALARMER_wSocketPort_set, doc=r"""wSocketPort""")
    byRes2 = property(_pyhk.NET_DVR_ALARMER_byRes2_get, _pyhk.NET_DVR_ALARMER_byRes2_set, doc=r"""byRes2""")

    def __init__(self):
        r"""__init__(self) -> NET_DVR_ALARMER"""
        _pyhk.NET_DVR_ALARMER_swiginit(self, _pyhk.new_NET_DVR_ALARMER())
    __swig_destroy__ = _pyhk.delete_NET_DVR_ALARMER

# Register NET_DVR_ALARMER in _pyhk:
_pyhk.NET_DVR_ALARMER_swigregister(NET_DVR_ALARMER)

class NET_DVR_SETUPALARM_PARAM(object):
    r"""Proxy of C++ tagNET_DVR_SETUPALARM_PARAM class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    dwSize = property(_pyhk.NET_DVR_SETUPALARM_PARAM_dwSize_get, _pyhk.NET_DVR_SETUPALARM_PARAM_dwSize_set, doc=r"""dwSize""")
    byLevel = property(_pyhk.NET_DVR_SETUPALARM_PARAM_byLevel_get, _pyhk.NET_DVR_SETUPALARM_PARAM_byLevel_set, doc=r"""byLevel""")
    byAlarmInfoType = property(_pyhk.NET_DVR_SETUPALARM_PARAM_byAlarmInfoType_get, _pyhk.NET_DVR_SETUPALARM_PARAM_byAlarmInfoType_set, doc=r"""byAlarmInfoType""")
    byRetAlarmTypeV40 = property(_pyhk.NET_DVR_SETUPALARM_PARAM_byRetAlarmTypeV40_get, _pyhk.NET_DVR_SETUPALARM_PARAM_byRetAlarmTypeV40_set, doc=r"""byRetAlarmTypeV40""")
    byRetDevInfoVersion = property(_pyhk.NET_DVR_SETUPALARM_PARAM_byRetDevInfoVersion_get, _pyhk.NET_DVR_SETUPALARM_PARAM_byRetDevInfoVersion_set, doc=r"""byRetDevInfoVersion""")
    byRetVQDAlarmType = property(_pyhk.NET_DVR_SETUPALARM_PARAM_byRetVQDAlarmType_get, _pyhk.NET_DVR_SETUPALARM_PARAM_byRetVQDAlarmType_set, doc=r"""byRetVQDAlarmType""")
    byFaceAlarmDetection = property(_pyhk.NET_DVR_SETUPALARM_PARAM_byFaceAlarmDetection_get, _pyhk.NET_DVR_SETUPALARM_PARAM_byFaceAlarmDetection_set, doc=r"""byFaceAlarmDetection""")
    bySupport = property(_pyhk.NET_DVR_SETUPALARM_PARAM_bySupport_get, _pyhk.NET_DVR_SETUPALARM_PARAM_bySupport_set, doc=r"""bySupport""")
    byBrokenNetHttp = property(_pyhk.NET_DVR_SETUPALARM_PARAM_byBrokenNetHttp_get, _pyhk.NET_DVR_SETUPALARM_PARAM_byBrokenNetHttp_set, doc=r"""byBrokenNetHttp""")
    wTaskNo = property(_pyhk.NET_DVR_SETUPALARM_PARAM_wTaskNo_get, _pyhk.NET_DVR_SETUPALARM_PARAM_wTaskNo_set, doc=r"""wTaskNo""")
    byDeployType = property(_pyhk.NET_DVR_SETUPALARM_PARAM_byDeployType_get, _pyhk.NET_DVR_SETUPALARM_PARAM_byDeployType_set, doc=r"""byDeployType""")
    byRes1 = property(_pyhk.NET_DVR_SETUPALARM_PARAM_byRes1_get, _pyhk.NET_DVR_SETUPALARM_PARAM_byRes1_set, doc=r"""byRes1""")
    byAlarmTypeURL = property(_pyhk.NET_DVR_SETUPALARM_PARAM_byAlarmTypeURL_get, _pyhk.NET_DVR_SETUPALARM_PARAM_byAlarmTypeURL_set, doc=r"""byAlarmTypeURL""")
    byCustomCtrl = property(_pyhk.NET_DVR_SETUPALARM_PARAM_byCustomCtrl_get, _pyhk.NET_DVR_SETUPALARM_PARAM_byCustomCtrl_set, doc=r"""byCustomCtrl""")

    def __init__(self):
        r"""__init__(self) -> NET_DVR_SETUPALARM_PARAM"""
        _pyhk.NET_DVR_SETUPALARM_PARAM_swiginit(self, _pyhk.new_NET_DVR_SETUPALARM_PARAM())
    __swig_destroy__ = _pyhk.delete_NET_DVR_SETUPALARM_PARAM

# Register NET_DVR_SETUPALARM_PARAM in _pyhk:
_pyhk.NET_DVR_SETUPALARM_PARAM_swigregister(NET_DVR_SETUPALARM_PARAM)


def NET_DVR_Init() -> "int":
    r"""NET_DVR_Init() -> int"""
    return _pyhk.NET_DVR_Init()

def NET_DVR_Logout(lUserID: "LONG") -> "int":
    r"""
    NET_DVR_Logout(lUserID) -> int

    Parameters
    ----------
    lUserID: LONG

    """
    return _pyhk.NET_DVR_Logout(lUserID)

def NET_DVR_Cleanup() -> "int":
    r"""NET_DVR_Cleanup() -> int"""
    return _pyhk.NET_DVR_Cleanup()

def NET_DVR_SetConnectTime(dwWaitTime: "DWORD"=3000, dwTryTimes: "DWORD"=3) -> "int":
    r"""
    NET_DVR_SetConnectTime(dwWaitTime=3000, dwTryTimes=3) -> int

    Parameters
    ----------
    dwWaitTime: DWORD
    dwTryTimes: DWORD

    """
    return _pyhk.NET_DVR_SetConnectTime(dwWaitTime, dwTryTimes)

def NET_DVR_SetReconnect(dwInterval: "DWORD"=30000, bEnableRecon: "int"=1) -> "int":
    r"""
    NET_DVR_SetReconnect(dwInterval=30000, bEnableRecon=1) -> int

    Parameters
    ----------
    dwInterval: DWORD
    bEnableRecon: int

    """
    return _pyhk.NET_DVR_SetReconnect(dwInterval, bEnableRecon)

def NET_DVR_Login_V30(sDVRIP: "char *", wDVRPort: "WORD", sUserName: "char *", sPassword: "char *", lpDeviceInfo: "NET_DVR_DEVICEINFO_V30") -> "LONG":
    r"""
    NET_DVR_Login_V30(sDVRIP, wDVRPort, sUserName, sPassword, lpDeviceInfo) -> LONG

    Parameters
    ----------
    sDVRIP: char *
    wDVRPort: WORD
    sUserName: char *
    sPassword: char *
    lpDeviceInfo: LPNET_DVR_DEVICEINFO_V30

    """
    return _pyhk.NET_DVR_Login_V30(sDVRIP, wDVRPort, sUserName, sPassword, lpDeviceInfo)

def NET_DVR_GetLastError() -> "DWORD":
    r"""NET_DVR_GetLastError() -> DWORD"""
    return _pyhk.NET_DVR_GetLastError()

def NET_DVR_SetupAlarmChan_V41(lUserID: "LONG", lpSetupParam: "NET_DVR_SETUPALARM_PARAM") -> "LONG":
    r"""
    NET_DVR_SetupAlarmChan_V41(lUserID, lpSetupParam) -> LONG

    Parameters
    ----------
    lUserID: LONG
    lpSetupParam: LPNET_DVR_SETUPALARM_PARAM

    """
    return _pyhk.NET_DVR_SetupAlarmChan_V41(lUserID, lpSetupParam)

def NET_DVR_SetupAlarmChan_V30(lUserID: "LONG") -> "LONG":
    r"""
    NET_DVR_SetupAlarmChan_V30(lUserID) -> LONG

    Parameters
    ----------
    lUserID: LONG

    """
    return _pyhk.NET_DVR_SetupAlarmChan_V30(lUserID)
class MSGCallBackOp(object):
    r"""Proxy of C++ MSGCallBackOp class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def MSGCallBack(self, lCommand: "LONG", pAlarmer: "NET_DVR_ALARMER", pAlarmInfo: "char *", dwBufLen: "DWORD", pUser: "void *") -> "void":
        r"""
        MSGCallBack(self, lCommand, pAlarmer, pAlarmInfo, dwBufLen, pUser)

        Parameters
        ----------
        lCommand: LONG
        pAlarmer: NET_DVR_ALARMER *
        pAlarmInfo: char *
        dwBufLen: DWORD
        pUser: void *

        """
        return _pyhk.MSGCallBackOp_MSGCallBack(self, lCommand, pAlarmer, pAlarmInfo, dwBufLen, pUser)
    __swig_destroy__ = _pyhk.delete_MSGCallBackOp

    def __init__(self):
        r"""
        __init__(self) -> MSGCallBackOp

        Parameters
        ----------
        self: PyObject *

        """
        if self.__class__ == MSGCallBackOp:
            _self = None
        else:
            _self = self
        _pyhk.MSGCallBackOp_swiginit(self, _pyhk.new_MSGCallBackOp(_self, ))
    def __disown__(self):
        self.this.disown()
        _pyhk.disown_MSGCallBackOp(self)
        return weakref.proxy(self)

# Register MSGCallBackOp in _pyhk:
_pyhk.MSGCallBackOp_swigregister(MSGCallBackOp)


def NET_DVR_SetDVRMessageCallBack_V30_wrapper(fMessageCallBack: "MSGCallBackOp", pUser: "void *"=None) -> "int":
    r"""
    NET_DVR_SetDVRMessageCallBack_V30_wrapper(fMessageCallBack, pUser=None) -> int

    Parameters
    ----------
    fMessageCallBack: MSGCallBackOp *
    pUser: void *

    """
    return _pyhk.NET_DVR_SetDVRMessageCallBack_V30_wrapper(fMessageCallBack, pUser)


